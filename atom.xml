<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[@znz blog]]></title>
  <link href="http://blog.n-z.jp/atom.xml" rel="self"/>
  <link href="http://blog.n-z.jp/"/>
  <updated>2015-02-21T21:42:00+09:00</updated>
  <id>http://blog.n-z.jp/</id>
  <author>
    <name><![CDATA[Kazuhiro NISHIYAMA]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[第65回 Ruby関西 勉強会に参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2015-02-21-rubykansai65.html"/>
    <updated>2015-02-21T13:48:06+09:00</updated>
    <id>http://blog.n-z.jp/blog/rubykansai65</id>
    <content type="html"><![CDATA[<p><a href="https://rubykansai.doorkeeper.jp/events/18820" title="第65回 Ruby関西 勉強会">第65回 Ruby関西 勉強会</a>
に参加したので、そのメモです。</p>

<!--more-->


<h2>Rails4.2の新機能について</h2>

<ul>
<li>ActiveJob を中心に Rails 4.2 の新機能の話でした。</li>
<li>Delayed Job はあまり使われなくなっていて、今は Sidekiq と Resque がメジャー</li>
</ul>


<h2>Ruby 2.0 以降の変更をふりかえる</h2>

<p>LT なので早足での紹介でした。</p>

<ul>
<li><a href="https://speakerdeck.com/sixeight/siyututohurikaeru-ruby-2-dot-0-yi-jiang" title="シュッとふりかえる Ruby 2.0 以降 // Speaker Deck">シュッとふりかえる Ruby 2.0 以降 // Speaker Deck</a></li>
<li>Ruby 2.0</li>
<li>キーワード引数</li>
<li>Refinements (Experimental)</li>
<li><code>Module#prepend</code></li>
<li>デフォルトエンコーディングが utf-8</li>
<li><code>Enumerable#lazy</code></li>
<li>Ruby 2.1</li>
<li>RGenGC</li>
<li>必須キーワード引数</li>
<li>メソッド定義がシンボルを返すようになった</li>
<li><code>Binding#local_variable_(get|set)</code></li>
<li>Refinements</li>
<li>freeze

<ul>
<li>すべての Symbol がフリーズされるようになった</li>
<li>フリーズされた文字列リテラルが同じ <code>object_id</code> を返すようになった</li>
</ul>
</li>
<li>Ruby 2.2</li>
<li><code>{"symbol-key": "value"}</code></li>
<li>GC (インクリメンタルGC、シンボルGC)</li>
<li>Binding (<code>#local_variables</code>, <code>#receiver</code>)</li>
<li><code>Method#super_method</code></li>
<li><code>Method#curry</code></li>
<li>Enumerable

<ul>
<li><code>#slice_after</code></li>
<li><code>#max</code>, <code>#max_by</code>, <code>#min</code>, <code>#min_by</code> が引数をとれるようになった</li>
</ul>
</li>
<li><code>Object#itself</code></li>
<li><code>Comparable#==</code></li>
</ul>


<h2>休憩</h2>

<p>10分休憩</p>

<h2>BCCWJ を弄ぶ</h2>

<p>BCCWJ (= 現代日本語書き言葉均衡コーパス) を使っていろいろ遊んでみたという話でした。</p>

<h2>Wakayama.rb ボードの紹介</h2>

<ul>
<li>mruby ボード</li>
<li><a href="https://github.com/tarosay/Wakayama-mruby-board">https://github.com/tarosay/Wakayama-mruby-board</a></li>
<li>rx-elf-gcc</li>
</ul>


<h2>Ruby コミュニティｘ企業</h2>

<ul>
<li>hommachi.rb

<ul>
<li><a href="https://hommachirb.doorkeeper.jp/">https://hommachirb.doorkeeper.jp/</a></li>
<li>次回3月7日(土)</li>
</ul>
</li>
<li>Ruby ビジネスセミナー

<ul>
<li>7/9(木)</li>
<li><a href="http://www.ruby-b.com/">http://www.ruby-b.com/</a></li>
</ul>
</li>
<li>コミュニティと企業が歩み寄る話</li>
</ul>


<h2>Medaka.rb 活動概要</h2>

<ul>
<li>西宮、梅田あたり</li>
<li>他の勉強会の足がかり</li>
<li>Ruby関西などで告知があったので最初から人が集まった</li>
<li>次回は3/14(土)</li>
</ul>


<h2>休憩</h2>

<p>15分休憩</p>

<h2>Gemをコードリーディングしてみよう！</h2>

<ul>
<li><a href="http://qiita.com/taiyop/items/050c6749fb693dae8f82" title="SEO嫌いにお送りするSEO策。これでもうSEOについてしばらく考えなくて良いぜ！！ - Qiita">SEO嫌いにお送りするSEO策。これでもうSEOについてしばらく考えなくて良いぜ！！ - Qiita</a></li>
<li><a href="https://github.com/capistrano/capistrano" title="Capistrano">Capistrano</a> のようなコマンド実行型の gem は bin/cap のようなところから読み始めると良い</li>
<li>読みやすい Gem

<ul>
<li><code>paranoia</code></li>
<li><code>settingslogic</code></li>
<li><code>omniauth</code></li>
<li><code>active_support/core_ext</code></li>
</ul>
</li>
<li><a href="http://www.slideshare.net/babatakao/gem-release" title="初めてのGemの読み方">初めてのGemの読み方</a></li>
<li><a href="https://github.com/tpope/gem-ctags">https://github.com/tpope/gem-ctags</a></li>
</ul>


<h2>Railsの見える化 開発（API編）</h2>

<ul>
<li>Cassette Rack Alchemist</li>
<li><a href="http://white-panda-bef5ea6775f68651.znlc.jp/wordpress/" title="カラカルさんラボ | カラカルさんの実験室">カラカルさんラボ | カラカルさんの実験室</a></li>
<li>Railsの見える化 開発（API編）</li>
<li>RSpec で VCR (Video Cassette Recording) を利用した開発</li>
<li><a href="https://speakerdeck.com/ogom/caracal">https://speakerdeck.com/ogom/caracal</a></li>
<li><a href="https://github.com/ogom/cassette-rack">https://github.com/ogom/cassette-rack</a></li>
</ul>


<h2>休憩</h2>

<p>10分休憩</p>

<h2>Treasure Data での Ruby の利用</h2>

<ul>
<li><a href="http://www.slideshare.net/repeatedly/fluentd-rubykansai-65" title="Fluentd - RubyKansai 65">Fluentd - RubyKansai 65</a></li>
<li><a href="http://www.fluentd.org/">http://www.fluentd.org/</a></li>
<li><a href="https://github.com/fluent/fluentd">https://github.com/fluent/fluentd</a></li>
</ul>


<h2>クロージング</h2>

<ul>
<li><a href="http://goo.gl/iSPrca">第65回 Ruby勉強会 アンケート</a></li>
<li>第66回は4月25日(土)に神戸クリエイティブセンター</li>
<li>第67回は6月に京都のどこか</li>
</ul>


<h2>その他</h2>

<p>懇親会のしめの挨拶できいたのですが、今回は初級者レッスンなしにしたり、
広い会場を確保して人数制限をゆるめにしたり、
2ヶ月前から Facebook などで宣伝したりなど
いろいろ挑戦的な試みをした回だったようです。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[owncloud-client が conflict した話]]></title>
    <link href="http://blog.n-z.jp/blog/2015-01-29-owncloud-client.html"/>
    <updated>2015-01-29T09:30:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/owncloud-client</id>
    <content type="html"><![CDATA[<p>Debian 7 に <a href="https://owncloud.org/install/#desktop">ownCloud 公式の Desktop Client</a> を入れていたら、
なぜか <code>owncloud-client</code> の 1.7.1 から 1.7.1 への更新が発生して <code>libqtkeychain0</code> と conflict していたので、
<code>libqtkeychain0</code> をダウングレードして解決しました。</p>

<!--more-->


<h2>現象</h2>

<p>このように競合が検出されました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo aptitude full-upgrade -DV
</span><span class='line'>以下のパッケージが更新されます:
</span><span class='line'>  owncloud-client{b} [1.7.1 -&gt; 1.7.1] (競: libqtkeychain0)
</span><span class='line'>更新: 1 個、新規インストール: 0 個、削除: 0 個、保留: 0 個。
</span><span class='line'>700 k バイトのアーカイブを取得する必要があります。展開後に 0  バイトのディスク領域が新たに消費されます。
</span><span class='line'>以下のパッケージには満たされていない依存関係があります:
</span><span class='line'> owncloud-client : 競合: libqtkeychain0 (= 0.20140128) [0.20140128 が既にインストール済みです]
</span><span class='line'>以下のアクションでこれらの依存関係の問題は解決されます:
</span><span class='line'>
</span><span class='line'>     以下のパッケージを削除する:
</span><span class='line'>1)     libowncloudsync0
</span><span class='line'>2)     libqtkeychain0
</span><span class='line'>3)     owncloud-client
</span><span class='line'>4)     owncloud-client-l10n
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>この解決方法を受け入れますか? [Y/n/q/?]q</span></code></pre></td></tr></table></div></figure>


<h2>状況</h2>

<p><code>apt-cache show</code> でみてみると <code>Conflicts: libqtkeychain0 (= 0.20140128)</code> と明示されていました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ apt-cache show owncloud-client
</span><span class='line'>Package: owncloud-client
</span><span class='line'>Version: 1.7.1
</span><span class='line'>Architecture: amd64
</span><span class='line'>Maintainer: Markus Rex &lt;msrex@owncloud.com&gt;
</span><span class='line'>Installed-Size: 1521
</span><span class='line'>Depends: libc6 (&gt;= 2.4), libgcc1 (&gt;= 1:4.1.1), libneon27, libowncloudsync0 (= 1.7.1), libqt4-dbus (&gt;= 4:4.5.3), libqt4-network (&gt;= 4:4.5.3), libqt4-sql (&gt;= 4:4.5.3), libqt4-xml (&gt;= 4:4.5.3), libqt4-xmlpatterns (&gt;= 4:4.5.3), libqtcore4 (&gt;= 4:4.8.0), libqtgui4 (&gt;= 4:4.7.0~beta1), libqtkeychain0, libqtwebkit4 (&gt;= 2.2.0), libsqlite3-0 (&gt;= 3.5.9), libstdc++6 (&gt;= 4.4.0), owncloud-client-l10n, libqt4-sql-sqlite
</span><span class='line'>Conflicts: libqtkeychain0 (= 0.20140128)
</span><span class='line'>Filename: ./amd64/owncloud-client_1.7.1_amd64.deb
</span><span class='line'>Size: 699596
</span><span class='line'>MD5sum: 23e2bfa2467b45fd9b70f3b946203b4b
</span><span class='line'>SHA1: 422242ad170ad1aa8d75587fe18a0469cc23ad72
</span><span class='line'>SHA256: 319e7253309835d028ec527ee9b3abea014c2db8b7edc5d3d57270ede9dbb5af
</span><span class='line'>Section: devel
</span><span class='line'>Priority: optional
</span><span class='line'>Multi-Arch: same
</span><span class='line'>Description: The ownCloud client is based on Mirall - github.com/owncloud/mirall
</span><span class='line'> .
</span><span class='line'> ownCloud client enables you to connect to your private
</span><span class='line'> ownCloud Server. With it you can create folders in your home
</span><span class='line'> directory, and keep the contents of those folders synced with your
</span><span class='line'> ownCloud server. Simply copy a file into the directory and the
</span><span class='line'> ownCloud client does the rest.
</span><span class='line'> .
</span><span class='line'> ownCloud gives your employees anytime, anywhere access to the files
</span><span class='line'> they need to get the job done, whether through this desktop application,
</span><span class='line'> our mobile apps, the web interface, or other WebDAV clients. With it,
</span><span class='line'> your employees can easily view and share documents and information
</span><span class='line'> critical to the business, in a secure, flexible and controlled
</span><span class='line'> architecture. You can easily extend ownCloud with plug-ins from the
</span><span class='line'> community, or that you build yourself to meet the requirements of
</span><span class='line'> your infrastructure and business.
</span><span class='line'> .
</span><span class='line'> ownCloud - Your Cloud, Your Data, Your Way!  www.owncloud.com
</span><span class='line'> .
</span><span class='line'> Authors
</span><span class='line'> =======
</span><span class='line'> Duncan Mac-Vicar P. &lt;duncan@kde.org&gt;
</span><span class='line'> Klaas Freitag &lt;freitag@owncloud.com&gt;
</span><span class='line'> Daniel Molkentin &lt;danimo@owncloud.com&gt;
</span><span class='line'>
</span><span class='line'>Package: owncloud-client
</span><span class='line'>Status: install ok installed
</span><span class='line'>Priority: optional
</span><span class='line'>Section: devel
</span><span class='line'>Installed-Size: 1521
</span><span class='line'>Maintainer: Markus Rex &lt;msrex@owncloud.com&gt;
</span><span class='line'>Architecture: amd64
</span><span class='line'>Multi-Arch: same
</span><span class='line'>Version: 1.7.1
</span><span class='line'>Depends: libc6 (&gt;= 2.4), libgcc1 (&gt;= 1:4.1.1), libneon27, libowncloudsync0 (= 1.7.1), libqt4-dbus (&gt;= 4:4.5.3), libqt4-network (&gt;= 4:4.5.3), libqt4-sql (&gt;= 4:4.5.3), libqt4-xml (&gt;= 4:4.5.3), libqt4-xmlpatterns (&gt;= 4:4.5.3), libqtcore4 (&gt;= 4:4.8.0), libqtgui4 (&gt;= 4:4.7.0~beta1), libqtkeychain0, libqtwebkit4 (&gt;= 2.2.0), libsqlite3-0 (&gt;= 3.5.9), libstdc++6 (&gt;= 4.4.0), owncloud-client-l10n, libqt4-sql-sqlite
</span><span class='line'>Description: The ownCloud client is based on Mirall - github.com/owncloud/mirall
</span><span class='line'> .
</span><span class='line'> ownCloud client enables you to connect to your private
</span><span class='line'> ownCloud Server. With it you can create folders in your home
</span><span class='line'> directory, and keep the contents of those folders synced with your
</span><span class='line'> ownCloud server. Simply copy a file into the directory and the
</span><span class='line'> ownCloud client does the rest.
</span><span class='line'> .
</span><span class='line'> ownCloud gives your employees anytime, anywhere access to the files
</span><span class='line'> they need to get the job done, whether through this desktop application,
</span><span class='line'> our mobile apps, the web interface, or other WebDAV clients. With it,
</span><span class='line'> your employees can easily view and share documents and information
</span><span class='line'> critical to the business, in a secure, flexible and controlled
</span><span class='line'> architecture. You can easily extend ownCloud with plug-ins from the
</span><span class='line'> community, or that you build yourself to meet the requirements of
</span><span class='line'> your infrastructure and business.
</span><span class='line'> .
</span><span class='line'> ownCloud - Your Cloud, Your Data, Your Way!  www.owncloud.com
</span><span class='line'> .
</span><span class='line'> Authors
</span><span class='line'> =======
</span><span class='line'> Duncan Mac-Vicar P. &lt;duncan@kde.org&gt;
</span><span class='line'> Klaas Freitag &lt;freitag@owncloud.com&gt;
</span><span class='line'> Daniel Molkentin &lt;danimo@owncloud.com&gt;
</span><span class='line'>
</span><span class='line'>Package: owncloud-client
</span><span class='line'>Version: 1.5.0+dfsg-4~bpo70+1
</span><span class='line'>Installed-Size: 1076
</span><span class='line'>Maintainer: ownCloud for Debian maintainers &lt;pkg-owncloud-maintainers@lists.alioth.debian.org&gt;
</span><span class='line'>Architecture: amd64
</span><span class='line'>Depends: libowncloudsync0 (= 1.5.0+dfsg-4~bpo70+1), libqt4-sql-sqlite, owncloud-client-l10n, libc6 (&gt;= 2.2.5), libgcc1 (&gt;= 1:4.1.1), libneon27-gnutls, libocsync0 (&gt;= 0.60.3), libqt4-dbus (&gt;= 4:4.5.3), libqt4-network (&gt;= 4:4.6.1), libqt4-sql (&gt;= 4:4.5.3), libqt4-xml (&gt;= 4:4.5.3), libqt4-xmlpatterns (&gt;= 4:4.5.3), libqtcore4 (&gt;= 4:4.8.0), libqtgui4 (&gt;= 4:4.7.0~beta1), libqtkeychain0 (&gt;= 0.1.0), libqtwebkit4 (&gt;= 2.1.0~2011week13), libstdc++6 (&gt;= 4.1.1)
</span><span class='line'>Description-en: folder synchronization with an ownCloud server - GUI
</span><span class='line'> The ownCloudSync system lets you always have your latest files wherever
</span><span class='line'> you are. Just specify one or more folders on the local machine to and a server
</span><span class='line'> to synchronize to. You can configure more computers to synchronize to the same
</span><span class='line'> server and any change to the files on one computer will silently and reliably
</span><span class='line'> flow across to every other.
</span><span class='line'> .
</span><span class='line'> owncloud-client provides the graphical client specialising in
</span><span class='line'> synchronizing with cloud storage provided by ownCloud.
</span><span class='line'>Homepage: http://owncloud.org/sync-clients/
</span><span class='line'>Description-md5: a754a2b9b06d1c7c880afd05aa24e101
</span><span class='line'>Section: net
</span><span class='line'>Priority: optional
</span><span class='line'>Filename: pool/main/o/owncloud-client/owncloud-client_1.5.0+dfsg-4~bpo70+1_amd64.deb
</span><span class='line'>Size: 417650
</span><span class='line'>MD5sum: 42a3f6355f9d5f5af0fb42141bee9ecf
</span><span class='line'>SHA1: 52102eacc1d81438cb88e639c09269484279dde1
</span><span class='line'>SHA256: d38e11879d6439dad97ff9f59449077193dbc89331bae8d2866b335ce8b41856</span></code></pre></td></tr></table></div></figure>


<p>さらに <code>apt-cache policy</code> でどこからきたパッケージなのかみてみるとどちらも ownCloud 公式のパッケージだったように見えました。
bpo (backports) のパッケージならバージョンが下がることはないはずなので、そう判断しました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ apt-cache policy owncloud-client
</span><span class='line'>owncloud-client:
</span><span class='line'>  インストールされているバージョン: 1.7.1
</span><span class='line'>  候補:               1.7.1
</span><span class='line'>  バージョンテーブル:
</span><span class='line'>     1.7.1 0
</span><span class='line'>        500 http://download.opensuse.org/repositories/isv:/ownCloud:/desktop/Debian_7.0/  Packages
</span><span class='line'> *** 1.7.1 0
</span><span class='line'>        100 /var/lib/dpkg/status
</span><span class='line'>     1.5.0+dfsg-4~bpo70+1 0
</span><span class='line'>        100 http://ftp.jp.debian.org/debian/ wheezy-backports/main amd64 Packages
</span><span class='line'>$ apt-cache policy libqtkeychain0
</span><span class='line'>libqtkeychain0:
</span><span class='line'>  インストールされているバージョン: 0.20140128
</span><span class='line'>  候補:               0.20140128
</span><span class='line'>  バージョンテーブル:
</span><span class='line'> *** 0.20140128 0
</span><span class='line'>        100 /var/lib/dpkg/status
</span><span class='line'>     0.4 0
</span><span class='line'>        500 http://download.opensuse.org/repositories/isv:/ownCloud:/desktop/Debian_7.0/  Packages
</span><span class='line'>     0.1.0-2~bpo70+1 0
</span><span class='line'>        100 http://ftp.jp.debian.org/debian/ wheezy-backports/main amd64 Packages</span></code></pre></td></tr></table></div></figure>


<h2>対処</h2>

<p><code>libqtkeychain0</code> を ownCloud 公式の 0.4.0 にダウングレードすることで解決しました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo aptitude full-upgrade -DV
</span><span class='line'>以下のパッケージが更新されます:
</span><span class='line'>  owncloud-client{b} [1.7.1 -&gt; 1.7.1] (競: libqtkeychain0)
</span><span class='line'>更新: 1 個、新規インストール: 0 個、削除: 0 個、保留: 0 個。
</span><span class='line'>700 k バイトのアーカイブを取得する必要があります。展開後に 0  バイトのディスク領域が新たに消費されます。
</span><span class='line'>以下のパッケージには満たされていない依存関係があります:
</span><span class='line'> owncloud-client : 競合: libqtkeychain0 (= 0.20140128) [0.20140128 が既にインストール済みです]
</span><span class='line'>以下のアクションでこれらの依存関係の問題は解決されます:
</span><span class='line'>
</span><span class='line'>     以下のパッケージを削除する:
</span><span class='line'>1)     libowncloudsync0
</span><span class='line'>2)     libqtkeychain0
</span><span class='line'>3)     owncloud-client
</span><span class='line'>4)     owncloud-client-l10n
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>この解決方法を受け入れますか? [Y/n/q/?]n
</span><span class='line'>以下のアクションでこれらの依存関係の問題は解決されます:
</span><span class='line'>
</span><span class='line'>     以下のパッケージを削除する:
</span><span class='line'>1)     owncloud-client
</span><span class='line'>2)     owncloud-client-l10n
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>この解決方法を受け入れますか? [Y/n/q/?]n
</span><span class='line'>以下のアクションでこれらの依存関係の問題は解決されます:
</span><span class='line'>
</span><span class='line'>     以下のパッケージを現在のバージョンに一時固定する:
</span><span class='line'>1)     owncloud-client [1.7.1 (now)]
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>この解決方法を受け入れますか? [Y/n/q/?]n
</span><span class='line'>以下のアクションでこれらの依存関係の問題は解決されます:
</span><span class='line'>
</span><span class='line'>     以下のパッケージをダウングレードする:
</span><span class='line'>1)     libqtkeychain0 [0.20140128 (now) -&gt; 0.4 (&lt;NULL&gt;)]
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>この解決方法を受け入れますか? [Y/n/q/?]y
</span><span class='line'>以下のパッケージがダウングレードされます:
</span><span class='line'>  libqtkeychain0 [0.20140128 -&gt; 0.4]
</span><span class='line'>以下のパッケージが更新されます:
</span><span class='line'>  owncloud-client [1.7.1 -&gt; 1.7.1]
</span><span class='line'>更新: 1 個、新規インストール: 0 個、ダウングレード: 1 個、削除: 0 個、保留: 0 個。
</span><span class='line'>753 k バイトのアーカイブを取得する必要があります。展開後に 0  バイトのディスク領域が新たに消費されます。
</span><span class='line'>先に進みますか? [Y/n/?]
</span><span class='line'>取得: 1 http://download.opensuse.org/repositories/isv:/ownCloud:/desktop/Debian_7.0/  libqtkeychain0 0.4 [53.4 kB]
</span><span class='line'>取得: 2 http://download.opensuse.org/repositories/isv:/ownCloud:/desktop/Debian_7.0/  owncloud-client 1.7.1 [700 kB]
</span><span class='line'>Fetched 753 kB in 4秒 (156 kB/s)
</span><span class='line'>changelog を読んでいます... 完了
</span><span class='line'>dpkg: 警告: libqtkeychain0 を 0.20140128 から 0.4 にダウングレードしています
</span><span class='line'>(データベースを読み込んでいます ... 現在 124701 個のファイルとディレクトリがインストールされています。)
</span><span class='line'>libqtkeychain0 0.20140128 を (.../libqtkeychain0_0.4_amd64.deb で) 置換するための準備をしています ...
</span><span class='line'>libqtkeychain0 を展開し、置換しています...
</span><span class='line'>owncloud-client:amd64 1.7.1 を (.../owncloud-client_1.7.1_amd64.deb で) 置換するための準備をしています ...
</span><span class='line'>owncloud-client:amd64 を展開し、置換しています...
</span><span class='line'>man-db のトリガを処理しています ...
</span><span class='line'>libqtkeychain0 (0.4) を設定しています ...
</span><span class='line'>owncloud-client:amd64 (1.7.1) を設定しています ...
</span><span class='line'>
</span><span class='line'>現在の状態: 更新が 0 個 [-1]。</span></code></pre></td></tr></table></div></figure>


<h2>対処後の状況</h2>

<p><code>owncloud-client</code> パッケージも <code>libqtkeychain0</code> パッケージもどちらも ownCloud 公式のバージョンになって解決しました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ apt-cache policy owncloud-client
</span><span class='line'>owncloud-client:
</span><span class='line'>  インストールされているバージョン: 1.7.1
</span><span class='line'>  候補:               1.7.1
</span><span class='line'>  バージョンテーブル:
</span><span class='line'> *** 1.7.1 0
</span><span class='line'>        500 http://download.opensuse.org/repositories/isv:/ownCloud:/desktop/Debian_7.0/  Packages
</span><span class='line'>        100 /var/lib/dpkg/status
</span><span class='line'>     1.5.0+dfsg-4~bpo70+1 0
</span><span class='line'>        100 http://ftp.jp.debian.org/debian/ wheezy-backports/main amd64 Packages
</span><span class='line'>$ apt-cache policy libqtkeychain0
</span><span class='line'>libqtkeychain0:
</span><span class='line'>  インストールされているバージョン: 0.4
</span><span class='line'>  候補:               0.4
</span><span class='line'>  バージョンテーブル:
</span><span class='line'> *** 0.4 0
</span><span class='line'>        500 http://download.opensuse.org/repositories/isv:/ownCloud:/desktop/Debian_7.0/  Packages
</span><span class='line'>        100 /var/lib/dpkg/status
</span><span class='line'>     0.1.0-2~bpo70+1 0
</span><span class='line'>        100 http://ftp.jp.debian.org/debian/ wheezy-backports/main amd64 Packages</span></code></pre></td></tr></table></div></figure>


<h2>考察</h2>

<p>Debian 公式パッケージならこういうときは
<a href="https://www.debian.org/doc/debian-policy/ch-controlfields.html#s-f-Version">Version</a> に
epoch をつけて解決しますが、
ownCloud 公式は Debian からみると非公式パッケージになるので、
将来の Debian のアップグレードの邪魔にならないように epoch を使わなかったため、
こういう問題が起きたのでないかと推測しました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第 19 回 RubyMotion もくもく会 in Osaka に参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2015-01-21-rubymotion-mokumoku-osaka.html"/>
    <updated>2015-01-21T19:43:02+09:00</updated>
    <id>http://blog.n-z.jp/blog/rubymotion-mokumoku-osaka</id>
    <content type="html"><![CDATA[<p>RubyMotion もくもく会 in Osaka の
<a href="http://rubymotionjp.connpass.com/event/10675/" title="第 19 回 RubyMotion もくもく会 in Osaka - connpass">第 19 回 RubyMotion もくもく会 in Osaka - connpass</a>
に参加してきました。</p>

<p>次回の
<a href="http://rubymotionjp.connpass.com/event/11407/" title="第 20 回 RubyMotion もくもく会 in Osaka - connpass">第 20 回 RubyMotion もくもく会 in Osaka - connpass</a>
2015/02/25(水) になりました。</p>

<!--more-->


<h2>メモ</h2>

<p>今回は Swift のチュートリアルをやっていました。</p>

<p>以下メモです。</p>

<ul>
<li><a href="http://www.bose.co.jp/jp_jp?url=/consumer_audio/headphones/quiet_comfort/index.jsp" title="ノイズキャンセリング・ヘッドホン | ヘッドホン | Bose ボーズ">ノイズキャンセリング・ヘッドホン | ヘッドホン | Bose ボーズ</a></li>
<li><a href="https://www.bloc.io/tutorials/swiftris-build-your-first-ios-game-with-swift" title="Swiftris: Build Your First iOS Game with Swift | Bloc">Swiftris: Build Your First iOS Game with Swift | Bloc</a></li>
<li>ActiveRecord の Callback の呼ばれるタイミング <a href="http://api.rubyonrails.org/classes/ActiveRecord/Callbacks.html">http://api.rubyonrails.org/classes/ActiveRecord/Callbacks.html</a></li>
<li><a href="http://marked2app.com/" title="Marked 2 - Smarter tools for smarter writers">Marked 2 - Smarter tools for smarter writers</a></li>
<li><a href="https://github.com/jessesquires/JSQMessagesViewController">https://github.com/jessesquires/JSQMessagesViewController</a></li>
<li><a href="http://www.okono.me/" title="大阪・淡路 お好み焼 ゆき">大阪・淡路 お好み焼 ゆき</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LILO ＆ 東海道らぐのイベントに参加しました]]></title>
    <link href="http://blog.n-z.jp/blog/2015-01-10-lilo-tokaidolug.html"/>
    <updated>2015-01-10T13:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/lilo-tokaidolug</id>
    <content type="html"><![CDATA[<p><a href="http://lilo.doorkeeper.jp/events/18987" title="LILO ＆ 東海道らぐ・オフラインミーティング（2015/01/10） - LILO | Doorkeeper">LILO ＆ 東海道らぐ・オフラインミーティング（2015/01/10） - LILO | Doorkeeper</a>
に参加しました。</p>

<p>前回と同じくアンカンファレンス形式でした。</p>

<!--more-->


<h2>メモ</h2>

<p>今回のメモです。</p>

<ul>
<li>LILO と東海道らぐの紹介</li>
<li>自己紹介から</li>
<li>広島の Open Street Map の話</li>
<li>F4map</li>
<li>Raspberry Pi で Scratch</li>
<li>ARM Chromebook で Linux

<ul>
<li>Chrouton</li>
<li>ChrUbuntu</li>
<li>続きは OSC 東京で。</li>
</ul>
</li>
<li>opencocon</li>
<li>UEFI

<ul>
<li>ESP パーティション (FAT32、大抵は512MB)</li>
<li>32bit UEFI アプリを 64bit UEFI で使うことはできない</li>
</ul>
</li>
<li>Linux 人口を増やしたい

<ul>
<li><a href="http://knowledge.sakura.ad.jp/" title="さくらのナレッジ">さくらのナレッジ</a></li>
<li><a href="http://knowledge.sakura.ad.jp/beginner/2691/" title="「サーバーってなに？」～初心者でもよくわかる！VPSによるWebサーバー構築講座(1) - さくらのナレッジ">「サーバーってなに？」～初心者でもよくわかる！VPSによるWebサーバー構築講座(1) - さくらのナレッジ</a></li>
<li><a href="http://vps.sakura.ad.jp/" title="さくらの VPS">さくらの VPS</a> が最近リニューアル</li>
</ul>
</li>
<li>LibreOffice の話

<ul>
<li>CloudOn</li>
<li><a href="http://ask.libreoffice.org/ja/questions/">http://ask.libreoffice.org/ja/questions/</a></li>
</ul>
</li>
<li>日本語アナウンスをリリースする時に気をつけていること

<ul>
<li>Linux Mint Japan</li>
</ul>
</li>
<li>etckeeper を openSUSE の公式リポジトリに入れたいぞ! Ver.2

<ul>
<li><a href="https://joeyh.name/code/etckeeper/">https://joeyh.name/code/etckeeper/</a> → <a href="http://etckeeper.branchable.com/">http://etckeeper.branchable.com/</a></li>
<li><a href="https://ikiwiki.info/">https://ikiwiki.info/</a></li>
<li><a href="https://build.opensuse.org/" title="openSUSE Build Service">openSUSE Build Service</a></li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[heroku本を読んだ]]></title>
    <link href="http://blog.n-z.jp/blog/2015-01-03-heroku-book.html"/>
    <updated>2015-01-03T16:58:56+09:00</updated>
    <id>http://blog.n-z.jp/blog/heroku-book</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/4048915134/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4048915134&amp;linkCode=as2&amp;tag=znz-22">プロフェッショナルのための 実践Heroku入門 プラットフォーム・クラウドを活用したアプリケーション開発と運用 (書籍)</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4048915134" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />
を読んだので、そのメモです。</p>

<!--more-->


<p>内容としては heroku をまだ使ったことない人には特におすすめで、使ったことがある人にもどういう思想で作られているのかなど参考になるのでおすすめだと思いました。
特に最後の The Twelve Factor App の翻訳は heroku に限らず参考になると思いました。</p>

<h2>メモ</h2>

<div style="float:right">
<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=znz-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=4048915134" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>
</div>


<ul>
<li>ceder → cedar (全般的に)</li>
<li>p.47 rubyforge はもう終了しているのでダウンロードできなさそう。</li>
<li>p.49 <code>brew --prefix readline</code> と <code>brew --prefix openssl</code> の周りに <code>$( )</code> が抜けている?</li>
<li>p.55 gem install するのは bundle よりも bundler の方が良さそう。</li>
<li>p.60 下から4行目 Frameowk → Framework</li>
<li>p.69 下から2行目 PostgresSQL → PostgreSQL</li>
<li>p.70 <code>(後述)</code> とあるが既に説明済み?</li>
<li>p.79 webtype → web type</li>
<li>p.79 <code>jobs:worK</code> → <code>jobs:work</code> ? (2カ所)</li>
<li>p.91 newrelick → newrelic</li>
<li>p.92 MG → MB ? (3カ所)</li>
<li>p.101 sandobox → sandbox ?</li>
<li>p.135 ctext 型をの → citext 型を</li>
<li>p.159 注7 の URL がパスしかない</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rubyによるクローラー開発技法を読んだ]]></title>
    <link href="http://blog.n-z.jp/blog/2014-12-30-ruby-crawler.html"/>
    <updated>2014-12-30T18:21:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/ruby-crawler</id>
    <content type="html"><![CDATA[<p>次回の
<a href="http://kokucheese.com/event/index/247692/" title="1月10日 Rubyによるクローラー開発技法　読書会　第3回(兵庫県)">1月10日 Rubyによるクローラー開発技法　読書会　第3回(兵庫県)</a>
は
<a href="http://lilo.doorkeeper.jp/events/18987" title="LILO ＆ 東海道らぐ・オフラインミーティング（2015/01/10） - LILO | Doorkeeper">LILO ＆ 東海道らぐ・オフラインミーティング（2015/01/10） - LILO | Doorkeeper</a>
と重なっていて参加できないということで、Rubyによるクローラー開発技法を読んでしまったので、そのメモです。</p>

<!--more-->


<h2>メモ</h2>

<div style="float:right">
<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=znz-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=4797380357" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>
</div>


<ul>
<li>p.62 <code>robotex.rb</code> の 4 行目は 3 行目の引数にならずに意味がないのでは。</li>
<li>p.67 <code>anemone-skip_links_like.rb</code> で「adminを含むURLは除外」と書いてあるのに <code>/\/r\//</code> になっている。</li>
<li>p.69 <code>http://example.com</code> と <code>http://example.com/</code> は同じ意味で 301 リダイレクトは発生しないのでは。</li>
<li>p.143 「スクリーンショットはページごとに上書きされていって、」とあるが、ここは上書きされないのでは。</li>
<li>p.173 <code>Nokogiri#parse</code> などは <code>Nokogiri.parse</code> (インスタンスメソッドではなくクラスメソッド) なのでは。</li>
<li>p.215 <code>initialize</code> の <code>#{}</code> は不要なのでは。</li>
<li>p.239 <code>page.code = 500</code> は <code>page.code == 500</code> の間違い?</li>
<li>p.258 <code>base_url</code> への代入が連続しているのが不要</li>
<li>p.359 プスクリプト → スクリプト</li>
<li>p.420 varidation → validation</li>
<li>p.420 gsub の結果は Integer にならないのでは?</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[doorkeeper gem を 1.4 系から 2.0 系にアップデートした]]></title>
    <link href="http://blog.n-z.jp/blog/2014-12-18-doorkeeper-gem-1-to-2.html"/>
    <updated>2014-12-18T16:18:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/doorkeeper-gem-1-to-2</id>
    <content type="html"><![CDATA[<p>doorkeeper gem がメジャーバージョンアップして非互換があったので、
対応したときのメモです。</p>

<!--more-->


<h2>対象バージョン</h2>

<ul>
<li>rails 4.1.8</li>
<li>doorkeeper 1.4.0 から 2.0.1</li>
</ul>


<h2>変更点確認</h2>

<p><a href="https://github.com/doorkeeper-gem/doorkeeper/blob/master/CHANGELOG.md">CHANGELOG.md</a>
にまとまっていたので、参考にしました。</p>

<p>セキュリティアップデートも含まれるようなので、
2.0 系にあげられないときは 1.4.1 にあげておくのが良さそうです。</p>

<h2><code>doorkeeper_for</code> の書き換え</h2>

<p><code>doorkeeper_for :all</code> は <code>before_action :doorkeeper_authorize!</code> に書き換えました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'><span class="gd">-    doorkeeper_for :all</span>
</span><span class='line'><span class="gd">-    respond_to     :json</span>
</span><span class='line'><span class="gi">+    before_action :doorkeeper_authorize!</span>
</span><span class='line'><span class="gi">+    respond_to    :json</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'><span class="gd">-    doorkeeper_for :index,  :show,   scopes: %w&quot;public&quot;</span>
</span><span class='line'><span class="gd">-    doorkeeper_for :create, :update, scopes: %w&quot;admin write&quot;</span>
</span><span class='line'><span class="gi">+    before_action -&gt; { doorkeeper_authorize! :public }, only: [:index, :show]</span>
</span><span class='line'><span class="gi">+    before_action only: [:create, :update] do</span>
</span><span class='line'><span class="gi">+      doorkeeper_authorize! :admin, :write</span>
</span><span class='line'><span class="gi">+    end</span>
</span></code></pre></td></tr></table></div></figure>


<h2><code>config/initializers/doorkeeper.rb</code> の更新</h2>

<p><code>rails g doorkeeper:install</code> で生成し直して変更していた部分を再適用しました。</p>

<ul>
<li><code>resource_owner_authenticator</code> で <code>devise</code> との連携</li>
<li>scope 関連</li>
<li>認可の画面のスキップ</li>
<li>動的な query parameter の許可</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="n">resource_owner_authenticator</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">current_user</span> <span class="o">||</span> <span class="n">warden</span><span class="o">.</span><span class="n">authenticate!</span><span class="p">(</span><span class="ss">scope</span><span class="p">:</span> <span class="ss">:user</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">default_scopes</span>  <span class="ss">:public</span>
</span><span class='line'>  <span class="n">optional_scopes</span> <span class="ss">:admin</span><span class="p">,</span> <span class="ss">:write</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">skip_authorization</span> <span class="k">do</span> <span class="o">|</span><span class="n">resource_owner</span><span class="p">,</span> <span class="n">client</span><span class="o">|</span>
</span><span class='line'>    <span class="kp">true</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">wildcard_redirect_uri</span> <span class="kp">true</span>
</span></code></pre></td></tr></table></div></figure>


<h2><code>config/locales/doorkeeper.en.yml</code> の更新</h2>

<p><code>rails g doorkeeper:install</code> で <code>config/initializers/doorkeeper.rb</code> と一緒に更新されていました。</p>

<p>認可の画面をスキップしている関係で、翻訳はせずに en を ja に置き換えただけで
そのまま使っていたので、同様に置き換えてそのまま使いました。</p>

<h2><code>redirect urimust be an HTTPS/SSL URI.</code> 対策</h2>

<p>テストの中で
<code>let!(:application) { Doorkeeper::Application.create!(name: 'MyApp', redirect_uri: 'http://api.test') }</code>
のようにしていると
<code>redirect urimust be an HTTPS/SSL URI.</code>
で失敗していたので、
<code>https</code> の URL に変更するか、
<code>config/initializers/doorkeeper.rb</code> で
<code>force_ssl_in_redirect_uri false</code>
にする必要がありました。</p>

<h2>Missing column: <code>applications.scopes</code></h2>

<p>テストを実行したときに</p>

<pre><code>[doorkeeper] Missing column: `applications.scopes`. If you are using ActiveRecord run `rails generate doorkeeper:application_scopes &amp;&amp; rake db:migrate` to add it.
</code></pre>

<p>というメッセージが出るので、メッセージ通り
<code>rails generate doorkeeper:application_scopes &amp;&amp; rake db:migrate</code>
で追加しました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第 18 回 RubyMotion もくもく会 in Osaka に参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2014-12-17-rubymotion-mokumoku-osaka.html"/>
    <updated>2014-12-17T19:32:35+09:00</updated>
    <id>http://blog.n-z.jp/blog/rubymotion-mokumoku-osaka</id>
    <content type="html"><![CDATA[<p>RubyMotion もくもく会 in Osaka の
<a href="http://rubymotionjp.connpass.com/event/10195/" title="第 18 回 RubyMotion もくもく会 in Osaka - connpass">第 18 回 RubyMotion もくもく会 in Osaka - connpass</a>
に参加してきました。</p>

<p>次回の
<a href="http://rubymotionjp.connpass.com/event/10675/" title="第 19 回 RubyMotion もくもく会 in Osaka - connpass">第 19 回 RubyMotion もくもく会 in Osaka - connpass</a>
2015/01/21(水) になりました。</p>

<!--more-->


<h2>メモ</h2>

<p>今日は <a href="http://d.hatena.ne.jp/nagachika/">ruby trunk changes</a> を読んでいました。
以下自分のメモです。</p>

<ul>
<li><code>Time.now.to_f</code> の代わりに <code>Process.clock_gettime(Process::CLOCK_REALTIME)</code></li>
<li><code>{ 'symbol-key': value }</code> という書き方ができるのは ruby 2.2 から</li>
<li><code>String#chomp</code> に空文字列を渡すと特殊な処理がある <a href="https://github.com/ruby/ruby/pull/780">https://github.com/ruby/ruby/pull/780</a></li>
</ul>


<h2>他の人の話のメモ</h2>

<ul>
<li><a href="http://qiita.com/shu223/items/bce33f6ab448c90e4d2b" title="Xcode - 【iOS7】ばねっぽいアニメーションを実現するUIViewの新メソッド - Qiita">Xcode - 【iOS7】ばねっぽいアニメーションを実現するUIViewの新メソッド - Qiita</a></li>
<li>スポともアプリ</li>
<li><a href="https://github.com/fastred/SloppySwiper">https://github.com/fastred/SloppySwiper</a></li>
<li><a href="https://www.meteor.com/">meteor</a></li>
<li><a href="http://ionicframework.com/">ionic</a></li>
<li><a href="http://devlove-kansai.doorkeeper.jp/events/17726" title="Dockerを現場に取り入れてみよう！ - DevLOVE関西 | Doorkeeper">Dockerを現場に取り入れてみよう！ - DevLOVE関西 | Doorkeeper</a></li>
<li><a href="https://www.bloc.io/tutorials/swiftris-build-your-first-ios-game-with-swift">https://www.bloc.io/tutorials/swiftris-build-your-first-ios-game-with-swift</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第64回 Ruby関西 勉強会に参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2014-12-13-rubykansai64.html"/>
    <updated>2014-12-13T13:13:04+09:00</updated>
    <id>http://blog.n-z.jp/blog/rubykansai64</id>
    <content type="html"><![CDATA[<p><a href="http://rubykansai.doorkeeper.jp/events/17347" title="第64回 Ruby関西 勉強会">第64回 Ruby関西 勉強会</a>
に参加したので、そのメモです。</p>

<!--more-->


<h2>オープニング</h2>

<ul>
<li>勉強会の名前がちょっと変わった。</li>
</ul>


<h2>名付け親システム</h2>

<ul>
<li>子供の名前付けの補助をするプログラムを作った話</li>
<li>要件定義が一番時間がかかった</li>
</ul>


<h2>史上最安易／できるだけ速く数を数えたい</h2>

<ul>
<li>那由他まで挑戦したい</li>
<li>enzi</li>
<li>RuJit</li>
<li>IO が遅いのではという話</li>
</ul>


<h2>Ruby/SDL2 のはなし</h2>

<ul>
<li><a href="https://github.com/ohai/ruby-sdl2">https://github.com/ohai/ruby-sdl2</a></li>
<li><a href="http://www.kmc.gr.jp/~ohai/rubysdl2/doc-en/">http://www.kmc.gr.jp/~ohai/rubysdl2/doc-en/</a></li>
<li>SDL 2.x 自体は Android などにも対応しているらしい (Ruby/SDL2 は無理)</li>
<li>2000年頃(?)から 2D 描画にも 3D 機能を利用するようになってきていた</li>
<li>初期化に失敗したときのエラーメッセージ表示とかできるようになった</li>
<li>yard の i18n 機能は英語を書いておかないと日本語が書けないので日本語は後になっている</li>
<li>加算ブレンディングは光っぽいものに使う</li>
<li>アルファブレンディングは透明っぽいものに使う</li>
<li>デモ: <a href="https://gist.github.com/ohai/fb18f6c313ce669911a3">https://gist.github.com/ohai/fb18f6c313ce669911a3</a></li>
<li>Smalruby で Ruby/SDL (1の方) が使われているらしい</li>
<li>SDL と SDL2 が非互換なので</li>
</ul>


<h2>DDD with Rails</h2>

<ul>
<li><a href="https://speakerdeck.com/ogom/ddd-with-rails">https://speakerdeck.com/ogom/ddd-with-rails</a></li>
<li><a href="https://github.com/hommachirb/rails-ddd">https://github.com/hommachirb/rails-ddd</a></li>
<li>ActiveState が middleware なのはデータベースに接続できないと ActiveRecord の middleware でエラーになって、そもそも任意の view が使えないため</li>
<li>state machine gem は開発が止まっている</li>
<li>aasm gem は活発</li>
<li><a href="http://qiita.com/ogomr/items/0b5c4de7f38fd1482a48" title="PlantUML Cheat Sheet">PlantUML Cheat Sheet</a></li>
</ul>


<h2>Ruby初級者向けレッスン 51回 例外</h2>

<p>内容の他に、デモのときのシェルや Emacs の操作などが気になりました (参考になりました)。</p>

<h2>クロージング</h2>

<ul>
<li>次回は 2015 年 2 月 21 日</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[zshでgrepのようなことをする]]></title>
    <link href="http://blog.n-z.jp/blog/2014-12-11-zsh-grep.html"/>
    <updated>2014-12-11T00:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/zsh-grep</id>
    <content type="html"><![CDATA[<p>zsh で簡易 grep 的なことができたので、紹介します。</p>

<!--more-->


<h2>実行例</h2>

<p><code>${name:#pattern}</code> と <code>(M)</code> フラグを組み合わせると配列から glob pattern にマッチしたものだけ抜き出せます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">%</span> <span class="nb">echo</span> <span class="k">${</span><span class="p">(FM)</span><span class="k">${</span><span class="p">(f)</span><span class="s2">&quot;$(&lt; /etc/hosts)&quot;</span><span class="k">}</span><span class="p">:#*local*</span><span class="k">}</span>
</span><span class='line'><span class="go">127.0.0.1       localhost</span>
</span><span class='line'><span class="go">::1     ip6-localhost ip6-loopback</span>
</span><span class='line'><span class="go">fe00::0 ip6-localnet</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>(M)</code> フラグなしだと <code>grep -v</code> のようにマッチしなかったものだけが残ります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">%</span> <span class="nb">echo</span> <span class="k">${</span><span class="p">(F)</span><span class="k">${</span><span class="p">(f)</span><span class="s2">&quot;$(&lt; /etc/passwd)&quot;</span><span class="k">}</span><span class="p">:#*:[1-8]*</span><span class="k">}</span>
</span><span class='line'><span class="go">root:x:0:0:root:/root:/bin/bash</span>
</span><span class='line'><span class="go">news:x:9:9:news:/var/spool/news:/bin/sh</span>
</span></code></pre></td></tr></table></div></figure>


<h2>解説</h2>

<ol>
<li>まず最初に <code>$(&lt; filename)</code> でファイルから内容を読み込んでいます。</li>
<li>次に <code>""</code> で改行などの <code>IFS</code> に含まれる空白による分割を抑制しています。</li>
<li>そして <code>${(f)var}</code> の <code>f</code> フラグは <code>ps:\n:</code> の省略形で、改行で分割して配列にするという意味です。ここまでの処理は zsh での典型的な処理なので覚えておくと便利です。</li>
<li>その次がメインの <code>${name:#pattern}</code> です。指定するパターンは正規表現ではなくファイル glob のパタ
ーンのようです。 <code>(M)</code> フラグと組み合わせることでマッチしなかった要素を削除しています。</li>
<li>最後に <code>${(F)var}</code> の <code>F</code> フラグは <code>pj:\n:</code> の省略形で、改行で結合するという意味です。</li>
</ol>


<p><code>F</code> フラグは <code>M</code> フラグと同時に指定しても問題なかったので、括弧 (<code>${}</code> の方) をネストさせずに同じ所 に書いています。
<code>f</code> フラグは別にしないとうまく動きませんでした。</p>

<p>行全体とのマッチなので、前後に <code>*</code> をつけないと一部に含むという意味になりません。
逆に後ろだけに <code>*</code> をつけて行頭マッチなどが出来るということでもあります。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[zshでEnterを連打したときにいろいろ実行する]]></title>
    <link href="http://blog.n-z.jp/blog/2014-12-06-zsh-enter.html"/>
    <updated>2014-12-06T18:01:45+09:00</updated>
    <id>http://blog.n-z.jp/blog/zsh-enter</id>
    <content type="html"><![CDATA[<p>これは
<a href="http://qiita.com/advent-calendar/2014/zsh">zsh Advent Calendar 2014</a>
の 6 日目の記事です。</p>

<p>zsh で Enter を連打したときに順番にコマンドを実行するというのをやってみました。</p>

<p>参考にしたのは <a href="http://qiita.com/yuyuchu3333/items/e9af05670c95e2cc5b4d" title="Zsh - Enter で ls と git status を表示すると便利 - Qiita">Zsh - Enter で ls と git status を表示すると便利 - Qiita</a> です。</p>

<!--more-->


<h2>概要と実装</h2>

<p><code>.zshrc</code> に以下のような感じで追加して空 Enter を押すと
最初は <code>ls</code> で次に
<code>svn status</code> または <code>git status -sb</code> を実行するようになります。
連打したときに終わりがわかりやすいように 3 回目は何も実行しないようにしています。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="k">function</span> my_enter <span class="o">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">[[</span> -n <span class="s2">&quot;$BUFFER&quot;</span> <span class="o">]]</span><span class="p">;</span> <span class="k">then</span>
</span><span class='line'>        <span class="nb">builtin </span>zle .accept-line
</span><span class='line'>        <span class="k">return</span> 0
</span><span class='line'>    <span class="k">fi</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">[</span> <span class="s2">&quot;$WIDGET&quot;</span> !<span class="o">=</span> <span class="s2">&quot;$LASTWIDGET&quot;</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
</span><span class='line'>        <span class="nv">MY_ENTER_COUNT</span><span class="o">=</span>0
</span><span class='line'>    <span class="k">fi</span>
</span><span class='line'>    <span class="k">case</span> <span class="nv">$[</span>MY_ENTER_COUNT++<span class="o">]</span> in
</span><span class='line'>        0<span class="o">)</span>
</span><span class='line'>            <span class="nv">BUFFER</span><span class="o">=</span><span class="s2">&quot; ls&quot;</span>
</span><span class='line'>            <span class="p">;;</span>
</span><span class='line'>        1<span class="o">)</span>
</span><span class='line'>            <span class="k">if</span> <span class="o">[[</span> -d .svn <span class="o">]]</span><span class="p">;</span> <span class="k">then</span>
</span><span class='line'>                <span class="nv">BUFFER</span><span class="o">=</span><span class="s2">&quot; svn status&quot;</span>
</span><span class='line'>            <span class="k">elif</span> git rev-parse --is-inside-work-tree &gt;/dev/null 2&gt;<span class="p">&amp;</span>1<span class="p">;</span> <span class="k">then</span>
</span><span class='line'>                <span class="nv">BUFFER</span><span class="o">=</span><span class="s2">&quot; git status -sb&quot;</span>
</span><span class='line'>            <span class="k">fi</span>
</span><span class='line'>            <span class="p">;;</span>
</span><span class='line'>        *<span class="o">)</span>
</span><span class='line'>            <span class="nb">unset </span>MY_ENTER_COUNT
</span><span class='line'>            <span class="p">;;</span>
</span><span class='line'>    <span class="k">esac</span>
</span><span class='line'>    <span class="nb">builtin </span>zle .accept-line
</span><span class='line'><span class="o">}</span>
</span><span class='line'>zle -N my_enter
</span><span class='line'>bindkey <span class="s1">&#39;^m&#39;</span> my_enter
</span></code></pre></td></tr></table></div></figure>


<h2>関数解説</h2>

<p>最初の <code>if</code> 文で <code>$BUFFER</code> をチェックして入力があるときは <code>zle .accept-line</code> で普通に実行するようにしています。</p>

<p>次の <code>if</code> 文で <code>$LASTWIDGET</code> と <code>$WIDGET</code> が違うときに <code>MY_ENTER_COUNT</code> というシェル変数を初期化しています。
この変数で何回目の空 Enter かを覚えておくようにしています。</p>

<p>そして <code>MY_ENTER_COUNT</code> で何回目かに応じて実行するコマンドを変えています。
頭にスペースを入れているのは <code>setopt histignorespace</code> と組み合わせることを想定しています。</p>

<p>最後に <code>zle .accept-line</code> で実行しています。</p>

<h2>まとめ</h2>

<p>空 Enter 連打でいろいろなコマンドを順番に実行できるようにしてみました。
参考にして好きなコマンドを実行できるようにすると良いのではないでしょうか。</p>

<p><a href="http://qiita.com/yuyuchu3333/items/e9af05670c95e2cc5b4d">参考元の Qiita の記事</a>
にちょっと書いているように Enter がやり過ぎと思ったら
<code>bindkey '^J' my_enter</code>
のように別のキーに割り当てると良いでしょう。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[capistrano 3.3.3 が依存している capistrano-stats について]]></title>
    <link href="http://blog.n-z.jp/blog/2014-12-01-capistrano-stats.html"/>
    <updated>2014-12-01T21:33:21+09:00</updated>
    <id>http://blog.n-z.jp/blog/capistrano-stats</id>
    <content type="html"><![CDATA[<p>capistrano が 3.3.3 にあがって
<a href="https://github.com/capistrano/stats">capistrano-stats</a>
という gem に依存するようになりました。
これは <code>metrics.capistranorb.com:1200</code> にバージョン情報などを送信して
capistrano のサポートの改善に役立てようとするもののようです。</p>

<!--more-->


<h2>対象バージョン</h2>

<ul>
<li>capistrano 3.3.3</li>
<li>capistrano-stats 1.0.3</li>
</ul>


<h2>Capfile locked</h2>

<p>capistrano-stats とは関係ないですが、
<code>Capfile locked at 3.2.1, but 3.3.3 is loaded</code>
と出るときは <code>config/deploy.rb</code> の最初の方にある
<code>lock '3.2.1'</code>
という行を
<code>lock '3.3.3'</code>
に書き換えれば OK です。</p>

<h2>capistrano-stats 1.0.3 の挙動</h2>

<p>初回実行時に
<code>Do you want to enable statistics? (y/N):</code>
ときかれて、
そのまま Enter か <code>n</code> を入力すると ruby や capistrano のバージョンは送信されなくなるのですが、
(少なくとも私の) 期待に反して
<code>metrics.capistranorb.com:1200</code>
への送信自体は発生するようになっています。</p>

<h2>何が問題か</h2>

<p>全く送信してほしくない場合にも通信が発生したり、
firewall で塞がれている場合にエラーになったり
という問題があります。</p>

<h2>一時的に無効にするには?</h2>

<p><code>CAPISTRANO_METRICS=localhost:1200 bundle exec cap default</code>
のように環境変数 <code>CAPISTRANO_METRICS</code> で送っても無視されるところに送信すれば良さそうです。</p>

<h2>完全に無効にするには?</h2>

<p>pull request 1 の
<a href="https://github.com/capistrano/stats/pull/1" title="Honor the users privacy decision and do not send UDP packets if he does not want to send metrics">Honor the users privacy decision and do not send UDP packets if he does not want to send metrics</a>
にあるように</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Rake</span><span class="o">::</span><span class="no">Task</span><span class="o">[</span><span class="s1">&#39;metrics:collect&#39;</span><span class="o">].</span><span class="n">clear_actions</span>
</span></code></pre></td></tr></table></div></figure>


<p>を <code>config/deploy.rb</code> に追加すると送信されなくなりました。</p>

<h2>今後</h2>

<p><a href="https://github.com/capistrano/stats/pull/2" title="Allow users to opt-out of sending the UDP ping and improve error handling when the sendto syscall fails">Allow users to opt-out of sending the UDP ping and improve error handling when the sendto syscall fails</a>
という pull request が続きで出ているので、
将来のバージョンでは全く送信しない選択肢が用意されるかもしれません。</p>

<h2>2014-12-13 追記</h2>

<p>その後、
capistrano 3.3.4 と capistrano-stats 1.1.0 にあがって、
デフォルトの N を 2 回は全く送信しないようになりました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第 17 回 RubyMotion もくもく会 in Osaka に参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2014-11-19-rubymotion-mokumoku-osaka.html"/>
    <updated>2014-11-19T19:36:19+09:00</updated>
    <id>http://blog.n-z.jp/blog/rubymotion-mokumoku-osaka</id>
    <content type="html"><![CDATA[<p>第 1 回から第 15 回に参加していて
前回の 16 回は中止になっていた
RubyMotion もくもく会 in Osaka の
<a href="http://rubymotionjp.connpass.com/event/9597/" title="第 17 回 RubyMotion もくもく会 in Osaka - connpass">第 17 回 RubyMotion もくもく会 in Osaka - connpass</a>
に参加してきました。
今回も基本的にみんなもくもくしていました。</p>

<p>次回の
<a href="http://rubymotionjp.connpass.com/event/10195/" title="第 18 回 RubyMotion もくもく会 in Osaka - connpass">第 18 回 RubyMotion もくもく会 in Osaka - connpass</a>
は 2014/12/17(水) になりました。</p>

<!--more-->


<p>今回はメールを書いたり github の issues を見たりコメントしたりしていました。</p>

<p>最後の方は <a href="http://support.apple.com/ja-jp/HT5868">iPod touch の「このコンピュータを信頼しますか」警告</a>が出続けて
iTunes が認識してくれない問題を思い出したので、調べていたのですが、結局解決しませんでした。
Dropbox は認識して写真を取り込んでくれるので、ケーブルなどのハードウェアは問題がないはずなので、
ソフトウェア側の問題らしいというところまでは絞り込めています。</p>

<h2>メモ</h2>

<p>以下メモです。</p>

<ul>
<li>Firebase</li>
<li>WKWebView</li>
<li><a href="https://www.mapbox.com/">Mapbox</a></li>
<li><a href="http://qiita.com/aki/items/c0073bf1e83858fe2e92">Xcode6のiPhone Simulatorの場所</a></li>
<li><a href="https://github.com/magicalpanda/MagicalRecord">https://github.com/magicalpanda/MagicalRecord</a></li>
<li><a href="http://qiita.com/susieyy/items/749c4ac5d82d765c12c6">SwiftのRSS Readerを100行で作ったよ</a></li>
<li><a href="https://github.com/lingoer/SwiftyJSON">https://github.com/lingoer/SwiftyJSON</a></li>
<li>WatchKit</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第5回 コンテナ型仮想化の情報交換会＠大阪に参加しました]]></title>
    <link href="http://blog.n-z.jp/blog/2014-11-14-ct-study-osaka-5.html"/>
    <updated>2014-11-14T19:00:32+09:00</updated>
    <id>http://blog.n-z.jp/blog/ct-study-osaka-5</id>
    <content type="html"><![CDATA[<p><a href="http://ct-study.connpass.com/event/9068/" title="第5回 コンテナ型仮想化の情報交換会＠大阪">第5回 コンテナ型仮想化の情報交換会＠大阪</a>
に参加しました。</p>

<!--more-->


<p>以下メモです。</p>

<h2>いまさら聞けない Docker</h2>

<ul>
<li>前半はさくらインターネットの話でした。</li>
<li>仮想環境を動かす基盤として専用サーバがまた増えているらしいというのが興味深いと思いました。</li>
<li>後半は docker の基本についての話でした。</li>
<li><a href="http://www.slideshare.net/kunihirotanaka1/immutable-infrastructuredockercontainerstudyosaka20141114">http://www.slideshare.net/kunihirotanaka1/immutable-infrastructuredockercontainerstudyosaka20141114</a></li>
</ul>


<h2>Docker Registry入門</h2>

<ul>
<li><a href="https://github.com/docker/docker-registry">https://github.com/docker/docker-registry</a> の話</li>
<li>起動は簡単</li>
<li>pip でインストールも可能 (公式の <a href="https://github.com/docker/docker-registry/blob/master/Dockerfile">Dockerfile</a> 参照)</li>
<li>設定は <a href="https://github.com/docker/docker-registry/blob/master/config/config_sample.yml">config_sample.yml</a> などを参照</li>
<li>docker-registry-ui, docker-registry-web で検索すると非公式の Web UI が出てくる</li>
<li>ミラーリングに使える

<ul>
<li>docker コマンドで <code>--registry-mirror</code> オプション</li>
<li>private registry では <code>MIRROR_SOURCE</code> を指定</li>
</ul>
</li>
</ul>


<h2>Linuxコンテナの基本と最新情報</h2>

<ul>
<li>namespace と cgroup</li>
<li>sane_behavior オプション</li>
<li>CRIU のデモ</li>
</ul>


<h2>LT</h2>

<p>LT では boot2docker について話しました。
他の発表者も含めて、特に 5 分という制限はなく、緩い感じで発表していました。</p>

<iframe src="http://slide.rabbit-shocker.org/authors/znz/boot2docker-upgrade/viewer.html"
        width="640" height="524"
        frameborder="0"
        marginwidth="0"
        marginheight="0"
        scrolling="no"
        style="border: 1px solid #ccc; border-width: 1px 1px 0; margin-bottom: 5px"
        allowfullscreen> </iframe>


<div style="margin-bottom: 5px">
  <a href="http://slide.rabbit-shocker.org/authors/znz/boot2docker-upgrade/" title="boot2docker upgrade">boot2docker upgrade</a>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[関西オープンフォーラム2014に行ってきました]]></title>
    <link href="http://blog.n-z.jp/blog/2014-11-08-k-of-jp.html"/>
    <updated>2014-11-08T12:59:07+09:00</updated>
    <id>http://blog.n-z.jp/blog/k-of-jp</id>
    <content type="html"><![CDATA[<p><a href="https://k-of.jp/2014/" title="KOF 2014：関西オープンフォーラム2014">KOF 2014：関西オープンフォーラム2014</a>
に行ってきました。</p>

<!--more-->


<h2>Debian 8 &ldquo;jessie&rdquo; frozen</h2>

<p>まずは
<a href="https://k-of.jp/2014/session/583" title="Debian 8 &quot;jessie&quot; frozen">Debian 8 &quot;jessie&quot; frozen</a>
を聞いていました。</p>

<p>systemd がデフォルトになる (wheezy からあげるときも) とか、
tdiary が jessie に入らなかったので backports で提供予定とかが
気になりました。</p>

<h2>東海道らぐ　秋の大阪LT大会 in KOF</h2>

<p>次は同じ場所で
<a href="https://k-of.jp/2014/session/569" title="東海道らぐ　秋の大阪LT大会 in KOF">東海道らぐ　秋の大阪LT大会 in KOF</a>
を聞いていました。</p>

<p>今後の東海道らぐの予定は、
関西では 2015-01-10(土) に LILO との合同開催があるようです。</p>

<p>以下メモです。</p>

<ul>
<li>canna の fork の izumo</li>
<li>宿探しに トラベルコ というのが便利そう</li>
<li><a href="http://connpass.com/event/9898/" title="KOF2014翌日もくもく会">KOF2014翌日もくもく会</a></li>
<li>CyanobenMod</li>
<li>OpenModelica</li>
<li>seq, jot</li>
</ul>


<h2>途中</h2>

<p>しばらくブースの方で話をしたり、他の人が話をしているのを聞いたりしていました。</p>

<h2>Ruby Enterprise Environment</h2>

<p>最後は
<a href="https://k-of.jp/2014/session/549" title="Ruby Enterprise Environment">Ruby Enterprise Environment</a>
を聞きながらこのブログ記事を書いたり他のことをしたりしていました。</p>

<p>前半は Windows 上での Ruby の話がメインだったのに、人が少なめだったので、
Enterprise というタイトルだとターゲット層に伝わらなかったのではないかと思いました。
後半は RHEL での話だったので Enterprise という感じでした。</p>

<h2>お楽しみ抽選会</h2>

<p><a href="https://k-of.jp/2014/session/636" title="お楽しみ抽選会">お楽しみ抽選会</a>
もちょっと参加してみましたが、いつも通りのじゃんけんで、さっぱりでした。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails 4.1.7 にあげたら一部の画像が表示されなくなった]]></title>
    <link href="http://blog.n-z.jp/blog/2014-11-05-sprockets.html"/>
    <updated>2014-11-05T21:11:09+09:00</updated>
    <id>http://blog.n-z.jp/blog/sprockets</id>
    <content type="html"><![CDATA[<p>Rails 4.1.7 にあげたら一部の画像が表示されなくなるという現象が起きて、しばらく悩んでいたのですが解決しました。</p>

<!--more-->


<h2>原因</h2>

<ul>
<li>Rails か sprockets のバージョンアップでファイル名につけられる digest が変わった。</li>
<li><code>image_tag</code> で画像を参照している HTML が <code>cache</code> の中にあった。</li>
</ul>


<h2>現象</h2>

<p><code>rails console</code> で <code>Rails.application.assets.find_asset(asset_name).digest</code> を試しても新しい digest がちゃんと返ってくるのに、
ブラウザー上では古い digest の URL が参照されていてファイルが見つからないという現象になっていました。</p>

<p>アセットはキャッシュ期間の長いファイルとして設定しているので、複数ブラウザーで確認すると最初は現象が起きたり起きなかったりしていて、サーバー側の問題だと気づくのが遅れました。</p>

<h2>対処</h2>

<p><code>dalli</code> gem 経由で <code>memcached</code> をキャッシュ使っていたので <code>sudo service memcached restart</code> してキャッシュを破棄しました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rubyによるクローラー開発技法 読書会 第2回(兵庫県)に参加しました]]></title>
    <link href="http://blog.n-z.jp/blog/2014-11-01-amagasakirb.html"/>
    <updated>2014-11-01T13:05:51+09:00</updated>
    <id>http://blog.n-z.jp/blog/amagasakirb</id>
    <content type="html"><![CDATA[<p><a href="http://kokucheese.com/event/index/220392/" title="11月1日 Rubyによるクローラー開発技法　読書会　第2回(兵庫県)">11月1日 Rubyによるクローラー開発技法　読書会　第2回(兵庫県)</a>
に参加しました。
今回は3,4章でした。</p>

<!--more-->


<h2>メモ</h2>

<div style="float:right">
<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=znz-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=4797380357" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>
</div>


<p>前回参加していなかった人向けに、最初に 1,2 章の概要説明があって、
今回は 3 章からでした。
今回から、誤字・脱字などのフィードバックのため、
Wiki
(<a href="https://github.com/cuzic/amagasakirb/wiki/2014.11.01-Ruby-%E3%81%AB%E3%82%88%E3%82%8B%E3%82%AF%E3%83%AD%E3%83%BC%E3%83%A9%E3%83%BC%E9%96%8B%E7%99%BA%E6%8A%80%E6%B3%95%E8%AA%AD%E6%9B%B8%E4%BC%9A-%E7%AC%AC2%E5%9B%9E" title="2014.11.01 『Ruby によるクローラー開発技法』読書会 第2回">2014.11.01 『Ruby によるクローラー開発技法』読書会 第2回</a>)
に記録するようになりました。</p>

<p>以下、今回のメモです。</p>

<ul>
<li>p.112 Crawl-delay の単位は決まっていない</li>
<li>p.148 構文解析で正規表現が使われていることは多い?</li>
<li>p.149 3-1-2 ECU_JP → EUC-JP</li>
<li>p.151 行頭に <code>=~</code> は syntax error で、行頭に <code>.</code> は最近の ruby では OK になっている</li>
<li>Fluent API の話</li>
<li>p.150 RegExp → Regexp</li>
<li>posix 文字クラスと Unicode プロパティの話</li>
<li>Oniguruma と Onigmo の話</li>
<li>pp.152-153 名前付きキャプチャの説明がローカル変数への割当だけの説明になっているようにみえる</li>
<li>p.153 <code>\b</code> は文字クラスの中か外かで解釈が変わる</li>
<li>p.154 <code>\x{7HHHHHHH}</code> は使えない <a href="https://github.com/rurema/doctree/issues/80">https://github.com/rurema/doctree/issues/80</a> 参照</li>
<li>p.154 <code>\s</code> には <code>\v</code> が含まれる</li>
<li>p.155 「m」オプションを使うことで改行を無視する → <code>.</code> で改行も含むようになる</li>
<li>p.156 EUC_JP → EUC-JP</li>
<li><a href="https://github.com/cuzic/amagasakirb/wiki">https://github.com/cuzic/amagasakirb/wiki</a></li>
<li>p.159 コードの中のコメント部分: UFT8 → UTF-8</li>
<li>p.162 モンキーパッチではなく直接変更している話</li>
<li>p.164 <code>xmlns:"デフォルトの名前空間識別子"</code> → <code>xmlns="デフォルトの名前空間識別子"</code></li>
<li>p.167 Webサイトの更新には、Atom配信フォーマットが利用できます。 → Atom出版プロトコルの間違い?</li>
<li>p.171 Atom 1.0の構造は、RSS 2.0と同様に名前空間の指定が必要になります。 → RSS 1.0?</li>
<li>close されていないので <code>open(url).read</code> よりも <code>open(url, &amp;:read)</code> の方が良いのではという話</li>
<li>標準添付の RSS ライブラリが便利という話</li>
<li>Google Feed API</li>
<li>p.180 の <code>doc.at('//a').[]('href')</code> から <code>doc.xpath("//a/@href").text</code> などの話</li>
<li>p.177 Aタグの例の <code>node.inner_text</code> の出力例が間違っている</li>
<li>p.182 <code>\/</code> の <code>\</code> が不要?</li>
<li>p.184 スクリーンショットの値段がずれている</li>
<li>p.192 ここでは nokogiri ではなく REXML を使っている</li>
<li>p.199, p.205 Marshal.dmp は Marshal.dump なのではないかという話</li>
<li>mitmproxy の話</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[redmine の運用停止前のバックアップ]]></title>
    <link href="http://blog.n-z.jp/blog/2014-10-09-redmine-backup.html"/>
    <updated>2014-10-09T21:55:27+09:00</updated>
    <id>http://blog.n-z.jp/blog/redmine-backup</id>
    <content type="html"><![CDATA[<p>ある redmine の運用を止める前にリポジトリとの連携部分は止まってしまうのは仕方がないとして、
wiki やチケットなどは後からでも参照できるようにローカルにバックアップを残しておくことにしました。
その手順のメモです。</p>

<!--more-->


<h2>データベースのバックアップ</h2>

<p><a href="http://blog.n-z.jp/blog/2014-01-28-yaml-db.html" title="yaml_dbでMySQLからPostgreSQLに移行した">yaml_dbでMySQLからPostgreSQLに移行した</a>話で使った <code>yaml_db</code> を使いました。</p>

<p>まず、
<code>Gemfile.local</code> をなければ作成して、以下の内容を追加します。</p>

<figure class='code'><figcaption><span>Gemfile.local</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;yaml_db&#39;</span><span class="p">,</span> <span class="ss">github</span><span class="p">:</span> <span class="s1">&#39;jetthoughts/yaml_db&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>そして <code>RAILS_ENV=production bundle exec rake db:data:dump</code> で <code>db/data.yml</code> を作成します。</p>

<h2>ローカル環境の作成</h2>

<p>ローカルにも redmine 環境を作成します。</p>

<ol>
<li>redmine-2.5.2.tar.gz をダウンロードして展開</li>
<li><code>config/database.yml.example</code> を元に <code>config/database.yml</code> を作成 (今回はバックアップ環境なので sqlite3 を使用)</li>
<li>Gemfile.local 作成</li>
<li><code>plugins/</code> に使っていたプラグインをインストール (サーバーから rsync でコピーなど)</li>
<li>プラグインの設定も必要に応じてコピー (<code>config/wiki_external_filter.yml</code> など)</li>
<li><code>bundle install</code> で gem のインストール</li>
<li><code>RAILS_ENV=production bundle exec rake db:migrate</code> と <code>RAILS_ENV=production bundle exec rake redmine:plugins:migrate</code> でデータベース作成</li>
<li><code>db/data.yml</code> をコピーしてきて <code>RAILS_ENV=production bundle exec rake db:data:load</code> で読み込み (<code>db:migrate</code> していないとテーブル不足で読み込めない)</li>
<li><code>files/</code> の添付ファイルをコピー (サーバーから rsync でコピーなど)</li>
<li><code>config/configuration.yml</code> や <code>favicon.ico</code> などカスタマイズしているものがあれば必要に応じて設定やコピー</li>
<li><code>bundle exec rake generate_secret_token</code> で secret token を生成</li>
<li><code>bundle exec rails server -e production</code> で起動</li>
</ol>


<p>ログインして今まで通り見えることを確認して終了です。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ターミナルでの文字幅を調べる]]></title>
    <link href="http://blog.n-z.jp/blog/2014-10-07-char-width-in-terminal.html"/>
    <updated>2014-10-07T20:10:20+09:00</updated>
    <id>http://blog.n-z.jp/blog/char-width-in-terminal</id>
    <content type="html"><![CDATA[<p><a href="http://uwabami.junkhub.org/log/20141007.html#p01" title="マルチバイト文字列の幅を 2 としてカウントする">マルチバイト文字列の幅を 2 としてカウントする</a>
という話を見て、
端末に実際の幅を問い合わせてみればいいのではないかと思って試してみました。</p>

<!--more-->


<h2>実行例</h2>

<p>こんな感じでできました。
zsh と bash で動作確認しています。
端末は
<a href="http://iterm2.com/" title="iTerm2">iTerm2</a>
で動作確認しています。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% echo -ne '日本語\e[6n'; read -d';' a; read -dR a; printf '\e[M\r'; echo $[a-1]
</span><span class='line'>6
</span><span class='line'>% echo -ne 'abc日本語\e[6n'; read -d';' a; read -dR a; printf '\e[M\r'; echo $[a-1]
</span><span class='line'>9</span></code></pre></td></tr></table></div></figure>


<h2>スクリプト化</h2>

<p>実行ファイルにするならこんな感じになります。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#!/bin/bash
</span><span class='line'>echo -ne "$*"'\e[6n'; read -d';' a; read -dR a; printf '\e[M\r'; echo $[a-1]</span></code></pre></td></tr></table></div></figure>


<h2>解説</h2>

<p>実装としては実際に表示して、カーソル位置を端末に問い合わせて、表示を消去して、桁を取り出して 1 引いています。</p>

<p>エスケープシーケンスなどに関しては、
<a href="http://ttssh2.sourceforge.jp/manual/ja/about/ctrlseq.html" title="対応制御シーケンス">対応制御シーケンス</a>
を参考にしてください。</p>

<ol>
<li>まず文字列を表示しています。</li>
<li><code>CSI Ps n</code> (DSR) を使ってカーソルの位置を報告させています。</li>
<li><code>CSI r ; c R</code> という応答のうち、 <code>;</code> までを捨てて、 <code>c</code> だけ変数 <code>a</code> に取り込んでいます。</li>
<li><code>CSI Ps M</code> (DL) でカーソル行に表示された内容を消去しています。</li>
<li><code>CR</code> で行頭にカーソルを戻しています。</li>
<li>カーソル位置なので 文字数+1 になっているので、1 引いて表示しています。</li>
</ol>


<h2>追記</h2>

<p>実装の説明でわかると思いますが、1行を超える長さは調べられません。がんばるなら適当に区切って文字ごととかで調べてください。</p>

<p>実行開始時にカーソルは行頭にしておく必要があり、実行後にカーソル行は消えます。
スクリプト中に入れるには使いにくいと思います。</p>

<p>半分ネタなので、あんまりがんばっていません。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第 15 回 RubyMotion もくもく会 in Osaka に参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2014-09-24-rubymotion-mokumoku-osaka.html"/>
    <updated>2014-09-24T23:12:38+09:00</updated>
    <id>http://blog.n-z.jp/blog/rubymotion-mokumoku-osaka</id>
    <content type="html"><![CDATA[<p>第 1 回から第 14 回にも参加した RubyMotion もくもく会 in Osaka の
<a href="http://rubymotionjp.connpass.com/event/8214/" title="第 15 回 RubyMotion もくもく会 in Osaka - connpass">第 15 回 RubyMotion もくもく会 in Osaka - connpass</a>
に参加してきました。
今日もみんなもくもくしていました。</p>

<p>次回の
<a href="http://rubymotionjp.connpass.com/event/8917/" title="第 16 回 RubyMotion もくもく会 in Osaka - connpass">第 16 回 RubyMotion もくもく会 in Osaka - connpass</a>
は 10/15(水) になりました。</p>

<!--more-->


<h2>メモ</h2>

<p>メモです。</p>

<ul>
<li><a href="http://www.3bees.com/">http://www.3bees.com/</a></li>
<li><a href="http://rubymotiondispatch.com/" title="RubyMotion Dispatch">RubyMotion Dispatch</a></li>
<li>RubyMotion Kaigi 2014 の話</li>
<li><a href="https://github.com/infinitered/cdq">https://github.com/infinitered/cdq</a></li>
<li><a href="https://www.bloc.io/swiftris-build-your-first-ios-game-with-swift" title="Swiftris Tutorial: Build Your First iOS Game With Swift | Bloc">Swiftris Tutorial: Build Your First iOS Game With Swift | Bloc</a></li>
<li><a href="http://www.genymotion.com/">http://www.genymotion.com/</a></li>
<li><a href="https://github.com/nathankot/webstub">https://github.com/nathankot/webstub</a></li>
</ul>


<h2>やっていたこと</h2>

<div style="float:right">
<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=znz-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=4873116767" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>
</div>


<p>最近は Mac をあまり持ち歩かなくなっていて忘れていたので、
代わりに持ち歩いていた本 (<a href="http://www.amazon.co.jp/gp/product/4873116767/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4873116767&amp;linkCode=as2&amp;tag=znz-22">ハイパフォーマンス ブラウザネットワーキング ―ネットワークアプリケーションのためのパフォーマンス最適化</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4873116767" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />) を読んでいました。</p>

<p>物理層に近い 3G のこととか全く知らなかった話も載っていて、だからアプリケーションはどういう点に気をつければ良いのかという話も書いてあったり、
WebSocket や WebRTC の最近の話題まで載っています。</p>
]]></content>
  </entry>
  
</feed>
