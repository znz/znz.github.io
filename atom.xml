<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[@znz blog]]></title>
  <link href="http://blog.n-z.jp/atom.xml" rel="self"/>
  <link href="http://blog.n-z.jp/"/>
  <updated>2016-01-16T21:45:02+09:00</updated>
  <id>http://blog.n-z.jp/</id>
  <author>
    <name><![CDATA[Kazuhiro NISHIYAMA]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[LILO&東海道らぐオフラインミーティング 2016/01/16 に参加しました]]></title>
    <link href="http://blog.n-z.jp/blog/2016-01-16-lilo-tokaidolug.html"/>
    <updated>2016-01-16T13:00:34+09:00</updated>
    <id>http://blog.n-z.jp/blog/lilo-tokaidolug</id>
    <content type="html"><![CDATA[<p><a href="https://lilo.doorkeeper.jp/events/36903" title="LILO&amp;東海道らぐオフラインミーティング 2016/01/16 - LILO | Doorkeeper">LILO&amp;東海道らぐオフラインミーティング 2016/01/16 - LILO | Doorkeeper</a>
に参加しました。</p>

<p>今回もアンカンファレンス形式でした。</p>

<!--more-->


<h2>メモ</h2>

<p>今回のメモです。</p>

<ul>
<li>ハッシュタグ: <code>#lilo_jp</code> <code>#東海道らぐ</code></li>
<li>登録参加者数 10名</li>
<li>自己紹介から</li>
<li>Chromecast を持ってきている人がいてプロジェクターにさしていた。</li>
<li>Kapper さん : ARM Linux、Android、RaspberryPi で Windows とアプリをX86エミュで動かそう</li>
<li>ARM は x86 に比べて浮動小数点演算が遅い</li>
<li>ExaGear Desktop という商用のエミュレータもあるらしい</li>
<li>qemu より速い</li>
<li>DOSBox, Bochs は遅いが移植性が高い</li>
<li>qemu-user-static と schroot で Wine などを動かしている話</li>
<li>Debian は mutlilib をサポートしているが multi-binary はサポートしていないので <code>apt-get *:i386</code> で i386 のバイナリで上書きされてしまわないように schroot で環境を分けているという話</li>
<li>プレゼンに使った環境は Ubuntu を追加で入れた Chromebook</li>
<li><code>uname</code> は <code>armv7l</code></li>
<li>Crouton</li>
<li>派生して Windows 上で仮想環境の話</li>
<li>Virtual PC, Hyper-V, VirtualBox, VMware Player</li>
<li>山内さん : Raspberry Pi で遊んだ後は Piface を買ってホームエレクトロニクスとホームセキュリティで実用しよう</li>
<li>Tocos 無線DIO</li>
<li>TWE-Lite DIP (トワイライト・ディップ)</li>
<li><a href="https://osdn.jp/projects/pepolinux/wiki/epicon">epicon</a> でシリアル通信</li>
<li>休憩</li>
<li>榎さん : LibreOffice の最近の動向と Debian での LibreOffice パッケージについて</li>
<li>LibreOffice Online (LOOL)</li>
<li>ownCloud の編集画面で LOOL を使うデモがある</li>
<li>VirtualBox のイメージが用意されているので簡単に試せる</li>
<li>LibreOffice Viewer for Android</li>
<li>Advisory Board</li>
<li>ヨーロッパでは行政中心に導入が進行中</li>
<li>日本での活動</li>
<li>UI の翻訳率は高い</li>
<li>Help などは追いついていない</li>
<li>イベント</li>
<li>HackFest</li>
<li>LibreOffice Conference 2015 への日本からの参加者は 3 名</li>
<li>各言語のコミュニティ : LibreItalia (非営利団体), ベトナムコミュニティ</li>
<li><a href="http://itpro.nikkeibp.co.jp/atcl/column/15/102800252/102800003/" title="ヨーロッパでのLibreOffice活用は移行期から安定期に、アジアも活発な動き">ヨーロッパでのLibreOffice活用は移行期から安定期に、アジアも活発な動き</a></li>
<li>LibreOffice mini Conference 2016 in Japan</li>
<li>現時点での参加者が 13 名に増えている話</li>
<li>Debian での LibreOffice パッケージ</li>
<li>遅れてきた人の自己紹介</li>
<li>Shimada Hirofumi さん : opencocon</li>
<li>新ビルドサーバ</li>
<li>Allwinner タブレットの OS を作ってみる (途中)</li>
<li>linux-sunxi コミュニティ</li>
<li><a href="http://linux-sunxi.org/Identification_guide">http://linux-sunxi.org/Identification_guide</a></li>
<li><a href="http://linux-sunxi.org/GPL_Violations">http://linux-sunxi.org/GPL_Violations</a></li>
<li>Android 上だと型番などの情報がわからないので、バラしてプロセッサなどを確認</li>
<li><a href="http://linux-sunxi.org/Format_Q8">http://linux-sunxi.org/Format_Q8</a></li>
<li>OpenEmbedded + meta-sunxi</li>
<li><a href="https://github.com/linux-sunxi/meta-sunxi">https://github.com/linux-sunxi/meta-sunxi</a></li>
<li>Device Tree, FEX</li>
<li>sunxi-tools</li>
<li>microUSB で転送</li>
<li>現状はカーネルが起動するところまで</li>
<li>デモ</li>
<li>まとめ</li>
<li>上周りはどうするのかが問題</li>
<li>選択肢のひとつ : <a href="http://plasma-mobile.org/technology/">http://plasma-mobile.org/technology/</a></li>
<li>休憩</li>
<li>矢吹さん : Sphinx + VOoM</li>
<li><a href="http://www.vim.org/scripts/script.php?script_id=2657" title="VOoM : Vim two-pane outliner">VOoM : Vim two-pane outliner</a></li>
<li><a href="http://vim-voom.github.io/" title="VOoM: two-pane text outliner">VOoM: two-pane text outliner</a></li>
<li><a href="http://sphinx-users.jp/" title="Sphinx-Users.jp — Python製ドキュメンテーションビルダー、Sphinxの日本ユーザ会">Sphinx-Users.jp — Python製ドキュメンテーションビルダー、Sphinxの日本ユーザ会</a></li>
<li><a rel="nofollow" href="http://www.amazon.co.jp/gp/product/4478490279/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4478490279&amp;linkCode=as2&amp;tag=znz-22">考える技術・書く技術―問題解決力を伸ばすピラミッド原則</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4478490279" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="https://packages.debian.org/sid/vim-voom">https://packages.debian.org/sid/vim-voom</a></li>
<li>すがさん : <a href="http://www.geocities.jp/sugachan1973/doc/funtouki.html" title="システム奮闘記">システム奮闘記</a> 進捗</li>
<li>LAN の減衰、表皮効果</li>
<li>さとうさん : Raspberry Pi と魚眼レンズのカメラなどの実演</li>
<li>丸市 展之さん : OSM 3D マップの話</li>
<li>榎さん : 最後にちょっとだけ ownCloud + LibreOffice Online のデモ</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第70回 Ruby関西 勉強会で発表しました]]></title>
    <link href="http://blog.n-z.jp/blog/2016-01-09-rubykansai70.html"/>
    <updated>2016-01-09T14:01:12+09:00</updated>
    <id>http://blog.n-z.jp/blog/rubykansai70</id>
    <content type="html"><![CDATA[<p><a href="https://rubykansai.doorkeeper.jp/events/36351" title="第70回 Ruby関西 勉強会">第70回 Ruby関西 勉強会</a>
で発表してきました。</p>

<!--more-->


<p>以下、そのメモです。</p>

<h2>Ruby 2.3.0 の新機能について</h2>

<p>この内容で発表しました。</p>

<iframe src="http://slide.rabbit-shocker.org/authors/znz/rubykansai70-ruby230/viewer.html"
        width="640" height="524"
        frameborder="0"
        marginwidth="0"
        marginheight="0"
        scrolling="no"
        style="border: 1px solid #ccc; border-width: 1px 1px 0; margin-bottom: 5px"
        allowfullscreen> </iframe>


<div style="margin-bottom: 5px">
  <a href="http://slide.rabbit-shocker.org/authors/znz/rubykansai70-ruby230/" title="Ruby 2.3.0 の新機能について">Ruby 2.3.0 の新機能について</a>
</div>


<h2>10 分休憩</h2>

<h2>gems on Rails</h2>

<ul>
<li>What is a gem?</li>
<li>gem を探す</li>
<li><a href="https://rubygems.org/">https://rubygems.org/</a></li>
<li><a href="https://www.ruby-toolbox.com/">https://www.ruby-toolbox.com/</a></li>
<li>gem を選ぶ</li>
<li>ダウンロード数とか</li>
<li>コードの相性</li>
<li>作者やロゴも基準にしている</li>
<li>gem を使う</li>
<li>Github の README, Wiki を読む、から始まる</li>
<li>個人的に良く使う gems on Rails</li>
<li>認証・権限周辺 : devise, cancancan, pundit</li>
<li>入出力ドキュメント : prawn, pdfkit, rubyzip, axlsx, docx_templater</li>
<li>(docx_templater は知らなかった)</li>
<li>その他 : kaminari, carrierwave, rails-assets, whenever, simplecov</li>
<li>みなさんのお気に入りの gems</li>
<li>有名な rails 製アプリ (GitLab とか) の Gemfile を参考にする</li>
<li><a href="https://github.com/gitlabhq/gitlabhq/blob/master/Gemfile">https://github.com/gitlabhq/gitlabhq/blob/master/Gemfile</a></li>
<li><a href="http://awesome-ruby.com/">http://awesome-ruby.com/</a></li>
<li><a href="http://www.thinreports.org/">http://www.thinreports.org/</a></li>
</ul>


<h2>10 分休憩</h2>

<h2>Rails Engine のすすめ</h2>

<ul>
<li>Engine の例 : turbolinks, devise</li>
<li>サービス指向: Rails</li>
<li>コンポーネント指向 : Rails Engine, React and Redux</li>
<li>オブジェクト指向 : Ruby</li>
<li>デモ</li>
<li><code>mount なんとか::Engine =&gt; "/api"</code> みたいにして使う</li>
<li>Engine のメリット・デメリット</li>
<li>たとえば <code>/api</code> を <code>/v1/api</code> にするのも <code>mount</code> のところを変えるだけ</li>
<li>Rails 5.0 ではデフォルトでは <code>jbuilder</code> は使わなくなって <code>render json: @products</code> で <code>to_json</code> を呼び出すだけになっている。</li>
<li>React Redux のクライアントは Electron でネイティブにも対応できる</li>
<li>サンプルアプリは <a href="https://github.com/dddrb/bouquet">https://github.com/dddrb/bouquet</a></li>
</ul>


<h2>5 分ぐらい休憩</h2>

<h2>Ruby 初級者向けレッスン (ブロック)</h2>

<ul>
<li><a href="https://github.com/higaki/learn_ruby_kansai_70">https://github.com/higaki/learn_ruby_kansai_70</a></li>
</ul>


<h2>クロージング</h2>

<ul>
<li><a href="https://rubyassociation.doorkeeper.jp/events/35687" title="[大阪] Rubyビジネスセミナー loTのエコシステムとワークライフバランス">大阪 Rubyビジネスセミナー loTのエコシステムとワークライフバランス</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[gem install rabbit に失敗したのを解決した]]></title>
    <link href="http://blog.n-z.jp/blog/2015-12-28-gem-install-rabbit.html"/>
    <updated>2015-12-28T18:48:40+09:00</updated>
    <id>http://blog.n-z.jp/blog/gem-install-rabbit</id>
    <content type="html"><![CDATA[<p>Mac OS X 上で <code>gem install rabbit</code> でひっかかったので、その解決方法のメモです。</p>

<!--more-->


<h2>gobject-introspection</h2>

<p><a href="http://www.cozmixng.org/~w3ml/index.rb/rabbit-shocker/msg/1283">http://www.cozmixng.org/~w3ml/index.rb/rabbit-shocker/msg/1283</a>
( <a href="https://gist.github.com/znz/59ae1b8785a640916ce9">https://gist.github.com/znz/59ae1b8785a640916ce9</a> )
のようなエラーで gobject-introspection-3.0.7 のインストールで失敗したので、
ML で教えてもらったように
<code>PKG_CONFIG_PATH=/usr/local/opt/libffi/lib/pkgconfig gem install rabbit</code>
でインストールすると進むようになりました。</p>

<h2>poppler</h2>

<p>次に poppler gem (3.0.7) のエラーでひっかかったのですが ( <a href="http://www.cozmixng.org/~w3ml/index.rb/rabbit-shocker/msg/1285">http://www.cozmixng.org/~w3ml/index.rb/rabbit-shocker/msg/1285</a> )、
<a href="https://bugs.launchpad.net/poppler-python/+bug/1528489">https://bugs.launchpad.net/poppler-python/+bug/1528489</a> で同じエラーが python binding で報告されていて、原因は poppler-0.39.0 での変更ということだったので、
poppler-0.38.0 に戻すことにした。</p>

<p>まず homebrew のディレクトリに移動して <code>Formula/poppler.rb</code> のログをみて poppler 0.38.0 に戻せる commit hash を調べて checkout して、インストールし直して、 poppler は 0.38.0 で止めておきました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd /usr/local
</span><span class='line'>git log Library/Formula/poppler.rb
</span><span class='line'>git checkout 6f7b9d57b25451e811e8901c560d17abd7a464f9
</span><span class='line'>brew reinstall poppler
</span><span class='line'>git checkout master
</span><span class='line'>brew pin poppler</span></code></pre></td></tr></table></div></figure>


<p>問題が解決したら <code>brew unpin poppler</code> でまた最新に戻せます。</p>

<p>ruby-gnome2 の方でも <a href="https://github.com/ruby-gnome2/ruby-gnome2/commit/3dda85661515d71101f1028dc7d68d4e53de45b1">https://github.com/ruby-gnome2/ruby-gnome2/commit/3dda85661515d71101f1028dc7d68d4e53de45b1</a> でなおっているので、
poppler gem の新しいバージョンがリリースされたら解決しそうです。</p>

<h2>成功</h2>

<p>poppler をダウングレードして <code>PKG_CONFIG_PATH=/usr/local/opt/libffi/lib/pkgconfig gem install rabbit</code> で rabbit のインストールは成功しました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[12月27日 型システム入門読書会　第2回(兵庫県)に参加しました]]></title>
    <link href="http://blog.n-z.jp/blog/2015-12-27-amagasakirb.html"/>
    <updated>2015-12-27T13:06:28+09:00</updated>
    <id>http://blog.n-z.jp/blog/amagasakirb</id>
    <content type="html"><![CDATA[<p><a href="http://kokucheese.com/event/index/362134/" title="12月27日 型システム入門読書会　第2回(兵庫県)">12月27日 型システム入門読書会　第2回(兵庫県)</a>
に参加しました。
今回は第 8 章から第 14 章でした。</p>

<!--more-->




<div style="float:right">
<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=znz-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=4274069117" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>
</div>


<p>以下、今回のメモです。</p>

<ul>
<li>(前回参加していない) 初参加の人の方が多かった</li>
<li>8.3 安全性よりも健全性という方がよく使うという話</li>
<li>p.83 の下の方から p.84 にかけてがわかりにくい話</li>
<li>λ の右下に → という表記が珍しいという話</li>
<li><a href="https://ja.wikipedia.org/wiki/2018%E5%B9%B4%E5%95%8F%E9%A1%8C" title="2018年問題">2018年問題</a>の話</li>
<li>OCaml の let rec と F# の話</li>
<li>p.92 脱糖衣 という用語が珍しいという話</li>
<li>p.93 (例えば Java では、設計により、すべての型が短縮名で表される。第 19 章参照)</li>
<li>p.113 正しく型付けされたプログラムの評価は有限ステップで停止することが保証されている</li>
<li>関数の型の話らしい</li>
<li>13?15?章を読んでから12章を読んだ方が良いかもしれないという話</li>
<li>ノート PC で Linux を使った時の消費電力の話</li>
<li><a href="http://science.srad.jp/story/15/12/08/0552206/">バナナの病気</a>の話</li>
<li>代入の返り値が unit の利点欠点の話</li>
<li>swift は unit らしい</li>
<li>機械学習の話</li>
<li>swift は型推論に時間がかかるとコンパイルエラーになるという話</li>
<li>swift は言語としては良い言語という話 (クラスライブラリが負の遺産という話)</li>
<li>swift の Optional の話</li>
<li>教育に使う言語の話</li>
<li><a href="https://ja.wikipedia.org/wiki/LabVIEW" title="LabVIEW">LabVIEW</a> の話</li>
<li>レゴ マインドストーム の話</li>
<li>演習問題の答えが付いている話</li>
<li>訳語集など付録が充実している話</li>
<li>次回は 2/7(日) 予定</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RubyKaigi 2015 の 3 日目に参加しました]]></title>
    <link href="http://blog.n-z.jp/blog/2015-12-13-rubykaigi-2015.html"/>
    <updated>2015-12-13T10:22:18+09:00</updated>
    <id>http://blog.n-z.jp/blog/rubykaigi-2015</id>
    <content type="html"><![CDATA[<p><a href="http://rubykaigi.org/2015" title="RubyKaigi 2015">RubyKaigi 2015</a> の 3 日目に参加したので、そのメモです。</p>

<!--more-->


<h2>Ruby Committers vs the World</h2>

<ul>
<li>matz が本日は来ていないので、司会が個人的に matz に質問していた話</li>
<li>Soft Typing の進捗どうですか</li>
<li>近年 <code>RUBY_VERSION</code> の bump しかコミットがないですがどうですか</li>
<li>The commits of the Year (注目のコミット)</li>
<li>check incompatible libruby (r50412)[<a href="http://svn.ruby-lang.org/cgi-bin/viewvc.cgi?view=revision&amp;revision=50412">http://svn.ruby-lang.org/cgi-bin/viewvc.cgi?view=revision&amp;revision=50412</a>]</li>
<li>rvm がインストール済みの gem を引き連れて ruby のバージョンをあげる機能 (migrate) があるが、それが問題を引き起こすので shared library の gem を入れ直さないといけない</li>
<li>rdoc/rubygems backports (hsbt)</li>
<li>コミットログにダメ出し</li>
<li><code>explicit_bzero(3)</code> (kosaki)</li>
<li>何かあった時に情報を盗みにくくするためのゼロクリアが最適化で消されることがある</li>
<li>最適化で消されないゼロクリア</li>
<li>code size diet (normal)</li>
<li>自分で普通という人は普通じゃない</li>
<li>optimization of <code>newobj_of()</code> (Kazuho Oku さん) <a href="http://svn.ruby-lang.org/cgi-bin/viewvc.cgi?view=revision&amp;revision=52072">r52072</a></li>
<li>frozen string literal の件で炎上した影響</li>
<li><a href="http://blog.kazuhooku.com/2015/10/ruby.html" title="雑なツイートをしてしまったばかりにrubyを高速化するはめになった俺たちは！ ">雑なツイートをしてしまったばかりにrubyを高速化するはめになった俺たちは！ </a></li>
<li><a href="https://twitter.com/kazuho/status/675858887803727872">https://twitter.com/kazuho/status/675858887803727872</a></li>
<li>The new committers</li>
<li>odaira さん</li>
<li>AIX, z/Linux など IBM 関連</li>
<li>sho-h さん</li>
<li>rdoc とるりまの質を高めたい</li>
<li>gogotanaka さん</li>
<li>cmath.rb のメンテナ</li>
<li>yuki24 さん</li>
<li><code>did_you_mean</code> gem</li>
<li>sonots さん</li>
<li>logger のメンテナを nahi さんから引き継いだ</li>
<li>yui-knk さん</li>
<li>Rails のテストで壊れた時に trunk での変更が原因だったら、足りないテストを足したり直したり</li>
<li>AMA (Ask Me Anything)</li>
<li><a href="https://twitter.com/Re_Shia/status/675837047525871616">rubyにコントリビュートしたいと思う人に勉強しておくといいよ、と思うものを一つだけあげるとしたら何でしょうか！</a></li>
<li>hsbt さんの発表資料を見る</li>
<li>akr さんの本を参考にする <iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=znz-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=4774178020" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe></li>
<li><a href="https://twitter.com/frsyuki/status/675845609492889600">Python使えって言われるんですがどうしたらいいですか？</a></li>
<li><a href="https://twitter.com/yancya/status/675845804599324675">今後、数値計算分野で Python を食える日が来るでしょうか</a></li>
<li>Python を使って欲しいものを Ruby に持ってくる活動を続けていく</li>
<li><a href="https://twitter.com/tagomoris/status/675848535019917314">Matz以外のコミッタが並行・並列性の提供にどう考えているか聞きたいです!</a></li>
<li><a href="http://togetter.com/li/912075" title="怒り駆動開発に炎上駆動開発！コミッターが語るRubyの1年と未来。Ruby Committers vs the World #rubykaigi #rubykaigiA - Togetterまとめ">怒り駆動開発に炎上駆動開発！コミッターが語るRubyの1年と未来。Ruby Committers vs the World #rubykaigi #rubykaigiA - Togetterまとめ</a></li>
</ul>


<h2>Writing web application in Ruby</h2>

<ul>
<li>Ubiregi</li>
<li>React.js</li>
<li>gohra <a href="https://github.com/youchan/gohra">https://github.com/youchan/gohra</a></li>
<li>Hyalite <a href="https://github.com/youchan/hyalite">https://github.com/youchan/hyalite</a></li>
<li>Opal</li>
<li>Symbol がなくて String と同じ扱い</li>
<li><code>Kernel#proc</code> の引数なしが使えないので、引数リストに <code>&amp;block</code> をつけて受け取る必要がある</li>
<li>それ以外は Ruby として問題なくかけた</li>
<li>React.js と Virtual DOM</li>
<li>opal-browser</li>
<li>JSX
-<code>Hyalite::Component::ShortHand</code></li>
<li>Example: TodoMVC</li>
<li>このスライド自体も Hyalite のサンプル (twitter ではここまで rabbit だと思っていた人が多数)</li>
<li>TodoMVC の例の説明</li>
<li>Ruby-ish implementation</li>
<li>isomorphic</li>
<li>スライド: <a href="http://rubykaigi.youchan.org/">http://rubykaigi.youchan.org/</a></li>
<li><a href="http://togetter.com/li/912112" title="RubyでWebアプリ!? ReactjsぽいことができるHyaliteを使えばMatzが追いかけてくるスライドもすぐ作れるよ #rubykaigi #rubykaigiB - Togetterまとめ">RubyでWebアプリ!? ReactjsぽいことができるHyaliteを使えばMatzが追いかけてくるスライドもすぐ作れるよ #rubykaigi #rubykaigiB - Togetterまとめ</a></li>
</ul>


<h2>Lunch on your own</h2>

<p>今日も築地の方に行っていました。</p>

<h2>Refinements - the Worst Feature You Ever Loved</h2>

<ul>
<li>monkey patch の例</li>
<li>refinements の例</li>
<li>module の中で</li>
<li>top level で</li>
<li>eval の中で</li>
<li>security risks</li>
<li>performance issues</li>
<li>confusing corner case</li>
<li>dynamically scoped refinements の利点と欠点</li>
<li>refinements today</li>
<li>現状は lexical scope</li>
<li>the three use cases again</li>
<li>refinements today の欠点と利点</li>
<li>a deep problem</li>
<li><a href="http://togetter.com/li/912136" title="Ruby2.0で導入されたRefinementsという機能のメリットとリスクについて #rubykaigi #rubykaigiB - Togetterまとめ">Ruby2.0で導入されたRefinementsという機能のメリットとリスクについて #rubykaigi #rubykaigiB - Togetterまとめ</a></li>
</ul>


<h2>Discussion on Thread between version 1.8.6 and 2.2.3</h2>

<ul>
<li><a href="https://asakusarb.doorkeeper.jp/events/36106" title="Asakusa.rb meetup after RubyKaigi 2015">Asakusa.rb meetup after RubyKaigi 2015</a></li>
<li><a href="https://jishin.net/">https://jishin.net/</a></li>
<li>100スレッド*100プロセス</li>
<li><code>Thread#status</code></li>
<li>Cases of threads got stuck</li>
<li>Case 1</li>
<li>2.2.3 の方が CPU usage は増えていた</li>
<li>実行回数は変わっていなかった</li>
<li>Case 2</li>
<li>例外のメモリ使用量は 2.2.3 で減っていた</li>
<li>timeout で例外処理があると Case 1 よりメモリ使用量が多い</li>
<li>conclusion: (thread is) too complicated to understand</li>
<li>質疑応答</li>
<li>マルチスレッドは IO 多重化などを想定していて、処理が回っているものを多重化しているものはあまり想定していなかったという話など</li>
<li><a href="http://togetter.com/li/912153" title="スレッドをいっぱい立ててみた時のお話。10000スレッドでRubyはどうなるか？ #rubykaigi #rubykaigiB - Togetterまとめ">スレッドをいっぱい立ててみた時のお話。10000スレッドでRubyはどうなるか？ #rubykaigi #rubykaigiB - Togetterまとめ</a></li>
</ul>


<h2>Plugin-based software design with Ruby and RubyGems</h2>

<ul>
<li>plugin の例として Firefox Add-on など</li>
<li>How did I design plugin architecture?</li>
<li>Plugin Architecture Design Patterns</li>
<li>traditional</li>
<li>Dependency Injection</li>
<li>Dependency Injection + Plugin loader</li>
<li>Plugin Architecture of Fluentd</li>
<li>Plugin Architecture of Embulk</li>
<li>embulk の demo</li>
<li>embulk-filter-kuromoji</li>
<li>jar ファイルの頭にシェルスクリプトと bat ファイルを埋め込む話</li>
<li>Pitfalls &amp; Challenges</li>
<li><a href="http://togetter.com/li/912157" title="プラグインベースのソフトウェアとは？開発とテストを容易にするデザインパターン #rubykaigi #rubykaigiA - Togetterまとめ">プラグインベースのソフトウェアとは？開発とテストを容易にするデザインパターン #rubykaigi #rubykaigiA - Togetterまとめ</a></li>
</ul>


<h2>Afternoon Break</h2>

<p>スピーカーやコミッターのサインを集めているボードに書いてきました。
Keynote が A ホールのみなので、この後はずっと A ホールにいることにしました。</p>

<h2>Request and Response</h2>

<ul>
<li>HTTP2</li>
<li>利点</li>
<li>バイナリ</li>
<li>多重化</li>
<li>ヘッダーを圧縮</li>
<li>SSL 使用</li>
<li>サーバープッシュ</li>
<li>Google Chrome だと chrome://net-internals/#spdy で確認できる</li>
<li>Firefox は x-firefox-spdy ヘッダが付いている</li>
<li>Rack</li>
<li>Adapter pattern で依存の爆発を解決した</li>
<li>Rack Middleware</li>
<li>Rails アプリでの例</li>
<li>Web Server parses the Request</li>
<li><code>Rails::Application</code> を継承した YourApp</li>
<li><code>Rack::SendFile</code>, <code>ActionDispatch::Static</code>, &hellip;, <code>Router</code></li>
<li>Rack 山</li>
<li>長すぎるし複雑</li>
<li>Rack API の問題</li>
<li>ストリーム</li>
<li>HTTP2 のサーバーの例</li>
<li>質疑応答</li>
<li><a href="https://github.com/tenderlove/ds9">https://github.com/tenderlove/ds9</a> はなぜ ds9 という名前なのか</li>
<li>スタートレック</li>
<li>nghttp2 の ng は next generation</li>
<li>(スタートレックをよく知らないのでよくわからず)</li>
<li>どのくらい発表練習した?</li>
<li>翻訳 2 週間、練習 5 時間</li>
<li>サーバープッシュの設定はどこに?</li>
<li>view helper で自動</li>
<li>ソースコードを読んだら IPv6 に対応していないように見えたが IPv6 対応の方針は? <a href="https://twitter.com/takano32/status/675942535211171841">https://twitter.com/takano32/status/675942535211171841</a></li>
<li>わからない</li>
<li>パッチを送ってください</li>
<li>Rack 3 はたぶん API が変わる</li>
</ul>


<h2>Actor, Thread and me</h2>

<ul>
<li>アーロンの後はやりにくい <a href="https://twitter.com/m_seki/status/675938103735902209">https://twitter.com/m_seki/status/675938103735902209</a></li>
<li>dRuby 本 10 周年</li>
<li>agenda の Really? が重要</li>
<li>アクターモデル</li>
<li>Ether (エーテル) : メッセージを伝搬する何か</li>
<li>Send と Receive だけで考える</li>
<li><code>oso_matz_RPC</code></li>
<li><code>choro_matz</code></li>
<li>後でやる作戦は誰も止まっていないのにシステムが止まってしまうことがある</li>
<li><code>jushi_matz</code></li>
<li>おすすめ</li>
<li>システム全体はアクターモデルで考える</li>
<li>アクターはマルチスレッドで動く</li>
<li>Fiber を使ってみるために bartender というのを作った <a href="https://github.com/seki/bartender">https://github.com/seki/bartender</a></li>
<li>全員が Queue を持っているというのを書いてみた</li>
<li>使い道がなかった</li>
<li>中央集権型 <code>Rinda::TupleSpace</code> を使う</li>
<li><code>todo_matz</code></li>
<li>アクターはより良いスレッドではない感が共有できたはず</li>
<li>スポンサーが大事</li>
<li>質疑応答</li>
<li>スレッドの今後について</li>
<li>現状で満足している</li>
<li>1.8 の方が良かった</li>
<li>上司に 3 倍速くしろといわれてるんですが</li>
<li>IO 待ちばっかりなら今のスレッドで良いのではないか</li>
<li>unicorn (プロセス) から puma (マルチスレッド) に変更したが、リソース的にも速度的にも改善しなかった</li>
<li>Fiber の使った例のところでもっと良い書き方があるという話</li>
</ul>


<h2>スポンサーセッション (Speee)</h2>

<ul>
<li>意外と知っている人が多い</li>
<li>いろんなことをやっているので紹介するのは難しい</li>
<li>IT 企業対抗 Splatoon 大会</li>
<li>Speee ラウンジ</li>
</ul>


<h2>Ruby: 2020 - how do we get to Ruby3x3 (Keynote)</h2>

<ul>
<li>CRuby には JIT が必要</li>
<li>Part 1: Performance</li>
<li>Parallelism</li>
<li>Part 2. Survey of the past</li>
<li>2a. SELF <a href="https://ja.wikipedia.org/wiki/Self">https://ja.wikipedia.org/wiki/Self</a></li>
<li>2b. Strongtalk <a href="https://en.wikipedia.org/wiki/Strongtalk">https://en.wikipedia.org/wiki/Strongtalk</a></li>
<li>2c. V8</li>
<li>JIT Compiler Types</li>
<li>Tracing JITs</li>
<li>Method JITs</li>
<li>Partial Evaluation</li>
<li>Part 4: Comparison</li>
<li>Part 5: A Proposal</li>
<li><code>[1,2].min</code> を最適化する話</li>
<li>MIPASWAP = Matz is Pragmatic And So We Are Pragmatic ((スライドでは And が抜けていたらしい)[<a href="https://twitter.com/s_osa_/status/675967202814779392">https://twitter.com/s_osa_/status/675967202814779392</a>])</li>
<li>質疑応答</li>
</ul>


<h2>Closing</h2>

<ul>
<li>819 Rubyists! <a href="https://twitter.com/nhance/status/675971298816823296">https://twitter.com/nhance/status/675971298816823296</a></li>
<li>すし詰め <a href="https://twitter.com/yoshiaki_0614/status/675974594025648128">https://twitter.com/yoshiaki_0614/status/675974594025648128</a></li>
<li>RubyKaigi 2016</li>
<li>Sep. 8th .. 10th</li>
<li>京都国際会館</li>
<li>価格は未定だが今年よりは安くしたい</li>
</ul>


<h2>全体の感想</h2>

<ul>
<li>英語がさっぱりだった。</li>
<li>1 日目の寿司チケットを使い損ねた。</li>
<li>本を買うかどうか迷っていたら、買いたかった本はすでに売り切れていて、買わずに済んだ。(荷物が重くならずに済んだ。)</li>
<li>2 日目の会場 Wi-Fi の調子が悪かった。</li>
<li>3 日目も調子が悪いタイミングがあったが、何度かつなぎ直していたら治った。</li>
<li><a href="http://blog.rubykaigi.org/">http://blog.rubykaigi.org/</a> が更新されていなかった。</li>
<li>天気が微妙だった。</li>
<li>久しぶりの人にいろいろ会えた。</li>
<li>みられなかった発表は <a href="http://togetter.com/id/tg__dev">http://togetter.com/id/tg__dev</a> の togetter を参考にスライドを読むと良さそう。</li>
<li>宿が歩いて移動できる範囲で良かった。(会場まで徒歩 20 分ぐらいの場所だった。)</li>
<li>ちょっと遅れ気味の日もあったけど、セッションの開始には遅刻せずに毎日朝から参加できた。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RubyKaigi 2015 の 2 日目に参加しました]]></title>
    <link href="http://blog.n-z.jp/blog/2015-12-12-rubykaigi-2015.html"/>
    <updated>2015-12-12T09:46:59+09:00</updated>
    <id>http://blog.n-z.jp/blog/rubykaigi-2015</id>
    <content type="html"><![CDATA[<p><a href="http://rubykaigi.org/2015" title="RubyKaigi 2015">RubyKaigi 2015</a> の 2 日目に参加したので、そのメモです。</p>

<!--more-->


<h2>スポンサーセッション (Cookpad)</h2>

<h2>Keynote</h2>

<ul>
<li><a href="http://rubykaigi.org/2015/presentations/kosaki" title="Keynote - RubyKaigi 2015">Keynote - RubyKaigi 2015</a></li>
<li>小崎さんの Keynote</li>
<li>Linuxport maintainer</li>
<li><a href="https://bugs.ruby-lang.org/issues/3543" title="Bug #3543">Bug #3543</a> など</li>
<li>Patch for open source is like a Tetris</li>
<li>The Debugging Big 3</li>
<li>Ftrace</li>
<li>Perf tools</li>
<li>SystemTap</li>
<li><a href="https://twitter.com/t_wada/status/675484076191666176">https://twitter.com/t_wada/status/675484076191666176</a></li>
<li>発表資料を作っているとバグが見つかる話</li>
<li>probe 一覧はソースの <a href="https://github.com/ruby/ruby/blob/trunk/probes.d">probes.d</a> に書いてある</li>
<li><a href="http://togetter.com/li/911612" title="テトリス・デバッガ・奇妙なバグ！ LinuxカーネルとRubyコミュニティを行き交う小崎資広による #rubykaigi 2015 2日目Keynote - Togetterまとめ">テトリス・デバッガ・奇妙なバグ！ LinuxカーネルとRubyコミュニティを行き交う小崎資広による #rubykaigi 2015 2日目Keynote - Togetterまとめ</a></li>
</ul>


<h2>The history of testing framework in Ruby</h2>

<ul>
<li>テスティングフレームワークの歴史</li>
<li><code>/\Atest.+unit\z/i</code> が標準添付されたのは Ruby 1.8 から</li>
<li><code>/\Atest.+unit\z/i</code> とは <code>Test::Unit</code> 互換 API が重要</li>
<li>テストのグループ化</li>
<li>テストの共有</li>
<li>failure 時の表示の違い</li>
<li>assert の書き方の違い</li>
<li>質疑応答</li>
<li><code>yield</code> 付きの <code>setup</code> について</li>
<li><a href="http://slide.rabbit-shocker.org/authors/kou/rubykaigi-2015/">http://slide.rabbit-shocker.org/authors/kou/rubykaigi-2015/</a></li>
</ul>


<h2>Running Ruby on Solaris</h2>

<ul>
<li>自己紹介</li>
<li>BioRuby</li>
<li>Solaris とは</li>
<li>古いバイナリがそのまま動くというデモ</li>
<li>SPARC</li>
<li>Big-endian</li>
<li>Solaris</li>
<li>ビルドに必要なツールの話</li>
<li>PATH が重要 (make がたくさんとか)</li>
<li>コンパイラもいろいろ</li>
<li>いろんな標準に準拠している</li>
<li>64 ビット OS になってもコンパイラのデフォルトは 32 ビットのまま</li>
<li>ライブラリの話</li>
<li><code>make V=1</code> でコンパイルオプションなども表示</li>
<li>バグ報告の話</li>
<li>ファイル名衝突の例: <a href="https://bugs.ruby-lang.org/issues/7287" title="Bug #7287">Bug #7287</a></li>
<li>word alignment のバグの例: <a href="https://bugs.ruby-lang.org/issues/5469" title="Bug #5469">Bug #5469</a></li>
<li><a href="https://bugs.ruby-lang.org/issues/10646" title="Bug #10646">Bug #10646</a></li>
<li><a href="https://bugs.ruby-lang.org/issues/11277" title="Bug #11277">Bug #11277</a></li>
<li>などなど</li>
<li><a href="http://www.slideshare.net/ngotogenome/running-ruby-on-solaris-rubykaigi-2015-12dec2015-56073698">http://www.slideshare.net/ngotogenome/running-ruby-on-solaris-rubykaigi-2015-12dec2015-56073698</a></li>
<li><a href="http://togetter.com/li/911651" title="「Solaris上で動くRuby 1.2…」SolarisでRubyを動かすヒント #rubykaigi 2015 #rubykaigiB - Togetterまとめ">「Solaris上で動くRuby 1.2…」SolarisでRubyを動かすヒント #rubykaigi 2015 #rubykaigiB - Togetterまとめ</a></li>
</ul>


<h2>Lunch on your own</h2>

<p>また築地の方に行って、今度は間に合うように戻ってこれました。</p>

<h2>Data Analytics Service Company and Its Ruby Usage</h2>

<ul>
<li>英語で自己紹介</li>
<li><a href="https://www.treasuredata.com/">https://www.treasuredata.com/</a></li>
<li>fluentd</li>
<li>embulk</li>
<li>ステッカーが人気</li>
<li>Ruby や Java を使っているらしい</li>
<li>OSS 重視</li>
<li><a href="https://github.com/treasure-data/perfectsched">https://github.com/treasure-data/perfectsched</a></li>
<li>At-least-once semantics</li>
<li><a href="https://github.com/treasure-data/perfectqueue">https://github.com/treasure-data/perfectqueue</a></li>
<li>Done is better than perfect.</li>
<li><code>&lt;&lt;~</code> があるので Ruby 2.3 が使いたい話</li>
<li>質疑応答</li>
<li>PerfectQueue でスループットが問題になった時にどうするのかという質問</li>
</ul>


<h2>Ruby for one day game programming camp for beginners</h2>

<ul>
<li>自己紹介</li>
<li>KMC の紹介</li>
<li>programming camp の紹介</li>
<li>未経験から 8,9 割が動くものを作れる</li>
<li>続けてゲームを作ろうとする人はだいたい Unity か C#</li>
<li>重力は難しい</li>
<li>シューティングゲームが簡単</li>
</ul>


<h2>Ruby meets Go</h2>

<ul>
<li>cgo</li>
<li>ruby から C の関数を呼び出すには ffi gem を使う方法と標準添付の fiddle を使う方法がある</li>
<li><a href="https://speakerdeck.com/naruse/writing-extension-libraries-in-go">https://speakerdeck.com/naruse/writing-extension-libraries-in-go</a></li>
<li>マクロや wrapper 関数の話</li>
<li>文字列のコピーが発生するのを避ける話</li>
<li><a href="http://qiita.com/mattn/items/176459728ff4f854b165">http://qiita.com/mattn/items/176459728ff4f854b165</a></li>
<li>Ruby での参照を Go にも反映させて GC されないようにする話</li>
<li>Go のコードを含む gem を生成する方法</li>
<li>拡張ライブラリの例 : <a href="https://github.com/mmasaki/memberlist">https://github.com/mmasaki/memberlist</a></li>
<li>質疑応答</li>
<li>extconf.rb のハックを mkmf に入れる気はないのかという話</li>
<li>bundler の雛形生成での対応を考えている</li>
<li><a href="http://www.slideshare.net/td-nttcom/ruby-meets-go">http://www.slideshare.net/td-nttcom/ruby-meets-go</a></li>
</ul>


<h2>Rhebok, High Performance Rack Handler</h2>

<ul>
<li>Mercari</li>
<li>unicorn より速い Rhebok</li>
<li>Perl の Gazelle の Ruby 版</li>
<li>Gazelle や Rhebok はツノが 2 本の動物</li>
<li>unicorn が 1 本だから</li>
<li>WebSocket や Streaming には向かない</li>
<li>reverse proxy なしで直接公開にも向かない</li>
<li>専用コマンドはないので <code>rackup -s Rhebok ...</code> で起動</li>
<li>Hot Deploy</li>
<li><code>start_server</code> コマンドを wrapper として使う</li>
<li>Benchmark</li>
<li>ISUCON 4 の問題でもベンチマークしても unicorn より速い</li>
<li>rack の説明</li>
<li>Rack Handler の簡易実装</li>
<li>その問題点と解決方法</li>
<li><a href="https://github.com/kazeburo/prefork_engine">https://github.com/kazeburo/prefork_engine</a></li>
<li>IO timeout</li>
<li>unicorn はタイムアウトで SIGKILL している (乱暴)</li>
<li>Parse HTTP request</li>
<li><code>PicoHTTPParser</code> を使った</li>
<li>TCP optimization</li>
<li><code>TCP_NODELAY</code> disable it</li>
<li>Nagle&rsquo;s algorithm</li>
<li><code>writev(2)</code></li>
<li><a href="http://www.slideshare.net/kazeburo/rhebok-high-performance-rack-handker-rubykaigi-2015">http://www.slideshare.net/kazeburo/rhebok-high-performance-rack-handker-rubykaigi-2015</a></li>
</ul>


<h2>Pragmatic Testing of Ruby Core</h2>

<ul>
<li>自己紹介</li>
<li>GMO Pepabo の紹介</li>
<li><a href="https://github.com/yaocloud">https://github.com/yaocloud</a></li>
<li>ruby 2.3.0-preview がビルドできない問題の原因が判明したという業務連絡</li>
<li>オープンソースへの貢献の話</li>
<li>Documentation is hard</li>
<li>Testing and Running are easy</li>
<li>テスト実行の tips</li>
<li>.travis.yml を見る</li>
<li>ruby の場合は .travis.yml が複雑なので簡易な手順を紹介</li>
<li>test 関係のターゲットが common.mk にいろいろ</li>
<li><code>sample/test.rb</code></li>
<li><code>make btest-ruby</code></li>
<li><code>bootstraptest/</code> を実行</li>
<li><code>make test-all</code></li>
<li><code>test/</code> を実行</li>
<li><code>make test-all TESTS=logger</code></li>
<li><code>make test-all TESTS=-j4</code></li>
<li><code>test/-ext-/</code> は <code>ext/-test-/</code> を使って C API をテストしている</li>
<li><code>make check</code> はだいたい全部を実行するもの</li>
<li><code>test-testframework</code> は fork した minitest + test/unit をテストしている</li>
<li>rubygems と rdoc は upstream がある</li>
<li>rubygems と rdoc はまだ Ruby 1.8 をサポートしている</li>
<li><code>test/lib/envutil.rb</code></li>
<li>rubyspec</li>
<li><a href="http://rubini.us/2014/12/31/matz-s-ruby-developers-don-t-use-rubyspec/">http://rubini.us/2014/12/31/matz-s-ruby-developers-don-t-use-rubyspec/</a></li>
<li>rubyspec は仕様ではない</li>
<li><code>make update-rubyspec</code></li>
<li><code>make test-rubyspec</code></li>
<li><a href="https://github.com/ruby/rubyspec">https://github.com/ruby/rubyspec</a> で生きている</li>
<li>rubyci and chkbuild</li>
<li><a href="http://rubyci.org/">http://rubyci.org/</a></li>
<li><a href="https://github.com/akr/chkbuild">https://github.com/akr/chkbuild</a></li>
<li><code>make run</code></li>
<li><code>make bisect</code></li>
<li>coverage</li>
</ul>


<h2>スポンサーセッション (pixiv)</h2>

<h2>Lightning Talks</h2>

<ul>
<li>Dora Brain</li>
</ul>


<h3>Update Early, Update Often</h3>

<ul>
<li>deppbot</li>
<li><code>bundle lock --update</code></li>
</ul>


<h2>Automating View Internationalization in Ruby on Rails</h2>

<ul>
<li><code>h</code> が自動化されたように <code>t</code> や <code>l</code> も自動化した話</li>
<li><code>.new</code> のような例がうまくいかない</li>
<li>gem はまだ公開されていない</li>
</ul>


<h2>A new testing framework Rgot</h2>

<ul>
<li>Ruby + Golang Testing</li>
<li>Diversity</li>
<li><a href="https://github.com/ksss/rgot">https://github.com/ksss/rgot</a></li>
</ul>


<h2>Building an Unbreakable MRI-based Embedded Computer Appliance</h2>

<ul>
<li>3Bees</li>
<li>Make filesystem read-only</li>
<li>JeOS</li>
</ul>


<h2>Do you trust that certificate?</h2>

<ul>
<li>Web アプリが外部サイトにアクセスする時の話</li>
<li>ルート CA の更新の話</li>
</ul>


<h2>How I debugged debugger</h2>

<ul>
<li>byebug のパフォーマンスバグを修正した話</li>
<li><a href="http://techlife.cookpad.com/entry/2015/12/09/163746" title="gdbを使ったrubyのデバッグ">gdbを使ったrubyのデバッグ</a></li>
</ul>


<h2>Padrino Travel Guide</h2>

<ul>
<li>Padrino の 2 つの見方</li>
<li>full-stack Web Application Framework</li>
<li>Sinatra Plugin</li>
<li>使用例</li>
<li>dwango.jp</li>
<li>animelo mix</li>
<li>ssnote.net</li>
</ul>


<h2>What I learned by implementing a Ruby VM in Erlang</h2>

<ul>
<li>concurrent</li>
<li><a href="https://github.com/johnlinvc/erruby">https://github.com/johnlinvc/erruby</a></li>
</ul>


<h2>Rubygemsで作るお手軽データ分析基盤 〜あるいは 私はどうやって他人の褌で相撲を取ったか〜</h2>

<ul>
<li><a href="https://github.com/esminc/adhoq">https://github.com/esminc/adhoq</a></li>
<li>pull request を送る時に気をつけるべきこと</li>
<li><a href="https://github.com/aamine/activerecord4-redshift-adapter">https://github.com/aamine/activerecord4-redshift-adapter</a></li>
<li><a href="https://github.com/aamine/bricolage">https://github.com/aamine/bricolage</a></li>
</ul>


<h2>Rationalを最適化してみた</h2>

<ul>
<li>How to optimize Rational</li>
<li>Let&rsquo;s read CRuby source code more!</li>
<li><a href="https://github.com/tadd/ruby/commits/ragrant2015development">https://github.com/tadd/ruby/commits/ragrant2015development</a></li>
</ul>


<h2>The Mythical Creatures of Summer of Code</h2>

<ul>
<li>Rails Girls Summer of Code など</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RubyKaigi 2015 の 1 日目に参加しました]]></title>
    <link href="http://blog.n-z.jp/blog/2015-12-11-rubykaigi-2015.html"/>
    <updated>2015-12-11T14:06:46+09:00</updated>
    <id>http://blog.n-z.jp/blog/rubykaigi-2015</id>
    <content type="html"><![CDATA[<p><a href="http://rubykaigi.org/2015" title="RubyKaigi 2015">RubyKaigi 2015</a> の 1 日目に参加したので、そのメモです。</p>

<!--more-->


<h2>Opening &amp; Ruby 2.3 Preview Release</h2>

<p>オープニングの諸注意などと Ruby 2.3.0-preview2 のリリースアナウンスがありました。</p>

<h2>スポンサーセッション (Money Forward)</h2>

<h2>Ruby3 challenges (Keynote)</h2>

<ul>
<li>First timer が半分近い</li>
<li>プログラマの三大美徳</li>
<li>anger や niceness の話</li>
<li>MINASWAN (Matz is nice And so we are nice)</li>
<li>Ruby 2.3.0</li>
<li>Event Driven Programming</li>
<li><code>did_you_mean</code> gem</li>
<li><code>Enumerable#grep_v</code></li>
<li><code>Hash#fetch_values</code></li>
<li>Strict version of <code>Hash#values_at</code></li>
<li><code>Numeric#positive?</code>, <code>negative?</code></li>
<li>Hash comparisons (<code>&lt;=</code>, <code>&lt;</code>, <code>&gt;=</code>, <code>&gt;</code>)</li>
<li>全順序じゃないので <code>&lt;=&gt;</code> はない</li>
<li><code>Hash#to_proc</code></li>
<li><code>Array</code>,<code>Hash</code>,<code>Struct#dig</code></li>
<li>Idented here document <code>&lt;&lt;~</code></li>
<li>インデントが一番浅いところに合わせて削ってくれる</li>
<li>frozen string literal pragma</li>
<li>Safe navigation operator <code>&amp;.</code></li>
<li>Lonely operator</li>
<li>Faster</li>
<li>5-10% faster each year</li>
<li>mruby 1.2</li>
<li><a href="https://github.com/matz/streem">Streem</a></li>
<li>OCaaS = OSS community as a Shark</li>
<li>Make something people want → Make something people need</li>
<li>Secret of Ruby&rsquo;s success</li>
<li>Change is pain</li>
<li>Took 5 or more years to be adapted</li>
<li>Migration bait</li>
<li>concurrency</li>
<li>ピタゴラスイッチプログラミング</li>
<li>Performance</li>
<li>Ruby3x3</li>
<li>Ruby 3 は Ruby 2.0 の 3 倍速くするという目標</li>
<li>heroku</li>
<li>appfolio</li>
<li>Money Forward</li>
<li>IBM J9</li>
<li>Ruby is no longer my language</li>
<li>It&rsquo;s a community effort</li>
</ul>


<h2>Compiling Ruby scripts</h2>

<ul>
<li>昼食に時間がかかったので最後の方しか聞けませんでした。</li>
<li>保存場所は決めていない</li>
<li>ISeq をバイナリ String で返すので好きな場所に保存</li>
<li>ロード時にフックが定義されていれば呼ばれる</li>
<li>サンプルとして 3 種類の保存方法を用意している</li>
<li>experimental として Ruby 2.3 に入っている</li>
</ul>


<h2>Saving people from typos</h2>

<ul>
<li><code>did_you_mean</code> gem の話</li>
<li>Ruby commiter になった</li>
<li><code>kaminari</code> gem のメンテナもしている</li>
<li>Pivotal の紹介</li>
<li><code>git</code> や Google には did you mean がある</li>
<li>ruby には <code>did_you_mean</code> gem</li>
<li>どうやって動いているか</li>
<li>A spell checker</li>
<li>Monkey patches</li>
<li>Spell Checker</li>
<li>Dictionary</li>
<li>制御機構</li>
<li>最適化手法</li>
<li>Mistype Correction</li>
<li>Misspell Correction</li>
<li>Levenshtein Distance</li>
<li>Jaro-Winkler Distance</li>
<li>Jaro Distance + Prefix Bonus</li>
<li><a href="http://git.io/vRdYW">http://git.io/vRdYW</a></li>
<li>実装の説明</li>
<li>質疑応答</li>
<li>necessary と nessecary のような例は Levenshtein Distance だけだと予測ができない</li>
</ul>


<h2>mruby on the minimal embedded resource</h2>

<ul>
<li>デモ</li>
<li>ハードウェアの説明</li>
<li>なぜ mruby を使うのかという話</li>
<li>いろいろなハードウェアの話</li>
</ul>


<h2>Afternoon Break</h2>

<p>スシが今日だけだとアナウンスがあったので、行ってみたらちょうど終わったところでもらえませんでした。</p>

<h2>High Performance Template Engine: Guide to optimize your Ruby code</h2>

<ul>
<li>faml と hamlit がいかにして haml より速くしたのかという話でした。</li>
<li><a href="http://k0kubun.hatenablog.com/entry/2015/12/12/000037" title="#RubyKaigi 2015 でテンプレートエンジンの高速化について話しました - k0kubun's blog">#RubyKaigi 2015 でテンプレートエンジンの高速化について話しました - k0kubun&rsquo;s blog</a></li>
</ul>


<h2>TRICK 2015: The second Transcendental Ruby Imbroglio Contest for RubyKaigi</h2>

<ul>
<li>1 回目は 2013</li>
<li>今回は 2 回目</li>
<li><a href="https://github.com/tric/trick2015">https://github.com/tric/trick2015</a></li>
<li><p>srand は storage</p></li>
<li><p>追加メモ</p></li>
<li><a href="http://d.hatena.ne.jp/ku-ma-me/20151211">http://d.hatena.ne.jp/ku-ma-me/20151211</a></li>
<li><a href="http://monae.github.io/trick2015.html">http://monae.github.io/trick2015.html</a></li>
<li><a href="http://www.garbagecollect.jp/~usa/d/201512b.html#id20151211_P1">http://www.garbagecollect.jp/~usa/d/201512b.html#id20151211_P1</a></li>
<li><a href="http://www.callcc.net/diary/20151212.html">http://www.callcc.net/diary/20151212.html</a></li>
<li><a href="http://www.kmonos.net/wlog/140.html#_2126151211">http://www.kmonos.net/wlog/140.html#_2126151211</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RubyLive ISO イメージを更新した]]></title>
    <link href="http://blog.n-z.jp/blog/2015-10-26-rubylive-builder.html"/>
    <updated>2015-10-26T21:44:33+09:00</updated>
    <id>http://blog.n-z.jp/blog/rubylive-builder</id>
    <content type="html"><![CDATA[<p><a href="http://blog.n-z.jp/blog/2014-07-13-build-rubylive-on-vm.html" title="RubyLiveを仮想環境で作成">RubyLiveを仮想環境で作成</a>したものを更新しました。</p>

<!--more-->


<h2>動作確認環境</h2>

<ul>
<li>VirtualBox 5.0.6</li>
<li>Vagrant 1.7.4</li>
</ul>


<h2>ビルド環境の更新</h2>

<p><code>git clone https://github.com/znz/rubylive-builder</code> で取得していた <code>rubylive-builder</code> 環境の <code>Vagrantfile</code> の <code>config.vm.box</code> を <code>"ffuenf/debian-7.6.0-amd64"</code> から <code>"ffuenf/debian-8.2.0-amd64"</code> に<a href="https://github.com/znz/rubylive-builder/commit/289f2079dad86bde424aa810f0e6b28302607ccb">更新しました</a>。</p>

<h2>ビルド内容の更新</h2>

<h3>ruby のバージョンの更新</h3>

<p><code>config/hooks/10-ruby-rails.chroot</code> でインストールしている ruby を 2.1.4 から 2.2.3 に<a href="https://github.com/znz/rubylive/commit/475e077f9bdb066628415ad602fefdde2608c57e">更新しました</a>。</p>

<h3>壁紙の変更</h3>

<p>壁紙を RubyKaigi 2014 のロゴから関西 Ruby 会議 06 のロゴに<a href="https://github.com/znz/rubylive/commit/f7f4136a39fd1ac4da8121204b941b12eac3e65e">変更しました</a>。</p>

<p>変更しても <code>config/includes.chroot/usr/share/images/desktop-base/rubykaigi2014-mark.svg</code> にダウンロードしたファイルは残ったままで、そのまま ISO イメージを作成しなおすと古い画像も ISO イメージの中に入ってしまうので、手動で削除しておく必要があります。
(<code>rake distclean</code> でも消えません。)</p>

<p>試行錯誤した後には特に <code>config/includes.chroot</code> 以下に不要なファイルが残っていないか注意する必要があります。</p>

<h3>jessie への更新 (失敗)</h3>

<p>ビルド環境を jessie にあげても作成される ISO は wheezy のままだったので、以下の変更で jessie にしようとしたのですが、失敗したので結局 wheezy のままにしました。</p>

<p>変更点は以下の通りです。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>diff --git a/auto/config b/auto/config
</span><span class='line'>index d44fc2d..3dc3665 100755
</span><span class='line'>--- a/auto/config
</span><span class='line'>+++ b/auto/config
</span><span class='line'>@@ -2,6 +2,7 @@
</span><span class='line'>
</span><span class='line'> lb config noauto \
</span><span class='line'>        --architectures "amd64" \
</span><span class='line'>+       --distribution "jessie" \
</span><span class='line'>        --bootloader "grub2" \
</span><span class='line'>        --templates "templates" \
</span><span class='line'>        --bootappend-live "quiet locales=ja_JP.UTF-8 timezone=Asia/Tokyo utc=no keyboard-layouts=jp
</span><span class='line'>diff --git a/config/package-lists/30-japanese.list.chroot b/config/package-lists/30-japanese.list.ch
</span><span class='line'>index 602270e..304d5f7 100644
</span><span class='line'>--- a/config/package-lists/30-japanese.list.chroot
</span><span class='line'>+++ b/config/package-lists/30-japanese.list.chroot
</span><span class='line'>@@ -3,8 +3,8 @@ fbterm
</span><span class='line'> lv
</span><span class='line'> manpages-ja
</span><span class='line'> nkf
</span><span class='line'>-ttf-mona
</span><span class='line'>-ttf-monapo
</span><span class='line'>+fonts-mona
</span><span class='line'>+fonts-monapo
</span><span class='line'> fonts-ipafont-gothic
</span><span class='line'> fonts-ipafont-mincho
</span><span class='line'> fonts-vlgothic
</span><span class='line'>diff --git a/config/package-lists/50-editors.list.chroot b/config/package-lists/50-editors.list.chro
</span><span class='line'>index 8468dec..cb2197a 100644
</span><span class='line'>--- a/config/package-lists/50-editors.list.chroot
</span><span class='line'>+++ b/config/package-lists/50-editors.list.chroot
</span><span class='line'>@@ -1,4 +1,4 @@
</span><span class='line'>-emacs23
</span><span class='line'>+emacs24
</span><span class='line'> vim
</span><span class='line'> vim-gtk
</span><span class='line'> gedit</span></code></pre></td></tr></table></div></figure>


<p>失敗した部分は以下の通りです。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[2015-10-26 13:27:55] lb chroot_live-packages
</span><span class='line'>dpkg: dependency problems prevent removal of systemd:
</span><span class='line'> libpam-systemd:amd64 depends on systemd (= 215-17+deb8u2).
</span><span class='line'>
</span><span class='line'>dpkg: error processing package systemd (--purge):
</span><span class='line'> dependency problems - not removing
</span><span class='line'>dpkg: dependency problems prevent removal of systemd-sysv:
</span><span class='line'> init depends on systemd-sysv | sysvinit-core | upstart; however:
</span><span class='line'>  Package systemd-sysv is to be removed.
</span><span class='line'>  Package sysvinit-core is not installed.
</span><span class='line'>  Package upstart is not installed.
</span><span class='line'> libpam-systemd:amd64 depends on systemd-shim (&gt;= 8-2) | systemd-sysv; however:
</span><span class='line'>  Package systemd-shim is not installed.
</span><span class='line'>  Package systemd-sysv is to be removed.
</span><span class='line'>
</span><span class='line'>dpkg: error processing package systemd-sysv (--purge):
</span><span class='line'> dependency problems - not removing
</span><span class='line'>Errors were encountered while processing:
</span><span class='line'> systemd
</span><span class='line'> systemd-sysv
</span><span class='line'>P: Begin unmounting filesystems...
</span><span class='line'>P: Saving caches...
</span><span class='line'>Reading package lists...
</span><span class='line'>Building dependency tree...
</span><span class='line'>Reading state information...
</span><span class='line'>rake aborted!
</span><span class='line'>Command failed with status (1): [sudo lb build...]</span></code></pre></td></tr></table></div></figure>


<h2>ISO のビルド</h2>

<p><code>vagrant up</code> して <code>vagrant ssh</code> で入った後、<code>/vagrant/rubylive.sh</code> で作成できます。
2 回目以降は <code>~/rubylive</code> で <code>time rake APT_HTTP_PROXY=http://localhost:3142</code> を直接実行しても良いと思います。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[10月25日 型システム入門読書会　第１回(大阪府)に参加しました]]></title>
    <link href="http://blog.n-z.jp/blog/2015-10-25-amagasakirb.html"/>
    <updated>2015-10-25T12:53:29+09:00</updated>
    <id>http://blog.n-z.jp/blog/amagasakirb</id>
    <content type="html"><![CDATA[<p><a href="http://kokucheese.com/event/index/345134/" title="10月25日 型システム入門読書会　第１回(大阪府)">10月25日 型システム入門読書会　第１回(大阪府)</a>
に参加しました。
今回は第 1 章から 7 章でした。</p>

<!--more-->




<div style="float:right">
<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=znz-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=4274069117" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>
</div>


<p>以下、今回のメモです。</p>

<ul>
<li>序文に章の依存関係のグラフがある</li>
<li>まず 3 章まで読む</li>
<li>紙の書籍を持っている人がいない (重いから)</li>
<li><a href="http://lotusrb.org/" title="Lotus - A complete web framework for Ruby">Lotus - A complete web framework for Ruby</a></li>
<li>この本に関するブログ記事は意外と多い</li>
<li><a href="http://www.cis.upenn.edu/~bcpierce/tapl">http://www.cis.upenn.edu/~bcpierce/tapl</a></li>
<li>of info の info はエラーの時用のファイル情報</li>
<li>ラムダ計算のところはアンダースタンディングコンピュテーションでやったこととほぼ同じ</li>
<li><a href="http://ocaml.jp/">http://ocaml.jp/</a></li>
<li>F# は OCaml ベース</li>
<li>OCaml で実装されているもの : Haxe, Coq</li>
<li>XMonad の話</li>
<li>Emacs の話</li>
<li>Phoenix Framework の話</li>
<li>次回は 12/27 に第 8 章からの予定</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[dokku 0.4.1 の新規インストールを試してみた]]></title>
    <link href="http://blog.n-z.jp/blog/2015-10-08-dokku-041.html"/>
    <updated>2015-10-08T23:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/dokku-041</id>
    <content type="html"><![CDATA[<p>仮想環境で dokku 0.4.1 の新規インストールを試しました。</p>

<!--more-->


<h2>検証環境</h2>

<ul>
<li>Ubuntu 14.04.3 LTS (trusty) amd64</li>
<li><code>docker</code> 1.8.2</li>
<li><code>dokku</code> 0.4.1</li>
<li><a href="https://github.com/Flink/dokku-psql-single-container" title="dokku-psql-single-container">dokku-psql-single-container</a> プラグイン 0.4.0</li>
</ul>


<h2>dokku のインストール</h2>

<p><a href="https://github.com/progrium/dokku#installing" title="Installing">Installing</a> の手順通りにインストールしました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>wget https://raw.githubusercontent.com/progrium/dokku/v0.4.1/bootstrap.sh
</span><span class='line'>sudo DOKKU_TAG=v0.4.1 bash bootstrap.sh</span></code></pre></td></tr></table></div></figure>


<p><code>herokuish</code> の <code>postinst</code> で時間がかかります。</p>

<h2>Web UI で初期設定</h2>

<p>debconf での設定は出てこなかったので Web ブラウザで <code>http://localhost</code> を開いて初期設定します。</p>

<p><code>Public Key</code> には <code>~/.ssh/id_rsa.pub</code> の内容をコピペしました。
まだ鍵がなければ <code>ssh-keygen</code> で作成します。</p>

<p><code>Hostname</code> はインターネットに接続しているグローバル IP アドレスが入っていたので、 <code>dokku.me</code> に変更して、 <code>Use virtualhost naming for apps</code> にチェックを入れました。</p>

<p>最後に <code>Finish Setup</code> を押して初期設定完了です。</p>

<p>この設定で <code>http://アプリ名.dokku.me</code> のような URL で各アプリにアクセスできるようになります。(<code>dokku.me</code> は <code>dokku</code> のドキュメントに書いてあるドメインで、すべてのサブドメインでも <code>127.0.0.1</code> を返してくれるドメインのようです。)</p>

<p>初期設定終了後はアプリをデプロイするまで <code>http://localhost</code> には繋がらなくなります。</p>

<h2>node のサンプルアプリのデプロイ</h2>

<p><a href="http://progrium.viewdocs.io/dokku/application-deployment/" title="Deploy an App">Deploy an App</a> に書いてあるように node のサンプルアプリをデプロイしてみます。</p>

<p>ssh server が入っていなければ <code>sudo apt-get install openssh-server</code> でインストールしておきます。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone https://github.com/heroku/node-js-sample
</span><span class='line'>cd node-js-sample
</span><span class='line'>git remote add dokku dokku@dokku.me:node-js-app
</span><span class='line'>git push dokku master</span></code></pre></td></tr></table></div></figure>


<p>push が成功したら <code>http://node-js-app.dokku.me</code> をブラウザで開きます。
「<code>Hello World!</code>」と表示されれば成功です。</p>

<p><code>dokku</code> の内部の実体としては <code>/home/dokku/node-js-app</code> に入っています。</p>

<p>デプロイ前の状態に戻すには</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>dokku apps:destroy node-js-app</span></code></pre></td></tr></table></div></figure>


<p>で削除します。</p>

<h2>dokku コマンドについて</h2>

<p>実行例はサーバー上でのものを示していますが、 <code>sudo dokku</code> で実行しているもの以外はサーバー上で <code>dokku サブコマンド</code> で実行しても、リモートから <code>ssh dokku@dokku.me サブコマンド</code> で実行しても、基本的には同じ意味になります。</p>

<h2>グローバル設定の変更</h2>

<p>初期設定だと <code>curl</code> のタイムアウトが短すぎて、後の <code>ruby</code> のダウンロードのところでエラーになってしまうため、 <code>dokku config:set --global CURL_TIMEOUT=120</code> でタイムアウト時間を延ばします。</p>

<pre><code>$ dokku config --global
====&gt; --global config vars
CURL_CONNECT_TIMEOUT: 5
CURL_TIMEOUT:         30
$ dokku config:set --global CURL_TIMEOUT=120
-----&gt; Setting config vars
       CURL_TIMEOUT: 120
$ dokku config --global
====&gt; --global config vars
CURL_CONNECT_TIMEOUT: 5
CURL_TIMEOUT:         120
</code></pre>

<h2>dokku-psql-single-container プラグインのインストール</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo dokku plugin:install https://github.com/Flink/dokku-psql-single-container</span></code></pre></td></tr></table></div></figure>


<p>でプラグインをインストールします。
postgres の docker イメージをダウンロードするため、ある程度時間がかかります。</p>

<p>アンインストールは</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo dokku plugin:uninstall psql-single-container</span></code></pre></td></tr></table></div></figure>


<p>です。(<code>dokku-</code> はつかない。)</p>

<h3>sshcommand の変更</h3>

<p><code>sshcommand create</code> で <code>dokku-psql-single-container</code> プラグインが使っている <code>/home/dokku/.psql-sc/data</code> の <a href="https://github.com/Flink/dokku-psql-single-container/issues/5">owner が変わってしまう問題がある</a>ため、</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudoedit /usr/local/bin/sshcommand</span></code></pre></td></tr></table></div></figure>


<p>で</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>chown -R $USER $USERHOME</span></code></pre></td></tr></table></div></figure>


<p>を</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>chown $USER $USERHOME
</span><span class='line'>chown -R $USER $USERHOME/.ssh*</span></code></pre></td></tr></table></div></figure>


<p>に変更しました。</p>

<p><a href="https://github.com/dokku/dokku-postgres">公式の postgres plugin</a> だとこの変更は必要ありません。</p>

<h2>Rails のサンプルアプリのデプロイの準備</h2>

<p>プラグインを使うため、 <code>git push</code> 前に準備しておきます。
(今回試したアプリの場合は <code>git push</code> 後に <code>psql:create</code> しても大丈夫でした。)</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>dokku apps:create ruby-rails-app
</span><span class='line'>dokku psql:create ruby-rails-app</span></code></pre></td></tr></table></div></figure>


<p>まず <code>apps:create</code> で <code>/home/dokku/ruby-rails-app</code> を作成してから、そのアプリと連携するデータベースを <code>psql:create</code> で作成します。</p>

<h2>Rails のサンプルアプリのデプロイ</h2>

<p>Rails のサンプルアプリをデプロイします。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone https://github.com/heroku/ruby-rails-sample
</span><span class='line'>cd ruby-rails-sample
</span><span class='line'>git remote add dokku dokku@dokku.me:ruby-rails-app
</span><span class='line'>git push dokku master
</span><span class='line'>dokku run ruby-rails-app rake db:migrate</span></code></pre></td></tr></table></div></figure>


<p>push が成功したら <code>http://ruby-rails-app.dokku.me</code> を開きます。
<code>Hello World</code> と現在時刻が表示されていたら成功です。</p>

<p>後から <code>psql:create</code> した場合は 500 エラーになるので、 <code>dokku ps:restart ruby-rails-app</code> で再起動すると環境変数の追加が反映されてなおります。</p>

<h2>デプロイ前に戻す方法</h2>

<p><code>dokku apps:destroy ruby-rails-app</code> で戻せるはずですが、データベースに接続中でデータベースの削除に失敗することがあります。</p>

<p>失敗した場合は <code>dokku psql:admin_console</code> で接続して <code>\l</code> で削除できていないのを確認して、 <code>DROP DATABASE db_ruby_rails_app;</code> で削除できました。</p>

<h2>タイムゾーン変更</h2>

<p>タイムゾーンが UTC になっているので日本時間に変更しました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>dokku config:set ruby-rails-app TZ=Asia/Tokyo</span></code></pre></td></tr></table></div></figure>


<h2>初期設定した以外の Virtualhost を使う方法</h2>

<p><code>node-js-sample</code> を再利用して、別ドメインでも見えるようにしてみました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd node-js-sample
</span><span class='line'>git remote add xip dokku@dokku.me:node-js-app.127.0.0.1.xip.io
</span><span class='line'>git push xip master</span></code></pre></td></tr></table></div></figure>


<p><code>http://node-js-app.127.0.0.1.xip.io</code> でも「<code>Hello World!</code>」が見えれば成功ですが、デフォルトホストとして見えているだけかもしれないので、 <code>index.js</code> の <code>'Hello World!'</code> 部分を変更して区別できるようにすると良いかもしれません。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[dokku 0.3 系から 0.4 系へのアップグレード]]></title>
    <link href="http://blog.n-z.jp/blog/2015-10-08-dokku-03-to-04.html"/>
    <updated>2015-10-08T22:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/dokku-03-to-04</id>
    <content type="html"><![CDATA[<p>dokku 0.3.26 から dokku 0.4.1 へのアップグレードをしました。</p>

<!--more-->


<h2>検証環境</h2>

<ul>
<li>Ubuntu 14.04.3 LTS (trusty) amd64</li>
<li><code>docker</code> 1.6.2 から 1.8.2</li>
<li><code>dokku</code> 0.3.26 から 0.4.1</li>
<li><a href="https://github.com/Flink/dokku-psql-single-container" title="dokku-psql-single-container">dokku-psql-single-container</a> プラグイン 0.4.0</li>
</ul>


<h2>docker の apt レポジトリの変更</h2>

<p><a href="https://blog.docker.com/2015/07/new-apt-and-yum-repos/" title="New Apt and Yum Repos">New Apt and Yum Repos</a> に書いてあるように <code>docker</code> 1.8 からは新しいレポジトリにしか存在しなくなったので、 <code>/etc/apt/sources.list.d/docker.list</code> を書き換える必要がありました。</p>

<p>以下の手順で変更しました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D
</span><span class='line'>sudoedit /etc/apt/sources.list.d/docker.list
</span><span class='line'>sudo apt-get update</span></code></pre></td></tr></table></div></figure>


<p><code>docker.list</code> は以下の内容に変更しました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>deb https://apt.dockerproject.org/repo ubuntu-trusty main</span></code></pre></td></tr></table></div></figure>


<p>パッケージ名も <code>lxc-docker</code> で始まるものから <code>docker-engine</code> に変わっています。</p>

<p><code>dokku</code> 0.3.26 ではプラグインの互換性への配慮から <code>lxc-docker-1.6.2</code> にバージョンが固定されていましたが、制限が解除されています。</p>

<p>具体的には <code>herokuish</code> 0.0.1 が <code>lxc-docker-1.6.2</code> に <code>Pre-Depends</code> していたのが、 <code>herokuish</code> 0.3.3 に上がって <code>docker-engine</code> への <code>Pre-Depends</code> に変わっています。</p>

<h2>アップグレード</h2>

<h3>sshcommand の変更</h3>

<p><code>sshcommand create</code> で <code>dokku-psql-single-container</code> プラグインが使っている <code>/home/dokku/.psql-sc/data</code> の <a href="https://github.com/Flink/dokku-psql-single-container/issues/5">owner が変わってしまう問題がある</a>ため、</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudoedit /usr/local/bin/sshcommand</span></code></pre></td></tr></table></div></figure>


<p>で</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>chown -R $USER $USERHOME</span></code></pre></td></tr></table></div></figure>


<p>を</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>chown $USER $USERHOME
</span><span class='line'>chown -R $USER $USERHOME/.ssh*</span></code></pre></td></tr></table></div></figure>


<p>に変更しています。</p>

<p><code>sshcommand</code> パッケージが 0.0.1 から 0.1.0 に上がって変更が戻ってしまうので、 <code>sshcommand</code> だけ先にアップグレードして、再度変更しました。</p>

<h3>パッケージのアップグレード</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-get dist-upgrade</span></code></pre></td></tr></table></div></figure>


<p>でアップグレードしました。</p>

<p><code>dokku</code> や <code>herokuish</code> のアップグレードの他に、 <code>lxc-docker-1.6.2</code> が削除されて <code>docker-engine</code> と <code>plugn</code> が新しくインストールされます。</p>

<p>初回インストールと同様に <code>herokuish</code> の postinst で時間がかかります。</p>

<h3>不要なパッケージの削除</h3>

<p><code>lxc-docker-1.6.2</code> の完全削除と (<code>plugn</code> パッケージに置き換えられた) <code>pluginhook</code> パッケージの削除をしました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-get purge lxc-docker*
</span><span class='line'>sudo apt-get autoremove</span></code></pre></td></tr></table></div></figure>


<h3>プラグインの再インストール</h3>

<p><code>psql-sc</code> は移行措置で <code>/var/lib/dokku/plugins/available/psql-sc</code> に移動されているのですが、有効になっていない (<code>/var/lib/dokku/plugins/enabled</code> からのシンボリックリンクがない) ので、パスが違うこともあり、再度インストールして、古い方は消すことにしました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo dokku plugin:install https://github.com/Flink/dokku-psql-single-container
</span><span class='line'>sudo dokku plugin:uninstall psql-sc</span></code></pre></td></tr></table></div></figure>


<p>プラグインのインストールやアンインストールは root 権限が必要なため、サーバー上で <code>sudo dokku</code> で実行する必要がありました。</p>

<p>PostgreSQL のプラグインとしては <a href="https://github.com/dokku/dokku-postgres" title="dokku postgres (beta)">dokku postgres (beta)</a> もありますが、まだ beta なのとデータ移行の問題があるため、当面は同じプラグインを使い続けることにしました。</p>

<h2>再起動して反映</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo reboot</span></code></pre></td></tr></table></div></figure>


<p>で再起動して、問題なく動くことを確認しました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[llrrに参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2015-09-05-llrr.html"/>
    <updated>2015-09-05T10:30:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/llrr</id>
    <content type="html"><![CDATA[<p><a href="http://ll.jus.or.jp/2015/">LL Ring Recursive</a>
に参加しました。</p>

<!--more-->


<p>以下はそのメモです。</p>

<h2>Language Update</h2>

<ul>
<li>入場曲が笑点のテーマ</li>
<li>Python は他のイベントが重なっていて参加なし</li>
<li>最近の動向</li>
<li>ES6 から名前が 2015 になった</li>
<li>PHP7 がもうすぐ出る</li>
<li>Perl5 最近は定期リリース、 Perl6 は今年のクリスマスに確定</li>
<li>Ruby 2.x は最近は速度向上がメイン</li>
<li>夢の Ruby 2.0 (悪夢?)</li>
<li>Python よりは 2.0 への移行がうまくいった</li>
<li>JavaScript: arrow function, class</li>
<li>babel というトランスパイラを使いましょうという話</li>
<li>PHP7 は性能改善</li>
<li>Perl6 意味不明なオペレーターがたくさん (内積とか)</li>
<li>ドットはメソッド呼び出しで文字列連結がチルダ</li>
<li>Ruby はできるだけ移行措置を設けて非互換を入れていく</li>
<li>文字列リテラルのデフォルトを immutable にする magic comment の追加予定</li>
<li>古い JavaScript の書き方は JSLint や TypeScript などでチェック</li>
<li>PHP は <code>register_global</code> のようなものはなくなっていくが</li>
<li>POSIX 正規表現エンジンは削られて PCRE と Oniguruma の 2 つになる</li>
<li>Perl5 と Perl6 は非互換</li>
<li>Perl5 でも意味がない機能は削っていく</li>
<li>my の中に my をつけられるとか</li>
<li>Ruby は古いのをばっさり削ったのは 2.0 リリースの頃なのであまり覚えていない</li>
<li>他言語との比較</li>
<li>Ruby は Rails のためのランタイム</li>
<li>Perl6 は Perl6 のインタプリタ自体が Perl6 のサブセットで実装されている <a href="https://github.com/perl6/nqp/">https://github.com/perl6/nqp/</a></li>
<li>JVM でも動く</li>
<li>PHP は新機能を入れるのにも投票</li>
<li>JavaScript はいろんなところで動いている</li>
<li>Acrobat Reader とか地デジとか</li>
<li>Perl6 は 100 倍遅い</li>
<li>JavaScript は数値が浮動小数点数と仕様で決まっている</li>
<li>64 bit 整数が扱えない</li>
<li>文字列操作が mutable か immutable かは言語が作られた時代によるのではないかという話</li>
<li>sourcemap を使うと良い</li>
<li>ビット演算をすると 32 bit の符号なし整数になるので <code>x | 0</code> で型を指定するテクニックが asm.js などで使われている</li>
<li>Perl6 のラリーが考えた最強の正規表現</li>
<li>Ruby の <code>next_float</code></li>
<li>質問コーナー</li>
<li>JavaScript は <code>C++</code> のように記号の組み合わせの lambda のようなものではなく予約語 (<code>class</code>) を先に決めておいてあとで機能拡張している</li>
<li>ブラウザの JavaScript と node の JavaScript の違いとか node が出てきて module が整備されるようになったとか</li>
<li>マルチコアとか Erlang の話</li>
<li>文末が <code>.</code> は古い言語で <code>;</code> の方が新しい言語</li>
<li><code>.</code> の言語は <code>.</code> 抜けのデバッグではまる</li>
<li>Ruby では JRuby を使うかマルチプロセスで頑張る</li>
<li>golang で拡張を書いて使うという案も</li>
<li>今後の予定</li>
<li>JavaScript: babel が流行ってほしい</li>
<li>PHP はあまり愛を語っていない</li>
<li>PHP7.1 に入るかもしれない JIT コンパイラにご期待ください</li>
<li>Perl6 が出る</li>
<li>Ruby は 2.3 がクリスマスに出る予定で、それに向けて新機能の募集期間</li>
</ul>


<h2>IoT時代のLLスタック</h2>

<ul>
<li>入場曲がターミネーター</li>
<li>「それスマホでよくないですか?」</li>
<li>Round 1 IoT Circumstance</li>
<li>注目の国内/海外プレイヤ</li>
<li>注目の国内/海外トレンド</li>
<li><a href="http://itpro.nikkeibp.co.jp/atcl/news/15/040101147/" title="Amazon.com、日用品をボタン1つで注文できる小型機器「Dash Button」">Amazon.com、日用品をボタン1つで注文できる小型機器「Dash Button」</a></li>
<li>Amazon Echo</li>
<li>パイプ椅子1個壊すと4000円と書いてある控え室</li>
<li><a href="http://jp.techcrunch.com/2015/08/22/20150821smartthings-support-is-coming-to-amazon-echo/" title="Amazon EchoがSmartThingsのホームオートメーションをサポート">Amazon EchoがSmartThingsのホームオートメーションをサポート</a></li>
<li>Round 2 How about LL for device</li>
<li>組み込み言語との違い</li>
<li>なんでわざわざ LL (特に JS) なのか?</li>
<li><a href="http://konashi.ux-xu.com/">konashi</a>, tessel, 8pino</li>
<li>jsdo.it との連携</li>
<li><a href="https://twitter.com/okaji/status/640002760922939392" title="スマホで提供できないユーザーニーズを見つけたらそれはセンサーやらアクチュエータなりを積んだ専用機作ればいいよね">スマホで提供できないユーザーニーズを見つけたらそれはセンサーやらアクチュエータなりを積んだ専用機作ればいいよね</a></li>
<li>Perl でミサイル</li>
<li>mbed</li>
<li>開発環境はクラウドにある</li>
<li>Edison</li>
<li><code>rm -rf</code> ができるほど Linux が動いている</li>
<li>Firefox OS が動いているボード <a href="https://twitter.com/lljapan/status/640005059808395264" title="KDDI Open Web Board">KDDI Open Web Board</a></li>
<li>Firefox OS のスマホ用に作ったものがそのまま動く</li>
<li>Round 3 How about Device For LL</li>
<li>デバイスの制約について</li>
<li>制御の難しさ・楽しさ</li>
<li>Raspberry Pi 2</li>
<li>ハードウェアは特化したものじゃないと売れないが、それぞれに専用アプリがあると大変 (アカウント管理とか)</li>
<li>Final Round Future of IoT</li>
<li>我々は IoT の延長上に</li>
<li>鉄●28号を目指すのか</li>
<li>ドラ●もんを夢見るのか</li>
<li>ロボットに操られてる人間 (ルンバのためにとか)</li>
<li>Extra Round</li>
<li>ブレッドボードの未来</li>
<li>ボードゲームウェイ多すぎ</li>
<li>通信プロトコル多すぎ</li>
<li>BLE/MQTT/920MHz/6LoPAN</li>
<li>WebSocket/WebRTC</li>
<li>Questions From Audience</li>
<li><p>時間が来たので引き分け終了</p></li>
<li><p><a href="http://memoclip.y-okajima.com/">http://memoclip.y-okajima.com/</a> via <a href="https://twitter.com/okaji/status/640035516272906241">https://twitter.com/okaji/status/640035516272906241</a></p></li>
</ul>


<h2>昼休み</h2>

<p>LT に申し込みました。</p>

<h2>パネルディスカッション：エンジニア不足はいつまで続くのか</h2>

<ul>
<li>本当にエンジニア不足?</li>
<li>IPAの「IT人材白書」</li>
<li>IT人材不足の原因</li>
<li>『エンジニアtype』について</li>
<li><a href="http://engineer.typemag.jp/article/career-change" title="過去2年で最もチャンス広がる「未経験・異業種」転職事情～人生のコネクティング・ザ・ドッツを成就させるには ">過去2年で最もチャンス広がる「未経験・異業種」転職事情～人生のコネクティング・ザ・ドッツを成就させるには </a></li>
<li>「未経験」3つのパターン</li>
<li>業種未経験 SIなど異業種から技術者採用</li>
<li>職種未経験 学生インターンほか若手採用</li>
<li>OSS未経験 「働き方自由」を売りにする場合</li>
<li>焼きそばじゃなくてチャーハン</li>
<li>みんなネガティブな話すきすぎ</li>
<li><a href="http://yoshidashingo.hatenablog.com/entry/2015/09/05/113806" title="エンジニア不足はいつまで続くのか（メモ）">エンジニア不足はいつまで続くのか（メモ）</a></li>
<li>企業側がエンジニア文化を理解していないのではないか</li>
</ul>


<h2>LLが支えるデータサイエンスの世界</h2>

<ul>
<li>けんた祭り</li>
<li><a href="http://www.slideshare.net/KentaOono/introduction-to-chainer-ll-ring-recursive">Introduction to Chainer (LL Ring Recursive)</a></li>
<li><a href="https://github.com/pfnet/chainer">https://github.com/pfnet/chainer</a></li>
<li>ディープラーニング</li>
<li>順伝播、逆伝播、パラメータの更新</li>
<li>Chainer</li>
<li>MNIST で手書き文字の認識</li>
<li><a href="http://julialang.org/">プログラミング言語Julia</a></li>
<li><a href="http://julia.tokyo/">JuliaTokyo</a></li>
<li>Jupyter</li>
<li><a href="https://www.juliabox.org/">JuliaBox</a></li>
<li>質疑応答</li>
<li>Chainer の訓練済みのデータの共有について</li>
<li>現状は pickle でダンプしたデータを共有</li>
<li>Chainer の将来</li>
<li>万能なものは無理なので Flexibility 重視</li>
<li>Julia では <code>@</code> から始まるものがマクロ呼び出し</li>
<li>関数名の命名規則 全部小文字</li>
<li><code>!</code> は破壊的な操作を行う関数につける慣習
-<code>quicksort!</code> は破壊的な inplace な sort</li>
<li>Julia の速さ</li>
<li>LLVM フレンドリーなコードをはいている</li>
</ul>


<h2>抽選会</h2>

<p>JavaScript の本が当たりました。</p>

<h2>懇親会 &amp; LT</h2>

<p>3 番目でした。</p>

<p>他の人の LT のメモです。</p>

<ul>
<li>チャーハンではなくあんかけチャーハンでした。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[8月9日 アンダースタンディングコンピュテーション読書会 第4回(兵庫県)に参加しました]]></title>
    <link href="http://blog.n-z.jp/blog/2015-08-09-amagasakirb.html"/>
    <updated>2015-08-09T13:02:58+09:00</updated>
    <id>http://blog.n-z.jp/blog/amagasakirb</id>
    <content type="html"><![CDATA[<p><a href="http://kokucheese.com/event/index/322444/" title="8月9日 アンダースタンディングコンピュテーション読書会 第4回(兵庫県)">8月9日 アンダースタンディングコンピュテーション読書会 第4回(兵庫県)</a>
に参加しました。
今回は8章から9章でした。</p>

<!--more-->


<h2>メモ</h2>

<div style="float:right">
<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=znz-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=487311697X" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>
</div>


<p>以下、今回のメモです。</p>

<ul>
<li><a href="https://github.com/tomstuart/computationbook">https://github.com/tomstuart/computationbook</a></li>
<li><a href="https://github.com/ko1/uc_ja">https://github.com/ko1/uc_ja</a></li>
<li>p.259 <code>to_s(2).scan(/.+?(?=.{8}*\z)/)</code> の書き換えの話</li>
<li><code>reserve</code> して <code>each_slice(8)</code> はどうかという話</li>
<li><code>Kernel#Integer</code> を使うかどうかという話</li>
<li>正規表現の先読みの話 <code>gsub(/(?=(.{3})+\z)/, ',')</code> など</li>
<li><code>does_it_say_no.rb</code> の話</li>
<li>p.264 監訳注の <code>"no"</code> と言って停止というのは環境 (スタックの深さ) に依存して <code>"yes"</code> になることもある <a href="https://github.com/ko1/uc_ja/issues/7">https://github.com/ko1/uc_ja/issues/7</a></li>
<li>Quine から <code>HQ9+</code> の話 <a href="https://ja.wikipedia.org/wiki/HQ9%2B">https://ja.wikipedia.org/wiki/HQ9%2B</a></li>
<li>p.276 <code>Prime.each(n - 1)</code> の話</li>
<li>p.296 <code>Array#product</code> の話 <a href="http://docs.ruby-lang.org/ja/2.2.0/method/Array/i/product.html">http://docs.ruby-lang.org/ja/2.2.0/method/Array/i/product.html</a></li>
<li>p.299 <code>T``Type::BOOLEAN</code> の <code>T</code> が余分? <a href="https://github.com/ko1/uc_ja/issues/8">https://github.com/ko1/uc_ja/issues/8</a></li>
<li>8章は時間がかかったが9章はすんなり読めた話</li>
<li>多重代入と <code>to_ary</code> と <code>to_a</code> などの話</li>
<li>SlideShare と SpeakerDeck の違いの話</li>
<li><code>-Float::INFINITY</code> の話</li>
</ul>


<h2>次回の本の候補</h2>

<ul>
<li><a href="http://www.amazon.co.jp/gp/product/4274050653/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4274050653&amp;linkCode=as2&amp;tag=znz-22">Rubyのしくみ -Ruby Under a Microscope-</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4274050653" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.co.jp/gp/product/4798139823/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4798139823&amp;linkCode=as2&amp;tag=znz-22">Effective Ruby</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4798139823" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.co.jp/gp/product/4797376279/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4797376279&amp;linkCode=as2&amp;tag=znz-22">10年戦えるデータ分析入門 SQLを武器にデータ活用時代を生き抜く (Informatics &amp;IDEA)</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4797376279" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.co.jp/gp/product/4873117321/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4873117321&amp;linkCode=as2&amp;tag=znz-22">ユーザーストーリーマッピング</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4873117321" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.co.jp/gp/product/4627817711/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4627817711&amp;linkCode=as2&amp;tag=znz-22">データ解析の実務プロセス入門</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4627817711" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="https://progit-ja.github.io/" title="Pro Git 日本語版電子書籍公開サイト">Pro Git 日本語版電子書籍公開サイト</a></li>
<li><a href="http://railsguides.jp/index.html" title="Ruby on Rails ガイド (4.2 対応)">Ruby on Rails ガイド (4.2 対応)</a></li>
<li><a href="http://www.amazon.co.jp/gp/product/4873116988/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4873116988&amp;linkCode=as2&amp;tag=znz-22">実践 機械学習システム</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4873116988" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.co.jp/gp/product/4797376724/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4797376724&amp;linkCode=as2&amp;tag=znz-22">ソフトウェアシステムアーキテクチャ構築の原理 第2版 ITアーキテクトの決断を支えるアーキテクチャ思考法</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4797376724" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.co.jp/gp/product/4798139211/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4798139211&amp;linkCode=as2&amp;tag=znz-22">システムテスト自動化 標準ガイド (CodeZine BOOKS)</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4798139211" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.co.jp/gp/product/4274069117/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4274069117&amp;linkCode=as2&amp;tag=znz-22">型システム入門 −プログラミング言語と型の理論−</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4274069117" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>


<h2>次回予定</h2>

<div style="float:right">
<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=znz-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=4274069117" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>
</div>


<p>次回の本は<a href="http://www.amazon.co.jp/gp/product/4274069117/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4274069117&amp;linkCode=as2&amp;tag=znz-22">型システム入門 −プログラミング言語と型の理論−</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4274069117" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />に決定しました。
次回は10月の予定で詳細は未定です。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第68回 Ruby関西 勉強会に参加しました]]></title>
    <link href="http://blog.n-z.jp/blog/2015-08-08-rubykansai68.html"/>
    <updated>2015-08-08T13:07:42+09:00</updated>
    <id>http://blog.n-z.jp/blog/rubykansai68</id>
    <content type="html"><![CDATA[<p><a href="https://rubykansai.doorkeeper.jp/events/25693" title="第68回 Ruby関西 勉強会">第68回 Ruby関西 勉強会</a>
(<a href="https://github.com/rubykansai/workshops/wiki/Kansaiworkshop068" title="KansaiWorkshop068">KansaiWorkshop068</a>)
に参加しました。</p>

<!--more-->


<p>以下、そのメモです。</p>

<h2>前説</h2>

<p>主にちゃんとリアクションをしましょうという話でした。</p>

<h2>Middleware Configuration as Code</h2>

<ul>
<li><a href="https://speakerdeck.com/matsumoto_r/middleware-configuration-as-code">https://speakerdeck.com/matsumoto_r/middleware-configuration-as-code</a></li>
<li>本番環境での使い方について詳細は @hsbt さんの <a href="http://www.slideshare.net/hsbt/middleware-as-code-with-mruby">Details of mruby usage in production</a> を参照ということで省略</li>
<li><code>mod_mruby</code> や <code>ngx_mruby</code> でユーザーに見せるクラス構成などを似せて学習コストを下げている</li>
<li><code>ngx_mruby</code> チュートリアル用 docker イメージ <a href="https://github.com/matsumoto-r/docker-ngx_mruby">https://github.com/matsumoto-r/docker-ngx_mruby</a></li>
<li>事例紹介</li>
<li><a href="http://harasou.github.io/2015/07/15/%E9%96%A2%E8%A5%BFRuby%E4%BC%9A%E8%AD%B006-%E3%81%AB%E7%99%BB%E5%A3%87%E3%81%95%E3%81%9B%E3%81%A6%E3%82%82%E3%82%89%E3%81%A3%E3%81%9F/" title="関西Ruby会議06 に登壇させてもらった">関西Ruby会議06 に登壇させてもらった</a></li>
<li>質疑応答</li>
<li>AOT コンパイラについては不明</li>
<li>mruby はスレッドごとに VM が動かせる</li>
<li>C 拡張直接と比べてメモリ消費は増えるのか</li>
</ul>


<h2>Rails と ERD（アソシエーション）</h2>

<ul>
<li><a href="https://speakerdeck.com/ogom/erd-on-rails">https://speakerdeck.com/ogom/erd-on-rails</a></li>
<li><a href="https://github.com/ogom/draw_erd">https://github.com/ogom/draw_erd</a> <a href="https://rubygems.org/gems/draw_erd">https://rubygems.org/gems/draw_erd</a></li>
<li>ライブコーディングをしならがらの説明</li>
<li>(空気を読まずに 15 時のおやつの時間を教えてくれる pepper くん)</li>
<li>質疑応答</li>
<li>コミュニティーではなくグループなのは doorkeeper がそうなっていたから</li>
<li>余った時間を使ってホワイトボードで解説</li>
</ul>


<h2>Ruby 初級者向けレッスン（クラス）</h2>

<ul>
<li><a href="https://github.com/higaki/learn_ruby_kansai_68">https://github.com/higaki/learn_ruby_kansai_68</a></li>
<li>Struct を使うかどうか</li>
<li><a href="http://docs.ruby-lang.org/ja/2.2.0/method/Struct/s/=5b=5d.html">http://docs.ruby-lang.org/ja/2.2.0/method/Struct/s/=5b=5d.html</a> には「Structをカスタマイズする場合はこの方法が推奨されます。無名クラスのサブクラスを作成する方法でカスタマイズする場合は無名クラスが使用されなくなってしまうことがあるためです。」と書いてあってブロックを指定する方法が推奨されている(が、<a href="http://www.amazon.co.jp/gp/product/487311697X/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=487311697X&amp;linkCode=as2&amp;tag=znz-22">アンダースタンディング コンピュテーション ―単純な機械から不可能なプログラムまで</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=487311697X" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />では継承して使っている)</li>
</ul>


<h2>スポンサーセッション</h2>

<ul>
<li>ファーストサーバさんの Zenlogic の紹介</li>
</ul>


<h2>クロージング</h2>

<ul>
<li>関西の Ruby 関連のイベント紹介</li>
<li>次回は 10 月</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[関西Ruby会議06に参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2015-07-11-kanrk06.html"/>
    <updated>2015-07-11T23:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/kanrk06</id>
    <content type="html"><![CDATA[<p><a href="http://regional.rubykaigi.org/kansai06/" title="関西Ruby会議06">関西Ruby会議06</a>
と前夜祭に参加しました。</p>

<!--more-->


<p>メモはとらずに話を聞くことに集中していたので、この記事は感想がメインです。</p>

<h2>前夜祭</h2>

<p>matz への質問コーナーで <code>.emacs</code> の行数という質問の答えのときに行数だけではなく内容もざっと見せてもらえて、
morq というのがちらっと目に付いたので、
会場からの質問のタイミングでメールリーダーについてきいてみたところ、
morq をまだ使っていて、最初は全文検索に Rast を使っていたという話から
Hyper Estraier? (Estraier と言っていたかも?) に乗り換えて、
さらに今は groonga を使っているということが聞けました。</p>

<h2>基調講演1</h2>

<p>matz の昔話が中心でした。</p>

<p>PC-1211 は前夜祭のときの思い出のコンピューターは何かという質問の答えのときにも使われていた画像だったので、
あの時に出した画像は、この講演の資料の画像だったのかと思いました。</p>

<h2>スポンサーLT</h2>

<p>作っているサービスの宣伝は少なめで、技術的な話が多めでした。</p>

<p><code>wicked_pdf</code> の画像などのメソッドの切り替えは、みんな同じようなラッパーメソッドを作って使っていそうなので、もうちょっと <code>wicked_pdf</code> の方でなんとかできると良さそうなのに、と思いました。</p>

<h2>講演</h2>

<p>Rspec と Minitest の比較の話が一番印象に残りました。
個人的には transpec で Rspec 2 から 3 に問題なく移行できたので、
Rspec を使い続けていますが、
Minitest も機会があれば使ってみようと思いました。</p>

<h2>LT</h2>

<p>Ruby 関西のイベントとしては珍しくちゃんと5分で強制終了になるという形式でした。
時間に収まらずに続きがきになる発表もあったので、後で発表資料を確認したいと思いました。</p>

<h2>基調講演2</h2>

<p>最後は笹田さんの Ruby 2.2 でのキーワード引数の速度改善の話でした。</p>

<p>キーワード引数はまだほとんど使ったことがなかったので、
話に出てきた Proc との組み合わせなどを
<code>irb</code> で試してみると
以下のような挙動でした。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% rbenv exec irb -r irb/completion --simple-prompt
</span><span class='line'>&gt;&gt; def foo(a, b, key1: 1, key2: 2);end
</span><span class='line'>=&gt; :foo
</span><span class='line'>&gt;&gt; foo(1,2, key3: 3)
</span><span class='line'>ArgumentError: unknown keyword: key3
</span><span class='line'>         from (irb):3
</span><span class='line'>         from /Users/kazu/.rbenv/versions/2.1.5/bin/irb:11:in `&lt;main&gt;'
</span><span class='line'>&gt;&gt; lambda{|a,b|p [a, b]}.call(1,2,3)
</span><span class='line'>ArgumentError: wrong number of arguments (3 for 2)
</span><span class='line'>         from (irb):6:in `block in irb_binding'
</span><span class='line'>         from (irb):6:in `call'
</span><span class='line'>         from (irb):6
</span><span class='line'>         from /Users/kazu/.rbenv/versions/2.1.5/bin/irb:11:in `&lt;main&gt;'
</span><span class='line'>&gt;&gt; lambda{|a,b|p [a, b]}.call(1)
</span><span class='line'>ArgumentError: wrong number of arguments (1 for 2)
</span><span class='line'>         from (irb):7:in `block in irb_binding'
</span><span class='line'>         from (irb):7:in `call'
</span><span class='line'>         from (irb):7
</span><span class='line'>         from /Users/kazu/.rbenv/versions/2.1.5/bin/irb:11:in `&lt;main&gt;'
</span><span class='line'>&gt;&gt; proc{|a,b|p [a, b]}.call(1)
</span><span class='line'>[1, nil]
</span><span class='line'>=&gt; [1, nil]
</span><span class='line'>&gt;&gt; proc{|a,b|p [a, b]}.call(1,2,3)
</span><span class='line'>[1, 2]
</span><span class='line'>=&gt; [1, 2]
</span><span class='line'>&gt;&gt; proc{|k1:1,k2:2|p [k1, k2]}.call(k3: 3)
</span><span class='line'>ArgumentError: unknown keyword: k3
</span><span class='line'>         from (irb):10:in `call'
</span><span class='line'>         from (irb):10
</span><span class='line'>         from /Users/kazu/.rbenv/versions/2.1.5/bin/irb:11:in `&lt;main&gt;'
</span><span class='line'>&gt;&gt;</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第7回 コンテナ型仮想化の情報交換会＠大阪に参加しました]]></title>
    <link href="http://blog.n-z.jp/blog/2015-06-20-ct-study-7-osaka.html"/>
    <updated>2015-06-20T14:30:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/ct-study-7-osaka</id>
    <content type="html"><![CDATA[<p><a href="http://ct-study.connpass.com/event/15121/" title="第7回 コンテナ型仮想化の情報交換会＠大阪">第7回 コンテナ型仮想化の情報交換会＠大阪</a>
に参加しました。</p>

<!--more-->


<p>入り口に pepper くんがいました。
懇親会でも人気でした。</p>

<p>以下メモです。</p>

<h2>いまさら聞けない Linux コンテナの基礎</h2>

<ul>
<li><a href="https://speakerdeck.com/tenforward/jin-sarawen-kenai-linux-kontenafalseji-chu-2015-06-20">https://speakerdeck.com/tenforward/jin-sarawen-kenai-linux-kontenafalseji-chu-2015-06-20</a></li>
<li>cgroup などの Linux コンテナの基礎についての話でした。</li>
<li><a href="http://blog.kazuhooku.com/2015/05/jailing-chroot-jail.html" title="jailing - chroot jailを構築・運用するためのスクリプトを書いた">jailing - chroot jailを構築・運用するためのスクリプトを書いた</a></li>
<li><a href="http://criu.org/">http://criu.org/</a></li>
<li>overlayfs</li>
</ul>


<h2>いまさら聞けない Linux コンテナの基礎 (後半)</h2>

<ul>
<li>いろいろと namespace のデモ</li>
<li>kernel のバージョンの他にも unshare コマンドが入っている util-linux のバージョンも重要</li>
<li>最近の systemd だと <code>mount --make-shared /</code> 相当になっている</li>
<li>いろいろなコンテナ関係の紹介</li>
<li><a href="https://github.com/mhiramat/mincs">https://github.com/mhiramat/mincs</a></li>
<li>LXC のデモ (lxc-なんとか コマンド)</li>
<li>LXD のデモ (lxc コマンド)</li>
</ul>


<h2>dokku を本番環境で使ってみた話</h2>

<ul>
<li>自分の発表でした。</li>
<li><a href="http://slide.rabbit-shocker.org/authors/znz/dokku-201506/">http://slide.rabbit-shocker.org/authors/znz/dokku-201506/</a></li>
<li>Heroku を使っていない理由は VPS の方が安い</li>
<li>apache+passenger だと ruby や passenger のバージョンアップが辛かった</li>
</ul>


<h2>VIMAGE を使ってみた話</h2>

<ul>
<li>whois owatan.jp</li>
<li>ConoHa は 17 個の IPv6 アドレスが付いてくる</li>
<li>epair</li>
</ul>


<h2>アンケート</h2>

<ul>
<li><a href="https://goo.gl/g75FNJ">https://goo.gl/g75FNJ</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第67回 Ruby関西 勉強会に参加しました]]></title>
    <link href="http://blog.n-z.jp/blog/2015-06-13-rubykansai67.html"/>
    <updated>2015-06-13T13:23:57+09:00</updated>
    <id>http://blog.n-z.jp/blog/rubykansai67</id>
    <content type="html"><![CDATA[<p><a href="https://rubykansai.doorkeeper.jp/events/23266" title="第67回 Ruby関西 勉強会">第67回 Ruby関西 勉強会</a>
に参加しました。
(<a href="https://github.com/rubykansai/workshops/wiki/Kansaiworkshop067">KansaiWorkshop067</a>)</p>

<p>今回は京都女子大学での開催でした。</p>

<!--more-->


<h2>ドメイン駆動設計とRuby</h2>

<ul>
<li><a href="https://speakerdeck.com/ogom/ddd-infinite">DDD Infinite</a></li>
<li><a href="http://ogom.github.io/python-mcider/">Markdown で書ける自作プレゼンツール</a>を使っている</li>
<li>Sublime Text との関係の都合で Python 製</li>
</ul>


<h2>ある教育系のサービスを開発してきた裏側</h2>

<div style="float:right">
<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=znz-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=4863541686" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>
</div>


<ul>
<li>会場アンケート からあげ好き ほぼ100%</li>
<li>本を書いたらしい: <a href="http://www.amazon.co.jp/gp/product/4863541686/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4863541686&amp;linkCode=as2&amp;tag=znz-22">Webエンジニアの教科書</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4863541686" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li>Classi</li>
<li>Slack のカスタム絵文字を絵文字職人がいつの間にか作っている</li>
<li>Qiita:Team (esa という似たサービスが最近出てきたらしい)</li>
<li>朝会</li>
<li>GitHub でのレビュー</li>
<li><a href="http://www.amazon.co.jp/gp/product/4873116309/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4873116309&amp;linkCode=as2&amp;tag=znz-22">Team Geek ―Googleのギークたちはいかにしてチームを作るのか</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4873116309" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />の「自分の疑問として謙虚に聞く」</li>
<li>チームランチ</li>
</ul>


<h2>Ruby で操る AWS</h2>

<div style="float:right">
<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=znz-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=4797380357" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>
<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=znz-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=B00UWCYRZK" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>
</div>


<ul>
<li><a href="http://www.slideshare.net/takurosasaki/rubyaws-67ruby" title="Rubyで操るAWS 第67回Ruby関西 勉強会">Rubyで操るAWS 第67回Ruby関西 勉強会</a></li>
<li>本をいくつか書いている</li>
<li>会場アンケート どの項目も意外と多い</li>
<li>クラウドファースト</li>
<li>クラウドネイティブ</li>
<li>3-Tier アーキテクチャ</li>
<li>2-Tier アーキテクチャ</li>
<li><a href="http://www.nri-net.com/mobileconf/spec.html">モバイル会議Ⅱ</a></li>
<li>Ruby で AWS</li>
<li>SDK V1 (レガシーバージョン) V2 (現行バージョン)</li>
<li>名前空間が V1 は AWS で V2 は Aws なので AWS になっている情報は古い</li>
<li>認可は IAM</li>
<li>認証は 3 種類</li>
<li>AccessKey と SecretAccessKey による認証</li>
<li>IAM ロール</li>
<li>Cognito</li>
<li>Lambda</li>
</ul>


<h2>正規表現の \z の話</h2>

<p>自分の発表 (LT) でした。</p>

<ul>
<li><a href="http://slide.rabbit-shocker.org/authors/znz/rubykansai67-regexp/">http://slide.rabbit-shocker.org/authors/znz/rubykansai67-regexp/</a></li>
<li>1文字の場合は選択 <code>(ん|ン)</code> ではなく文字クラス <code>[んン]</code> を使おう</li>
<li>文字列末尾は <code>$</code> ではなく <code>\z</code></li>
</ul>


<h2>Ruby初級者向けレッスン 53回───ArrayとHash</h2>

<ul>
<li><code>Array.new(3){|i| i.to_s}</code> のようなブロック付き <code>Array.new</code> って使ったことがなかったけど、テストデータを作るのに便利そう。</li>
<li><code>Array#to_h</code> っていつからあるんだっけ、と思って確認したら 2.1.0 からだった。</li>
<li><a href="https://github.com/higaki/learn_ruby_kansai_67">https://github.com/higaki/learn_ruby_kansai_67</a></li>
</ul>


<h2>クロージング</h2>

<ul>
<li>8/7(金)-8(土) <a href="http://www.ospn.jp/osc2015-kyoto/" title="オープンソースカンファレンス2015 Kansai@Kyoto">オープンソースカンファレンス2015 Kansai@Kyoto</a></li>
<li>関西のたくさんある Ruby 勉強会の紹介</li>
<li>7/9(木) Ruby ビジネスフォーラム</li>
<li>7/10(金) 関西Ruby会議06 前夜祭</li>
<li>7/11(土) <a href="http://regional.rubykaigi.org/kansai06/">関西Ruby会議06</a></li>
<li>8/8(土) <a href="https://rubykansai.doorkeeper.jp/events/25693">第68回 Ruby関西 勉強会</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[5月9日 アンダースタンディング コンピュテーション読書会　第３回(兵庫県)に参加しました]]></title>
    <link href="http://blog.n-z.jp/blog/2015-05-09-amagasakirb.html"/>
    <updated>2015-05-09T13:08:12+09:00</updated>
    <id>http://blog.n-z.jp/blog/amagasakirb</id>
    <content type="html"><![CDATA[<p><a href="http://kokucheese.com/event/index/287707/" title="5月9日 アンダースタンディング コンピュテーション読書会　第３回(兵庫県)">5月9日 アンダースタンディング コンピュテーション読書会　第３回(兵庫県)</a>
に参加しました。
今回はいつもの会場に戻って5章から7章でした。</p>

<!--more-->


<h2>メモ</h2>

<div style="float:right">
<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=znz-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=487311697X" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>
</div>


<p>以下、今回のメモです。</p>

<ul>
<li><a href="https://github.com/tomstuart/computationbook">https://github.com/tomstuart/computationbook</a></li>
<li><a href="https://github.com/ko1/uc_ja">https://github.com/ko1/uc_ja</a></li>
<li>p.135 <code>「コンピュータ」という言葉は「計算する人」(通常は女性)を意味していました。</code></li>
<li>アラン・チューリングの論文名の最後の単語の Entscheidungsproblem の読み方がわからないという話</li>
<li>ドイツ語由来の英単語らしいという話</li>
<li>the Entscheidungsproblem でヒルベルトの決定問題を意味する単語ではないかという話</li>
<li>p.143 の <code>left[0..-2]</code> の <code>[0..-2]</code> がわかりにくい話</li>
<li>頭から削る <code>drop</code> はあるのに逆に末尾から削るメソッドがない話</li>
<li>頭から削るメソッドだけなのは <code>Enumerable</code> 由来のメソッドだからではないかという話</li>
<li>cuzic さんが <code>Enumerator.new</code> を最近よく使うという話</li>
<li>アラン・チューリングはチューリングマシンの実装については考えていなくて計算可能性などの数学的なことを重視していたという話</li>
<li><code>proc#[]</code> と <code>proc#call</code> が同じという話</li>
<li><code>x[]</code> のように引数なしの <code>call</code> でも <code>[]</code> で書けるという話</li>
<li>p.168 ローカル変数名 (引数) に <code>proc</code> という名前を使っているのはグローバル関数の <code>proc</code> と紛らわしいので良くないという話</li>
<li>ラムダ計算の話</li>
<li>最小構成要素を少なくしたかったという話</li>
<li>YコンビネータとかZコンビネータとかIコンビネータとかの話</li>
<li>SKK=I の話 (p.224に出てくる)</li>
<li>p.194 <code>Enumerator::Lazy#force</code> の話</li>
<li><code>take</code> はまだ lazy のままで <code>first</code> は lazy ではなくなるという話</li>
<li>6章には <a href="https://github.com/tomstuart/computationbook/tree/master/programming_with_nothing" title="README.md">README.md</a> から <a href="http://rubymanor.org/3/videos/programming_with_nothing/" title="解説ビデオ">解説ビデオ</a> へのリンクがある</li>
<li>p.238 <code>Array#cycle</code></li>
<li>次回は8月予定で具体的な日程は未定</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LILO ＆ 東海道らぐ・オフラインミーティング（2015/05/03）に参加しました]]></title>
    <link href="http://blog.n-z.jp/blog/2015-05-03-lilo-tokaidolug.html"/>
    <updated>2015-05-03T13:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/lilo-tokaidolug</id>
    <content type="html"><![CDATA[<p><a href="https://lilo.doorkeeper.jp/events/23873" title="LILO ＆ 東海道らぐ・オフラインミーティング（2015/05/03） - LILO | Doorkeeper">LILO ＆ 東海道らぐ・オフラインミーティング（2015/05/03） - LILO | Doorkeeper</a>
に参加しました。</p>

<p>前回と同じくアンカンファレンス形式でした。</p>

<!--more-->


<h2>メモ</h2>

<p>今回のメモです。</p>

<ul>
<li><a href="http://lilo.linux.or.jp/" title="Welcome to LILO">Welcome to LILO</a> では日付が間違っている</li>
<li>ハッシュタグ: <code>#lilo_jp</code> <code>#東海道らぐ</code></li>
<li>自己紹介から</li>
<li>k-of 11/6,7</li>
<li>おーぷん万葉</li>
<li><a href="https://github.com/hashimom/Izumo">https://github.com/hashimom/Izumo</a> Canna のフォーク</li>
<li>GuruPlug Server</li>
<li>4月に ibus-mozc サポート終了</li>
<li>IzumoWebSock プロトコル (JSON + WebSocket)</li>
<li>Canna は K&amp;R なソースコード</li>
<li><a href="https://github.com/hashimom/Izumo/blob/bc04c5efad8fc462fa6730823566126edef36c69/server/comm.h">https://github.com/hashimom/Izumo/blob/bc04c5efad8fc462fa6730823566126edef36c69/server/comm.h</a> などの謎の <code>pro(())</code></li>
<li>M17N</li>
<li>ASUS U38N</li>
<li>Linux Mint</li>
<li>M17N には ibus 推奨</li>
<li>ibus-m17n パッケージ</li>
<li>UTF-8 の環境なら同様にできるはず</li>
<li>Plamo はまだ euc-jp らしい</li>
<li>アラトゥエ・コミュニティの、先生きのこり問題</li>
<li>around twenty</li>
<li>iPhone でプレゼン</li>
<li><a href="http://railsgirls.jp/" title="Rails Girls - Japanese">Rails Girls - Japanese</a></li>
<li>Diversity</li>
<li><a href="http://rubykaigi.org/2014/presentation/S-HarukaIwao" title="RubyKaigi 2014 | RailsGirls: Not Only For Girls">RubyKaigi 2014 | RailsGirls: Not Only For Girls</a></li>
<li>「時代が変わり、常識も変わる」</li>
<li>「楽しいか、楽しくないか」が重要</li>
<li>LILO のインストール大会の話</li>
<li>今時のチープなノートPC HP Stream 11 で Xubuntu を動かす</li>
<li>WIMBoot だとリカバリパーティションっぽいものは消してはいけない</li>
<li>謎PCとのつきあい方</li>
<li>opencocon</li>
<li>HP Thin-Client 2533t</li>
<li>VIA C7 1GHz</li>
<li>Windows XP Embedded</li>
<li>Android Nexus7 で Linux を色々と遊んでみよう</li>
<li>Mikutter</li>
<li>Debian Noroot</li>
<li>LibreOffice</li>
<li>root 化</li>
<li>Debian Kit と Complete Linux</li>
<li>CyanobenMod</li>
<li>Firefox OS</li>
<li>Ubuntu Touch</li>
<li>OSC京都、香港OSC、台湾OSDC</li>
<li>Raspberry PI とつないでみました <a href="http://www.kuzuore.com/misc/documents/lilo_tokaido/20150503/raspi_buzzer.pdf">http://www.kuzuore.com/misc/documents/lilo_tokaido/20150503/raspi_buzzer.pdf</a> <a href="http://www.kuzuore.com/misc/documents/lilo_tokaido/20150503/raspi_buzzer.odp">http://www.kuzuore.com/misc/documents/lilo_tokaido/20150503/raspi_buzzer.odp</a></li>
<li>サウンドジェネレーター6 DNGR-G48 <a href="http://prod.kyohritsu.com/DNGR-G48.html">http://prod.kyohritsu.com/DNGR-G48.html</a></li>
<li><a href="https://github.com/sato-makoto/Raspi_LED/tree/master/wonder_snd">https://github.com/sato-makoto/Raspi_LED/tree/master/wonder_snd</a></li>
<li>LibreOffice の UX と QA のあれこれ</li>
<li>次は 4.5 ではなく 5.0</li>
<li>デザインコンテスト中</li>
<li><a href="https://wiki.documentfoundation.org/BugHunting_Session_5.0.0.0">https://wiki.documentfoundation.org/BugHunting_Session_5.0.0.0</a> 5/22-5/24</li>
<li>何をやるかはおまかせ</li>
<li>LibreOffice Online</li>
<li>Qt + LibreOffice + ibus で問題が起きるらしいという話</li>
<li><a href="http://www.ospn.jp/osc2015-kyoto/" title="オープンソースカンファレンス2015 Kansai@Kyoto - オープンソースの文化祭！">オープンソースカンファレンス2015 Kansai@Kyoto - オープンソースの文化祭！</a> 8/7-8/8</li>
<li>GuruPlug Server のデモ</li>
<li><a href="http://www.jspnet.co.jp/guruplug/tips.html#tips002" title="JTAGを利用しない接続方法">JTAGを利用しない接続方法</a></li>
<li><a href="http://www.jspnet.co.jp/guruplug/tips.html#tips013" title="LEDを操作してみよう">LEDを操作してみよう</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第66回 Ruby関西 勉強会に参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2015-04-25-rubykansai66.html"/>
    <updated>2015-04-25T13:26:49+09:00</updated>
    <id>http://blog.n-z.jp/blog/rubykansai66</id>
    <content type="html"><![CDATA[<p><a href="https://rubykansai.doorkeeper.jp/events/21276" title="第66回 Ruby関西 勉強会">第66回 Ruby関西 勉強会</a>
に参加したので、そのメモです。</p>

<!--more-->


<h2>勉強会自体の URL</h2>

<ul>
<li><a href="https://rubykansai.doorkeeper.jp/events/21276" title="doorkeeper">doorkeeper</a></li>
<li><a href="https://github.com/rubykansai/workshops/wiki/Kansaiworkshop066" title="github">github</a></li>
</ul>


<h2>GitLab Flow</h2>

<ul>
<li><a href="https://speakerdeck.com/ogom/gres">https://speakerdeck.com/ogom/gres</a></li>
<li>1 スクラムマスターに依頼</li>
<li>2 イシュー登録</li>
<li>3 エンジニアにアサイン</li>
<li>4 見に行く</li>
<li>5 コードに反映</li>
<li>6 ブランチにコミット</li>
<li>7 エビデンスを登録</li>
<li>8 リモートブランチにあげる</li>
<li>9 コードレビューのためのマージリクエスト (pull request)</li>
<li>10 レビュアーをアサイン</li>
<li>11 リクエストを見る</li>
<li>12 コードを見る</li>
<li>13 リファクタリング</li>
<li>14 マージリクエストを評価</li>
<li>15 スクラムマスターに知らせる</li>
<li>16 スクラムマスターがイシューのエビデンスを確認する (コードはレビュアーが見ているので見ない)</li>
<li>17 マージとリリース</li>
<li>DDD.rb</li>
<li><a href="http://kanban.leanlabs.io/">http://kanban.leanlabs.io/</a></li>
<li><a href="https://gitlab.com/ogom/gres/blob/master/README.md">https://gitlab.com/ogom/gres/blob/master/README.md</a></li>
</ul>


<h2>ノンプログラマーが6ヶ月でWebサービスを作る課程で感じた事</h2>

<ul>
<li><a href="http://email.nyusureta.com/" title="ニュースレター配信システム Easy Follow E-mail System">ニュースレター配信システム Easy Follow E-mail System</a></li>
<li><a href="http://www.slideshare.net/soheiyagi/ruby20150425" title="ノンプログラマーが6ヶ月でWebサービスを作る課程で感じた事／Ruby関西20150425">ノンプログラマーが6ヶ月でWebサービスを作る課程で感じた事／Ruby関西20150425</a></li>
</ul>


<h2>ハマるRuby</h2>

<ul>
<li>填まる／嵌まる (後者)</li>
<li><code>and</code>/<code>or</code> と <code>&amp;&amp;</code>/<code>||</code> の優先順位が違う話</li>
<li>代入演算子の返り値</li>
<li><code>super</code> で参照される引数を書き換えたときの挙動の話</li>
<li>定数のスコープの話</li>
</ul>


<h2>Ruby初級者向けレッスン</h2>

<ul>
<li>文字列</li>
<li>Emacs で rcodetools</li>
<li><a href="https://gist.github.com/higaki/8147246">https://gist.github.com/higaki/8147246</a></li>
<li><a href="https://github.com/higaki/learn_ruby_kansai_66">https://github.com/higaki/learn_ruby_kansai_66</a></li>
<li><a href="http://docs.ruby-lang.org/ja/">http://docs.ruby-lang.org/ja/</a></li>
<li><a href="http://qa.atmarkit.co.jp/q/2026" title="Rubyのsize/length/countの違いは？">Rubyのsize/length/countの違いは？</a></li>
</ul>


<h3>解答例</h3>

<p>演習問題の 1 と 3 をやってみた例です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#!/usr/bin/env ruby</span>
</span><span class='line'><span class="c1"># coding: utf-8</span>
</span><span class='line'><span class="n">s</span> <span class="o">=</span> <span class="o">&lt;&lt;</span><span class="no">EOF</span>
</span><span class='line'><span class="sh">文 字</span>
</span><span class='line'><span class="sh">文字</span>
</span><span class='line'><span class="no">EOF</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">s</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">)</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">s</span><span class="o">.</span><span class="n">lines</span><span class="o">.</span><span class="n">size</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">s</span><span class="o">.</span><span class="n">scan</span><span class="p">(</span><span class="sr">/(?u)\w+/</span><span class="p">)</span><span class="o">.</span><span class="n">size</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">s</span><span class="o">.</span><span class="n">chars</span><span class="o">.</span><span class="n">size</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">s</span><span class="o">.</span><span class="n">bytes</span><span class="o">.</span><span class="n">size</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 試行錯誤例</span>
</span><span class='line'><span class="nb">p</span> <span class="n">s</span><span class="o">.</span><span class="n">each_line</span><span class="o">.</span><span class="n">size</span> <span class="c1"># nil ??</span>
</span><span class='line'><span class="nb">p</span> <span class="n">s</span><span class="o">.</span><span class="n">scan</span><span class="p">(</span><span class="sr">/(?u:\w)+/</span><span class="p">)</span><span class="o">.</span><span class="n">size</span>
</span><span class='line'><span class="nb">p</span> <span class="n">s</span><span class="o">.</span><span class="n">scan</span><span class="p">(</span><span class="sr">/[[:graph:]]+/</span><span class="p">)</span><span class="o">.</span><span class="n">size</span>
</span><span class='line'><span class="nb">p</span> <span class="n">s</span><span class="o">.</span><span class="n">each_char</span><span class="o">.</span><span class="n">size</span>
</span><span class='line'><span class="nb">p</span> <span class="n">s</span><span class="o">.</span><span class="n">each_byte</span><span class="o">.</span><span class="n">size</span>
</span></code></pre></td></tr></table></div></figure>


<p>ランダムに入れ替え。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">cambridge</span><span class="o">.</span><span class="n">gsub!</span><span class="p">(</span><span class="sr">/\b([^ ])([^ ]+?)([^ ])\b/</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>  <span class="o">[</span><span class="vg">$1</span><span class="p">,</span> <span class="o">*</span><span class="vg">$2</span><span class="o">.</span><span class="n">chars</span><span class="o">.</span><span class="n">shuffle</span><span class="p">,</span> <span class="vg">$3</span><span class="o">].</span><span class="n">join</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>動作確認用に reverse にしていた時。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">cambridge</span><span class="o">.</span><span class="n">gsub!</span><span class="p">(</span><span class="sr">/\b([^ ])([^ ]+?)([^ ])\b/</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>  <span class="o">[</span><span class="vg">$1</span><span class="p">,</span> <span class="o">*</span><span class="vg">$2</span><span class="o">.</span><span class="n">chars</span><span class="o">.</span><span class="n">reverse</span><span class="p">,</span> <span class="vg">$3</span><span class="o">].</span><span class="n">join</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>告知</h2>

<ul>
<li><a href="https://rubykansai.doorkeeper.jp/events/23266" title="第67回 Ruby関西 勉強会">第67回 Ruby関西 勉強会</a> は 6 月 13 日 (土) に京都女子大学</li>
<li><a href="http://rubykansai.github.io/kansai06/" title="関西Ruby会議06">関西Ruby会議06</a> は 7 月 11 日 (土) に新大阪 MOTEX 2 階ホール</li>
<li>などなど</li>
</ul>

]]></content>
  </entry>
  
</feed>
