<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[ZnZ Blog]]></title>
  <link href="http://blog.n-z.jp/atom.xml" rel="self"/>
  <link href="http://blog.n-z.jp/"/>
  <updated>2013-09-20T20:08:30+09:00</updated>
  <id>http://blog.n-z.jp/</id>
  <author>
    <name><![CDATA[Kazuhiro NISHIYAMA]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ubuntuでの対応が悪いと感じた話]]></title>
    <link href="http://blog.n-z.jp/blog/2013-09-20-ubuntu-bugs-related-me.html"/>
    <updated>2013-09-20T19:43:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/ubuntu-bugs-related-me</id>
    <content type="html"><![CDATA[<p>このエントリは愚痴が含まれます。
そういうのが嫌な人は読まない方が良いですよ。
警告しましたからね。</p>

<!--more-->


<p>結論としては、こういういろいろなことが積み重なって、
最近は ubuntu にはあまり積極的には貢献をしないようになった
という話です。</p>

<p>コミュニティ運営のアンチパターンの例として使えるのかもしれません。</p>

<p>最初の4項目は Ubuntu の Launchpad での話で、
後の2項目は ubuntu-jp での話です。</p>

<p>もちろん、対応が悪かったものだけ集めているので、
他の多数のバグの対応は良かったことが多いです。
全体的に Ubuntu のバグ対応は
Debian に比べると遅いという気はしますが。</p>

<h2>最近の例 (bind9)</h2>

<p>最初は Ubuntu 12.04 LTS の <code>bind9</code> の
<code>/etc/bind/db.root</code> が更新されない話です。</p>

<p>どういう話かというと
D-ROOT-SERVERS.NET に IPv6 アドレスが追加されて、
その後 IPv4 アドレスの変更があったのに <code>db.root</code> が
更新されないという話です。</p>

<p>ちょっと探して見つかっただけでも4個見つかります。
4個目のは3個目の重複という印がついてます。</p>

<ul>
<li><a href="https://launchpad.net/ubuntu/+source/bind9/+bug/1023600">db.root file outdated</a></li>
<li><a href="https://bugs.launchpad.net/ubuntu/+source/bind9/+bug/1160464">Bind db.root outdated, backport only the db.root file, for LTS important to keep db.root updated</a></li>
<li><a href="https://bugs.launchpad.net/ubuntu/+source/bind9/+bug/1090593">D.ROOT-SERVERS.NET changing January 3rd 2013</a></li>
<li><a href="https://bugs.launchpad.net/ubuntu/+source/bind9/+bug/1097050">d-root ipv4 has changed. Update db.root to show this</a></li>
</ul>


<p>IPv6 アドレスが追加された時点では重要ではないということで、
次の更新があれば一緒に更新するという反応だったようですが、
2013年1月3日に IPv4 アドレスが変更されて、
その後、移行期間として6ヶ月あったのですが、
それが終わった後も更新されないままです。</p>

<p>事前に見つけていた上2個のbugは移行期間中につつてみたりしたのですが、
全く反応がありませんでした。</p>

<p>そして未だに更新されていません。
これはひどいと思います。</p>

<h2>quick-fix?</h2>

<p><a href="https://bugs.launchpad.net/ubuntu-website-content/+bug/619920">Version mismatch of link in Code of Conduct</a>
で CoC の説明のバージョンが間違っていると指摘した時の話です。</p>

<p>一度 Confirmed になったのに Invalid になったというのが
嫌な印象を受けました。</p>

<h2>dbskkd-cdb を rebuild するだけの簡単なお仕事</h2>

<p><a href="https://bugs.launchpad.net/ubuntu/+source/dbskkd-cdb/+bug/58355">wrong reply via netkit-inetd</a>
で dbskkd-cdb を rebuild するだけで直るという報告をしたつもりだったのですが、
今見直してみると、こちらの反応がなかったのが悪かったようにも見えました。
追加情報を求められた時にはもう使ってなかったとはいえ、ちょっと反省。</p>

<h2>気付くのが遅すぎた</h2>

<p><a href="https://bugs.launchpad.net/ubuntu/+source/inspircd/+bug/978206">FreezeException request&mdash; Sync with Debian unstable</a>
で inspircd が古すぎて upstream の
セキュリティアップデートも出ないようなバージョンなので、
まずいんじゃないかと伝えてみたつもりだったんですが、
結局古いまま入ってしまいました。</p>

<p>古いまま入るぐらいなら消せば良かったのに、と思いましたが、
英語で書けなかった
(そもそも最初の説明も書けなかったのでリンクですませた)
ので、
自分で使うのは inspircd を止めて ngircd に乗り換えました。</p>

<h2>何もやってない (ように見える) 話</h2>

<p>「#ubuntu-jp IRCミーティングの議事録」というのが
ubuntu-jp の ML に流れるのですが、
アクションアイテムの冒頭が毎回同じで、
そこだけみると
(というかいつも最初の数行しかみてないのですが)
いつも何もしていないように見えるので、
順番を変えた方が良いんじゃないか、
というようなことを IRC とかで言ってみたことが
あるのですが、何も変わりませんでした。</p>

<h2>査読とは?</h2>

<p>アクションアイテムをもうちょっと下まで見た時に
<code>* [ ] 誰か査読して！</code>
と書いてあったので、
読んでみて返信してみたのですが、
次の週もそのままだったので、
あれは査読に含まれないのかと思ってがっかりしました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Macでirbなどでの文字化けを直した]]></title>
    <link href="http://blog.n-z.jp/blog/2013-09-20-mojibake-irb-on-mac.html"/>
    <updated>2013-09-20T18:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/mojibake-irb-on-mac</id>
    <content type="html"><![CDATA[<p>基本的には
<a href="http://qiita.com/irohiroki/items/c82657b5cb4bdb2aaac4">rails cで日本語が通らないときの直し方</a>
のやり方そのままで、
one liner としてまとめただけです。</p>

<p>先に結論を書いておくと
<code>install_name_tool -change /usr/lib/libedit.3.dylib $(brew list readline | grep libreadline.dylib) $(ruby -r readline -e 'puts $".grep /readline/')</code>
になりました。</p>

<!--more-->


<h2><code>readline.bundle</code> の探し方</h2>

<p>まず <code>readline.bundle</code> の探し方です。</p>

<p>実際に <code>require 'readline'</code> した時の
<code>$LOADED_FEATURES</code> から
探すのが確実ということで、
<code>ruby -r readline -e 'puts $".grep /readline/'</code>
としました。
試したところ、
<code>Array#grep</code>
で見つかるのが1個だけだったので、
そのまま <code>puts</code> しています。
複数見つかるようならもう少し調整が必要だと思います。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% ruby -r readline -e 'puts $".grep /readline/'
</span><span class='line'>/Users/kazu/.rbenv/versions/2.0.0-p247/lib/ruby/2.0.0/x86_64-darwin12.4.1/readline.bundle
</span><span class='line'>% otool -L $(ruby -r readline -e 'puts $".grep /readline/')</span></code></pre></td></tr></table></div></figure>


<h2>readline のインストール</h2>

<p>homebrew を使っているので、
<code>brew install readline</code>
でインストールしました。</p>

<p>インストールされた
<code>libreadline</code>
の場所は
<code>brew list readline | grep libreadline.dylib</code>
で調べました。</p>

<p><code>libedit</code>
が
<code>/usr/lib/libedit.3.dylib</code>
という名前でリンクされているので、
<code>libreadline.6.dylib</code>
という名前を使った方が良いのかもしれませんが、
homebrew でインストールされているパスに
バージョンが含まれていて、
ファイル名にバージョンを含めても意味がないと思って、
バージョンなしにしました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% brew list readline | grep libreadline.dylib
</span><span class='line'>/usr/local/Cellar/readline/6.2.4/lib/libreadline.dylib</span></code></pre></td></tr></table></div></figure>


<h2><code>install_name_tool</code></h2>

<p>Qiita の記事にあったように
<code>install_name_tool -change /usr/lib/libedit.3.dylib $(brew list readline | grep libreadline.dylib) $(ruby -r readline -e 'puts $".grep /readline/')</code>
でリンクを変更しました。
念のため、実行前に
<code>ruby -rpp -e 'pp ARGV' --</code>
で実行内容を確認してから実行しました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% ruby -rpp -e 'pp ARGV' -- install_name_tool -change /usr/lib/libedit.3.dylib $(brew list readline | grep libreadline.dylib) $(ruby -r readline -e 'puts $".grep /readline/')
</span><span class='line'>["install_name_tool",
</span><span class='line'> "-change",
</span><span class='line'> "/usr/lib/libedit.3.dylib",
</span><span class='line'> "/usr/local/Cellar/readline/6.2.4/lib/libreadline.dylib",
</span><span class='line'> "/Users/kazu/.rbenv/versions/2.0.0-p247/lib/ruby/2.0.0/x86_64-darwin12.4.1/readline.bundle"]
</span><span class='line'>% install_name_tool -change /usr/lib/libedit.3.dylib $(brew list readline | grep libreadline.dylib) $(ruby -r readline -e 'puts $".grep /readline/')</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[jQuery UI Autocomplete を自動で開く]]></title>
    <link href="http://blog.n-z.jp/blog/2013-09-18-auto-open-autocomplete.html"/>
    <updated>2013-09-18T15:43:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/auto-open-autocomplete</id>
    <content type="html"><![CDATA[<p>Google カレンダーの時刻入力のように combobox 的な入力欄で、
デフォルトは選択肢から選んで、
選択肢にないときは直接入力も出来るようにしたいと思いました。</p>

<p>いくつかの方法を試した結果、
jQuery UI の Autocomplete に少しコードを足したら
希望通りの挙動に出来ました。</p>

<!--more-->


<h2>HTML5 の datalist と autocomplete</h2>

<p>最初は HTML5 の datalist 要素を試しました。
<code>simple_form</code> gem を使っているので、
以下のように書きました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='haml'><span class='line'><span class="p">=</span> <span class="n">f</span><span class="o">.</span><span class="n">input</span> <span class="ss">:drink</span><span class="p">,</span> <span class="n">input_html</span><span class="p">:</span> <span class="p">{</span> <span class="ss">autocomplete</span><span class="p">:</span> <span class="s2">&quot;on&quot;</span><span class="p">,</span> <span class="ss">list</span><span class="p">:</span> <span class="s2">&quot;drink_list&quot;</span> <span class="p">}</span>
</span><span class='line'><span class="nt">%datalist</span><span class="nf">#drink_list</span>
</span><span class='line'>  <span class="nt">%options</span>(<span class="na">value=</span><span class="s">&quot;不要&quot;</span>)
</span><span class='line'>  <span class="nt">%options</span>(<span class="na">value=</span><span class="s">&quot;水&quot;</span>)
</span><span class='line'>  <span class="nt">%options</span>(<span class="na">value=</span><span class="s">&quot;お茶&quot;</span>)
</span><span class='line'>  <span class="nt">%options</span>(<span class="na">value=</span><span class="s">&quot;コーヒー&quot;</span>)
</span></code></pre></td></tr></table></div></figure>


<p>この方法の問題点としては、
IE は IE10 (以降?) しか対応していなかったり、
Mobile Safari も対応してなさそうだったりして
対応環境が微妙だったのと、
入力欄にフォーカスだけで自動で開くという挙動が出来なくて、
矢印の上下で開く必要があったので、
諦めました。</p>

<h2>Bootstrap Typeahead</h2>

<p>挙動としては
HTML5 の datalist の方法や
jQuery UI Autocomplete と似ていたのですが、
Bootstrap 3 では外されているという話があったり、
別途新しい typeahead.js が開発されているという話があったりして、
先にある程度 jQuery UI Autocomplete を試していたこともあり、
別途新しいライブラリを入れるなどの深追いはせずに
jQuery UI Autocomplete を使うことにしました。</p>

<h2>jQuery UI Autocomplete</h2>

<p><code>jquery-ui-rails</code> gem を使っていて、
必要なものだけ CSS や JS を require していたので、
まず <code>app/assets/stylesheets/application.css</code> に</p>

<figure class='code'><figcaption><span>application.css</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'> *= require jquery.ui.autocomplete
</span></code></pre></td></tr></table></div></figure>


<p>を追加しました。</p>

<p>次に <code>app/assets/javascripts/autocomplete.js.coffee</code> として
以下のような内容で作成しました。</p>

<figure class='code'><figcaption><span>autocomplete.js.coffee</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="c1">#= require jquery.ui.autocomplete</span>
</span><span class='line'><span class="nx">jQuery</span> <span class="nf">-&gt;</span>
</span><span class='line'>  <span class="nv">drink_list = </span><span class="p">[</span>
</span><span class='line'>    <span class="s">&quot;不要&quot;</span>
</span><span class='line'>    <span class="s">&quot;水&quot;</span>
</span><span class='line'>    <span class="s">&quot;お茶&quot;</span>
</span><span class='line'>    <span class="s">&quot;コーヒー&quot;</span>
</span><span class='line'>  <span class="p">]</span>
</span><span class='line'>  <span class="nx">$</span><span class="p">(</span><span class="s">&quot;</span><span class="err">#</span><span class="s">somemodel_drink&quot;</span><span class="p">).</span><span class="nx">autocomplete</span>
</span><span class='line'>    <span class="nv">source: </span><span class="nx">drink_list</span>
</span><span class='line'>    <span class="nv">autoFocus: </span><span class="kc">true</span>
</span><span class='line'>    <span class="nv">delay: </span><span class="mi">0</span>
</span><span class='line'>    <span class="nv">minLength: </span><span class="mi">0</span>
</span><span class='line'>  <span class="p">.</span><span class="nx">on</span> <span class="s">&quot;focus&quot;</span><span class="p">,</span> <span class="nf">-&gt;</span>
</span><span class='line'>    <span class="nx">$</span><span class="p">(</span><span class="s">&quot;</span><span class="err">#</span><span class="s">somemodel_drink&quot;</span><span class="p">).</span><span class="nx">autocomplete</span><span class="p">(</span><span class="s">&quot;search&quot;</span><span class="p">,</span> <span class="s">&quot;&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>余談</h2>

<p>今回の話とは直接は関係ないのですが、
ファイルを細かく分割すると管理しやすくなるのは良いのですが、
他のライブラリの中のファイル名と重ならないようにしないと
<code>bootstrap.js.coffee</code> の中で <code>#= require bootstrap</code> しても
自分自身を <code>require</code> してしまって空っぽになって悩むことに
なるので注意が必要でした。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[devise 3.0.3 と devise 3.1.0 で自動生成されるファイルの違い]]></title>
    <link href="http://blog.n-z.jp/blog/2013-09-18-devise30-devise31.html"/>
    <updated>2013-09-18T15:09:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/devise30-devise31</id>
    <content type="html"><![CDATA[<p><a href="https://gist.github.com/znz/6603471">devise 3.0.3 と devise 3.1.0 で自動生成されるファイルの差分</a>
をとって、バージョンアップした時に対応が必要な場所を調べました。</p>

<!--more-->


<h2>対応が必要な場所</h2>

<p>最初に結論をまとめておきます。</p>

<ul>
<li><code>config/initializers/devise.rb</code> に <code>config.secret_key</code> を追加。

<ul>
<li>これは <code>rails</code> コマンドを実行しようとした時などにエラーとどういう内容を追加すれば良いのかが出るのですぐに気付きます。</li>
</ul>
</li>
<li><code>rails generate devise:views</code> をしていたのなら

<ul>
<li><code>app/views/devise/mailer</code> の <code>token</code> 周り</li>
<li><code>app/views/devise/shared/_links.erb</code> の <code>devise_mapping.recoverable?</code> の行
の修正が必要です。</li>
</ul>
</li>
<li><code>app/models/user.rb</code> の <code>:token_authenticatable</code> の削除の検討

<ul>
<li>削除しなくても動いているので、すぐに削除する必要はなさそうですが、
<code>rails generate devise User</code> で生成される例からなくなっているので
削除を検討した方が良さそうです。</li>
</ul>
</li>
<li>データベースのテーブルの変更に追従するなら
<code>migration</code> を作って対応すれば良さそうです。</li>
</ul>


<h2>対象バージョン</h2>

<p>rails 3.2.14 との組み合わせで devise 3.0.3 と devise 3.1.0 で比較しました。
細かいバージョンは
<a href="https://gist.github.com/znz/6603471#file-bundle-list-in-devise30-txt">devise 3.0.3 の時の bundle list</a>
と
<a href="https://gist.github.com/znz/6603471#file-bundle-list-in-devise31-txt">devise 3.1.0 の時の bundle list</a>
を参照してください。</p>

<h2><code>rails generate devise:install</code> の差分</h2>

<p><code>rails generate devise:install</code> の差分のうち、
<a href="https://gist.github.com/znz/6603471#file-initializer-diff">config/initializers/devise.rb の差分</a>
は <code>"</code> から <code>'</code> への変更などもあって本質的ではない部分も多かったので、
<a href="https://gist.github.com/znz/6603471#file-initializer-tr-diff">tr で処理した差分</a>
を作ってみたところ、本質的には
<code>config.secret_key =</code>
の行の追加だけでした。</p>

<p><a href="https://gist.github.com/znz/6603471#file-locale-diff">config/locales/devise.en.yml の差分</a>
もあるので、
<code>locales</code>
のファイルも更新しておくと良さそうです。</p>

<h2><code>rails generate devise User</code> の差分</h2>

<p><code>rails generate devise User</code> の差分として、
<a href="https://gist.github.com/znz/6603471#file-devise_create_users-diff">migration の差分</a>
は
<code>sign_in_count</code> と <code>failed_attempts</code> への <code>NOT NULL</code> 制約の追加と
Token authenticatable 用の <code>authentication_token</code> の削除なので、
対応する変更をする <code>migration</code> を作って対応するか、
気にせず古いまま使えば良さそうです。</p>

<p><code>app/models/user.rb</code> からもコメントの中のモジュール例にあった
<code>token_authenticatable</code> が削除されています。</p>

<p><code>config/routes.rb</code> に追加される <code>devise_for :users</code> は同じでした。</p>

<h2><code>rails generate devise:views</code> の差分</h2>

<p><a href="https://gist.github.com/znz/6603471#file-views-diff">app/views の差分</a>
は
<code>@resource.なんとか_token</code>
だったものが
<code>@token</code>
に変わっているのと、
<code>app/views/devise/shared/_links.erb</code>
の
<code>if devise_mapping.recoverable? &amp;&amp; controller_name != 'passwords'</code>
が
<code>if devise_mapping.recoverable? &amp;&amp; controller_name != 'passwords' &amp;&amp; controller_name != 'registrations'</code>
に変わっているのが
主な変更でした。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu Server 12.04.3 LTS をインストールした]]></title>
    <link href="http://blog.n-z.jp/blog/2013-09-15-ubuntu-server-installed.html"/>
    <updated>2013-09-15T20:02:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/ubuntu-server-installed</id>
    <content type="html"><![CDATA[<p>自宅サーバーのシステムディスク (sda) が壊れたので、 HDD を入れ替えて、せっかくなのでシステムをきれいな状態にするために <code>ubuntu-12.04.3-server-amd64.iso</code> からインストールし直しました。
その初期設定の話です。</p>

<!--more-->


<h2>インストール準備</h2>

<h3>ISO イメージダウンロード</h3>

<p>まずインストール用の ISO ファイルをダウンロードしました。
<a href="http://www.ubuntu.com/download">Get Ubuntu</a>
からだと海外ミラーでダウンロードが遅かったので、
国内のミラーを探してみたところ、
<code>ftp://ftp.riken.go.jp/Linux/ubuntu-iso/CDs/precise/</code>
だと torrent ファイルや metalink のファイルしか見えなくて、
<code>ftp</code> ではなく <code>http</code> の
<code>http://ftp.riken.go.jp/Linux/ubuntu-iso/CDs/precise/</code>
からだとダウンロード出来ました。</p>

<h3>起動用 USB メモリ準備</h3>

<p>ダウンロードした ISO を <code>dd</code> で USB メモリに書き込んで、そこからインストールしました。
categories につけた Mac を使っている部分はここだけです。</p>

<p>ネットで調べればいろいろ情報がみつかるように
<code>diskutil list</code>
でディスクの番号を確認して、
<code>dd</code> で読み書きします。
<code>rdisk</code> の方が速いらしいので、
実際の書き込みには <code>rdisk</code> を使ったのですが、
パーティションを <code>unmount</code> しておかないと
<code>Resource busy</code> で書き込ませんでした。
eject してしまって <code>diskutil list</code> にも
出てこない状態にしてしまうと読み書き出来ないので、
Finder から取り出したり <code>diskutil unmountDisk</code> だと
ダメでした。</p>

<p>読み込みの例として MBR の部分をバックアップしてダンプしてみました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% diskutil list
</span><span class='line'>/dev/disk0
</span><span class='line'>   #:                       TYPE NAME                    SIZE       IDENTIFIER
</span><span class='line'>   0:      GUID_partition_scheme                        *251.0 GB   disk0
</span><span class='line'>   1:                        EFI                         209.7 MB   disk0s1
</span><span class='line'>   2:          Apple_CoreStorage                         250.1 GB   disk0s2
</span><span class='line'>   3:                 Apple_Boot Recovery HD             650.0 MB   disk0s3
</span><span class='line'>/dev/disk1
</span><span class='line'>   #:                       TYPE NAME                    SIZE       IDENTIFIER
</span><span class='line'>   0:                  Apple_HFS Macintosh HD           *249.8 GB   disk1
</span><span class='line'>/dev/disk2
</span><span class='line'>   #:                       TYPE NAME                    SIZE       IDENTIFIER
</span><span class='line'>   0:     FDisk_partition_scheme                        *16.1 GB    disk2
</span><span class='line'>   1:             Windows_FAT_32 NO NAME                 16.1 GB    disk2s1
</span><span class='line'>% sudo dd if=/dev/disk2 of=MF-AU316GBS.mbr bs=512 count=1
</span><span class='line'>% hexdump -C MF-AU316GBS.mbr
</span><span class='line'>00000000  33 c0 8e d0 bc 00 7c fb  50 07 50 1f fc be 1b 7c  |3.....|.P.P....||
</span><span class='line'>00000010  bf 1b 06 50 57 b9 e5 01  f3 a4 cb bd be 07 b1 04  |...PW...........|
</span><span class='line'>00000020  38 6e 00 7c 09 75 13 83  c5 10 e2 f4 cd 18 8b f5  |8n.|.u..........|
</span><span class='line'>00000030  83 c6 10 49 74 19 38 2c  74 f6 a0 b5 07 b4 07 8b  |...It.8,t.......|
</span><span class='line'>00000040  f0 ac 3c 00 74 fc bb 07  00 b4 0e cd 10 eb f2 88  |..&lt;.t...........|
</span><span class='line'>00000050  4e 10 e8 46 00 73 2a fe  46 10 80 7e 04 0b 74 0b  |N..F.s*.F..~..t.|
</span><span class='line'>00000060  80 7e 04 0c 74 05 a0 b6  07 75 d2 80 46 02 06 83  |.~..t....u..F...|
</span><span class='line'>00000070  46 08 06 83 56 0a 00 e8  21 00 73 05 a0 b6 07 eb  |F...V...!.s.....|
</span><span class='line'>00000080  bc 81 3e fe 7d 55 aa 74  0b 80 7e 10 00 74 c8 a0  |..&gt;.}U.t..~..t..|
</span><span class='line'>00000090  b7 07 eb a9 8b fc 1e 57  8b f5 cb bf 05 00 8a 56  |.......W.......V|
</span><span class='line'>000000a0  00 b4 08 cd 13 72 23 8a  c1 24 3f 98 8a de 8a fc  |.....r#..$?.....|
</span><span class='line'>000000b0  43 f7 e3 8b d1 86 d6 b1  06 d2 ee 42 f7 e2 39 56  |C..........B..9V|
</span><span class='line'>000000c0  0a 77 23 72 05 39 46 08  73 1c b8 01 02 bb 00 7c  |.w#r.9F.s......||
</span><span class='line'>000000d0  8b 4e 02 8b 56 00 cd 13  73 51 4f 74 4e 32 e4 8a  |.N..V...sQOtN2..|
</span><span class='line'>000000e0  56 00 cd 13 eb e4 8a 56  00 60 bb aa 55 b4 41 cd  |V......V.`..U.A.|
</span><span class='line'>000000f0  13 72 36 81 fb 55 aa 75  30 f6 c1 01 74 2b 61 60  |.r6..U.u0...t+a`|
</span><span class='line'>00000100  6a 00 6a 00 ff 76 0a ff  76 08 6a 00 68 00 7c 6a  |j.j..v..v.j.h.|j|
</span><span class='line'>00000110  01 6a 10 b4 42 8b f4 cd  13 61 61 73 0e 4f 74 0b  |.j..B....aas.Ot.|
</span><span class='line'>00000120  32 e4 8a 56 00 cd 13 eb  d6 61 f9 c3 49 6e 76 61  |2..V.....a..Inva|
</span><span class='line'>00000130  6c 69 64 20 70 61 72 74  69 74 69 6f 6e 20 74 61  |lid partition ta|
</span><span class='line'>00000140  62 6c 65 00 45 72 72 6f  72 20 6c 6f 61 64 69 6e  |ble.Error loadin|
</span><span class='line'>00000150  67 20 6f 70 65 72 61 74  69 6e 67 20 73 79 73 74  |g operating syst|
</span><span class='line'>00000160  65 6d 00 4d 69 73 73 69  6e 67 20 6f 70 65 72 61  |em.Missing opera|
</span><span class='line'>00000170  74 69 6e 67 20 73 79 73  74 65 6d 00 00 00 00 00  |ting system.....|
</span><span class='line'>00000180  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
</span><span class='line'>*
</span><span class='line'>000001b0  00 00 00 00 00 2c 44 63  18 2e 07 c3 00 00 00 00  |.....,Dc........|
</span><span class='line'>000001c0  31 00 0c fe ff ff 30 00  00 00 50 f6 de 01 00 00  |1.....0...P.....|
</span><span class='line'>000001d0  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
</span><span class='line'>*
</span><span class='line'>000001f0  00 00 00 00 00 00 00 00  00 00 00 00 00 00 55 aa  |..............U.|
</span><span class='line'>00000200
</span><span class='line'>%  sudo dd if=Downloads/ubuntu-12.04.3-server-amd64.iso of=/dev/rdisk2 bs=1m
</span><span class='line'>Password:
</span><span class='line'>dd: /dev/rdisk2: Resource busy
</span><span class='line'>%  diskutil unmount disk2s1
</span><span class='line'>Volume NO NAME on disk2s1 unmounted
</span><span class='line'>%  diskutil list
</span><span class='line'>/dev/disk0
</span><span class='line'>   #:                       TYPE NAME                    SIZE       IDENTIFIER
</span><span class='line'>   0:      GUID_partition_scheme                        *251.0 GB   disk0
</span><span class='line'>   1:                        EFI                         209.7 MB   disk0s1
</span><span class='line'>   2:          Apple_CoreStorage                         250.1 GB   disk0s2
</span><span class='line'>   3:                 Apple_Boot Recovery HD             650.0 MB   disk0s3
</span><span class='line'>/dev/disk1
</span><span class='line'>   #:                       TYPE NAME                    SIZE       IDENTIFIER
</span><span class='line'>   0:                  Apple_HFS Macintosh HD           *249.8 GB   disk1
</span><span class='line'>/dev/disk2
</span><span class='line'>   #:                       TYPE NAME                    SIZE       IDENTIFIER
</span><span class='line'>   0:     FDisk_partition_scheme                        *16.1 GB    disk2
</span><span class='line'>   1:             Windows_FAT_32 NO NAME                 16.1 GB    disk2s1
</span><span class='line'>%  sudo dd if=Downloads/ubuntu-12.04.3-server-amd64.iso of=/dev/rdisk2 bs=1m
</span><span class='line'>665+0 records in
</span><span class='line'>665+0 records out
</span><span class='line'>697303040 bytes transferred in 41.551843 secs (16781519 bytes/sec)
</span><span class='line'>%</span></code></pre></td></tr></table></div></figure>


<p>この USB メモリを自作マシンにさして起動してインストールすることになります。</p>

<h2>インストール</h2>

<p>インストール作業は暗号化する以外はあまり特殊なことをせずに最小インストールにしました。</p>

<ul>
<li>Del キーで EFI BOIS Menu を開いて、起動メニューを開いて USB メモリからを選んで起動しました。</li>
<li>タスク (tasksel) は何も選択せずにインストールしました。</li>
<li>1TB の HDD (sda) を暗号化 LVM で初期化しました。</li>
</ul>


<h2>初期設定</h2>

<h3>etckeeper</h3>

<ul>
<li><code>sudo aptitude install git</code></li>
<li><code>sudo aptitude install etckeeper</code></li>
<li><code>sudoedit /etc/etckeeper/etckeeper.conf</code> で <code>VCS="git"</code> と <code>GIT_COMMIT_OPTIONS="-v"</code> を設定</li>
<li><code>sudo etckeeper init</code></li>
<li><code>sudo etckeeper commit "Initial commit"</code></li>
</ul>


<h3>ssh</h3>

<p>まず <code>ufw</code> で接続制限をしました。
多段防御の一つ目としてここではポート番号だけの制限にしています。</p>

<ul>
<li><code>sudo ufw enable</code></li>
<li><code>sudo ufw allow 22/tcp</code></li>
<li><code>sudo ufw limit 22/tcp</code>

<ul>
<li><code>サポートされていない IPv6 'limit' ルールを飛ばします</code> と出るので、
IPv6 用に allow と limit の両方を実行しています。</li>
</ul>
</li>
<li><code>sudo ufw allow 3843/tcp</code>

<ul>
<li>22 以外のポートでも待ち受けるなら、それも許可します。</li>
<li>ここでは例として 3843 番ポートにしています。
(実際に使っているポート番号は違います。)</li>
<li>アタックは少なそうなので、<code>limit</code> は付けていません。</li>
</ul>
</li>
</ul>


<p>次に tcp wrapper で接続制限をしました。
ここでは接続元の制限をしています。
接続元として使っていて、逆引きが <code>.jp</code> でないところなどは
別途 <code>sshd: 10.1.2.3</code> のように許可していきます。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ egrep '^[^#]' /etc/hosts.deny
</span><span class='line'>ALL: ALL
</span><span class='line'>$ egrep '^[^#]' /etc/hosts.allow
</span><span class='line'>sshd: 127.0.0.1 [::1]
</span><span class='line'>sshd: 192.168.0.0/16
</span><span class='line'>sshd: .jp</span></code></pre></td></tr></table></div></figure>


<p>最後に <code>/etc/sshd/sshd_config</code> の設定例です。
<code>ssh_config</code> とは別物なので注意が必要です。</p>

<ul>
<li><code>Port 3843</code> を追加します。

<ul>
<li>複数ポートで待ち受けるには <code>Port</code> 設定の行を複数書けば良いです。</li>
</ul>
</li>
<li><code>PermitRootLogin no</code> にします。
<code>root</code> ログインが必要なら
<code>PermitRootLogin forced-commands-only</code> か
<code>PermitRootLogin without-password</code> にすればよく、
公開サーバーで <code>PermitRootLogin yes</code> にする必要はないはずです。</li>
<li><code>AllowUsers firstuser</code> で最初のユーザーのログインを許可します。</li>
<li>ログインするユーザーの <code>.ssh/authorized_keys</code> の設定をしてから
<code>PasswordAuthentication no</code> の設定をします。
<code>ChallengeResponseAuthentication no</code> になっていることを
確認しておかないと
<code>UsePAM yes</code> との組み合わせで <code>keyboard-interactive</code> 認証が
発生してパスワードで入れてしまうことがあるので注意が必要です。
昔はこれが原因で公開鍵認証のみに制限出来ていないという話が多かった気がします。</li>
</ul>


<h3>quota 設定</h3>

<p>ユーザー ID ごとのディスク使用量の把握のために、 <code>quota</code> を設定します。</p>

<p><code>/etc/fstab</code> の
<code>errors=remount-ro</code> を
<code>errors=remount-ro,noatime,usrquota,grpquota,user_xattr</code>
に書き換えます。</p>

<p><code>quota</code> パッケージを入れておけば、次回起動時に自動で
<code>quotacheck</code> が動いて <code>repquota</code> が使えるようになります。
ファイルが多いと <code>quotacheck</code> に時間がかかるので、
出来るだけ最小インストールでファイルが少ないうちに
有効にした方が時間の節約になります。</p>

<h3>IP アドレス設定</h3>

<p><code>bridge-utils</code> パッケージを入れて、
<code>sudoedit /etc/network/interfaces</code> で
<code>br0</code> ありの固定 IP アドレスの設定に変更しました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># The primary network interface
</span><span class='line'>auto eth0
</span><span class='line'>iface eth0 inet manual
</span><span class='line'>auto br0
</span><span class='line'>iface br0 inet static
</span><span class='line'>  address 192.168.xx.yy
</span><span class='line'>  netmask 255.255.255.0
</span><span class='line'>  gateway 192.168.253.1
</span><span class='line'>  dns-nameservers 192.168.xx.yy
</span><span class='line'>  dns-search home.example.jp
</span><span class='line'>  bridge_ports eth0
</span><span class='line'>  bridge_stp off
</span><span class='line'>  bridge_fd 0
</span><span class='line'>  bridge_maxwait 0</span></code></pre></td></tr></table></div></figure>


<h3>パスフレーズなし起動設定</h3>

<p>リモートから再起動した時などに止まってしまうことを防ぐ設定をします。</p>

<p>これは鍵を暗号化の外に平文で置いておくということで、
セキュリティ的には弱くなってしまうので、
そのトレードオフを許容出来るかどうかを
考えておく必要があります。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo dd if=/dev/random of=/root/sda5_crypt.key bs=512 count=4
</span><span class='line'>dd: warning: partial read (128 bytes); suggest iflag=fullblock
</span><span class='line'>0+4 レコード入力
</span><span class='line'>0+4 レコード出力
</span><span class='line'>447 バイト (447 B) コピーされました、 0.000294833 秒、 1.5 MB/秒
</span><span class='line'>$ sudo chmod 400 /root/sda5_crypt.key
</span><span class='line'>$ sudo cryptsetup luksAddKey /dev/sda5 /root/sda5_crypt.key
</span><span class='line'>パスフレーズを入力:
</span><span class='line'>$ sudo mv /root/sda5_crypt.key /boot/sda5_crypt.key
</span><span class='line'>$ sudoedit /etc/crypttab
</span><span class='line'>$ sudo update-initramfs -u
</span><span class='line'>update-initramfs: Generating /boot/initrd.img-3.8.0-30-generic</span></code></pre></td></tr></table></div></figure>


<p>Ubuntu 12.04 では、
<code>crypttab</code> は
<code>sda5_crypt UUID=(/dev/sda5のUUID) none luks</code>
を
<code>sda5_crypt UUID=(/dev/sda5のUUID) /dev/disk/by-uuid/(/bootのUUID):sda5_crypt.key luks,keyscript=/lib/cryptsetup/scripts/passdev</code>
のように書き換えます。
<code>/bootのUUID</code> は <code>/etc/fstab</code> を参照するのがわかりやすいと思います。
<code>by-uuid</code> だけではなく <code>by-label</code> などのパスも使えると思いますが、
一番誤動作が少なそうな <code>by-uuid</code> を使っています。</p>

<p>その後、
<code>update-initramfs</code>
で
<code>/boot/initrd.img-*</code>
に変更を反映させておく必要があります。</p>

<h3>GRUB で止まるのを防ぐ</h3>

<p><code>/etc/default/grub</code> に
<code>GRUB_RECORDFAIL_TIMEOUT=5</code>
のような設定を追加しておくと
起動時の GRUB で止まることがなくなります。</p>

<p>なぜか前回起動失敗扱いになってしまって、
GRUB で止まってしまう環境があったのですが、
この設定を入れてからは止まらなくなりました。</p>

<p><code>/etc/default/grub</code> の変更は
<code>update-grub</code> で
<code>/boot/grub/grub.cfg</code> に
反映させる必要があります。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudoedit /etc/default/grub
</span><span class='line'>$ sudo update-grub
</span><span class='line'>Generating grub.cfg ...
</span><span class='line'>Found linux image: /boot/vmlinuz-3.8.0-30-generic
</span><span class='line'>Found initrd image: /boot/initrd.img-3.8.0-30-generic
</span><span class='line'>Found linux image: /boot/vmlinuz-3.8.0-29-generic
</span><span class='line'>Found initrd image: /boot/initrd.img-3.8.0-29-generic
</span><span class='line'>Found memtest86+ image: /memtest86+.bin
</span><span class='line'>done</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[独自ビルドした ruby を rbenv で使う]]></title>
    <link href="http://blog.n-z.jp/blog/2013-09-14-use-custom-ruby-with-rbenv.html"/>
    <updated>2013-09-14T23:22:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/use-custom-ruby-with-rbenv</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/sstephenson/rbenv">rbenv</a>
を使っているなら、
<a href="https://github.com/sstephenson/ruby-build">ruby-build</a>
でインストールしたもの以外にも
自分でビルドした ruby も rbenv で切り替えたくなることがありますが、
これは簡単に出来ます。</p>

<!--more-->


<p>元々 <code>rbenv</code> に <code>ruby-build</code> が必須というわけではないので、
<code>configure</code> の <code>--prefix</code> に
<code>~/.rbenv/versions/some-name</code>
を指定してインストールすれば良いだけです。</p>

<p>名前にはシェルで特別な意味を持つ文字を避ければ
何でも良さそうですが、
<code>rbenv install</code> で上書きされてしまう危険があるのと
単純に紛らわしいので、
<code>ruby-build</code> でインストール出来る名前は避けた方が無難だと思います。</p>

<p>例えば以下のように <code>configure</code> してインストールすれば <code>rbenv shell trunk</code> などで <code>ruby-build</code> でインストールしたものと同様に使えます。</p>

<ul>
<li><code>./configure --prefix=$HOME/.rbenv/versions/trunk --enable-shared --enable-debug-env CPPFLAGS=-DRUBY_DEBUG_ENV</code></li>
<li><code>./configure --prefix=$HOME/.rbenv/versions/git --enable-shared --enable-debug-env CPPFLAGS='-DRUBY_DEBUG_ENV -DARRAY_DEBUG'</code></li>
<li><code>./configure --prefix=$HOME/.rbenv/versions/git-debug --enable-shared --enable-debug-env CPPFLAGS='-DRUBY_DEBUG_ENV -DARRAY_DEBUG -DBIGDECIMAL_DEBUG'</code></li>
</ul>


<p><code>$HOME</code> を使っている理由は
<code>--prefix=~/path/to/somewhere</code>
だと <code>configure</code> の実行前には展開されず、
<code>autoconf</code> の <code>configure</code> ではなかったと思いますが、
<code>./~/path/to/somewhere</code>
にインストールされてしまうという問題が起きたことがあったので、
それ以来
<code>$HOME</code>
を使って目の前でフルパスに展開されるようにしています。</p>

<p><code>-DRUBY_DEBUG_ENV</code> などを渡すのに <code>CPPFLAGS</code> を使うのは
<a href="https://github.com/akr/chkbuild">chkbuild</a>
のやり方を
<a href="http://rubyci.org/">Ruby CI</a>
のログをみて参考にしました。</p>

<p>安定したビルドを使いたいのなら、
Ruby CI
で使われているのと同じような引数を使うのが良いと思います。</p>

<p>普段私が使っているのは
<code>CPPFLAGS='-DRUBY_DEBUG_ENV -DARRAY_DEBUG</code>
です。</p>

<p><code>-DBIGDECIMAL_DEBUG</code>
まで付けると、デバッグ出力が多すぎたり、
<code>make test-all</code>
が途中で止まってしまったりして
問題が起きそうなので、
おすすめしません。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[homebrew の reinstall で使われるオプションの保存場所]]></title>
    <link href="http://blog.n-z.jp/blog/2013-09-13-homebrew-used-options.html"/>
    <updated>2013-09-13T21:58:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/homebrew-used-options</id>
    <content type="html"><![CDATA[<p><a href="http://blog.n-z.jp/blog/2013-09-08-rabbiter-on-mac.html">rabbiter の記事</a>
で、
「一度 <code>--with-curl-ca-bundle</code> 付きでインストールした後だと、以下のようにオプションなしの reinstall でもオプションが付くようです。」
と書きましたが、そのオプションがどこに保存されているのかを調べました。</p>

<!--more-->


<p>実際に調べるのはソースをたどったりして結構大変だったのですが、
最終的に
<code>/usr/local/Cellar/glib-networking/2.36.2/INSTALL_RECEIPT.json</code>
に <code>used_options</code> というキーで保存されているということがわかりました。</p>

<p><code>Cellar</code> はインストールしたファイルの実体が入るところなので、
あらかじめダミーの <code>INSTALL_RECEIPT.json</code> を用意しておいて
オプションなしの <code>brew reinstall</code> の時に使われるオプションを
埋め込んでおくという用途に使うのには向いていないということが
わかりました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[td2planet を rubyforge から github に移行してリリース]]></title>
    <link href="http://blog.n-z.jp/blog/2013-09-12-td2planet.html"/>
    <updated>2013-09-12T22:43:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/td2planet</id>
    <content type="html"><![CDATA[<p>tDiary の日付ごとのまとまりを意識したフィードアグリゲータの td2planet を rubyforge から github に移行して、 ruby 2.0.0 対応を確認して、 0.3.0 としてリリースしました。</p>

<!--more-->


<h2>rubyforge から github への移行</h2>

<p>rubyforge は
<a href="http://rubyforge.org/scm/?group_id=3122">RubyForge: TD2Planet: SCM Repository</a>
に書いてあるように http か svn か svn+ssh でアクセス出来ますが、
今回は svn から取得したものを github に移行しました。</p>

<p>小さいレポジトリだったこともあり、手順としては以下のように単純に移行出来ました。</p>

<ol>
<li><code>git svn clone -s svn://rubyforge.org/var/svn/td2planet</code></li>
<li>github 上でレポジトリ作成</li>
<li><code>git remote add origin git@github.com:znz/td2planet.git</code></li>
<li><code>git push -u origin master</code></li>
</ol>


<h2>ruby 2.0.0 対応確認</h2>

<p>単純に README に書いてある <code>ruby -I lib bin/td2planet.rb config.yaml</code> で問題なく動きました。</p>

<p><a href="https://gist.github.com/unak/3038095">The History of Ruby</a>
によると作り始めた 2007 年はまだ 1.9.0 の開発中だったので、
その頃でも magic comment をちゃんと書いたり、
内部エンコーディングは UTF-8 に統一したりなどを
気をつけていれば、
ruby 自体の互換性は高いと言うことがわかります。</p>

<p>他には以下のような変更をしました。</p>

<ul>
<li><code>setup.rb</code> と関連する LGPL 削除など</li>
<li>README と README.ja に拡張子の <code>.rdoc</code> を追加</li>
<li>gemspec 更新

<ul>
<li>homepage を rubyforge から github に変更</li>
<li>README のファイル名変更対応</li>
<li>license 追加</li>
</ul>
</li>
<li>バージョン変更</li>
<li><code>-Ku</code> から ruby が 1.9 未満のときだけ <code>$KCODE</code> を設定に変更</li>
</ul>


<p><code>setup.rb</code> は ruby 1.9 以降に対応しているのかわからなかったのと、
ライセンスを MIT に統一するために削除しました。</p>

<h2>リリース</h2>

<p>別のリリース作業をした時に <code>~/.gem/credentials</code> は作成済みだったので、
リリースは以下の手順だけで出来ました。
<code>~/.gem/credentials</code> がまだないときは <code>gem push</code> の時に <code>rubygems.org</code> のアカウントか <code>rubyforge.org</code> のアカウントが必要になります。</p>

<ul>
<li><code>gem build *.gemspec</code></li>
<li><code>gem push *.gem</code></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% gem build *.gemspec
</span><span class='line'>  Successfully built RubyGem
</span><span class='line'>  Name: td2planet
</span><span class='line'>  Version: 0.3.0
</span><span class='line'>  File: td2planet-0.3.0.gem
</span><span class='line'>% gem push td2planet-0.3.0.gem
</span><span class='line'>Pushing gem to https://rubygems.org...
</span><span class='line'>Successfully registered gem: td2planet (0.3.0)</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[タグクラウドプラグインを入れた]]></title>
    <link href="http://blog.n-z.jp/blog/2013-09-11-tagcloud.html"/>
    <updated>2013-09-11T00:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/tagcloud</id>
    <content type="html"><![CDATA[<p>探してみて見つけた中で今もちゃんとメンテナンスされてそうだった
<a href="https://github.com/tokkonopapa/octopress-tagcloud">Tag cloud plugin for Octopress</a>
を入れてタグクラウドが出るようにしてみました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[先月のイベントでの発表の記事を追加]]></title>
    <link href="http://blog.n-z.jp/blog/2013-09-10-add-old-posts.html"/>
    <updated>2013-09-10T21:39:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/add-old-posts</id>
    <content type="html"><![CDATA[<p><a href="http://blog.n-z.jp/blog/2013-08-24-llmatsuri.html">LLまつり</a> と <a href="http://blog.n-z.jp/blog/2013-08-31-kansairubykaigi05.html">関西Ruby会議05</a> の記事を追加しました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac で rabbit が動かなくなったので brew reinstall したら直った]]></title>
    <link href="http://blog.n-z.jp/blog/2013-09-09-rabbit-on-mac.html"/>
    <updated>2013-09-09T23:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/rabbit-on-mac</id>
    <content type="html"><![CDATA[<p>いつの間にか動かなくなっていた rabbit (2.1.1) が <code>brew reinstall</code> で動くようになったという話です。</p>

<!--more-->


<p>現象としては rabbit のウィンドウが出てくるのに無反応で、スライドの内容も表示されないし、クリックにも反応せず、 <code>Ctrl+C</code> での停止もきかないので <code>kill -KILL</code> で強制終了するしかないという状態でした。</p>

<p>現象から考えて、リンクしているライブラリとの不整合が原因だろうと予想してインストール手順をやり直すことにしました。</p>

<p><a href="http://rabbit-shocker.org/ja/install/homebrew.html">Mac OS XでHomebrewを使ったインストール方法</a> の「brew install と brew link の実行」の手順を以下のようにちょっと変更してやり直したら動くようになりました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>brew reinstall cairo
</span><span class='line'>brew unlink cairo
</span><span class='line'>brew link cairo
</span><span class='line'>brew unlink pixman
</span><span class='line'>brew link --overwrite pixman
</span><span class='line'>brew reinstall pango
</span><span class='line'>brew reinstall gtk+
</span><span class='line'>brew reinstall poppler --with-glib</span></code></pre></td></tr></table></div></figure>


<p>これでも動かなければ gem も uninstall して install し直す予定でした。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[octopress 始めました]]></title>
    <link href="http://blog.n-z.jp/blog/2013-09-08-octopress.html"/>
    <updated>2013-09-08T22:58:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/octopress</id>
    <content type="html"><![CDATA[<p>octopress で github pages を作ってみました。
インストール記事などは複数あるので気になった点を列挙するだけにします。</p>

<!--more-->


<ul>
<li>ruby のバージョン

<ul>
<li>2.0.0 ではなく 1.9.3 になっていたが、 github-pages という gem でわかるように github pages で使われているのが 1.9.3 のようなので、 1.9.3 を使うことにした。</li>
<li>後でわかったんですが、 octopress の場合はローカルで生成するようなので、 2.0.0 でも問題なく使えそうでした。</li>
<li><code>.ruby-version</code> に <code>1.9.3</code> とだけあって、 rbenv のパッチレベル付きのバージョンにマッチしなかったので、最初は <code>rbenv shell 1.9.3-p448</code> で作業していました。 (後で <code>rbenv local 1.9.3-p448</code> にしました。)</li>
</ul>
</li>
<li>使い始め

<ul>
<li><code>git clone git://github.com/imathis/octopress.git octopress</code></li>
<li><code>cd octopress</code></li>
<li><code>rake setup_github_pages</code>

<ul>
<li><code>Repository url: git@github.com:znz/znz.github.io</code></li>
</ul>
</li>
<li><code>_config.yml</code> を設定</li>
<li><code>rake install</code></li>
<li><code>_config.yml</code> を設定</li>
<li><code>rake deploy</code></li>
<li><code>rake new_post</code>

<ul>
<li><code>Enter a title for your post:</code> ときいてくるので <code>rake new_post[title]</code> よりも楽</li>
</ul>
</li>
<li><code>rake preview</code> で確認しながら書く</li>
<li><code>rake gen_deploy</code>

<ul>
<li><code>rake generate</code> 相当がないと変更が反映されない (<code>_config.yml</code> を変更したときなど)</li>
</ul>
</li>
</ul>
</li>
<li><code>CNAME</code>

<ul>
<li>octopress 側では <code>source/CNAME</code> に置く必要がありました。</li>
</ul>
</li>
<li>Excerpts

<ul>
<li><a href="http://octopress.org/docs/blogging/plugins/">http://octopress.org/docs/blogging/plugins/</a> にあるように <code>&lt;!--more--&gt;</code> と書いておくとトップに表示される内容を最初の方だけに出来ました。</li>
</ul>
</li>
<li>ブランチ

<ul>
<li>手元では source ブランチで作業するようになっていて、 github pages へ deploy される master ブランチは <code>_deploy</code> ディレクトリにある別レポジトリにありました。</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac で rabbiter が動いた]]></title>
    <link href="http://blog.n-z.jp/blog/2013-09-08-rabbiter-on-mac.html"/>
    <updated>2013-09-08T21:30:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/rabbiter-on-mac</id>
    <content type="html"><![CDATA[<p>homebrew を使った Mac OS X 10.8.4 環境で rabbiter (2.0.1) が動くようになりました。</p>

<!--more-->


<p>rabbiter の issues に報告していた
<a href="https://github.com/rabbit-shocker/rabbiter/issues/1">show_uri の問題</a>
と
<a href="https://github.com/rabbit-shocker/rabbiter/issues/2">glib-networking のルート証明書の問題</a>
が解決したので、 <code>glib-networking</code> を <code>brew reinstall glib-networking --with-curl-ca-bundle</code> でインストールすれば使えるようになりました。
ちなみに、初回のインストールでも <code>brew install</code> ではなく <code>brew reinstall</code> で大丈夫のようです。</p>

<p>以下のように <code>configure</code> に <code>--with-ca-certificates</code> が付いていれば使えます。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% brew reinstall glib-networking --with-curl-ca-bundle
</span><span class='line'>==&gt; Reinstalling glib-networking --with-curl-ca-bundle
</span><span class='line'>==&gt; Downloading http://ftp.gnome.org/pub/GNOME/sources/glib-networking/2.36/glib-networkin
</span><span class='line'>Already downloaded: /Library/Caches/Homebrew/glib-networking-2.36.2.tar.xz
</span><span class='line'>==&gt; ./configure --with-ca-certificates=/usr/local/opt/curl-ca-bundle/share/ca-bundle.crt -
</span><span class='line'>==&gt; make install
</span><span class='line'>🍺  /usr/local/Cellar/glib-networking/2.36.2: 68 files, 352K, built in 18 seconds</span></code></pre></td></tr></table></div></figure>


<p>以下のように <code>configure</code> に <code>--without-ca-certificates</code> と付いているときは rabbiter が使えません。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% brew reinstall glib-networking
</span><span class='line'>==&gt; Reinstalling glib-networking
</span><span class='line'>==&gt; Downloading http://ftp.gnome.org/pub/GNOME/sources/glib-networking/2.36/glib-networkin
</span><span class='line'>Already downloaded: /Library/Caches/Homebrew/glib-networking-2.36.2.tar.xz
</span><span class='line'>==&gt; ./configure --without-ca-certificates --prefix=/usr/local/Cellar/glib-networking/2.36.
</span><span class='line'>==&gt; make install
</span><span class='line'>🍺  /usr/local/Cellar/glib-networking/2.36.2: 68 files, 352K, built in 21 seconds</span></code></pre></td></tr></table></div></figure>


<p>一度 <code>--with-curl-ca-bundle</code> 付きでインストールした後だと、以下のようにオプションなしの reinstall でもオプションが付くようです。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% brew reinstall glib-networking
</span><span class='line'>==&gt; Reinstalling glib-networking --with-curl-ca-bundle
</span><span class='line'>==&gt; Downloading http://ftp.gnome.org/pub/GNOME/sources/glib-networking/2.36/glib-networkin
</span><span class='line'>Already downloaded: /Library/Caches/Homebrew/glib-networking-2.36.2.tar.xz
</span><span class='line'>==&gt; ./configure --with-ca-certificates=/usr/local/opt/curl-ca-bundle/share/ca-bundle.crt -
</span><span class='line'>==&gt; make install
</span><span class='line'>🍺  /usr/local/Cellar/glib-networking/2.36.2: 68 files, 352K, built in 18 seconds</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[関西Ruby会議05で migrate to magazine.rubyist.net という発表をしました]]></title>
    <link href="http://blog.n-z.jp/blog/2013-08-31-kansairubykaigi05.html"/>
    <updated>2013-08-31T00:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/kansairubykaigi05</id>
    <content type="html"><![CDATA[<p><a href="http://regional.rubykaigi.org/kansai05">関西Ruby会議05</a> というイベントで
「migrate to magazine.rubyist.net」というタイトルで、
<a href="http://jp.rubyist.net/magazine/">http://jp.rubyist.net/magazine/</a> から <a href="http://magazine.rubyist.net/">http://magazine.rubyist.net/</a> への移行で何をしたのか、そして何がまだ出来ていないのか、ということについて話しました。</p>

<!--more-->


<p>スライドは <a href="http://slide.rabbit-shocker.org/authors/znz/migrate-rubima-2013/">http://slide.rabbit-shocker.org/authors/znz/migrate-rubima-2013/</a> や slideshare で公開しています。
スライドのソースも <a href="https://github.com/znz/migrate-rubima-2013">https://github.com/znz/migrate-rubima-2013</a> で公開しています。</p>

<p>朝は JR の遅延の影響で開始が遅れていました。
自分の発表も20分の枠の予定だったのに、後で確認してみると25分ぐらいになってしまっていたようでした。</p>

<p>自分の発表の後は座っていたのが前の方だったり、ゆっくり聞けたりしたので、非常に楽しめました。
「じこはおこるさ」の上映があったり、スイーツタイムというおやつの時間があったのが独特な感じでした。</p>

<p>内容では、発表するのは「売名行為」で懇親会とかでのぼっちの可能性を減らすためとか「睡眠重要。寸暇を惜しんで寝る。」とかが特に印象深かったです。</p>

<h2>slideshare</h2>

<iframe src="http://www.slideshare.net/slideshow/embed_code/25754630" width="427" height="356" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC;border-width:1px 1px 0;margin-bottom:5px" allowfullscreen webkitallowfullscreen mozallowfullscreen> </iframe>


<p> <div style="margin-bottom:5px"> <strong> <a href="https://www.slideshare.net/znzjp/migrate-rubima-2013" title="migrate to magazine.rubyist.net" target="_blank">migrate to magazine.rubyist.net</a> </strong> from <strong><a href="http://www.slideshare.net/znzjp" target="_blank">Kazuhiro Nishiyama</a></strong> </div></p>

<h2>Rabbit SlideShow</h2>

<iframe src="http://slide.rabbit-shocker.org/authors/znz/migrate-rubima-2013/viewer.html"
        width="640" height="524"
        frameborder="0"
        marginwidth="0"
        marginheight="0"
        scrolling="no"
        style="border: 1px solid #ccc; border-width: 1px 1px 0; margin-bottom: 5px"
        allowfullscreen> </iframe>


<div style="margin-bottom: 5px">
  <a href="http://slide.rabbit-shocker.org/authors/znz/migrate-rubima-2013/" title="migrate to magazine.rubyist.net">migrate to magazine.rubyist.net</a>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LLまつりでLTしました]]></title>
    <link href="http://blog.n-z.jp/blog/2013-08-24-llmatsuri.html"/>
    <updated>2013-08-24T00:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/llmatsuri</id>
    <content type="html"><![CDATA[<p><a href="http://ll.jus.or.jp/2013/">LLまつり</a> で「シェルスクリプトで簡易ping監視」というタイトルでライトニングトークをしてきました。</p>

<!--more-->


<p>スライドは <a href="http://slide.rabbit-shocker.org/authors/znz/simple-ping-summary/">http://slide.rabbit-shocker.org/authors/znz/simple-ping-summary/</a> や slideshare で公開しています。
スライドのソースも <a href="https://github.com/znz/simple-ping-summary-slide">https://github.com/znz/simple-ping-summary-slide</a> で公開しています。</p>

<p>監視プログラム自体は <a href="https://github.com/znz/simple-ping-summary">https://github.com/znz/simple-ping-summary</a> で公開しています。</p>

<h2>バージョンソート</h2>

<p><a href="http://linuxjm.sourceforge.jp/html/GNU_coreutils/man1/sort.1.html">GNU coreutils の sort</a>
や
<a href="http://linuxjm.sourceforge.jp/html/GNU_coreutils/man1/ls.1.html">ls</a>
にバージョンソートという機能があるのですが、
それが IPv4 アドレスのソートにも使えるということが
一番言いたかったことでした。</p>

<h2>画像生成</h2>

<p>画像を作成する時はテキストエディタで作成出来る XBM や XPM を使うことが多いのですが、
後で twitter の反応を確認してみると SVG という案もあったようなので、
機会があれば使ってみたいと思いました。</p>

<h2>会場での実行結果</h2>

<p>最後にデモとしてちょっと見せようとして、説明は間に合わなかったLLまつりの会場でのデータは <a href="https://github.com/znz/simple-ping-summary/tree/llmatsuri">llmatsuri ブランチ</a> にあるので <code>git clone https://github.com/znz/simple-ping-summary</code> して <code>git checkout llmatsuri</code> で <code>llmatsuri</code> ブランチに切り替えて <code>_img/summary.html</code> を開くと見えます。
発表後のデータもあるので、ちらっと見せたものよりちょっと増えています。</p>

<p>会場では一般の PC などが対象なので、監視対象になることが前提で PING 応答が許可されているルーターとは違って、 DHCP で IP アドレスが割り当てられていても応答がないことが多いので、結構歯抜けになっています。</p>

<p>DHCP の割り当て範囲がどうなっていたのかわからなかったので、対象は適当な範囲だったのですが、 <a href="https://github.com/znz/simple-ping-summary/blob/llmatsuri/_img/192.168.4/20130824.png">192.168.4.1から254の範囲の結果</a> をみると、徐々にこの範囲の割り当てが増えていっていると推測出来そうです。</p>

<h2>slideshare</h2>

<iframe src="http://www.slideshare.net/slideshow/embed_code/25545146" width="427" height="356" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC;border-width:1px 1px 0;margin-bottom:5px" allowfullscreen webkitallowfullscreen mozallowfullscreen> </iframe>


<p> <div style="margin-bottom:5px"> <strong> <a href="https://www.slideshare.net/znzjp/simple-ping-summary" title="シェルスクリプトで簡易ping監視" target="_blank">シェルスクリプトで簡易ping監視</a> </strong> from <strong><a href="http://www.slideshare.net/znzjp" target="_blank">Kazuhiro Nishiyama</a></strong> </div></p>

<h2>Rabbit SlideShow</h2>

<iframe src="http://slide.rabbit-shocker.org/authors/znz/simple-ping-summary/viewer.html"
        width="640" height="524"
        frameborder="0"
        marginwidth="0"
        marginheight="0"
        scrolling="no"
        style="border: 1px solid #ccc; border-width: 1px 1px 0; margin-bottom: 5px"
        allowfullscreen> </iframe>


<div style="margin-bottom: 5px">
  <a href="http://slide.rabbit-shocker.org/authors/znz/simple-ping-summary/" title="シェルスクリプトで簡易ping監視">シェルスクリプトで簡易ping監視</a>
</div>



]]></content>
  </entry>
  
</feed>
