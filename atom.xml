<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[@znz blog]]></title>
  <link href="http://blog.n-z.jp/atom.xml" rel="self"/>
  <link href="http://blog.n-z.jp/"/>
  <updated>2014-10-07T20:23:39+09:00</updated>
  <id>http://blog.n-z.jp/</id>
  <author>
    <name><![CDATA[Kazuhiro NISHIYAMA]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ターミナルでの文字幅を調べる]]></title>
    <link href="http://blog.n-z.jp/blog/2014-10-07-char-width-in-terminal.html"/>
    <updated>2014-10-07T20:10:20+09:00</updated>
    <id>http://blog.n-z.jp/blog/char-width-in-terminal</id>
    <content type="html"><![CDATA[<p><a href="http://uwabami.junkhub.org/log/20141007.html#p01" title="マルチバイト文字列の幅を 2 としてカウントする">マルチバイト文字列の幅を 2 としてカウントする</a>
という話を見て、
端末に実際の幅を問い合わせてみればいいのではないかと思って試してみました。</p>

<!--more-->


<h2>実行例</h2>

<p>こんな感じでできました。
zsh と bash で動作確認しています。
端末は
<a href="http://iterm2.com/" title="iTerm2">iTerm2</a>
で動作確認しています。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% echo -ne '日本語\e[6n'; read -d';' a; read -dR a; printf '\e[M\r'; echo $[a-1]
</span><span class='line'>6
</span><span class='line'>% echo -ne 'abc日本語\e[6n'; read -d';' a; read -dR a; printf '\e[M\r'; echo $[a-1]
</span><span class='line'>9</span></code></pre></td></tr></table></div></figure>


<h2>スクリプト化</h2>

<p>実行ファイルにするならこんな感じになります。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#!/bin/bash
</span><span class='line'>echo -ne "$*"'\e[6n'; read -d';' a; read -dR a; printf '\e[M\r'; echo $[a-1]</span></code></pre></td></tr></table></div></figure>


<h2>解説</h2>

<p>実装としては実際に表示して、カーソル位置を端末に問い合わせて、表示を消去して、桁を取り出して 1 引いています。</p>

<p>エスケープシーケンスなどに関しては、
<a href="http://ttssh2.sourceforge.jp/manual/ja/about/ctrlseq.html" title="対応制御シーケンス">対応制御シーケンス</a>
を参考にしてください。</p>

<ol>
<li>まず文字列を表示しています。</li>
<li><code>CSI Ps n</code> (DSR) を使ってカーソルの位置を報告させています。</li>
<li><code>CSI r ; c R</code> という応答のうち、 <code>;</code> までを捨てて、 <code>c</code> だけ変数 <code>a</code> に取り込んでいます。</li>
<li><code>CSI Ps M</code> (DL) でカーソル行に表示された内容を消去しています。</li>
<li><code>CR</code> で行頭にカーソルを戻しています。</li>
<li>カーソル位置なので 文字数+1 になっているので、1 引いて表示しています。</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第 15 回 RubyMotion もくもく会 in Osaka に参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2014-09-24-rubymotion-mokumoku-osaka.html"/>
    <updated>2014-09-24T23:12:38+09:00</updated>
    <id>http://blog.n-z.jp/blog/rubymotion-mokumoku-osaka</id>
    <content type="html"><![CDATA[<p>第 1 回から第 14 回にも参加した RubyMotion もくもく会 in Osaka の
<a href="http://rubymotionjp.connpass.com/event/8214/" title="第 15 回 RubyMotion もくもく会 in Osaka - connpass">第 15 回 RubyMotion もくもく会 in Osaka - connpass</a>
に参加してきました。
今日もみんなもくもくしていました。</p>

<p>次回の
<a href="http://rubymotionjp.connpass.com/event/8917/" title="第 16 回 RubyMotion もくもく会 in Osaka - connpass">第 16 回 RubyMotion もくもく会 in Osaka - connpass</a>
は 10/15(水) になりました。</p>

<!--more-->


<h2>メモ</h2>

<p>メモです。</p>

<ul>
<li><a href="http://www.3bees.com/">http://www.3bees.com/</a></li>
<li><a href="http://rubymotiondispatch.com/" title="RubyMotion Dispatch">RubyMotion Dispatch</a></li>
<li>RubyMotion Kaigi 2014 の話</li>
<li><a href="https://github.com/infinitered/cdq">https://github.com/infinitered/cdq</a></li>
<li><a href="https://www.bloc.io/swiftris-build-your-first-ios-game-with-swift" title="Swiftris Tutorial: Build Your First iOS Game With Swift | Bloc">Swiftris Tutorial: Build Your First iOS Game With Swift | Bloc</a></li>
<li><a href="http://www.genymotion.com/">http://www.genymotion.com/</a></li>
<li><a href="https://github.com/nathankot/webstub">https://github.com/nathankot/webstub</a></li>
</ul>


<h2>やっていたこと</h2>

<div style="float:right">
<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=znz-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=4873116767" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>
</div>


<p>最近は Mac をあまり持ち歩かなくなっていて忘れていたので、
代わりに持ち歩いていた本 (<a href="http://www.amazon.co.jp/gp/product/4873116767/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4873116767&amp;linkCode=as2&amp;tag=znz-22">ハイパフォーマンス ブラウザネットワーキング ―ネットワークアプリケーションのためのパフォーマンス最適化</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4873116767" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />) を読んでいました。</p>

<p>物理層に近い 3G のこととか全く知らなかった話も載っていて、だからアプリケーションはどういう点に気をつければ良いのかという話も書いてあったり、
WebSocket や WebRTC の最近の話題まで載っています。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RubyHiroba 2014に参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2014-09-21-rubyhiroba-2014.html"/>
    <updated>2014-09-21T14:04:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/rubyhiroba-2014</id>
    <content type="html"><![CDATA[<p><a href="http://rubyhiroba.org/2014/" title="RubyHiroba 2014">RubyHiroba 2014</a>
に参加しました。</p>

<!--more-->


<h2>メモ</h2>

<p>少し遅めに到着して、午前中は生活発表会の方にいて、
午後は LTthon の方にいました。
そのときのメモです。</p>

<ul>
<li><a href="http://railsguides.jp/">http://railsguides.jp/</a></li>
<li><code>1.tap { break 2 }</code> のように <code>tap</code> で <code>break</code> を使うと <code>self</code> 以外を返せる</li>
<li>ロジバン</li>
<li>amedayo.jp</li>
<li>travis CI が 2.1 や 2.2 に対応している</li>
<li><a href="http://sixeight.hatenablog.com/entry/2014/09/20/024603" title="rbenv global 2.2.0-preview1 した話 - ちなみに">rbenv global 2.2.0-preview1 した話 - ちなみに</a></li>
<li>Hound CI</li>
<li><a href="https://github.com/mmozuras/pronto">https://github.com/mmozuras/pronto</a></li>
<li><a href="https://github.com/willnet/prid">https://github.com/willnet/prid</a></li>
<li>rbpdf gem</li>
<li><code>prepend</code> でモンキーパッチ</li>
<li><a href="http://labocho.github.io/rubydoc-ja-docsets/" title="Ruby リファレンスマニュアル for Dash">Ruby リファレンスマニュアル for Dash</a></li>
<li><a href="https://github.com/labocho/pagehook">https://github.com/labocho/pagehook</a></li>
<li><a href="http://rubygems.org/gems/byndler">http://rubygems.org/gems/byndler</a></li>
<li><a href="https://github.com/ko1/allocation_tracer">https://github.com/ko1/allocation_tracer</a></li>
<li><a href="https://github.com/ko1/gc_tracer">https://github.com/ko1/gc_tracer</a></li>
<li><a href="http://tmix.jp/">http://tmix.jp/</a></li>
</ul>


<h2>LTthon での発表内容</h2>

<p>飛び入り参加で最後の方に無理矢理ネタを考えて発表しました。</p>

<p>内容としては、スライドは全く用意せずに、
普段やっている <code>git svn rebase --fetch-all</code> して Emacs で ChangeLog を flyspell (と develock.el と flycheck) でチェックして修正して <code>git svn dcommit</code> するというのを実演しました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RubyKaigi 2014の3日目に参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2014-09-20-rubykaigi-2014-3rd-day.html"/>
    <updated>2014-09-20T23:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/rubykaigi-2014-3rd-day</id>
    <content type="html"><![CDATA[<p><a href="http://rubykaigi.org/2014" title="RubyKaigi 2014">RubyKaigi 2014</a>
の3日目 (最終日) に参加しました。</p>

<!--more-->


<h2>午前</h2>

<p>ずっと Hall A で聞いていました。
Rails 4.2 は速くなっているということで、
リリースされたら早めに移行したいと思いました。</p>

<h2>午後</h2>

<p>主に Hall B で聞いていました。</p>

<p>Reish は便利そうなので、期待したいと思いました。
Burn も面白そうなので機会があれば試してみたいと思いました。
single page app の話は rails で作るときに参考にしたいと思いました。</p>

<p>Ruby のソースコードを見ていく話は st.c を見ていっていました。
今回の話とは関係ない話ですが、
ソース改造するときに文法をかえたいということで parse.y に挑戦してしまうという話を思い出して、
初心者は割と難しめのところに
いきなり挑戦することが多いのかなと思いました。</p>

<p>エコシステムの話はちゃんと upstream にフィードバックするだけではなく、必要なら引き継いだりしているのがすごいと思いました。</p>

<p>Droonga などの話は Groonga が mruby を組み込んでいるというのを知ったりしました。</p>

<p>最後のキーノートは話が速くてほとんど聞き取れなくても
スライドなどを見ているだけでも
すごさが伝わってくる内容でした。</p>

<h2>RubyKaigi 2014 全体の感想</h2>

<p>今回は発表が採用されたため、落ち着いて聞けない感じが多かったのですが、
いろいろと参考になったり、面白かったりしました。</p>

<p>しばらく英語のリスニングの練習をしていなかったら、全然だめになっていたので、
来年に向けてちゃんとまた練習をしておく必要を感じました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RubyKaigi 2014の2日目に参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2014-09-19-rubykaigi-2014-2nd-day.html"/>
    <updated>2014-09-19T23:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/rubykaigi-2014-2nd-day</id>
    <content type="html"><![CDATA[<p><a href="http://rubykaigi.org/2014" title="RubyKaigi 2014">RubyKaigi 2014</a>
の2日目に参加しました。</p>

<p>今日は発表もしました。</p>

<!--more-->


<h2>発表資料</h2>

<p>スライドは以下で話した内容を memo に書いた元資料は
<a href="https://github.com/znz/rubykaigi2014-ruby-removed-features" title="rubykaigi2014-ruby-removed-features">rubykaigi2014-ruby-removed-features</a>
で公開しています。</p>

<iframe src="http://slide.rabbit-shocker.org/authors/znz/rubykaigi2014/viewer.html"
        width="640" height="524"
        frameborder="0"
        marginwidth="0"
        marginheight="0"
        scrolling="no"
        style="border: 1px solid #ccc; border-width: 1px 1px 0; margin-bottom: 5px"
        allowfullscreen> </iframe>


<div style="margin-bottom: 5px">
  <a href="http://slide.rabbit-shocker.org/authors/znz/rubykaigi2014/" title="Archaeology of Ruby: Removed Features Ruby (考古学 消された機能編)">Archaeology of Ruby: Removed Features Ruby (考古学 消された機能編)</a>
</div>


<h2>発表内容振り返り</h2>

<ul>
<li>内容はそれなりに良い感じにできたのではないかと思います。</li>
<li>大きめのものをピックアップしていこうとしたら、あまりページ数がなくて、かなり早く終わってしまいました。時間がおしていたので、結果的には質疑応答の時間を含めて時間調整ができたようです。</li>
<li>途中から移動してきた人が多かったので、話の順番は逆にして、重要度の低いものを最初の方にもってきて、重要そうなものは後ろの方にもってくる方が良かったと思いました。</li>
<li>最初の質問にあった typo をどうやってみつけているのかというのは、間違えて Emacs + flycheck と言ってから flyspell と言い直してしまいましたが、実際には両方使っています。</li>
</ul>


<h2>午前</h2>

<p>同時通訳の人との打ち合わせがあったため、キーノートは途中までしか聞けなかったので、後で続きを確認したいと思います。
その打ち合わせの後も自分の発表の順番があったこともあり、ずっと Hall A にいました。</p>

<h2>午後</h2>

<p>最初は Hall B にいて hsbt さんの発表まで聞いていました。
その後はずっと Hall A か外にいて、発表を聞いていたり、他のことをしていたりしました。</p>

<p>最後の Lightning Talks を最後まで聞いてから移動したら
<a href="https://unagiaward.herokuapp.com/ja" title="Ruby Unagi Award">Ruby Unagi Award</a>
の移動前の集合に間に合わなくて、
後から一人で移動したら結構秋葉原駅周辺や目的地周辺で結構迷いましたが、
無事にたどり着けました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RubyKaigi 2014の1日目に参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2014-09-18-rubykaigi-2014-1st-day.html"/>
    <updated>2014-09-18T23:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/rubykaigi-2014-1st-day</id>
    <content type="html"><![CDATA[<p><a href="http://rubykaigi.org/2014" title="RubyKaigi 2014">RubyKaigi 2014</a>
の1日目に参加しました。</p>

<!--more-->


<h2>午前</h2>

<p>朝に飛行機で移動して、ちゃんと開始時刻に余裕を持って間に合いました。
意外とバスなどの乗り換え待ちで時間がかかってしまい、余裕があると言っても、
普通の到着時刻になってしまいました。</p>

<p>最初の
<a href="http://rubykaigi.org/2014/presentation/S-TomoyukiChikanaga" title="RubyKaigi 2014 | CRuby Committers Who's Who in 2014">RubyKaigi 2014 | CRuby Committers Who&rsquo;s Who in 2014</a>
で今回の発表者かつコミッターの紹介があったので、
そこでの紹介を明日のスライドに取り入れたりしました。</p>

<h2>午後</h2>

<p>基本的にはずっと Hall A にいたのですが、英語はつらいと思って、
Hall A が JRuby のときには Hall B にいってみていましたが、立ち見でした。
Hall B の話をききたいのなら、早めに入っておいた方が良いと思いました。</p>

<p>最後はコミッターなので壇上にあがって話を聞いていました。
今回は特に発言することはなかったです。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[font-awesome-sass を 4.1.0 から 4.2.0 にあげたらアイコンが表示されなくなったので対処した]]></title>
    <link href="http://blog.n-z.jp/blog/2014-09-03-font-awesome-sass-4-2-0.html"/>
    <updated>2014-09-03T20:52:56+09:00</updated>
    <id>http://blog.n-z.jp/blog/font-awesome-sass-4-2-0</id>
    <content type="html"><![CDATA[<p>Rails 4.1.5 で使っている <code>font-awesome-sass</code> gem を 4.1.0 から 4.2.0 にあげたところ、
アイコンが表示されなくなったので、原因を調べてみました。</p>

<h2>解決方法</h2>

<p><a href="https://github.com/FortAwesome/font-awesome-sass">https://github.com/FortAwesome/font-awesome-sass</a> には 3.x からのアップグレード方法しか
書いていないのですが、
4.1.0 などの 4.x 系から 4.2.0 にあげるときは</p>

<pre><code>*= require font-awesome
</code></pre>

<p>の代わりに</p>

<pre><code>@import "font-awesome-sprockets";
@import "font-awesome";
</code></pre>

<p>のように <code>@import</code> を使う必要があり、
既に <code>@import</code> を使っている場合でも
<code>@import "font-awesome-sprockets";</code>
の行の追加が必要でした。</p>

<h2>詳細</h2>

<p>4.1.0 と 4.2.0 の差分の
<a href="https://github.com/FortAwesome/font-awesome-sass/commit/a527acdf693cf0bced797e75f387a8f8e2a9c844" title="Refactoring for use in multiple Ruby envs and upgrading to FontAwesome 4.2.0">Refactoring for use in multiple Ruby envs and upgrading to FontAwesome 4.2.0</a>
を眺めてみると、
FontAwesome を 4.2.0 にあげる以外に
<code>vendor/assets/</code> から <code>assets/</code> に移動していたり、
それに関係する変更をしていたりするようです。</p>

<p>それから詳しいことはわかりませんが、
<code>icon-font-path($path)</code> と <code>icon-image-path($path)</code> で
それぞれ
sprockets では <code>font-path($path)</code> と <code>image-path($path)</code> で、
compass では <code>font-url($path, true)</code> と <code>image-url($path, true)</code> を
使うようになった影響で <code>@import "font-awesome-sprockets"</code> が必要になったようです。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LL Diver に参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2014-08-23-lldiver.html"/>
    <updated>2014-08-23T21:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/lldiver</id>
    <content type="html"><![CDATA[<p><a href="http://ll.jus.or.jp/2014/" title="LL Diver | Dive into Lightweight Languages">LL Diver | Dive into Lightweight Languages</a>
に参加してきました。</p>

<!--more-->


<p><a href="http://ll.jus.or.jp/2005/" title="Lightweight Language Day and Night(通称:LLDN)">Lightweight Language Day and Night(通称:LLDN)</a>
と同じ二部構成ということで LLDN の T シャツを着ていきました。</p>

<p>今回は全体的に JavaScipt の話が多かったように感じました。</p>

<h2>昼の部</h2>

<p>午前中はイノベーションホールでプレゼンを聞いていました。
ペパボのエンジニア新人研修はいろいろと参考にしたいと思いました。</p>

<p>昼休みは7階の休憩スペースのところで食事を売っていたので、
そこで食べました。</p>

<p>それから会議室2に行ってみると無線LANがつながるようになったというアナウンスがあったので、
llquiz に挑戦しました。
1問目は20分ほどですぐに解けたのですが、
2問目は takesako さんのマインスイーパーの自動化の話を聞きながら解いていた影響なのか、
おけない場所をマークしていくという重い解き方にしてしまったので、
解くのにもプログラムの実行にも時間がかかってしまうというダメな結果になってしまいました。
実際にどう書いたのかは <a href="https://gist.github.com/znz/6ccdcede4d30c2c749b6">https://gist.github.com/znz/6ccdcede4d30c2c749b6</a> で公開しました。
アナウンスがなかったためか、最終的な参加者が少なかったのが残念な感じでした。</p>

<p>時間がかかったので、最後は mozaic.fm 出張版: TypeScript and Dart を聞きながら解いていました。
TypeScript と Dart のことをほとんど知らなかったので、この時間もイノベーションホールに行っていた方が良かったのかもしれないと思いましたが、そのままそこで聞いていました。</p>

<p>休憩時間の後はまたイノベーションホールに移動して、プレゼンを聞いていました。</p>

<p>IPv6 の話はサーバー側の対応が必要という説明をするときの参考になりそうでしたが、
実際にどうプログラムを変更するのかという話はほとんどありませんでした。</p>

<p>サイバー戦争の話は MIT でどういう授業を受けてきたのかの紹介でした。
日本ではあまり話題にしない攻撃側の話もあるという感じでした。</p>

<p>LL短歌の Python バイトコードの話は途中の段階のは、スタックの最後の状態が 5 7 5 7 7 になるのかな、と思ったのですが、
32 32 32 になったあたりで違うと気づきました。</p>

<p>LT では時間内に収まっていたり収まらなかったり、最初から時間内に収める気がない人がいたり、
通知をきっていなくて twitter 経由で遊ばれている人がいたりしました。</p>

<div style="float:right">
<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=znz-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=479812947X" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>
</div>


<p>抽選では
<a href="http://www.amazon.co.jp/gp/product/479812947X/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=479812947X&amp;linkCode=as2&amp;tag=znz-22">実践Node.js プログラミング (Programmer&rsquo;s SELECTION)</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=479812947X" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />
をいただいたので、帰りの新幹線の中で読み始めました。</p>

<h2>夜の部</h2>

<p>会場を出たら忘れてくださいということだったのでほとんど忘れました (ということにしておく)。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第 14 回 RubyMotion もくもく会 in Osaka に参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2014-08-20-rubymotion-mokumoku-osaka.html"/>
    <updated>2014-08-20T19:34:08+09:00</updated>
    <id>http://blog.n-z.jp/blog/rubymotion-mokumoku-osaka</id>
    <content type="html"><![CDATA[<p>第 1 回から第 13 回にも参加した RubyMotion もくもく会 in Osaka の
<a href="http://rubymotionjp.connpass.com/event/7583/" title="第 14 回 RubyMotion もくもく会 in Osaka">第 14 回 RubyMotion もくもく会 in Osaka</a>
に参加してきました。
今日もみんなもくもくしていました。</p>

<p>次回の
<a href="http://rubymotionjp.connpass.com/event/8214/" title="第 15 回 RubyMotion もくもく会 in Osaka - connpass">第 15 回 RubyMotion もくもく会 in Osaka - connpass</a>
は 09/24(水) になりました。</p>

<!--more-->


<h2>メモ</h2>

<ul>
<li><a href="http://japan.unity3d.com/">http://japan.unity3d.com/</a></li>
<li><a href="http://uxosaka.com/" title="UX OSAKA | 大阪で開催される UX コミュニティ">UX OSAKA | 大阪で開催される UX コミュニティ</a></li>
<li>A Dark Room が RubyMotion 製で成功したゲームと言う話</li>
<li><a href="http://rubykaigi.org/2014/presentation/S-LaurentSansonetti" title="Inside RubyMotion for Android">Inside RubyMotion for Android</a></li>
<li>RubyMotion を再インストールしたら 2.28 になった (最新は 2.31 らしい) ので、インストーラーはライセンスの有効期限を見てどのバージョンを入れるのか決めているらしい。</li>
<li><a href="http://www.rubymotion.com/developer-center/guides/getting-started/">http://www.rubymotion.com/developer-center/guides/getting-started/</a></li>
<li><a href="http://www.raywenderlich.com/55384/ios-7-best-practices-part-1" title="iOS 7 Best Practices; A Weather App Case Study: Pt 1 - Ray Wenderlich">iOS 7 Best Practices; A Weather App Case Study: Pt 1 - Ray Wenderlich</a></li>
<li><a href="http://rubykaigi.org/2014" title="RubyKaigi 2014, 18-20 september">RubyKaigi 2014, 18-20 september</a></li>
<li><a href="http://ll.jus.or.jp/2014/" title="LL Diver | Dive into Lightweight Languages">LL Diver | Dive into Lightweight Languages</a></li>
</ul>


<h2>やっていたこと</h2>

<p>環境が変わったので RubyMotion の再インストールをしたり、来月の RubyKaigi 2014 の準備の続きをしていたりしました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LILO ＆ 東海道らぐのイベントに参加しました]]></title>
    <link href="http://blog.n-z.jp/blog/2014-08-17-lilo-event.html"/>
    <updated>2014-08-17T13:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/lilo-event</id>
    <content type="html"><![CDATA[<p><a href="http://lilo.doorkeeper.jp/events/13874" title="0 LILO ＆ 東海道らぐ・オフラインミーティング（2014/08/17） - LILO | Doorkeeper">0 LILO ＆ 東海道らぐ・オフラインミーティング（2014/08/17） - LILO | Doorkeeper</a>
に参加しました。</p>

<p>前回と同じくアンカンファレンス形式でした。</p>

<!--more-->


<h2>メモ</h2>

<p>今回のメモです。</p>

<ul>
<li>まずは自己紹介から</li>
<li><a href="http://histudy.doorkeeper.jp/events/13581" title="オープンテック・ショーケース・ヒメジ - 姫路IT系勉強会 | Doorkeeper">オープンテック・ショーケース・ヒメジ - 姫路IT系勉強会 | Doorkeeper</a></li>
<li>今回のイベントは <a href="http://lilo.linux.or.jp/">http://lilo.linux.or.jp/</a> には載っていなかったが Doorkeeper 経由で知って初参加の人がいた</li>
<li><a href="http://www.doorkeeper.jp/">Doorkeeper</a> や <a href="http://connpass.com/">connpass</a> が便利</li>
<li>最初は <a href="https://getpebble.com/">pebble</a> というスマートウォッチの話

<ul>
<li><a href="https://pushover.net/">Pushover</a> で通知が便利</li>
<li>漢字などの日本語が出ない</li>
<li>Evernote アプリは日本語の問題でほとんど使えなかった</li>
<li>2要素認証アプリも使える</li>
<li>プログラムが作れる</li>
</ul>
</li>
<li>Control+Alt+Backspace が最近のディストリビューションではデフォルト無効</li>
<li><a href="http://fieldpapers.org/">http://fieldpapers.org/</a> というサイトで Open Street Map を PDF にして紙に印刷できる</li>
<li>FizzBuzz の話

<ul>
<li>Python で <code>printf</code> を並べた C 言語のソースを生成してコンパイルして限界に挑戦していたという話でした</li>
</ul>
</li>
<li>etckeeper を openSUSE の公式リポジトリに入れる話</li>
<li>synergy の話</li>
<li>ライセンスなどの話が2個

<ul>
<li>不正競争防止法の第2条にやってはいけないことが列挙してある</li>
<li>プロテクト解除手段の配布禁止</li>
<li><a href="http://www.jiii.or.jp/h26_jitsumusya/index.html">特許実務者講習</a></li>
<li><a href="http://www.blackducksoftware.jp/">Black Duck</a></li>
</ul>
</li>
<li>スレートPC の話</li>
<li>Open Street Map などを OHP フィルムシートに印刷して作ったしおりの話</li>
<li>山下さんの話

<ul>
<li><a href="http://www.yamasita.jp/">山下康成の”ハックしよう”</a>が「京都 山下」で検索すると3番目に出てくる</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[octopress をアップデートした]]></title>
    <link href="http://blog.n-z.jp/blog/2014-08-16-update-octopress.html"/>
    <updated>2014-08-16T22:26:34+09:00</updated>
    <id>http://blog.n-z.jp/blog/update-octopress</id>
    <content type="html"><![CDATA[<p><a href="http://octopress.org/docs/updating/" title="Updating Octopress">Updating Octopress</a> を参考にして octopress をアップデートしてみました。</p>

<!--more-->


<h2>更新をマージ</h2>

<p><code>git pull octopress master</code> でマージしました。
conflict したらがんばって修正してから <code>git commit</code> します。</p>

<p>久しぶりに更新すると <code>_config.yml</code> がひっかかりやすいと思いますが、変更は少ないのでマージしやすいと思います。</p>

<h2>gem の更新</h2>

<p><code>bundle install</code> か <code>bundle update</code> で更新します。</p>

<p><code>Gemfile.lock</code> が <code>.gitignore</code> に入って octopress master からは消されてしまったので、
<code>bundle update</code> で動かなくなったときに戻せるように、
<code>git add -f Gemfile.lock</code> で自分のレポジトリでは追加しておくのも良いかもしれません。</p>

<h2>テンプレートのソースの更新</h2>

<p><code>rake update_source</code> で更新します。
カスタマイズしていると戻ってしまうので、がんばって再適用します。</p>

<p>zenback 対応の追加などの <code>_config.yml</code> の <code>default_asides</code> などでは対応しきれないカスタマイズが戻ってしまうので、
変更し直しました。</p>

<h2>テンプレートのスタイルの更新</h2>

<p><code>rake update_style</code> は特に何も変化がありませんでした。</p>

<h2><code>*.old</code> の削除</h2>

<p>テンプレートの更新でバックアップとして作成される <code>source.old/</code> と <code>sass.old/</code> は更新後には不要なので削除します。</p>

<h2>Build Warning の対処</h2>

<p>更新後に</p>

<pre><code> Build Warning: Layout 'nil' requested in blog/categories/octopress/atom.xml does not exist.
</code></pre>

<p>のような警告が出るようになってそのうち対処されると思っていたら、
<a href="http://www.bravo-kernel.com/blog/2014/08/how-to-fix-octopress-build-warning-layout-nil-requested/" title="How to fix Octopress build warning Layout nil requested - Bravo Kernel">How to fix Octopress build warning Layout nil requested - Bravo Kernel</a>
に書いてあるように</p>

<pre><code> layout: nil
</code></pre>

<p>を</p>

<pre><code> layout: null
</code></pre>

<p>にするという修正で対応が入ったのですが、
<code>source/_includes/custom/category_feed.xml</code>
は <code>source/_includes/custom/</code> 以下なので自分で修正する必要がありました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[R と Ruby によるデータ解析入門　読書会　第3回に参加しました]]></title>
    <link href="http://blog.n-z.jp/blog/2014-08-16-amagasakirb.html"/>
    <updated>2014-08-16T13:05:27+09:00</updated>
    <id>http://blog.n-z.jp/blog/amagasakirb</id>
    <content type="html"><![CDATA[<p><a href="http://kokucheese.com/event/index/202642/" title="8月16日 R と Ruby によるデータ解析入門　読書会　第3回(兵庫県)">8月16日 R と Ruby によるデータ解析入門　読書会　第3回(兵庫県)</a>
に参加しました。
今回は7章から最後まででした。</p>

<p>次回は9月27日(土)です。</p>

<!--more-->


<h2>メモ</h2>

<div style="float:right">
<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=znz-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=4873116155" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>
</div>


<p>以下今回のメモです。</p>

<ul>
<li>Mac の Spotlight 便利</li>
<li>Windows 7 などの検索も便利</li>
<li>WAV ファイルはリトルエンディアンとビッグエンディアンが混在

<ul>
<li>ビッグエンディアンの部分は文字列でリトルエンディアンのところは数値というだけに見える</li>
</ul>
</li>
<li><a href="https://github.com/setoyama60jp/everyday">https://github.com/setoyama60jp/everyday</a> に書籍中のソースコード</li>
<li>p.196 泊数 → 拍数 ?</li>
<li>p.198 GraphicsMagic → GraphicsMagick ?</li>
<li>RMagic → RMagick ?</li>
<li>Boid の 3 つのルールを知っていた or 知らなかった</li>
<li>8 章は R が出てこなかった</li>
<li>p.218 case の when のところにせめてインデントがほしい</li>
<li>いろいろとコーディングスタイルに突っ込みが入っていた</li>
<li>寿命は一定ではなく死ぬ確率があがっていくようにした方が良いのではないか</li>
</ul>


<h2>次回の本候補</h2>

<div style="float:right">
<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=znz-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=4797380357" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>
</div>


<p>可能性がありそうなものからなさそうなものまで、いろいろと候補が挙がりましたが、「Rubyによるクローラー開発技法」に決まりました。</p>

<ul>
<li><a href="http://www.amazon.co.jp/gp/product/4797380357/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4797380357&amp;linkCode=as2&amp;tag=znz-22">Rubyによるクローラー開発技法</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4797380357" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.co.jp/gp/product/4873116767/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4873116767&amp;linkCode=as2&amp;tag=znz-22">ハイパフォーマンス ブラウザネットワーキング ―ネットワークアプリケーションのためのパフォーマンス最適化</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4873116767" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />は cuzic さんが既読ということで候補から外れました。</li>
<li><a href="http://www.amazon.co.jp/gp/product/4048660683/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4048660683&amp;linkCode=as2&amp;tag=znz-22">フルスクラッチから1日でCMSを作る シェルスクリプト高速開発手法入門</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4048660683" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.co.jp/gp/product/4873116899/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4873116899&amp;linkCode=as2&amp;tag=znz-22">Haskellによる並列・並行プログラミング</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4873116899" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />は Haskell をそんなにわかっている人がいないということで候補から外れました。</li>
<li><a href="http://www.amazon.co.jp/gp/product/427405019X/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=427405019X&amp;linkCode=as2&amp;tag=znz-22">新装版 リファクタリング―既存のコードを安全に改善する― (OBJECT TECHNOLOGY SERIES)</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=427405019X" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /> は流れで出てきただけだったのか、最終候補には残りませんでした。</li>
<li><a href="http://www.amazon.co.jp/gp/product/4274069125/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4274069125&amp;linkCode=as2&amp;tag=znz-22">すごいErlangゆかいに学ぼう!</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4274069125" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />も Erlang だからという理由で候補から外れました。</li>
<li><a href="http://www.amazon.co.jp/gp/product/4873116694/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4873116694&amp;linkCode=as2&amp;tag=znz-22">アルゴリズムパズル ―プログラマのための数学パズル入門</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4873116694" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />や<a href="http://www.amazon.co.jp/gp/product/4774162531/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4774162531&amp;linkCode=as2&amp;tag=znz-22">プログラマのためのコードパズル ~JavaScriptで挑むコードゴルフとアルゴリズム</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4774162531" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />は予習が必要そうということで候補から外れました。</li>
<li><a href="http://www.amazon.co.jp/gp/product/4873116600/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4873116600&amp;linkCode=as2&amp;tag=znz-22">JavaScriptで学ぶ関数型プログラミング</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4873116600" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />も流れで出てきただけだったので、最終候補には残りませんでした。</li>
<li><a href="http://www.amazon.co.jp/gp/product/4873116341/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4873116341&amp;linkCode=as2&amp;tag=znz-22">入門 データ構造とアルゴリズム</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4873116341" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />も流れで出てきただけだったので、最終候補には残りませんでした。</li>
<li><a href="http://www.amazon.co.jp/gp/product/4873116813/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4873116813&amp;linkCode=as2&amp;tag=znz-22">オブジェクト指向JavaScriptの原則</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4873116813" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />も流れで出てきただけだったので、最終候補には残りませんでした。</li>
<li><a href="http://www.amazon.co.jp/gp/product/4873113911/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4873113911&amp;linkCode=as2&amp;tag=znz-22">JavaScript: The Good Parts ―「良いパーツ」によるベストプラクティス</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4873113911" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />も流れで出てきただけだったので、最終候補には残りませんでした。</li>
<li><a href="http://www.amazon.co.jp/gp/product/4873101662/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4873101662&amp;linkCode=as2&amp;tag=znz-22">パターン認識と機械学習の学習―ベイズ理論に挫折しないための数学</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4873101662" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />

<ul>
<li>同じ ISBN で第2版として黒い表紙ではなく黄色い表紙の本が出ているそうです。</li>
<li>PRML (パターン認識と機械学習) をいきなりは難しいのでこれはどうかという話が出ましたが、 <a href="https://github.com/herumi/prml">https://github.com/herumi/prml</a> を git clone するなどして main.pdf を確認したところ、難しすぎるということで候補から外れました。</li>
</ul>
</li>
<li><a href="http://www.amazon.co.jp/gp/product/432011048X/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=432011048X&amp;linkCode=as2&amp;tag=znz-22">とある弁当屋の統計技師(データサイエンティスト) ―データ分析のはじめかた―</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=432011048X" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />

<ul>
<li><a href="http://www.amazon.co.jp/gp/product/432011082X/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=432011082X&amp;linkCode=as2&amp;tag=znz-22">とある弁当屋の統計技師(データサイエンティスト) 2 ―因子分析大作戦―</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=432011082X" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />という続編も出ていて、良さそうな本だと思いましたが、一人でも読めそうということで候補から外れました。</li>
</ul>
</li>
<li><a href="http://www.amazon.co.jp/gp/product/4274069117/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4274069117&amp;linkCode=as2&amp;tag=znz-22">型システム入門 −プログラミング言語と型の理論−</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4274069117" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />は積ん読のままということで候補から外れました。</li>
<li><a href="http://www.amazon.co.jp/gp/product/4873116856/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4873116856&amp;linkCode=as2&amp;tag=znz-22">戦略的データサイエンス入門 ―ビジネスに活かすコンセプトとテクニック</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4873116856" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />も流れで出てきただけだったので、最終候補には残りませんでした。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[boot2dockerでdockerのvolumeの保存状況を調べてみた]]></title>
    <link href="http://blog.n-z.jp/blog/2014-08-14-boot2docker-volume.html"/>
    <updated>2014-08-14T20:36:13+09:00</updated>
    <id>http://blog.n-z.jp/blog/boot2docker-volume</id>
    <content type="html"><![CDATA[<p><a href="https://docs.docker.com/userguide/dockervolumes/" title="Managing data in containers - Docker Documentation">Managing data in containers - Docker Documentation</a>
に
「Volumes persist until no containers use them」
(ボリュームは使っているコンテナがなくなるまで存続する)
と書いてあり、実際のところどうなのかを boot2docker で確認してみました。</p>

<p>確認した範囲ではコンテナを消した後でも残っていました。
確認の仕方が悪いなど気づいた点があればコメントなり twitter で指摘などをよろしくお願いします。</p>

<!--more-->


<h2>確認バージョン</h2>

<ul>
<li>Mac OS X 10.9.4</li>
<li>VirtualBox 4.3.14</li>
<li>docker 1.1.2</li>
<li>boot2docker v1.1.2</li>
</ul>


<h2>クリーンな環境で起動する</h2>

<p>まず一度 boot2docker の環境を消してから、作成し直しました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">%</span>  boot2docker delete
</span><span class='line'><span class="gp">%</span>  boot2docker init
</span><span class='line'><span class="go">2014/08/14 20:35:43 Creating VM boot2docker-vm...</span>
</span><span class='line'><span class="go">2014/08/14 20:35:43 Apply interim patch to VM boot2docker-vm (https://www.virtualbox.org/ticket/12748)</span>
</span><span class='line'><span class="go">2014/08/14 20:35:43 Setting NIC #1 to use NAT network...</span>
</span><span class='line'><span class="go">2014/08/14 20:35:43 Port forwarding [ssh] tcp://127.0.0.1:2022 --&gt; :22</span>
</span><span class='line'><span class="go">2014/08/14 20:35:43 Port forwarding [docker] tcp://127.0.0.1:2375 --&gt; :2375</span>
</span><span class='line'><span class="go">2014/08/14 20:35:43 Setting NIC #2 to use host-only network &quot;vboxnet0&quot;...</span>
</span><span class='line'><span class="go">2014/08/14 20:35:43 Setting VM storage...</span>
</span><span class='line'><span class="go">2014/08/14 20:35:50 Done. Type `boot2docker up` to start the VM.</span>
</span><span class='line'><span class="gp">%</span> <span class="nb">export </span><span class="nv">DOCKER_HOST</span><span class="o">=</span>tcp://192.168.59.103:2375
</span><span class='line'><span class="gp">%</span> boot2docker up
</span><span class='line'><span class="go">2014/08/14 20:38:02 Waiting for VM to be started...</span>
</span><span class='line'><span class="go">...........</span>
</span><span class='line'><span class="go">2014/08/14 20:38:35 Started.</span>
</span><span class='line'><span class="go">2014/08/14 20:38:35 Your DOCKER_HOST env variable is already set correctly.</span>
</span></code></pre></td></tr></table></div></figure>


<h2>volume 作成</h2>

<p><a href="https://github.com/boot2docker/boot2docker#folder-sharing" title="Folder sharing">Folder sharing</a>
の方法で volume を使ったコンテナを作成しました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">%</span> docker run -v /data --name my-data busybox <span class="nb">true</span>
</span><span class='line'><span class="go">Unable to find image &#39;busybox&#39; locally</span>
</span><span class='line'><span class="go">Pulling repository busybox</span>
</span><span class='line'><span class="go">a9eb17255234: Download complete</span>
</span><span class='line'><span class="go">511136ea3c5a: Download complete</span>
</span><span class='line'><span class="go">42eed7f1bf2a: Download complete</span>
</span><span class='line'><span class="go">120e218dd395: Download complete</span>
</span></code></pre></td></tr></table></div></figure>


<h2>実体確認</h2>

<p><code>/</code> が入ると <code>docker inspect -f '{{ index .Volumes./data }}' my-data</code> のようには確認できないので、
<a href="https://github.com/docker/docker/issues/6966">https://github.com/docker/docker/issues/6966</a> を参考にしてボリュームの実体ディレクトリを確認しました。</p>

<p>一覧で見るだけなら <code>docker inspect -f '{{ .Volumes }}' my-data</code> で確認できます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">%</span> docker inspect -f <span class="s1">&#39; index .Volumes &quot;/data&quot; }}&#39;</span> my-data
</span><span class='line'><span class="go">/mnt/sda1/var/lib/docker/vfs/dir/7625e8091bafdaa0cf1342bc33f29b2708e59b1388505fdd860960b09adf1846</span>
</span><span class='line'><span class="gp">%</span> docker inspect -f <span class="s1">&#39; .Volumes }}&#39;</span> my-data
</span><span class='line'><span class="go">map[/data:/mnt/sda1/var/lib/docker/vfs/dir/7625e8091bafdaa0cf1342bc33f29b2708e59b1388505fdd860960b09adf1846]</span>
</span></code></pre></td></tr></table></div></figure>


<h2>適当なファイル作成</h2>

<p>目的のボリュームを確認しやすくするために適当なファイルを作成しました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">%</span> docker run -it --rm --volumes-from my-data ubuntu
</span><span class='line'><span class="go">Unable to find image &#39;ubuntu&#39; locally</span>
</span><span class='line'><span class="go">Pulling repository ubuntu</span>
</span><span class='line'><span class="go">c4ff7513909d: Download complete</span>
</span><span class='line'><span class="go">511136ea3c5a: Download complete</span>
</span><span class='line'><span class="go">1c9383292a8f: Download complete</span>
</span><span class='line'><span class="go">9942dd43ff21: Download complete</span>
</span><span class='line'><span class="go">d92c3c92fa73: Download complete</span>
</span><span class='line'><span class="go">0ea0d582fd90: Download complete</span>
</span><span class='line'><span class="go">cc58e55aa5a5: Download complete</span>
</span><span class='line'><span class="gp">root@bf9a312400fa:/#</span> <span class="nb">echo </span>foo &gt; /data/foo.txt
</span><span class='line'><span class="gp">root@bf9a312400fa:/#</span> <span class="nb">exit</span>
</span><span class='line'><span class="go">exit</span>
</span></code></pre></td></tr></table></div></figure>


<h2>コンテナ削除</h2>

<p>連携しているコンテナを削除します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">%</span> docker ps -a
</span><span class='line'><span class="go">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS                     PORTS               NAMES</span>
</span><span class='line'><span class="go">ddd48c305f62        busybox:latest      true                6 minutes ago       Exited (0) 6 minutes ago                       my-data</span>
</span><span class='line'><span class="gp">%</span>  docker ps -a -q <span class="p">|</span> xargs docker rm
</span><span class='line'><span class="go">ddd48c305f62</span>
</span></code></pre></td></tr></table></div></figure>


<h2>実体確認</h2>

<p><code>boot2docker ssh</code> で入って確認したところ、残っていました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">%</span> boot2docker ssh
</span><span class='line'><span class="go">                        ##        .</span>
</span><span class='line'><span class="go">                  ## ## ##       ==</span>
</span><span class='line'><span class="go">               ## ## ## ##      ===</span>
</span><span class='line'><span class="go">           /&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;\___/ ===</span>
</span><span class='line'><span class="go">      ~~~ {~~ ~~~~ ~~~ ~~~~ ~~ ~ /  ===- ~~~</span>
</span><span class='line'><span class="go">           \______ o          __/</span>
</span><span class='line'><span class="go">             \    \        __/</span>
</span><span class='line'><span class="go">              \____\______/</span>
</span><span class='line'><span class="go"> _                 _   ____     _            _</span>
</span><span class='line'><span class="go">| |__   ___   ___ | |_|___ \ __| | ___   ___| | _____ _ __</span>
</span><span class='line'><span class="go">| &#39;_ \ / _ \ / _ \| __| __) / _` |/ _ \ / __| |/ / _ \ &#39;__|</span>
</span><span class='line'><span class="go">| |_) | (_) | (_) | |_ / __/ (_| | (_) | (__|   &lt;  __/ |</span>
</span><span class='line'><span class="go">|_.__/ \___/ \___/ \__|_____\__,_|\___/ \___|_|\_\___|_|</span>
</span><span class='line'><span class="go">boot2docker: 1.1.2</span>
</span><span class='line'><span class="go">             master : 740106c - Thu Jul 24 03:24:10 UTC 2014</span>
</span><span class='line'><span class="gp">docker@boot2docker:~$</span> ls -al /mnt/sda1/var/lib/docker/vfs/dir/7625e8091bafdaa0cf1342bc33f29b2708e59b
</span><span class='line'><span class="go">1388505fdd860960b09adf1846</span>
</span><span class='line'><span class="go">ls: /mnt/sda1/var/lib/docker/vfs/dir/7625e8091bafdaa0cf1342bc33f29b2708e59b1388505fdd860960b09adf1846: Permission denied</span>
</span><span class='line'><span class="gp">docker@boot2docker:~$</span> sudo ls -al /mnt/sda1/var/lib/docker/vfs/dir/7625e8091bafdaa0cf1342bc33f29b270
</span><span class='line'><span class="go">8e59b1388505fdd860960b09adf1846</span>
</span><span class='line'><span class="go">total 12</span>
</span><span class='line'><span class="go">drwxr-xr-x    2 root     root          4096 Aug 14 11:52 .</span>
</span><span class='line'><span class="go">drwx------    4 root     root          4096 Aug 14 11:49 ..</span>
</span><span class='line'><span class="go">-rw-r--r--    1 root     root             4 Aug 14 11:52 foo.txt</span>
</span><span class='line'><span class="gp">docker@boot2docker:~$</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[zshでfpathからwhichのように検索する話など]]></title>
    <link href="http://blog.n-z.jp/blog/2014-08-12-zsh-which-fpath.html"/>
    <updated>2014-08-12T23:08:30+09:00</updated>
    <id>http://blog.n-z.jp/blog/zsh-which-fpath</id>
    <content type="html"><![CDATA[<p>zsh で <code>PATH</code> から <code>which</code> コマンドや <code>type</code> コマンドで実行ファイルを検索するように <code>fpath</code> から <code>autoload</code> される関数の実体を探したいことがあります。
そういうときは <code>${^fpath}/cdr(N)</code> のように書けば検索できます。</p>

<!--more-->


<h2>解説</h2>

<p>まず
<code>setopt</code> の <code>RC_EXPAND_PARAM</code> が設定されていないときには <code>$fpath/cdr</code> で配列の最後だけに <code>/cdr</code> がつくので、
<code>${^spec}</code> を使ってすべてにつけるようにしています。</p>

<p>最後に <code>(N)</code> で存在するものだけ残すようにしています。</p>

<figure class='code'><figcaption><span>実行例</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">%</span> <span class="nb">echo</span> <span class="k">${</span><span class="p">^fpath</span><span class="k">}</span>/cdr<span class="o">(</span>N<span class="o">)</span>
</span><span class='line'><span class="go">/usr/share/zsh/5.0.2/functions/cdr</span>
</span></code></pre></td></tr></table></div></figure>


<h2>PATH で後ろに隠れているコマンドも探す</h2>

<p><code>rbenv</code> を使っていると <code>PATH</code> の後ろに <code>/usr/bin/ruby</code> が隠されるなど、
同じコマンドが <code>PATH</code> に複数存在することがあります。</p>

<p>そういうときに zsh なら <code>${^path}/ruby(N)</code> で隠れているコマンドも含めて展開できます。</p>

<figure class='code'><figcaption><span>実行例</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">%</span> <span class="nb">echo</span> <span class="k">${</span><span class="p">^path</span><span class="k">}</span>/ruby<span class="o">(</span>N<span class="o">)</span>
</span><span class='line'><span class="go">/Users/kazu/.rbenv/shims/ruby /usr/bin/ruby</span>
</span></code></pre></td></tr></table></div></figure>


<h2>zsh スクリプトでコマンドの存在を調べる</h2>

<p>シェルスクリプトの中で、
外部コマンドが実行できるかどうか調べるのに</p>

<pre><code>type peco &gt;/dev/null 2&gt;&amp;1
</code></pre>

<p>のように <code>type</code> コマンドで調べることがありますが、
zsh なら</p>

<pre><code>(( ${+commands[peco]} ))
</code></pre>

<p>のように <code>commands</code> という連想配列を調べるという方法が使えます。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[vagrantなどのローカルへのssh接続のみarcfour256で高速化する]]></title>
    <link href="http://blog.n-z.jp/blog/2014-08-11-openssh-arcfour256.html"/>
    <updated>2014-08-11T21:53:54+09:00</updated>
    <id>http://blog.n-z.jp/blog/openssh-arcfour256</id>
    <content type="html"><![CDATA[<p><a href="http://d.hatena.ne.jp/rx7/20101025/p1" title="大容量ファイルのSCP転送を高速にする方法 - 元RX-7乗りの適当な日々">大容量ファイルのSCP転送を高速にする方法 - 元RX-7乗りの適当な日々</a>
をみて、安全な可能性が高い経路だけ <code>arcfour256</code> のような高速な <code>Ciphers</code> を使いたいと思って、そうなるように設定しました。</p>

<p><a href="http://blog.n-z.jp/blog/2013-11-15-dokku.html" title="VirtualBoxでdokkuを試した">VirtualBoxでdokkuを試した</a>
での設定は意図通りには動いていませんでした。</p>

<!--more-->


<h2>確認バージョン</h2>

<ul>
<li>Mac OS X 10.9.4</li>
<li>OpenSSH_6.2p2, OSSLShim 0.9.8r 8 Dec 2011</li>
</ul>


<h2>OpenSSH の <code>~/.ssh/config</code> の設定例</h2>

<p>最初に例を出しておきます。
詳しいことは説明は後でしますが、
<code>Host *</code> の設定は例として書いているだけで、
書かないことを推奨します。</p>

<figure class='code'><figcaption><span>~/.ssh/config</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>HashKnownHosts no
</span><span class='line'>Host 127.0.0.1
</span><span class='line'>  Ciphers arcfour256,arcfour128
</span><span class='line'>Host *
</span><span class='line'>  Ciphers aes256-ctr,aes192-ctr,aes128-ctr
</span></code></pre></td></tr></table></div></figure>


<h3>設定の固まり (セクション)</h3>

<p><code>~/.ssh/config</code> の設定は <code>Host</code> で始まる行ごとの固まり (セクション) に分かれていて、
上の例の場合は <code>HashKnownHosts</code> が全体の設定、
次が <code>127.0.0.1</code> のみの設定、
最後が <code>*</code> つまりワイルドカードですべてのホストに対する設定になります。</p>

<h3>設定の優先順位</h3>

<p>最初に見つかった設定が使われます。
これが以前は勘違いしていた点で、
ホストごとの設定を優先したいのなら、
<code>Host</code> の上のファイルの冒頭には書かずに、
ファイルの最後に <code>Host *</code> で設定する必要があります。</p>

<p>さらに詳しい優先順位は <code>man ssh_config</code> で参照できますが、</p>

<ol>
<li>コマンドラインオプション</li>
<li>ユーザー設定 (<code>~/.ssh/config</code>)</li>
<li>システムの設定 (<code>/etc/ssh/ssh_config</code>)</li>
</ol>


<p>という順番で、その中で最初に見つかったものを使うようになっています。</p>

<p>つまり、ホストごとの設定はファイルの先頭に近い方に、
一般的な設定は最後に書く必要があります。</p>

<h2>Ciphers の一般設定</h2>

<p>デフォルトは <code>man</code> で確認すると
<code>aes128-ctr,aes192-ctr,aes256-ctr,arcfour256,arcfour128,aes128-gcm@openssh.com,aes256-gcm@openssh.com,aes128-cbc,3des-cbc,blowfish-cbc,cast128-cbc,aes192-cbc,aes256-cbc,arcfour</code>
になっていて、
AES の CTR のビット数が多いものを優先するために上記の設定にしています。</p>

<p>設定するなら OS などの更新ごとに毎回ちゃんと <code>man</code> でデフォルトを確認すべきです。
よくわからないのなら、
<code>Host *</code> での設定はしない方が良いでしょう。</p>

<h2>127.0.0.1 向けの Ciphers 設定</h2>

<p>参考にしたサイトのコメントに「
<a href="http://d.hatena.ne.jp/rx7/20101025/p1#c1291741909" title="ただ、arcfourには別の問題が有るので、使わない方がいいです。 arcfour128/256はその問題の対処版なので、これらのみを使うようにした方がいいでしょう。">ただ、arcfourには別の問題が有るので、使わない方がいいです。 arcfour128/256はその問題の対処版なので、これらのみを使うようにした方がいいでしょう。</a>
」とあり、速度もほとんど変わらないので、
「arcfour128/256」だけ使う設定にしています。</p>

<h2>vagrant 用設定</h2>

<p><code>vagrant ssh --help</code> で追加のオプションが渡せるとわかったので、
<code>vagrant ssh -- -v</code> で接続時の状況を調べました。</p>

<p>コマンドラインオプションが優先されるということで、
<code>vagrant ssh -- -v -o Ciphers=arcfour256</code>
のように接続すると <code>arcfour256</code> になることが確認できました。</p>

<p>以前は <code>Host vagrant</code> で設定して <code>vagrant ssh</code> の代わりに <code>ssh vagrant</code> を使っていたのですが、
複数 <code>vagrant up</code> したときに最初に起動した VM のポート (2222) にしか接続できないという問題がありました。</p>

<p>そこで、他の VM のときにも使える設定を考えたところ、
<code>Host 127.0.0.1</code> でうまくいくことがわかりました。</p>

<h2>まとめ</h2>

<p>元々のデフォルトは時代に合わせて最適なものに更新されているので、
不用意に固定してしまうと
<a href="http://d.hatena.ne.jp/jovi0608/20140808/1407483168" title="OpenSSLの脆弱性(CVE-2014-3511)でTLSプロトコルの基礎を学ぶ - ぼちぼち日記">OpenSSLの脆弱性(CVE-2014-3511)でTLSプロトコルの基礎を学ぶ - ぼちぼち日記</a>
のように強いものに固定していたつもりが弱いものに固定されてしまうことになる可能性があるので注意が必要です。</p>

<p><code>127.0.0.1</code> 以外にも LAN 内のホストなど、経路の信頼性が比較的高くて高速に転送したい場合は <code>Host</code> 設定で <code>Ciphers arcfour256</code> を追加すると良いのではないでしょうか。</p>

<h2>参考 URL</h2>

<ul>
<li><a href="http://d.hatena.ne.jp/rx7/20101025/p1" title="大容量ファイルのSCP転送を高速にする方法 - 元RX-7乗りの適当な日々">大容量ファイルのSCP転送を高速にする方法 - 元RX-7乗りの適当な日々</a></li>
<li><a href="http://tech.nitoyon.com/ja/blog/2013/01/11/github-clone-http/" title="GitHub で clone するときは SSH じゃなく HTTP を使ったほうが高速 - てっく煮ブログ">GitHub で clone するときは SSH じゃなく HTTP を使ったほうが高速 - てっく煮ブログ</a></li>
<li><a href="http://endoyuta.com/2014/03/12/github%E3%81%AEssh%E6%8E%A5%E7%B6%9A%E3%81%8C%E9%80%9F%E3%81%8F%E3%81%AA%E3%82%8B%E3%82%89%E3%81%97%E3%81%84/" title="githubのssh接続が速くなるらしい | Logicky Blog">githubのssh接続が速くなるらしい | Logicky Blog</a></li>
<li><a href="http://blog.eiel.info/blog/2013/11/09/no-mathcing-cipher-found-on-github/" title="GitHub で SSH 接続できなくなった。SSH をつかった場合に高速化する設定が原因だった。 - そんなこと覚えてない">GitHub で SSH 接続できなくなった。SSH をつかった場合に高速化する設定が原因だった。 - そんなこと覚えてない</a></li>
<li><a href="http://d.hatena.ne.jp/jovi0608/20140808/1407483168" title="OpenSSLの脆弱性(CVE-2014-3511)でTLSプロトコルの基礎を学ぶ - ぼちぼち日記">OpenSSLの脆弱性(CVE-2014-3511)でTLSプロトコルの基礎を学ぶ - ぼちぼち日記</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails 4.1 で jQuery Raty を使ってみた]]></title>
    <link href="http://blog.n-z.jp/blog/2014-08-09-jquery-raty.html"/>
    <updated>2014-08-09T19:37:53+09:00</updated>
    <id>http://blog.n-z.jp/blog/jquery-raty</id>
    <content type="html"><![CDATA[<p>Rails で星を使った評価付けを使いたかったので、
jQuery プラグインを探してみたところ、
<a href="http://wbotelhos.com/raty" title="jQuery Raty">jQuery Raty</a>
というのが良さそうだったので使ってみました。</p>

<!--more-->


<h2>対象バージョン</h2>

<ul>
<li>jQuery Raty v2.7.0</li>
<li>Ruby on Rails 4.1.4</li>
<li>Ruby 2.1.2</li>
</ul>


<h2>うまくいかなかった方法</h2>

<p><a href="http://rubygems.org/" title="RubyGems.org">RubyGems.org</a>
の方には古いバージョンしかなさそうだったので、
<a href="https://rails-assets.org/" title="Rails Assets">Rails Assets</a>
で最新バージョンを使おうと思い、
<code>Gemfile</code> に以下の設定をしたのですが、
<code>raty</code> のディレクトリ配置が特殊なのか、
うまくいきませんでした。</p>

<figure class='code'><figcaption><span>Gemfile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">source</span> <span class="s1">&#39;https://rails-assets.org&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;rails-assets-raty&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>development 環境では動いた方法</h3>

<p>以下のように書くことで development 環境では動いたのですが、
capistrano で deploy した先では画像が表示されていませんでした。</p>

<figure class='code'><figcaption><span>app/assets/stylesheets/raty.css.scss</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="o">//=</span> <span class="nt">require</span> <span class="nt">raty</span><span class="o">/</span><span class="nt">lib</span><span class="o">/</span><span class="nt">jquery</span><span class="nc">.raty</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>app/assets/javascripts/raty.js.coffee.erb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>#= require raty/lib/jquery.raty
</span><span class='line'> $ -&gt;
</span><span class='line'>   $(&#39;.raty&#39;).raty
</span><span class='line'>     cancel   : true
</span><span class='line'>    cancelOff: &#39;&lt;%= image_path(&#39;raty/lib/images/cancel-off.png&#39;) %&gt;&#39;
</span><span class='line'>    cancelOn : &#39;&lt;%= image_path(&#39;raty/lib/images/cancel-on.png&#39;) %&gt;&#39;
</span><span class='line'>    starHalf : &#39;&lt;%= image_path(&#39;raty/lib/images/star-half.png&#39;) %&gt;&#39;
</span><span class='line'>    starOff  : &#39;&lt;%= image_path(&#39;raty/lib/images/star-off.png&#39;) %&gt;&#39;
</span><span class='line'>    starOn   : &#39;&lt;%= image_path(&#39;raty/lib/images/star-on.png&#39;) %&gt;&#39;
</span><span class='line'>    click: (score, event) -&gt;
</span><span class='line'>      raty = $(event.target).parent()
</span><span class='line'>      $(raty.data(&#39;field&#39;)).val(score)
</span><span class='line'>    score: -&gt;
</span><span class='line'>      $($(this).data(&#39;field&#39;)).val()
</span></code></pre></td></tr></table></div></figure>


<h2>うまくいった方法</h2>

<p><code>vendor/assets/stylesheets/jquery.raty.css</code> と
<code>vendor/assets/javascripts/jquery.raty.js</code> に
ダウンロードしたファイルをおいて、
<code>assets</code> も以下のように書き換えました。
画像も <code>vendor/assets/images/raty</code> においてもうまくいかなかったので、
<code>vendor/assets/images/raty</code> におきました。</p>

<p>Web フォントは今回は使っていないので、
考慮していません。
<code>starType</code> を <code>i</code> に変更しない限り使われないはずなので、
Web フォントを配置しなくても問題ないと思います。</p>

<figure class='code'><figcaption><span>app/assets/stylesheets/raty.css.scss</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="o">//=</span> <span class="nt">require</span> <span class="nt">jquery</span><span class="nc">.raty</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>app/assets/javascripts/raty.js.coffee.erb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>#= require jquery.raty
</span><span class='line'> $ -&gt;
</span><span class='line'>   $(&#39;.raty&#39;).raty
</span><span class='line'>     cancel   : true
</span><span class='line'>    cancelOff: &#39;&lt;%= image_path(&#39;raty/cancel-off.png&#39;) %&gt;&#39;
</span><span class='line'>    cancelOn : &#39;&lt;%= image_path(&#39;raty/cancel-on.png&#39;) %&gt;&#39;
</span><span class='line'>    starHalf : &#39;&lt;%= image_path(&#39;raty/star-half.png&#39;) %&gt;&#39;
</span><span class='line'>    starOff  : &#39;&lt;%= image_path(&#39;raty/star-off.png&#39;) %&gt;&#39;
</span><span class='line'>    starOn   : &#39;&lt;%= image_path(&#39;raty/star-on.png&#39;) %&gt;&#39;
</span><span class='line'>    click: (score, event) -&gt;
</span><span class='line'>      raty = $(event.target).parent()
</span><span class='line'>      $(raty.data(&#39;field&#39;)).val(score)
</span><span class='line'>    score: -&gt;
</span><span class='line'>      $($(this).data(&#39;field&#39;)).val()
</span></code></pre></td></tr></table></div></figure>


<h2>フォームでの使用例</h2>

<p>bootstrap 3.2.0 の <code>form-horizontal</code> を使っているので、
slim で以下のように使っています。</p>

<figure class='code'><figcaption><span>_form.html.slim</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>.form-group
</span><span class='line'>  = f.label :readability, class: &quot;control-label col-md-2&quot;
</span><span class='line'>  .col-md-10
</span><span class='line'>    .raty.form-control data-field=&#39;#book_report_readability&#39;
</span><span class='line'>    = f.hidden_field :readability, class: &quot;form-control&quot;
</span></code></pre></td></tr></table></div></figure>


<h2>show での使用例</h2>

<p>以下のように <code>raty</code> の星を使って表示しています。</p>

<figure class='code'><figcaption><span>app/helpers/raty_helper.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">RatyHelper</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">raty_stars</span><span class="p">(</span><span class="n">n</span><span class="p">,</span> <span class="n">max</span><span class="o">=</span><span class="mi">5</span><span class="p">)</span>
</span><span class='line'>    <span class="p">(</span>
</span><span class='line'>      <span class="n">image_tag</span><span class="p">(</span><span class="s1">&#39;raty/star-on.png&#39;</span><span class="p">,</span> <span class="ss">alt</span><span class="p">:</span> <span class="s1">&#39;&#39;</span><span class="p">)</span> <span class="o">*</span> <span class="n">n</span> <span class="o">+</span>
</span><span class='line'>      <span class="n">image_tag</span><span class="p">(</span><span class="s1">&#39;raty/star-off.png&#39;</span><span class="p">,</span> <span class="ss">alt</span><span class="p">:</span> <span class="s1">&#39;&#39;</span><span class="p">)</span> <span class="o">*</span> <span class="p">(</span><span class="n">max</span><span class="o">-</span><span class="n">n</span><span class="p">)</span>
</span><span class='line'>      <span class="p">)</span><span class="o">.</span><span class="n">html_safe</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[boot2docker で VM のファイルをコンテナやホストと共有する]]></title>
    <link href="http://blog.n-z.jp/blog/2014-08-06-docker-volume.html"/>
    <updated>2014-08-06T23:17:27+09:00</updated>
    <id>http://blog.n-z.jp/blog/docker-volume</id>
    <content type="html"><![CDATA[<p>Mac OS X 上の <code>boot2docker</code> でホストとコンテナでファイルを共有する方法を試してみました。
さらに <code>boot2docker ssh</code> で入ったときにも見えるような設定でも試してみました。</p>

<!--more-->


<h2>参考</h2>

<ul>
<li><a href="http://qiita.com/numa08/items/e52bd18611ac159af1ac" title="boot2dockerでコンテナからホストのファイルを参照する - Qiita">boot2dockerでコンテナからホストのファイルを参照する - Qiita</a></li>
<li><a href="https://github.com/boot2docker/boot2docker#folder-sharing" title="Folder sharing">Folder sharing</a></li>
<li><a href="https://docs.docker.com/userguide/dockervolumes/" title="Managing data in containers - Docker Documentation">Managing data in containers - Docker Documentation</a></li>
</ul>


<h2>対象バージョン</h2>

<ul>
<li>Mac OS X 10.9.4</li>
<li>VirtualBox 4.3.14</li>
<li>docker 1.1.2</li>
<li>boot2docker 1.1.2</li>
</ul>


<h2>実行コマンド</h2>

<ul>
<li><code>docker run -v /mnt/sda1/data:/data --name my-data busybox true</code> で共有ボリューム用コンテナ作成</li>
<li><code>docker run --rm -v /usr/local/bin/docker:/docker -v /var/run/docker.sock:/docker.sock svendowideit/samba my-data</code> で samba 起動</li>
<li><code>docker run -it --rm --volumes-from my-data ubuntu /bin/bash</code> で確認</li>
</ul>


<h3>共有ボリューム用コンテナ作成</h3>

<p><a href="http://blog.n-z.jp/blog/2013-12-24-docker-rm.html" title="Dockerで不要になったコンテナやイメージを削除する">Dockerで不要になったコンテナやイメージを削除する</a>
のように <code>docker ps -a -q | xargs docker rm</code> などで停止しているコンテナを削除してしまうと
<code>my-data</code> という名前を付けたデータ保存用のコンテナも消えてしまうので、
<code>boot2docker</code> では永続化されているパーティションの <code>/mnt/sda1</code> に <code>data</code> をおくことにしました。</p>

<p>run の時点で <code>/mnt/sda1/data</code> は自動作成されるので、
あらかじめ作っておく必要はありません。</p>

<p>間違えてコンテナを削除してしまった場合は
<code>docker run -v /mnt/sda1/data:/data --name my-data busybox true</code>
で作成し直せばデータは残ったまま <code>my-data</code> コンテナを再作成できます。</p>

<p>このやり方は docker を動かすホストに依存してしまうので、
一般には標準のボリュームコンテナを作成する方法の方がおすすめのようです。</p>

<h3>共有ボリューム用コンテナ再作成 (標準の方法の場合)</h3>

<p><code>--volumes-from</code> で指定した共有は使っているコンテナがなくなってしまっても内容が残っていますが、
名前で指定して取り出す方法がなくなってしまうように見えます。</p>

<p><code>my-data</code> コンテナを削除してしまった場合、
<code>--volumes-from my-data</code> は使えなくなるので、
<code>docker run --volumes-from samba-server --name my-data busybox true</code>
のように残っているコンテナを <code>--volumes-from</code> で指定して再作成すれば、
また <code>docker run -it --rm --volumes-from my-data ubuntu /bin/bash</code> のように
<code>--volumes-from</code> に <code>my-data</code> を指定できるようになります。</p>

<h3>samba 起動</h3>

<p><code>docker run --rm -v /usr/local/bin/docker:/docker -v /var/run/docker.sock:/docker.sock svendowideit/samba my-data</code>
で samba を起動します。</p>

<p><code>docker.sock</code> も渡しているので、多重起動しないように既存の <code>samba-server</code> は止めてくれるようです。</p>

<p>起動時に以下のようにホスト側からの接続方法の説明が出ます。</p>

<pre><code>% docker run --rm -v /usr/local/bin/docker:/docker -v /var/run/docker.sock:/docker.sock svendowideit/samba my-data
stopping and removing existing server
starting samba server container sharing my-data:/data

# run 'docker logs samba-server' to view the samba logs

================================================

Your data volume (/data) should now be accessible at \\&lt;docker ip&gt;\ as 'guest' user (no password)

For example, on OSX, using a typical boot2docker vm:
    goto Go|Connect to Server in Finder
    enter 'cifs://192.168.59.103
    hit the 'Connect' button
    select the volumes you want to mount
    choose the 'Guest' radiobox and connect

Or on Linux:
    mount -t cifs //192.168.59.103/data /mnt/data -o username=guest

Or on Windows:
    Enter '\\192.168.59.103\data' into Explorer
    Log in as Guest - no password
</code></pre>

<h3>samba に接続</h3>

<p><code>boot2docker ip</code> で IP アドレスを確認して、
<code>192.168.59.103</code> なら、
<code>Finder</code> の <code>サーバへ接続</code> (メニューの <code>移動</code> の <code>サーバーへ接続...</code>) を開いて、
サーバアドレスとして <code>cifs://192.168.59.103/data</code> を入力して <code>接続</code> します。
<code>ユーザの種類</code> は <code>ゲスト</code> を選んで <code>接続</code> します。
すると <code>/Volumes/data</code> で見えるようになります。</p>

<p>Linux なら <code>mount -t cifs //192.168.59.103/data /mnt/data -o username=guest</code> のようにマウントするそうです。</p>

<p>Windows ならエクスプローラーで <code>\\192.168.59.103\data</code> にパスワードなしのゲスト接続すれば見えるそうです。</p>

<h3>別コンテナで確認</h3>

<p><code>docker run -it --rm --volumes-from my-data ubuntu /bin/bash</code> などで別コンテナを起動すると、
<code>/data</code> にマウントされているので、
<code>ls -l /data</code> で中身を確認したり、
<code>/data</code> の中にファイルを作成して他で見えることを確認しました。</p>

<h2>まとめ</h2>

<p><a href="https://github.com/boot2docker/boot2docker#folder-sharing">README に書いてある Folder sharing</a>
だと間違えて消してしまうことがあったので、ちょっと工夫した方法を紹介しました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[boot2docker のシリアルコンソールにつなぐ]]></title>
    <link href="http://blog.n-z.jp/blog/2014-08-06-boot2docker-serial.html"/>
    <updated>2014-08-06T23:13:18+09:00</updated>
    <id>http://blog.n-z.jp/blog/boot2docker-serial</id>
    <content type="html"><![CDATA[<p>boot2docker-vm の設定をみていると、
<code>~/.boot2docker/boot2docker-vm.sock</code> にシリアルポートが設定されていたので使ってみました。</p>

<!--more-->


<h2>対象バージョン</h2>

<ul>
<li>Mac OS X 10.9.4</li>
<li>VirtualBox 4.3.14</li>
<li>boot2docker 1.1.2</li>
</ul>


<h2>接続方法</h2>

<p><code>nc -U ~/.boot2docker/boot2docker-vm.sock</code>
で接続して一度 Enter を押してログインプロンプトを再表示させて
<code>docker</code> でログインできます。</p>

<p>Control+C の INT シグナルで <code>nc</code> が終了してしまうので、
普通は素直に <code>boot2docker ssh</code> を使う方が良さそうです。</p>

<p>ssh で入れなくなった時の予備の手段として知っておくと良いかもしれません。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% nc -U ~/.boot2docker/boot2docker-vm.sock
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Core Linux
</span><span class='line'>boot2docker login: docker
</span><span class='line'>docker
</span><span class='line'>                        ##        .
</span><span class='line'>                  ## ## ##       ==
</span><span class='line'>               ## ## ## ##      ===
</span><span class='line'>           /""""""""""""""""\___/ ===
</span><span class='line'>      ~~~ {~~ ~~~~ ~~~ ~~~~ ~~ ~ /  ===- ~~~
</span><span class='line'>           \______ o          __/
</span><span class='line'>             \    \        __/
</span><span class='line'>              \____\______/
</span><span class='line'> _                 _   ____     _            _
</span><span class='line'>| |__   ___   ___ | |_|___ \ __| | ___   ___| | _____ _ __
</span><span class='line'>| '_ \ / _ \ / _ \| __| __) / _` |/ _ \ / __| |/ / _ \ '__|
</span><span class='line'>| |_) | (_) | (_) | |_ / __/ (_| | (_) | (__|   &lt;  __/ |
</span><span class='line'>|_.__/ \___/ \___/ \__|_____\__,_|\___/ \___|_|\_\___|_|
</span><span class='line'>boot2docker: 1.1.2
</span><span class='line'>             master : 740106c - Thu Jul 24 03:24:10 UTC 2014
</span><span class='line'>docker@boot2docker:~$</span></code></pre></td></tr></table></div></figure>


<h2>参考サイト</h2>

<ul>
<li><a href="http://d.hatena.ne.jp/hiboma/20140130/1391061776" title="Vagrant (VirtualBox) でシリアルコンソールに繋ぐ - hibomaのはてなダイアリー">Vagrant (VirtualBox) でシリアルコンソールに繋ぐ - hibomaのはてなダイアリー</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[boot2docker のバージョンアップ]]></title>
    <link href="http://blog.n-z.jp/blog/2014-08-06-boot2docker-upgrade.html"/>
    <updated>2014-08-06T23:10:26+09:00</updated>
    <id>http://blog.n-z.jp/blog/boot2docker-upgrade</id>
    <content type="html"><![CDATA[<p>boot2docker の ISO の更新は専用コマンドで簡単にできるとわかったので、
わざと古いバージョンに戻したりして動作確認してみました。</p>

<!--more-->


<h2>対象バージョン</h2>

<ul>
<li>Mac OS X 10.9.4</li>
<li>VirtualBox 4.3.14</li>
<li>docker 1.1.2</li>
<li>boot2docker 1.1.2</li>
</ul>


<h2>更新準備</h2>

<p><code>boot2docker delete</code> して消してから ISO を更新して
<code>boot2docker init</code> で作り直すという説明もありますが、
再起動しても残る部分は ISO とは別の仮想ディスクの <code>/dev/sda1</code> に保存されていて、
そのまま使い回せることがほとんどなので、
作り直さなくても更新できます。</p>

<p>大きくバージョンをあげるとか、クリーンな環境でやり直したいと言うときは消して作り直せば良いと思います。</p>

<p>参考: <a href="http://qiita.com/tukiyo3/items/07f1eb77b5ffd9031e30" title="boot2dockerのデータ永続化まとめ - Qiita">boot2dockerのデータ永続化まとめ - Qiita</a></p>

<h2>更新方法</h2>

<h3>VM を停止して更新</h3>

<p><code>boot2docker upgrade</code> で VM が起動していれば停止して更新して起動し直してくれます。</p>

<h3>ISO だけ更新</h3>

<p><code>boot2docker download</code> で ISO だけ無条件にダウンロードしてくれます。</p>

<h3>boot2docker help</h3>

<p>以上の説明は <code>boot2docker help</code> にちゃんと書いてある通りです。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% boot2docker help
</span><span class='line'>Usage: boot2docker [&lt;options&gt;] &lt;command&gt; [&lt;args&gt;]
</span><span class='line'>
</span><span class='line'>boot2docker management utility.
</span><span class='line'>
</span><span class='line'>Commands:
</span><span class='line'>    init                    Create a new boot2docker VM.
</span><span class='line'>    up|start|boot           Start VM from any states.
</span><span class='line'>    ssh [ssh-command]       Login to VM via SSH.
</span><span class='line'>    save|suspend            Suspend VM and save state to disk.
</span><span class='line'>    down|stop|halt          Gracefully shutdown the VM.
</span><span class='line'>    restart                 Gracefully reboot the VM.
</span><span class='line'>    poweroff                Forcefully power off the VM (might corrupt disk image).
</span><span class='line'>    reset                   Forcefully power cycle the VM (might corrupt disk image).
</span><span class='line'>    delete|destroy          Delete boot2docker VM and its disk image.
</span><span class='line'>    config|cfg              Show selected profile file settings.
</span><span class='line'>    info                    Display detailed information of VM.
</span><span class='line'>    ip                      Display the IP address of the VM's Host-only network.
</span><span class='line'>    status                  Display current state of VM.
</span><span class='line'>    download                Download boot2docker ISO image.
</span><span class='line'>    upgrade                 Upgrade the boot2docker ISO image (if vm is running it will be stopped and started).
</span><span class='line'>    version                 Display version information.
</span><span class='line'>
</span><span class='line'>Options:
</span><span class='line'>      --basevmdk="": Path to VMDK to use as base for persistent partition
</span><span class='line'>      --dhcp=true: enable VirtualBox host-only network DHCP.
</span><span class='line'>      --dhcpip=192.168.59.99: VirtualBox host-only network DHCP server address.
</span><span class='line'>  -s, --disksize=20000: boot2docker disk image size (in MB).
</span><span class='line'>      --dockerport=2375: host Docker port (forward to port 2375 in VM).
</span><span class='line'>      --hostip=192.168.59.3: VirtualBox host-only network IP address.
</span><span class='line'>      --iso="/Users/knishiyama/.boot2docker/boot2docker.iso": path to boot2docker ISO image.
</span><span class='line'>      --lowerip=192.168.59.103: VirtualBox host-only network DHCP lower bound.
</span><span class='line'>  -m, --memory=2048: virtual machine memory size (in MB).
</span><span class='line'>      --netmask=ffffff00: VirtualBox host-only network mask.
</span><span class='line'>      --serial=false: try serial console to get IP address (experimental)
</span><span class='line'>      --serialfile="": path to the serial socket/pipe.
</span><span class='line'>      --ssh="ssh": path to SSH client utility.
</span><span class='line'>      --ssh-keygen="ssh-keygen": path to ssh-keygen utility.
</span><span class='line'>      --sshkey="/Users/knishiyama/.ssh/id_boot2docker": path to SSH key to use.
</span><span class='line'>      --sshport=2022: host SSH port (forward to port 22 in VM).
</span><span class='line'>      --upperip=192.168.59.254: VirtualBox host-only network DHCP upper bound.
</span><span class='line'>      --vbm="VBoxManage": path to VirtualBox management utility.
</span><span class='line'>  -v, --verbose=false: display verbose command invocations.
</span><span class='line'>      --vm="boot2docker-vm": virtual machine name.</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ruby-buildをrbenvと組み合わせずに使う]]></title>
    <link href="http://blog.n-z.jp/blog/2014-07-27-ruby-build-without-rbenv.html"/>
    <updated>2014-07-27T17:08:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/ruby-build-without-rbenv</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/sstephenson/ruby-build" title="ruby-build">ruby-build</a>
は
<a href="https://github.com/sstephenson/rbenv" title="rbenv">rbenv</a>
と組み合わせて使われることが多いですが、
単独でも使えて、その情報が少ないので少し書いておきます。</p>

<!--more-->


<h2><code>/usr/local</code> にインストールする方法</h2>

<p><code>ruby-build</code> 自体もインストールしてしまう場合は
<code>install.sh</code> を使ってインストールします。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>git clone --depth 1 https://github.com/sstephenson/ruby-build
</span><span class='line'>ruby-build/install.sh
</span><span class='line'>rm -rf ruby-build
</span><span class='line'>ruby-build 2.1.2 /usr/local
</span></code></pre></td></tr></table></div></figure>


<p>もっと詳しい使い方は
<a href="http://qiita.com/takahashim/items/406421d515ef1d4f1189" title="[ReVIEW Tips] DockerでRe:VIEW">[ReVIEW Tips] DockerでRe:VIEW</a>
が参考になると思います。</p>

<h2>ruby だけインストールする方法</h2>

<p><code>bin/ruby-build</code> を直接実行すれば <code>ruby-build</code> をインストールせずに
<code>ruby</code> だけインストールすることもできます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>git clone --depth 1 https://github.com/sstephenson/ruby-build
</span><span class='line'>ruby-build/bin/ruby-build 2.1.2 /usr/local
</span><span class='line'>rm -rf ruby-build
</span></code></pre></td></tr></table></div></figure>


<p>ドキュメントの生成を止めたり、
インストール中のメッセージを出したりするために
以下のように実行するのも良いと思います。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>git clone --depth 1 https://github.com/sstephenson/ruby-build
</span><span class='line'><span class="nb">export </span><span class="nv">CONFIGURE_OPTS</span><span class="o">=</span><span class="s2">&quot;--disable-install-doc&quot;</span>
</span><span class='line'>ruby-build/bin/ruby-build --verbose 2.1.2 /usr/local
</span><span class='line'>rm -rf ruby-build
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
