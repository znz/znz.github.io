<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[@znz blog]]></title>
  <link href="http://blog.n-z.jp/atom.xml" rel="self"/>
  <link href="http://blog.n-z.jp/"/>
  <updated>2014-05-04T21:27:47+09:00</updated>
  <id>http://blog.n-z.jp/</id>
  <author>
    <name><![CDATA[Kazuhiro NISHIYAMA]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[LILO ＆ 東海道らぐのイベントに参加しました]]></title>
    <link href="http://blog.n-z.jp/blog/2014-05-03-lilo-event.html"/>
    <updated>2014-05-03T23:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/lilo-event</id>
    <content type="html"><![CDATA[<p><a href="http://lilo.doorkeeper.jp/events/10790">LILO ＆ 東海道らぐ・オフラインミーティング（2014/05/03）</a> に参加しました。</p>

<p>アンカンファレンス形式で発表したい人が順番に前に出て話をするという形式でした。</p>

<!--more-->


<h2>内容</h2>

<p>大部分は資料を用意しての発表という形式ではなくて、
発表のタイトルもちゃんとあるわけではなかったので、
大雑把にこういう話でしたというメモだけです。</p>

<ul>
<li>自己紹介1</li>
<li>しまださんの東海道らぐの紹介</li>
<li>自分の <code>libpam-google-authenticator</code> の話</li>
<li>自己紹介2 (後から来た人の自己紹介)</li>
<li>えのきさんの LibreOffice の QA などの相談 (ディスカッション)</li>
<li>さとうさんの Raspberry Pi の話</li>
<li>矢吹さんの LXC などの話</li>
<li>自己紹介3 (さらに後から来た人の自己紹介)

<ul>
<li>pandoc がオススメ</li>
</ul>
</li>
<li>としひささんの Raspberry Pi で NTP Stratum 1 Server の話

<ul>
<li><a href="http://tosihisa.postach.io/raspberry-pi-de-ntp-stratum-1-server-wozuo-ru">Raspberry Pi で NTP Stratum-1 Server を作る． | tosihisa&rsquo;s public notebook</a></li>
<li><a href="http://www.pool.ntp.org/scores/60.56.214.78">http://www.pool.ntp.org/scores/60.56.214.78</a></li>
<li><code>ntpdate -quv ntp.netfort.gr.jp</code> で確認できました。</li>
</ul>
</li>
<li>守屋さんの Linux の昔話とかの話</li>
<li>こんどうさんの Flightgear の話</li>
<li>大浦さんの 文字書き起こしツール <a href="http://sourceforge.jp/projects/smart-gs/">SMART-GS</a> の話</li>
<li>さかもとさんのカーネルモジュールの話

<ul>
<li><a href="http://netcat.bandcamp.com/">http://netcat.bandcamp.com/</a></li>
<li><a href="https://github.com/usrbinnc/netcat-cpi-kernel-module">https://github.com/usrbinnc/netcat-cpi-kernel-module</a></li>
</ul>
</li>
</ul>


<h2>感想</h2>

<p>いろいろな内容の話が聞けて面白かったです。</p>

<p>自分が話をするのは、 LILO のサーバー移行の話という案もあったのですが、
それはちゃんとまとめる時間をとってからの方が良さそうと思って、
事前に一度試していたことのあった <code>libpam-google-authenticator</code> を前の晩に試し直しながらデモの順番を考えて、
その話をしました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac OS X で owncloudcmd を使う]]></title>
    <link href="http://blog.n-z.jp/blog/2014-05-02-owncloudcmd.html"/>
    <updated>2014-05-02T22:18:39+09:00</updated>
    <id>http://blog.n-z.jp/blog/owncloudcmd</id>
    <content type="html"><![CDATA[<p>ownCloud のデスクトップクライアントには <code>owncloudcmd</code> というコマンドが含まれています。
昔は <code>ocsync</code> というコマンドが別途あったようですが、今は同梱されている <code>owncloudcmd</code> を使うのが主流のようです。</p>

<!--more-->


<h2>対象バージョン</h2>

<ul>
<li>クライアント : ownCloud client for Mac 1.5.4 に同梱の <code>owncloudcmd</code> で試しました。</li>
<li>サーバー : 自前サーバーなら ownCloud 6.0.3 で、今回の例では <a href="https://teracloud.jp/">Teraクラウド</a> を使ってみました。</li>
</ul>


<h2>概要</h2>

<p><code>path/to/owncloudcmd path/to/localdir ownclouds://example.jp/remote.php/webdav</code>
のようにローカルのディレクトリと <code>owncloud</code> の WebDAV 用の URL の先頭の <code>http</code> を <code>owncloud</code> に置き換えたもの (<code>https</code> なら <code>ownclouds</code>) を指定すると同期できます。</p>

<p>引数なしで実行するとオプションの説明が出ます。</p>

<h2>Mac OS X 版での修正</h2>

<h3><code>owncloudcmd</code> のリンクミス?</h3>

<p>普通に使おうとすると <code>dyld: Library not loaded: libowncloudsync.0.dylib</code> で起動できません。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">%</span> /Applications/owncloud.app/Contents/MacOS/owncloudcmd <span class="nv">$HOME</span>/teracloud ownclouds://teracloud.jp/remote.php/webdav
</span><span class='line'><span class="go">dyld: Library not loaded: libowncloudsync.0.dylib</span>
</span><span class='line'><span class="go">  Referenced from: /Applications/owncloud.app/Contents/MacOS/owncloudcmd</span>
</span><span class='line'><span class="go">  Reason: image not found</span>
</span><span class='line'><span class="go">zsh: trace trap  /Applications/owncloud.app/Contents/MacOS/owncloudcmd</span>
</span></code></pre></td></tr></table></div></figure>


<h3>ライブラリのパス修正</h3>

<p><code>otool -L</code> で確認すると相対パスがまずいとわかります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">%</span> otool -L /Applications/owncloud.app/Contents/MacOS/owncloudcmd
</span><span class='line'><span class="go">/Applications/owncloud.app/Contents/MacOS/owncloudcmd:</span>
</span><span class='line'><span class="go"> libowncloudsync.0.dylib (compatibility version 0.0.0, current version 1.5.4)</span>
</span><span class='line'><span class="go"> QtWebKit.framework/Versions/4/QtWebKit (compatibility version 4.9.0, current version 4.9.3)</span>
</span><span class='line'><span class="go"> QtXmlPatterns.framework/Versions/4/QtXmlPatterns (compatibility version 4.8.0, current version 4.8.4)</span>
</span><span class='line'><span class="go"> QtGui.framework/Versions/4/QtGui (compatibility version 4.8.0, current version 4.8.4)</span>
</span><span class='line'><span class="go"> QtDBus.framework/Versions/4/QtDBus (compatibility version 4.8.0, current version 4.8.4)</span>
</span><span class='line'><span class="go"> QtXml.framework/Versions/4/QtXml (compatibility version 4.8.0, current version 4.8.4)</span>
</span><span class='line'><span class="go"> QtSql.framework/Versions/4/QtSql (compatibility version 4.8.0, current version 4.8.4)</span>
</span><span class='line'><span class="go"> QtNetwork.framework/Versions/4/QtNetwork (compatibility version 4.8.0, current version 4.8.4)</span>
</span><span class='line'><span class="go"> QtCore.framework/Versions/4/QtCore (compatibility version 4.8.0, current version 4.8.4)</span>
</span><span class='line'><span class="go"> libocsync.0.dylib (compatibility version 0.0.0, current version 0.2.1)</span>
</span><span class='line'><span class="go"> /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 125.2.11)</span>
</span><span class='line'><span class="go"> /usr/local/opt/sqlite/lib/libsqlite3.0.dylib (compatibility version 9.0.0, current version 9.6.0)</span>
</span><span class='line'><span class="go"> /usr/lib/libiconv.2.dylib (compatibility version 7.0.0, current version 7.0.0)</span>
</span><span class='line'><span class="go"> /System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices (compatibility version 1.0.0, current version 44.0.0)</span>
</span><span class='line'><span class="go"> /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 751.63.0)</span>
</span><span class='line'><span class="go"> /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 1038.36.0)</span>
</span><span class='line'><span class="go"> @loader_path/../Frameworks/Sparkle.framework/Versions/A/Sparkle (compatibility version 1.5.0, current version 1.5.0)</span>
</span><span class='line'><span class="go"> /usr/local/lib/libqtkeychain.0.3.0.dylib (compatibility version 0.0.0, current version 0.3.0)</span>
</span><span class='line'><span class="go"> /usr/local/opt/neon/lib/libneon.27.dylib (compatibility version 31.0.0, current version 31.0.0)</span>
</span><span class='line'><span class="go"> /usr/lib/libstdc++.6.dylib (compatibility version 7.0.0, current version 7.9.0)</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>install_name_tool -add_rpath</code> や <code>install_name_tool -delete_rpath</code> で試行錯誤したのですが、
<code>otool -l /Applications/owncloud.app/Contents/MacOS/owncloudcmd</code> で確認しても
<code>rpath</code> が後ろに追加されてきいていないようだったので、
<code>install_name_tool -change</code> で対応することにしました。</p>

<p>まず相対パスを修正しました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">%</span>  otool -L /Applications/owncloud.app/Contents/MacOS/owncloudcmd | awk <span class="s1">&#39;$1~&quot;^lib&quot;{print &quot;install_name_tool -change &quot; $1 &quot; @executable_path/../MacOS/&quot; $1 &quot; /Applications/owncloud.app/Contents/MacOS/owncloudcmd&quot; }&#39;</span> | sh -e
</span><span class='line'><span class="gp">%</span>  otool -L /Applications/owncloud.app/Contents/MacOS/owncloudcmd | awk <span class="s1">&#39;$1~&quot;^Qt&quot;{print &quot;install_name_tool -change &quot; $1 &quot; @executable_path/../Frameworks/&quot; $1 &quot; /Applications/owncloud.app/Contents/MacOS/owncloudcmd&quot; }&#39;</span> | sh -e
</span></code></pre></td></tr></table></div></figure>


<p>さらに <code>/usr/local/lib</code> をさしているものがあったのを修正しました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">%</span>  /Applications/owncloud.app/Contents/MacOS/owncloudcmd
</span><span class='line'><span class="go">dyld: Library not loaded: /usr/local/lib/libqtkeychain.0.3.0.dylib</span>
</span><span class='line'><span class="go">  Referenced from: /Applications/owncloud.app/Contents/MacOS/owncloudcmd</span>
</span><span class='line'><span class="go">  Reason: image not found</span>
</span><span class='line'><span class="go">zsh: trace trap  /Applications/owncloud.app/Contents/MacOS/owncloudcmd</span>
</span><span class='line'><span class="gp">%</span>  find /Applications/owncloud.app -name libqtkeychain.0.3.0.dylib
</span><span class='line'><span class="go">/Applications/owncloud.app/Contents/MacOS/libqtkeychain.0.3.0.dylib</span>
</span><span class='line'><span class="gp">%</span>  install_name_tool -change /usr/local/lib/libqtkeychain.0.3.0.dylib /Applications/owncloud.app/Contents/MacOS/libqtkeychain.0.3.0.dylib /Applications/owncloud.app/Contents/MacOS/owncloudcmd
</span><span class='line'><span class="gp">%</span>  /Applications/owncloud.app/Contents/MacOS/owncloudcmd
</span><span class='line'><span class="go">dyld: Library not loaded: /usr/local/opt/neon/lib/libneon.27.dylib</span>
</span><span class='line'><span class="go">  Referenced from: /Applications/owncloud.app/Contents/MacOS/owncloudcmd</span>
</span><span class='line'><span class="go">  Reason: image not found</span>
</span><span class='line'><span class="go">zsh: trace trap  /Applications/owncloud.app/Contents/MacOS/owncloudcmd</span>
</span><span class='line'><span class="gp">%</span>  find /Applications/owncloud.app -name libneon.27.dylib
</span><span class='line'><span class="go">/Applications/owncloud.app/Contents/MacOS/libneon.27.dylib</span>
</span><span class='line'><span class="gp">%</span>  install_name_tool -change /usr/local/opt/neon/lib/libneon.27.dylib /Applications/owncloud.app/Contents/MacOS/libneon.27.dylib /Applications/owncloud.app/Contents/MacOS/owncloudcmd
</span></code></pre></td></tr></table></div></figure>


<p>これで余計なメッセージは出ますが、使えるようになりました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">%</span>  /Applications/owncloud.app/Contents/MacOS/owncloudcmd
</span><span class='line'><span class="go">objc[40210]: Class WebCoreMovieObserver is implemented in both /System/Library/Frameworks/WebKit.framework/Versions/A/Frameworks/WebCore.framework/Versions/A/WebCore and /Applications/owncloud.app/Contents/Frameworks/QtWebKit.framework/Versions/4/QtWebKit. One of the two will be used. Which one is undefined.</span>
</span><span class='line'><span class="go">objc[40210]: Class WebCoreSharedBufferData is implemented in both /System/Library/Frameworks/WebKit.framework/Versions/A/Frameworks/WebCore.framework/Versions/A/WebCore and /Applications/owncloud.app/Contents/Frameworks/QtWebKit.framework/Versions/4/QtWebKit. One of the two will be used. Which one is undefined.</span>
</span><span class='line'><span class="go">objc[40210]: Class WebVideoFullscreenWindow is implemented in both /System/Library/Frameworks/WebKit.framework/Versions/A/Frameworks/WebCore.framework/Versions/A/WebCore and /Applications/owncloud.app/Contents/Frameworks/QtWebKit.framework/Versions/4/QtWebKit. One of the two will be used. Which one is undefined.</span>
</span><span class='line'><span class="go">objc[40210]: Class WebVideoFullscreenController is implemented in both /System/Library/Frameworks/WebKit.framework/Versions/A/Frameworks/WebCore.framework/Versions/A/WebCore and /Applications/owncloud.app/Contents/Frameworks/QtWebKit.framework/Versions/4/QtWebKit. One of the two will be used. Which one is undefined.</span>
</span><span class='line'><span class="go">objc[40210]: Class WebVideoFullscreenHUDWindowController is implemented in both /System/Library/Frameworks/WebKit.framework/Versions/A/Frameworks/WebCore.framework/Versions/A/WebCore and /Applications/owncloud.app/Contents/Frameworks/QtWebKit.framework/Versions/4/QtWebKit. One of the two will be used. Which one is undefined.</span>
</span><span class='line'><span class="go">objc[40210]: Class WebVideoFullscreenHUDWindow is implemented in both /System/Library/Frameworks/WebKit.framework/Versions/A/Frameworks/WebCore.framework/Versions/A/WebCore and /Applications/owncloud.app/Contents/Frameworks/QtWebKit.framework/Versions/4/QtWebKit. One of the two will be used. Which one is undefined.</span>
</span><span class='line'><span class="go">objc[40210]: Class WebWindowFadeAnimation is implemented in both /System/Library/Frameworks/WebKit.framework/Versions/A/Frameworks/WebCore.framework/Versions/A/WebCore and /Applications/owncloud.app/Contents/Frameworks/QtWebKit.framework/Versions/4/QtWebKit. One of the two will be used. Which one is undefined.</span>
</span><span class='line'><span class="go">objc[40210]: Class WebWindowScaleAnimation is implemented in both /System/Library/Frameworks/WebKit.framework/Versions/A/Frameworks/WebCore.framework/Versions/A/WebCore and /Applications/owncloud.app/Contents/Frameworks/QtWebKit.framework/Versions/4/QtWebKit. One of the two will be used. Which one is undefined.</span>
</span><span class='line'><span class="go">owncloudcmd - command line ownCloud client tool.</span>
</span><span class='line'>
</span><span class='line'><span class="go">Usage: owncloudcmd &lt;sourcedir&gt; &lt;owncloudurl&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="go">A proxy can either be set manually using --httpproxy or it</span>
</span><span class='line'><span class="go">uses the setting from a configured sync client.</span>
</span><span class='line'>
</span><span class='line'><span class="go">Options:</span>
</span><span class='line'><span class="go">  --confdir = configdir: Read config from there.</span>
</span><span class='line'><span class="go">  --httpproxy = proxy:   Specify a http proxy to use.</span>
</span><span class='line'><span class="go">                         Proxy is http://server:port</span>
</span><span class='line'>
</span><span class='line'><span class="go">zsh: exit 1     /Applications/owncloud.app/Contents/MacOS/owncloudcmd</span>
</span></code></pre></td></tr></table></div></figure>


<h2>使い方</h2>

<p>概要のところに書いたように、
普通に <code>owncloudcmd sourcedir owncloudurl</code> で実行するとユーザー名とパスワードを聞かれます。
URL に <code>ownclouds://user:password@example.jp/remote.php/webdav</code> のようにユーザー名とパスワードを埋め込むことも出来ますが、あまりコマンドラインにパスワードは書きたくないことが多いと思います。</p>

<p>しかし、
<a href="https://github.com/owncloud/mirall/blob/f72e1cc8375b72c97d6566c6875f7214415cea9c/src/owncloudcmd/owncloudcmd.cpp">owncloudcmd のオプション処理部分のソース</a>
をみても <code>"--confdir"</code> は読み込むだけで使われていないようなので、
他の方法で指定することは出来なさそうでした。</p>

<h2>まとめ</h2>

<p><code>owncloudcmd</code> を使えば GUI クライアントで設定しているサーバー以外のサーバーと同期したり、
サーバーなどのコマンドラインのみの環境でも <code>owncloud</code> との同期が出来ることがわかりました。</p>

<p>しかし、クライアントの出来がまだあまりよくないので、使い勝手は良くないということもわかりました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第 10 回 RubyMotion もくもく会 in Osaka に参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2014-04-23-rubymotion-mokumoku.html"/>
    <updated>2014-04-23T19:16:51+09:00</updated>
    <id>http://blog.n-z.jp/blog/rubymotion-mokumoku</id>
    <content type="html"><![CDATA[<p>第 1 回から第 9 回にも参加した RubyMotion もくもく会 in Osaka の
<a href="http://connpass.com/event/5674/">第 10 回 RubyMotion もくもく会 in Osaka</a>
に参加してきました。</p>

<p>次回の
<a href="http://connpass.com/event/6116/">第 11 回 RubyMotion もくもく会 in Osaka &ndash; connpass</a>
は 05/28(水) になりました。</p>

<!--more-->


<h2>メモ</h2>

<ul>
<li><a href="https://itunes.apple.com/jp/app/bokosuka!mogurando/id845835380?mt=8">ボコスカ！モグランド</a></li>
<li><a href="http://www.amazon.co.jp/gp/product/4873116678/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4873116678&amp;linkCode=as2&amp;tag=znz-22">AngularJSアプリケーション開発ガイド</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4873116678" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /> が発売されているという話</li>
<li><a href="http://www.pixate.com/">Pixate</a></li>
<li>MacFace</li>
<li><a href="https://github.com/HipByte/RubyMotionSamples/issues/31">osx/Tweets app crashes on launch</a></li>
<li><a href="http://www.impress-plus.co.jp/">http://www.impress-plus.co.jp/</a></li>
</ul>


<h2>調査続き</h2>

<p>引き続き初回起動時の URL の受け取り方を調べていました。</p>

<ul>
<li><a href="http://questbeat.hatenablog.jp/entry/2014/04/19/123207">「ログイン時に起動」を実装する</a> はあんまり関係なかった。</li>
<li>GitHub で <code>LSSetDefaultHandlerForURLScheme</code> を検索

<ul>
<li><a href="https://github.com/s-faychatelard/Helm/blob/2c85b303781fa430432c17ed9848a0b252c82eae/sources/others/mac/mac.mm">https://github.com/s-faychatelard/Helm/blob/2c85b303781fa430432c17ed9848a0b252c82eae/sources/others/mac/mac.mm</a> : Qt で実装していて URL を受け取っている部分がわからず (Qt のイベントに変換されたものを受け取っている?)</li>
<li><a href="https://github.com/bigbearlabs/MotionKit/blob/51f46c14b52819b709c57d6e1c954d84c852e48b/lib/motion-kit/misc/osx/osx_browsers.rb">https://github.com/bigbearlabs/MotionKit/blob/51f46c14b52819b709c57d6e1c954d84c852e48b/lib/motion-kit/misc/osx/osx_browsers.rb</a> : ブラウザーの一覧の取得など</li>
<li><a href="https://github.com/bigbearlabs/MotionKit/blob/51f46c14b52819b709c57d6e1c954d84c852e48b/lib/motion-kit/app/osx/app.rb">https://github.com/bigbearlabs/MotionKit/blob/51f46c14b52819b709c57d6e1c954d84c852e48b/lib/motion-kit/app/osx/app.rb</a> : <code>application:openFile:</code> や <code>application:openFiles:</code> で受け取っているように見えるが試してみても呼ばれない。</li>
<li><a href="https://github.com/gnyrd/WebEx/blob/0ea21241591e496d1d702c45768400fa14d75662/URLHandler.m">https://github.com/gnyrd/WebEx/blob/0ea21241591e496d1d702c45768400fa14d75662/URLHandler.m</a> : <code>kAEGetURL</code> の登録に <code>handleGetURLEvent:withReplyEvent:</code> (2引数) ではなく <code>getURL:</code> (1引数) を使っている。</li>
</ul>
</li>
</ul>


<p>前回までの試行錯誤の途中で <code>setEventHandler</code> の呼び出しを <code>applicationDidFinishLaunching:</code> から <code>initialize</code> に移動していたのと <code>getURL:</code> への変更の組み合わせで、やっと初回起動時にも URL が受け取れるようになって、
さらに <code>rake clean</code> したり一度デフォルトブラウザーを他のブラウザーに設定し直したりしていたら、
<code>handleGetURLEvent:withReplyEvent:</code> に戻しても初回起動時に受け取れるようになっていました。</p>

<p>原因がはっきりしないのが嫌な感じですが、何か設定が中途半端に残っているとうまく動かなかったようです。</p>

<h2>RubyMine</h2>

<p>前回のもくもく会でインストールして、他では使っていなかったので、
ほぼ使っていないまま登録せず試用期限が切れてしまって、
30分ごとに終了するようになってしまいました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[homebrew cask で sylpheed test1 をインストールした]]></title>
    <link href="http://blog.n-z.jp/blog/2014-04-21-brew-cask-sylpheed.html"/>
    <updated>2014-04-21T23:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/brew-cask-sylpheed</id>
    <content type="html"><![CDATA[<p><a href="http://sylpheed.sraoss.jp/ja/news.html">Sylpheed 3.4.1-test1 for Mac OS X (テスト版)</a>
がリリースされていたので、
homebrew cask を使ってインストールしてみました。</p>

<p>dmg で配布されているアプリケーションを homebrew cask に対応させる例としても参考になると思います。</p>

<!--more-->


<h2>homebrew cask のインストール</h2>

<p><a href="http://brew.sh/">Homebre</a>
と
<a href="https://github.com/phinze/homebrew-cask">homebrew-cask</a>
をあらかじめインストールしておきます。</p>

<h2>cask 作成</h2>

<p><code>brew cask create sylpheed-test</code> で作成して、
内容を以下のように変更しました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">SylpheedTest</span> <span class="o">&lt;</span> <span class="no">Cask</span>
</span><span class='line'>  <span class="n">url</span> <span class="s1">&#39;http://sylpheed.sraoss.jp/sylpheed/macosx/Sylpheed_3.4.1-test1.dmg&#39;</span>
</span><span class='line'>  <span class="n">homepage</span> <span class="s1">&#39;http://sylpheed.sraoss.jp/&#39;</span>
</span><span class='line'>  <span class="n">version</span> <span class="s1">&#39;3.4.1-test1&#39;</span>
</span><span class='line'>  <span class="n">sha256</span> <span class="s1">&#39;52505ab7913fd58fa921a9c8b574286f08073321b440b7aa23dba3896b4b2ddc&#39;</span>
</span><span class='line'>  <span class="n">link</span> <span class="s1">&#39;Sylpheed.app&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>sha256</code> は
<a href="https://github.com/phinze/homebrew-cask/blob/master/CONTRIBUTING.md#cask-stanzas">Cask Stanzas</a>
の説明にあるように別途 <code>url</code> に指定したファイルをダウンロードして <code>shasum -a 256 &lt;file&gt;</code> で調べました。
もし upstream のリリースアナウンスに書いてあれば、それをそのまま使えば良いと思います。</p>

<p>編集途中で閉じてしまった場合は
<code>brew cask edit sylpheed-test</code>
で再編集できます。</p>

<p>実体は <code>$(brew --prefix)/Library/Taps/phinze-cask/Casks/sylpheed-test.rb</code> にあります。</p>

<h2>インストール</h2>

<p><code>sylpheed-test.rb</code> が作成できたら <code>brew cask install sylpheed-test</code> でインストールできます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">%</span> brew cask install sylpheed-test
</span><span class='line'><span class="go">==&gt; Downloading http://sylpheed.sraoss.jp/sylpheed/macosx/Sylpheed_3.4.1-test1.dmg</span>
</span><span class='line'><span class="gp">#</span><span class="c">####################################################################### 100.0%</span>
</span><span class='line'><span class="go">==&gt; Symlinking App &#39;Sylpheed.app&#39; to &#39;/Users/kazu/Applications/Sylpheed.app&#39;</span>
</span><span class='line'><span class="go">🍺  sylpheed-test installed to &#39;/opt/homebrew-cask/Caskroom/sylpheed-test/3.4.1-test1&#39; (314 files, 32M)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>起動</h2>

<p>Launchpad から起動したり、Spotlight で検索したりして普通に起動します。</p>

<p>初回起動で
<code>~/Library/Application Support/Sylpheed/Mailboxes/Mail</code>
を作るかきかれましたが、その時点で既に
<code>~/Library/Application Support/Sylpheed</code>
は作成されていました。</p>

<h2>まとめ</h2>

<p>テスト版なので、まだ変なところはあるようですが (Command+V がメッセージビューのトグルになってペーストできないとか)
Mac OS X 版特有の問題があるだけのようなので、今後の正式版に期待しています。</p>

<p>まだ test 版なので pull request はしていないのですが、
正式版が出たら homebrew cask に pull request を送るかもしれません。
beta 版なども対応するなら
<a href="https://github.com/caskroom/homebrew-versions">homebrew-cask-versions</a>
に pull request を送ると良さそうです。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu 14.04 で dokku を使う]]></title>
    <link href="http://blog.n-z.jp/blog/2014-04-18-ubuntu-1404-dokku.html"/>
    <updated>2014-04-18T23:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/ubuntu-1404-dokku</id>
    <content type="html"><![CDATA[<p>Ubuntu 14.04 がリリースされたので、
<a href="https://github.com/progrium/dokku">dokku</a>
を Ubuntu 14.04 で試してみました。</p>

<!--more-->


<h2>dokku の Vagrantfile を確認する</h2>

<p>まず dokku を clone して中の Vagrantfile をみて、
環境変数で設定できる項目があるのを確認しておきます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">%</span> git clone https://github.com/progrium/dokku
</span><span class='line'><span class="gp">%</span> <span class="nb">cd </span>dokku
</span><span class='line'><span class="gp">%</span> vi Vagrantfile
</span></code></pre></td></tr></table></div></figure>


<h2>Vagantfile を変更する</h2>

<p>デフォルトの apt-line のままだとダウンロードが遅いので、
<a href="http://mirrors.ubuntu.com/mirrors.txt">http://mirrors.ubuntu.com/mirrors.txt</a>
からミラーサーバーを選んで (今回は jaist を選択)、
shell provision のところで書き換えておきます。
(関係ないところにマッチして問題が起きる可能性はほぼないので、置換元の URL の <code>.</code> はエスケープしていません。)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'><span class="gh">diff --git a/Vagrantfile b/Vagrantfile</span>
</span><span class='line'><span class="gh">index a310f6b..7c1a133 100644</span>
</span><span class='line'><span class="gd">--- a/Vagrantfile</span>
</span><span class='line'><span class="gi">+++ b/Vagrantfile</span>
</span><span class='line'><span class="gu">@@ -29,5 +29,10 @@ Vagrant::configure(&quot;2&quot;) do |config|</span>
</span><span class='line'>     vb.customize [&quot;modifyvm&quot;, :id, &quot;--memory&quot;, BOX_MEMORY]
</span><span class='line'>   end
</span><span class='line'>
</span><span class='line'><span class="gd">-  config.vm.provision :shell, :inline =&gt; &quot;apt-get -y install git &amp;&amp; cd /root/dokku &amp;&amp; #{make_cmd}&quot;</span>
</span><span class='line'><span class="gi">+  config.vm.provision :shell, :inline =&gt; &lt;&lt;-SHELL</span>
</span><span class='line'><span class="gi">+    sed -i~ -e &#39;s;http://archive.ubuntu.com/ubuntu;http://ftp.jaist.ac.jp/pub/Linux/ubuntu;&#39; /etc/apt/sources.list &amp;&amp;</span>
</span><span class='line'><span class="gi">+    apt-get update &amp;&amp;</span>
</span><span class='line'><span class="gi">+    apt-get -y install git &amp;&amp;</span>
</span><span class='line'><span class="gi">+    cd /root/dokku &amp;&amp; #{make_cmd}</span>
</span><span class='line'><span class="gi">+  SHELL</span>
</span><span class='line'> end
</span></code></pre></td></tr></table></div></figure>


<h2>初回起動</h2>

<p><code>BOX_NAME</code>, <code>BOX_URI</code> に trusty を指定して、
<code>BOX_MEMORY</code> も 512 から 2048 に増やした値を指定して起動します。</p>

<p><code>node-js-sample</code> だと 512 メガでも問題ないのですが、
Rails アプリを動かそうとするとメモリ不足で <code>bundle install</code> の途中で失敗して
deploy できなかったので増やしています。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">%</span> <span class="nv">BOX_NAME</span><span class="o">=</span>trusty-amd64-20140418 <span class="nv">BOX_URI</span><span class="o">=</span>https://cloud-images.ubuntu.com/vagrant/trusty/20140418/trusty-server-cloudimg-amd64-vagrant-disk1.box <span class="nv">BOX_MEMORY</span><span class="o">=</span>2048 vagrant up
</span></code></pre></td></tr></table></div></figure>


<p>box のダウンロードとインストール、
VM の作成などには時間がかかるので、
他のことをしながらゆっくり待ちます。</p>

<h2>二度目以降の起動</h2>

<p>VM の作成ができている状態なら、
box の設定は参照されないので省略できます。
<code>vagrant destroy</code> した後に <code>vagrant up</code> し直したときは参照されるので、
毎回設定していてもかまいません。</p>

<p><code>BOX_MEMORY</code> は毎回設定されるので、指定を忘れると 512 に戻ってしまいます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">%</span> <span class="nv">BOX_MEMORY</span><span class="o">=</span>2048 vagrant up
</span></code></pre></td></tr></table></div></figure>


<h2>dokku の初期設定</h2>

<p>ssh の鍵を追加します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">%</span> vagrant ssh
</span><span class='line'><span class="gp">vagrant@dokku:~$</span> egrep <span class="s1">&#39;^ssh&#39;</span> ~/.ssh/authorized_keys | sudo sshcommand acl-add dokku vagrant
</span><span class='line'><span class="go">dd:3b:b8:2e:85:04:06:e9:ab:ff:a8:0a:c0:04:6e:d6</span>
</span><span class='line'><span class="gp">vagrant@dokku:~$</span> cat ~/.ssh/authorized_keys
</span><span class='line'><span class="gp">#</span> CLOUD_IMG: This file was created/modified by the Cloud Image build process
</span><span class='line'><span class="go">ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA6NF8iallvQVp22WDkTkyrtvp9eWW6A8YVr+kz4TjGYe7gHzIw+niNltGEFHzD8+v1I2YJ6oXevct1YeS0o9HZyN1Q9qgCgzUFtdOKLv6IedplqoPkcmF0aYet2PkEDo3MlTBckFXPITAMzF8dJSIFo9D8HfdOV0IAdx4O7PtixWKn5y2hMNG0zQPyUecp4pzC6kivAIhyfHilFR61RGL+GPXQ2MWZWFYbAGjyiYJnAmCP3NOTd0jMZEnDkbUvxhMmBYSdETk1rRgm+R4LOzFUGaHqHDLKLX+FIPKcF96hrucXzcWyLbIbEgE98OHlnVYCzRdK8jlqm8tehUc9c9WhQ== vagrant insecure public key</span>
</span><span class='line'><span class="gp">vagrant@dokku:~$</span> cat /home/dokku/.ssh/authorized_keys
</span><span class='line'><span class="go">command=&quot;FINGERPRINT=dd:3b:b8:2e:85:04:06:e9:ab:ff:a8:0a:c0:04:6e:d6 NAME=vagrant `cat /home/dokku/.sshcommand` $SSH_ORIGINAL_COMMAND&quot;,no-agent-forwarding,no-user-rc,no-X11-forwarding,no-port-forwarding ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA6NF8iallvQVp22WDkTkyrtvp9eWW6A8YVr+kz4TjGYe7gHzIw+niNltGEFHzD8+v1I2YJ6oXevct1YeS0o9HZyN1Q9qgCgzUFtdOKLv6IedplqoPkcmF0aYet2PkEDo3MlTBckFXPITAMzF8dJSIFo9D8HfdOV0IAdx4O7PtixWKn5y2hMNG0zQPyUecp4pzC6kivAIhyfHilFR61RGL+GPXQ2MWZWFYbAGjyiYJnAmCP3NOTd0jMZEnDkbUvxhMmBYSdETk1rRgm+R4LOzFUGaHqHDLKLX+FIPKcF96hrucXzcWyLbIbEgE98OHlnVYCzRdK8jlqm8tehUc9c9WhQ== vagrant insecure public key</span>
</span></code></pre></td></tr></table></div></figure>


<h2>dokku の鍵追加失敗例</h2>

<p><code>cat ~/.ssh/authorized_keys | sudo sshcommand acl-add dokku vagrant</code>
で追加してしまうと以下のように変になってしまいます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>vagrant@dokku:~$ cat /home/dokku/.ssh/authorized_keys
</span><span class='line'>command=&quot;FINGERPRINT=is NAME=vagrant `cat /home/dokku/.sshcommand` $SSH_ORIGINAL_COMMAND&quot;,no-agent-forwarding,no-user-rc,no-X11-forwarding,no-port-forwarding # CLOUD_IMG: This file was created/modified by the Cloud Image build process
</span><span class='line'>ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA6NF8iallvQVp22WDkTkyrtvp9eWW6A8YVr+kz4TjGYe7gHzIw+niNltGEFHzD8+v1I2YJ6oXevct1YeS0o9HZyN1Q9qgCgzUFtdOKLv6IedplqoPkcmF0aYet2PkEDo3MlTBckFXPITAMzF8dJSIFo9D8HfdOV0IAdx4O7PtixWKn5y2hMNG0zQPyUecp4pzC6kivAIhyfHilFR61RGL+GPXQ2MWZWFYbAGjyiYJnAmCP3NOTd0jMZEnDkbUvxhMmBYSdETk1rRgm+R4LOzFUGaHqHDLKLX+FIPKcF96hrucXzcWyLbIbEgE98OHlnVYCzRdK8jlqm8tehUc9c9WhQ== vagrant insecure public key
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">KEY</span><span class="o">=</span><span class="k">$(</span>cat<span class="k">)</span>
</span><span class='line'><span class="nv">FINGERPRINT</span><span class="o">=</span><span class="k">$(</span>ssh-keygen -lf /dev/stdin <span class="o">&lt;&lt;&lt;</span> <span class="k">$(</span><span class="nb">echo</span> <span class="nv">$KEY</span><span class="k">)</span> | awk <span class="s1">&#39;{print $2}&#39;</span><span class="k">)</span>
</span><span class='line'><span class="nv">KEY_PREFIX</span><span class="o">=</span><span class="s2">&quot;command=\&quot;FINGERPRINT=$FINGERPRINT NAME=$NAME \`cat $USERHOME/.sshcommand\` \$SSH_ORIGINAL_COMMAND\&quot;,no-agent-forwarding,no-user-rc,no-X11-forwarding,no-port-forwarding&quot;</span>
</span><span class='line'><span class="nb">echo</span> <span class="s2">&quot;$KEY_PREFIX $KEY&quot;</span> &gt;&gt; <span class="s2">&quot;$USERHOME/.ssh/authorized_keys&quot;</span>
</span><span class='line'><span class="nb">echo</span> <span class="nv">$FINGERPRINT</span>
</span></code></pre></td></tr></table></div></figure>


<p>の部分を以下のように <code>while read</code> ループに変えた方が良いのかもしれません。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="k">while </span><span class="nb">read </span>KEY; <span class="k">do</span>
</span><span class='line'><span class="k">  </span><span class="nv">FINGERPRINT</span><span class="o">=</span><span class="k">$(</span>ssh-keygen -lf /dev/stdin <span class="o">&lt;&lt;&lt;</span> <span class="k">$(</span><span class="nb">echo</span> <span class="nv">$KEY</span><span class="k">)</span> | awk <span class="s1">&#39;{print $2}&#39;</span><span class="k">)</span>
</span><span class='line'>  <span class="nv">KEY_PREFIX</span><span class="o">=</span><span class="s2">&quot;command=\&quot;FINGERPRINT=$FINGERPRINT NAME=$NAME \`cat $USERHOME/.sshcommand\` \$SSH_ORIGINAL_COMMAND\&quot;,no-agent-forwarding,no-user-rc,no-X11-forwarding,no-port-forwarding&quot;</span>
</span><span class='line'>  <span class="nb">echo</span> <span class="s2">&quot;$KEY_PREFIX $KEY&quot;</span> &gt;&gt; <span class="s2">&quot;$USERHOME/.ssh/authorized_keys&quot;</span>
</span><span class='line'>  <span class="nb">echo</span> <span class="nv">$FINGERPRINT</span>
</span><span class='line'><span class="k">done</span>
</span></code></pre></td></tr></table></div></figure>


<h2>node-js-sample の deploy</h2>

<p><code>node-js-sample</code> を <code>deploy</code> して動作確認します。
以下の例では <code>ssh dokku</code> で VM に接続できるように <code>~/.ssh/config</code> に設定済みです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">%</span> git clone https://github.com/heroku/node-js-sample
</span><span class='line'><span class="go">Cloning into &#39;node-js-sample&#39;...</span>
</span><span class='line'><span class="go">remote: Reusing existing pack: 319, done.</span>
</span><span class='line'><span class="go">remote: Total 319 (delta 0), reused 0 (delta 0)</span>
</span><span class='line'><span class="go">Receiving objects: 100% (319/319), 201.92 KiB | 210.00 KiB/s, done.</span>
</span><span class='line'><span class="go">Resolving deltas: 100% (17/17), done.</span>
</span><span class='line'><span class="go">Checking connectivity... done.</span>
</span><span class='line'><span class="gp">%</span> <span class="nb">cd </span>node-js-sample
</span><span class='line'><span class="gp">%</span> git remote add dokku dokku:node-js-app
</span><span class='line'><span class="gp">%</span>  git push --set-upstream dokku master
</span><span class='line'><span class="go">Counting objects: 319, done.</span>
</span><span class='line'><span class="go">Delta compression using up to 4 threads.</span>
</span><span class='line'><span class="go">Compressing objects: 100% (274/274), done.</span>
</span><span class='line'><span class="go">Writing objects: 100% (319/319), 201.92 KiB | 0 bytes/s, done.</span>
</span><span class='line'><span class="go">Total 319 (delta 17), reused 319 (delta 17)</span>
</span><span class='line'><span class="go">-----&gt; Cleaning up ...</span>
</span><span class='line'><span class="go">remote: Cloning into &#39;/tmp/tmp.ChNvZEb5S9&#39;...</span>
</span><span class='line'><span class="go">-----&gt; Building node-js-app ...</span>
</span><span class='line'><span class="go">remote: warning: You appear to have cloned an empty repository.</span>
</span><span class='line'><span class="go">remote: done.</span>
</span><span class='line'><span class="go">remote: HEAD is now at 2e52ce7... Update documentation links</span>
</span><span class='line'><span class="go">       Node.js app detected</span>
</span><span class='line'><span class="go">-----&gt; Requested node range:  0.10.x</span>
</span><span class='line'><span class="go">-----&gt; Resolved node version: 0.10.26</span>
</span><span class='line'><span class="go">-----&gt; Downloading and installing node</span>
</span><span class='line'><span class="go">(省略)</span>
</span><span class='line'><span class="go">-----&gt; Discovering process types</span>
</span><span class='line'><span class="go">       Procfile declares types -&gt; web</span>
</span><span class='line'><span class="go">-----&gt; Releasing node-js-app ...</span>
</span><span class='line'><span class="go">-----&gt; Deploying node-js-app ...</span>
</span><span class='line'><span class="go">=====&gt; Application deployed:</span>
</span><span class='line'><span class="go">       http://node-js-app.dokku.me</span>
</span><span class='line'>
</span><span class='line'><span class="go">To dokku:node-js-app</span>
</span><span class='line'><span class="go"> * [new branch]      master -&gt; master</span>
</span><span class='line'><span class="go">Branch master set up to track remote branch master from dokku.</span>
</span></code></pre></td></tr></table></div></figure>


<p>Vagrantfile で guest の 80 番ポートを host の 8080 番ポートで見えるように設定されているので
<code>http://node-js-app.dokku.me:8080/</code>
で開くと <code>Hello World!</code> と表示されます。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vagrant で Ubuntu 14.04 を試す]]></title>
    <link href="http://blog.n-z.jp/blog/2014-04-18-ubuntu-1404-vagrant.html"/>
    <updated>2014-04-18T13:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/ubuntu-1404-vagrant</id>
    <content type="html"><![CDATA[<p>Vagrant で Ubuntu 14.04 LTS (trusty) を試しました。</p>

<!--more-->


<h2>Vagrantfile 作成</h2>

<p>まず <code>Vagrantfile</code> を作成します。
box ファイルの URL は
<a href="https://cloud-images.ubuntu.com/vagrant/trusty/">https://cloud-images.ubuntu.com/vagrant/trusty/</a>
から探します。
current にするといつのイメージかわかりにくいので、
日付の URL と box 名を指定しています。</p>

<p><a href="https://cloud-images.ubuntu.com/vagrant/">https://cloud-images.ubuntu.com/vagrant/</a>
には
<code>Ubuntu Server 14.04 LTS (Trusty Tahr) daily builds</code>
と書いてあるのに 20140417 と 20140418 の前が 20140221 と 20140222 になっていて
daily ではなさそうに見えるのですが、
リリース前は更新を止めていただけなのかもしれません。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">%</span> mkdir trusty
</span><span class='line'><span class="gp">%</span> <span class="nb">cd </span>trusty
</span><span class='line'><span class="gp">%</span> vagrant init
</span><span class='line'><span class="go">A `Vagrantfile` has been placed in this directory. You are now</span>
</span><span class='line'><span class="go">ready to `vagrant up` your first virtual environment! Please read</span>
</span><span class='line'><span class="go">the comments in the Vagrantfile as well as documentation on</span>
</span><span class='line'><span class="go">`vagrantup.com` for more information on using Vagrant.</span>
</span><span class='line'><span class="gp">%</span> vi Vagrantfile
</span><span class='line'><span class="go">(config.vm.box と config.vm.box_url を設定)</span>
</span><span class='line'><span class="gp">%</span> egrep <span class="s1">&#39;^ *[^ #]&#39;</span> Vagrantfile
</span><span class='line'><span class="go">VAGRANTFILE_API_VERSION = &quot;2&quot;</span>
</span><span class='line'><span class="go">Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|</span>
</span><span class='line'><span class="go">  config.vm.box = &quot;trusty-amd64-20140418&quot;</span>
</span><span class='line'><span class="go">  config.vm.box_url = &quot;https://cloud-images.ubuntu.com/vagrant/trusty/20140418/trusty-server-cloudimg-amd64-vagrant-disk1.box&quot;</span>
</span><span class='line'><span class="go">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>この段階ではファイルとディレクトリを削除すれば元に戻せます。</p>

<h2>box の追加と起動</h2>

<p>初回の <code>vagrant up</code> は box のダウンロードとインストールもするので
時間がかかります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">%</span> vagrant up
</span><span class='line'><span class="go">Bringing machine &#39;default&#39; up with &#39;virtualbox&#39; provider...</span>
</span><span class='line'><span class="go">==&gt; default: Box &#39;trusty-amd64-20140418&#39; could not be found. Attempting to find and install...</span>
</span><span class='line'><span class="go">    default: Box Provider: virtualbox</span>
</span><span class='line'><span class="go">    default: Box Version: &gt;= 0</span>
</span><span class='line'><span class="go">==&gt; default: Adding box &#39;trusty-amd64-20140418&#39; (v0) for provider: virtualbox</span>
</span><span class='line'><span class="go">    default: Downloading: https://cloud-images.ubuntu.com/vagrant/trusty/20140418/trusty-server-cloudimg-amd64-vagrant-disk1.box</span>
</span><span class='line'><span class="go">==&gt; default: Box download is resuming from prior download progress</span>
</span><span class='line'><span class="go">==&gt; default: Successfully added box &#39;trusty-amd64-20140418&#39; (v0) for &#39;virtualbox&#39;!</span>
</span><span class='line'><span class="go">==&gt; default: Importing base box &#39;trusty-amd64-20140418&#39;...</span>
</span><span class='line'><span class="go">==&gt; default: Matching MAC address for NAT networking...</span>
</span><span class='line'><span class="go">==&gt; default: Setting the name of the VM: trusty_default_1397790655665_45006</span>
</span><span class='line'><span class="go">==&gt; default: Clearing any previously set forwarded ports...</span>
</span><span class='line'><span class="go">==&gt; default: Fixed port collision for 22 =&gt; 2222. Now on port 2200.</span>
</span><span class='line'><span class="go">==&gt; default: Clearing any previously set network interfaces...</span>
</span><span class='line'><span class="go">==&gt; default: Preparing network interfaces based on configuration...</span>
</span><span class='line'><span class="go">    default: Adapter 1: nat</span>
</span><span class='line'><span class="go">==&gt; default: Forwarding ports...</span>
</span><span class='line'><span class="go">    default: 22 =&gt; 2200 (adapter 1)</span>
</span><span class='line'><span class="go">==&gt; default: Booting VM...</span>
</span><span class='line'><span class="go">==&gt; default: Waiting for machine to boot. This may take a few minutes...</span>
</span><span class='line'><span class="go">    default: SSH address: 127.0.0.1:2200</span>
</span><span class='line'><span class="go">    default: SSH username: vagrant</span>
</span><span class='line'><span class="go">    default: SSH auth method: private key</span>
</span><span class='line'><span class="go">    default: Warning: Connection timeout. Retrying...</span>
</span><span class='line'><span class="go">    default: Warning: Remote connection disconnect. Retrying...</span>
</span><span class='line'><span class="go">==&gt; default: Machine booted and ready!</span>
</span><span class='line'><span class="go">GuestAdditions 4.3.10 running --- OK.</span>
</span><span class='line'><span class="go">==&gt; default: Checking for guest additions in VM...</span>
</span><span class='line'><span class="go">==&gt; default: Mounting shared folders...</span>
</span><span class='line'><span class="go">    default: /vagrant =&gt; /path/to/trusty</span>
</span></code></pre></td></tr></table></div></figure>


<p>この段階では vagrant box が追加されて VM が作成されているので、
元に戻すには <code>vagrant destroy</code> で VM を削除して、
<code>vagrant box remove box名</code> で box を削除します。</p>

<p>普通は <code>vagrant destroy</code> で VM を破棄するだけで
box は使い回すと思います。</p>

<p>box を先に削除してしまうと VM の削除でエラーになるようなので、
その場合は GUI からエラーになっているディスクイメージを無視するようにするなど
がんばって削除します。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OpenSSL/GnuTLS での CSR の作り方]]></title>
    <link href="http://blog.n-z.jp/blog/2014-04-16-new-csr.html"/>
    <updated>2014-04-16T10:09:24+09:00</updated>
    <id>http://blog.n-z.jp/blog/new-csr</id>
    <content type="html"><![CDATA[<p>サーバー証明書を発行してもらう時などに毎回調べつつ CSR を作成しているので、
GnuTLS と OpenSSL を使った方法をまとめてみました。</p>

<!--more-->


<h2>パッケージインストール</h2>

<p>OpenSSL の方は入っていることが多いと思いますが、入っていなければ <code>openssl</code> パッケージをいれておきます。</p>

<p>GnuTLS の方は Debian や Ubuntu の場合は <code>gnutls-bin</code> パッケージに <code>gnutls-cli</code> コマンドなどが入っています。
RHEL などでは <code>gnutls-utils</code> というパッケージに入っているらしいです。</p>

<h2>certtool コマンド</h2>

<p><code>certtool</code> コマンドは Mac OS X にもありますが、 GnuTLS のものとは別物です。
ここで説明しているのは GnuTLS の <code>certtool</code> コマンドです。</p>

<h2>秘密鍵作成</h2>

<p>秘密鍵の生成はランダムな情報を元に生成するので、ビット数やエントロピーの量に応じて時間がかかります。
デスクトップマシンなどではマウスを動かすなどの方法でエントロピーを増やすことが出来るかもしれません。</p>

<p>作成されるファイルのパーミッションなどを考えると暗号化しないなら GnuTLS の
<code>certtool --generate-privkey --bits 4096 --outfile example.key</code>
の方法がオススメです。</p>

<h3>GnuTLS</h3>

<p>GnuTLS の <code>certtool</code> コマンドでは <code>--generate-privkey</code> で秘密鍵を作成できます。
<code>--bits</code> で鍵のビット数を指定しないと squeeze だと 2048 ビット、 precise や wheezy だと 2432 ビットになりました。
ファイルのパーミッションも <code>-rw-------</code> (600) で作成されるので、そのまま使えます。</p>

<figure class='code'><figcaption><span>gnutls</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">$</span> certtool --generate-privkey --outfile example-tls.key
</span><span class='line'><span class="go">Generating a 2432 bit RSA private key...</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>gnutls</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">$</span> certtool --generate-privkey --bits 4096 --outfile example-tls.key
</span><span class='line'><span class="go">Generating a 4096 bit RSA private key...</span>
</span></code></pre></td></tr></table></div></figure>


<h3>OpenSSL</h3>

<p>OpenSSL では <code>genrsa</code> サブコマンドで生成します。
OpenSSL 1.0.0 では <code>genpkey</code> サブコマンドになっているようですが、
<code>genrsa</code> もまだ使えるので、以下は <code>genrsa</code> だけ書いています。</p>

<p>ビット数を指定しないと squeeze だと 1024 ビット、 precise や wheezy だと 512 ビットになりました。
また、そのままだとパーミッションが <code>-rw-rw-r--</code> (664) で生成されるので、あらかじめパーミッションを設定したファイルを用意しておいて上書きさせるか、すぐに <code>chmod</code> で変更しておいた方が良さそうです。</p>

<figure class='code'><figcaption><span>openssl</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">$</span> touch example-ssl.key
</span><span class='line'><span class="gp">$</span> chmod 600 example-ssl.key
</span><span class='line'><span class="gp">$</span> openssl genrsa -out example-ssl.key
</span><span class='line'><span class="go">Generating RSA private key, 512 bit long modulus</span>
</span><span class='line'><span class="go">....++++++++++++</span>
</span><span class='line'><span class="go">.........................++++++++++++</span>
</span><span class='line'><span class="go">e is 65537 (0x10001)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>openssl</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">$</span> touch example-ssl.key
</span><span class='line'><span class="gp">$</span> chmod 600 example-ssl.key
</span><span class='line'><span class="gp">$</span> openssl genrsa -out example-ssl.key 4096
</span><span class='line'><span class="go">Generating RSA private key, 4096 bit long modulus</span>
</span><span class='line'><span class="go">......................................................++</span>
</span><span class='line'><span class="go">...........++</span>
</span><span class='line'><span class="go">e is 65537 (0x10001)</span>
</span></code></pre></td></tr></table></div></figure>


<p>ネット上見つかる情報では <code>-des3</code> などで生成したファイルを一度暗号化して、
サーバーの起動時に不要になるようにすぐに外すような例もあるようですが、
そんなことをするぐらいなら最初から暗号化せずに生成すれば良いと思います。</p>

<p>暗号化した状態のファイルを別途バックアップするなどの目的があるのなら、
意味があると思いますが、
暗号化した状態のファイルを残さないのなら単なる無駄だと思います。</p>

<h2>秘密鍵の内容確認</h2>

<p>秘密鍵の内容を確認することはあまりないと思いますが、
<code>openssl rsa -in example.key -text -noout</code>
の方法がオススメです。</p>

<h3>OpenSSL</h3>

<p>OpenSSL で秘密鍵の内容を確認するには <code>rsa</code> サブコマンドを使います。
<code>-text</code> で内容全体の表示で <code>-noout</code> は <code>-----BEGIN RSA PRIVATE KEY-----</code> から <code>-----END RSA PRIVATE KEY-----</code> を表示しないという意味です。
秘密鍵本体の前にテキストの説明がついたものも元の秘密鍵と同様に扱えるようなので、
デフォルトでは元の内容も出力するようになっているのだと思います。</p>

<figure class='code'><figcaption><span>openssl</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">$</span> openssl rsa -in example-ssl.key -text -noout
</span><span class='line'><span class="go">Private-Key: (4096 bit)</span>
</span><span class='line'><span class="go">modulus:</span>
</span><span class='line'><span class="go">    00:cb:35:ec:f6:00:5a:75:d7:55:14:f8:55:91:1a:</span>
</span><span class='line'><span class="go"> (略)</span>
</span><span class='line'><span class="go">publicExponent: 65537 (0x10001)</span>
</span><span class='line'><span class="go">privateExponent:</span>
</span><span class='line'><span class="go">    4d:86:de:47:a0:2c:e2:e6:6b:2c:5b:ed:f1:35:10:</span>
</span><span class='line'><span class="go"> (略)</span>
</span><span class='line'><span class="go">prime1:</span>
</span><span class='line'><span class="go">    00:ef:49:b3:f8:4c:1e:a9:13:a9:fb:86:7e:80:7a:</span>
</span><span class='line'><span class="go"> (略)</span>
</span><span class='line'><span class="go">prime2:</span>
</span><span class='line'><span class="go">    00:d9:67:2f:e1:4c:13:78:fa:dd:2b:7a:3e:f5:68:</span>
</span><span class='line'><span class="go"> (略)</span>
</span><span class='line'><span class="go">exponent1:</span>
</span><span class='line'><span class="go">    00:ba:18:ee:ff:a7:6b:9d:01:2f:0c:f0:0f:88:29:</span>
</span><span class='line'><span class="go"> (略)</span>
</span><span class='line'><span class="go">exponent2:</span>
</span><span class='line'><span class="go">    52:93:94:27:32:5b:4f:1f:92:74:9a:39:61:c3:ae:</span>
</span><span class='line'><span class="go"> (略)</span>
</span><span class='line'><span class="go">coefficient:</span>
</span><span class='line'><span class="go">    44:e9:a2:de:87:e7:2d:f0:57:58:d6:fc:85:20:df:</span>
</span><span class='line'><span class="go"> (略)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>GnuTLS</h3>

<p>GnuTLS の <code>certtool</code> で秘密鍵の内容を確認するには <code>-k</code> (<code>--key-info</code>) を使います。
<code>openssl</code> の <code>-noout</code> 相当のオプションは見つけられませんでした。</p>

<figure class='code'><figcaption><span>gnutls</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">$</span> certtool -k --infile example-tls.key
</span><span class='line'><span class="go">Public Key Info:</span>
</span><span class='line'><span class="go">        Public Key Algorithm: RSA</span>
</span><span class='line'><span class="go">        Key Security Level: High</span>
</span><span class='line'><span class="go">modulus:</span>
</span><span class='line'><span class="go">        00:da:45:da:ca:13:ac:59:43:55:87:68:04:16:1a:</span>
</span><span class='line'><span class="go">     (略)</span>
</span><span class='line'><span class="go">public exponent:</span>
</span><span class='line'><span class="go">        01:00:01:</span>
</span><span class='line'><span class="go">private exponent:</span>
</span><span class='line'><span class="go">        3c:5b:18:96:cc:3d:da:28:fe:5b:84:ed:ac:56:e2:</span>
</span><span class='line'><span class="go">     (略)</span>
</span><span class='line'><span class="go">prime1:</span>
</span><span class='line'><span class="go">        00:dc:f3:92:13:d5:c7:cf:bc:9f:76:b3:f6:a2:60:</span>
</span><span class='line'><span class="go">     (略)</span>
</span><span class='line'><span class="go">prime2:</span>
</span><span class='line'><span class="go">        00:fc:e5:83:0e:2e:d4:a1:be:37:bf:05:6e:c3:d3:</span>
</span><span class='line'><span class="go">     (略)</span>
</span><span class='line'><span class="go">coefficient:</span>
</span><span class='line'><span class="go">        63:74:e3:95:9e:d6:6c:7d:d9:2d:ad:45:f8:0b:1a:</span>
</span><span class='line'><span class="go">     (略)</span>
</span><span class='line'><span class="go">exp1:</span>
</span><span class='line'><span class="go">        00:a1:1d:a7:9e:79:1c:2b:da:42:79:bf:7f:10:26:</span>
</span><span class='line'><span class="go">     (略)</span>
</span><span class='line'><span class="go">exp2:</span>
</span><span class='line'><span class="go">        00:b3:be:9c:ab:53:f5:a5:10:01:a7:2f:41:4e:c5:</span>
</span><span class='line'><span class="go">     (略)</span>
</span><span class='line'><span class="go">        c4:31:</span>
</span><span class='line'>
</span><span class='line'><span class="go">Public Key ID: 45:44:BC:C4:BB:95:24:97:5D:C2:95:BF:27:95:02:2C:50:09:9E:35</span>
</span><span class='line'>
</span><span class='line'><span class="go">-----BEGIN RSA PRIVATE KEY-----</span>
</span><span class='line'><span class="go">(略)</span>
</span><span class='line'><span class="go">-----END RSA PRIVATE KEY-----</span>
</span></code></pre></td></tr></table></div></figure>


<h2>CSR 作成と内容確認</h2>

<p>OpenSSL は <code>openssl req</code> で作成も内容の確認も出来ます。
GnuTLS の <code>certtool</code> は <code>-q</code> (<code>--generate-request</code>) で作成して
<code>--crq-info</code> で内容を確認できます。</p>

<p>以下の例ではそれぞれで作成して、両方で内容を確認しています。</p>

<h3>OpenSSL</h3>

<p>OpenSSL では <code>C</code> と <code>ST</code> と <code>O</code> にデフォルト値が入っていて、
対話的に作成しつつ空欄にしたい時は
別途 <code>openssl.cnf</code> を用意する必要がありそうです。</p>

<figure class='code'><figcaption><span>openssl</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">$</span> openssl req -new -key example-ssl.key -out example-ssl.csr
</span><span class='line'><span class="go">You are about to be asked to enter information that will be incorporated</span>
</span><span class='line'><span class="go">into your certificate request.</span>
</span><span class='line'><span class="go">What you are about to enter is what is called a Distinguished Name or a DN.</span>
</span><span class='line'><span class="go">There are quite a few fields but you can leave some blank</span>
</span><span class='line'><span class="go">For some fields there will be a default value,</span>
</span><span class='line'><span class="go">If you enter &#39;.&#39;, the field will be left blank.</span>
</span><span class='line'><span class="go">-----</span>
</span><span class='line'><span class="go">Country Name (2 letter code) [AU]:JP</span>
</span><span class='line'><span class="go">State or Province Name (full name) [Some-State]:Osaka</span>
</span><span class='line'><span class="go">Locality Name (eg, city) []:</span>
</span><span class='line'><span class="go">Organization Name (eg, company) [Internet Widgits Pty Ltd]:</span>
</span><span class='line'><span class="go">Organizational Unit Name (eg, section) []:</span>
</span><span class='line'><span class="go">Common Name (e.g. server FQDN or YOUR name) []:ssl.example.jp</span>
</span><span class='line'><span class="go">Email Address []:</span>
</span><span class='line'>
</span><span class='line'><span class="go">Please enter the following &#39;extra&#39; attributes</span>
</span><span class='line'><span class="go">to be sent with your certificate request</span>
</span><span class='line'><span class="go">A challenge password []:</span>
</span><span class='line'><span class="go">An optional company name []:</span>
</span><span class='line'><span class="gp">$</span> openssl req -in example-ssl.csr -text -noout
</span><span class='line'><span class="go">Certificate Request:</span>
</span><span class='line'><span class="go">    Data:</span>
</span><span class='line'><span class="go">        Version: 0 (0x0)</span>
</span><span class='line'><span class="go">        Subject: C=JP, ST=Osaka, O=Internet Widgits Pty Ltd, CN=ssl.example.jp</span>
</span><span class='line'><span class="go">        Subject Public Key Info:</span>
</span><span class='line'><span class="go">            Public Key Algorithm: rsaEncryption</span>
</span><span class='line'><span class="go">                Public-Key: (4096 bit)</span>
</span><span class='line'><span class="go">                Modulus:</span>
</span><span class='line'><span class="go">                    00:cb:35:ec:f6:00:5a:75:d7:55:14:f8:55:91:1a:</span>
</span><span class='line'><span class="go">                 (略)</span>
</span><span class='line'><span class="go">                Exponent: 65537 (0x10001)</span>
</span><span class='line'><span class="go">        Attributes:</span>
</span><span class='line'><span class="go">            a0:00</span>
</span><span class='line'><span class="go">    Signature Algorithm: sha1WithRSAEncryption</span>
</span><span class='line'><span class="go">         4f:1a:a7:57:9f:88:f3:17:23:aa:51:12:11:ff:c0:24:31:4c:</span>
</span><span class='line'><span class="go">      (略)</span>
</span><span class='line'><span class="gp">$</span> certtool --crq-info --infile example-ssl.csr
</span><span class='line'><span class="go">PKCS #10 Certificate Request Information:</span>
</span><span class='line'><span class="go">        Version: 1</span>
</span><span class='line'><span class="go">        Subject: C=JP,ST=Osaka,O=Internet Widgits Pty Ltd,CN=ssl.example.jp</span>
</span><span class='line'><span class="go">        Subject Public Key Algorithm: RSA</span>
</span><span class='line'><span class="go">                Modulus (bits 4096):</span>
</span><span class='line'><span class="go">                        cb:35:ec:f6:00:5a:75:d7:55:14:f8:55:91:1a:9b:83</span>
</span><span class='line'><span class="go">                     (略)</span>
</span><span class='line'><span class="go">                Exponent:</span>
</span><span class='line'><span class="go">                        01:00:01</span>
</span><span class='line'><span class="go">Other Information:</span>
</span><span class='line'><span class="go">        Public Key Id:</span>
</span><span class='line'><span class="go">                c14459bdb79e6b71e6303e4ffd9c7ab43dc9b9df</span>
</span><span class='line'>
</span><span class='line'><span class="go">-----BEGIN NEW CERTIFICATE REQUEST-----</span>
</span><span class='line'><span class="go">(略)</span>
</span><span class='line'><span class="go">-----END NEW CERTIFICATE REQUEST-----</span>
</span></code></pre></td></tr></table></div></figure>


<h3>GnuTLS</h3>

<p>GnuTLS ではテンプレートファイルを作成しておいて <code>--template</code> で指定する方法が多いようですが、
対話的にも作成できました。
<code>Subject</code> を <code>CN</code> だけにするのは OpenSSL より簡単に出来たのですが、
<code>Requested Extensions</code> が設定されるようなので、
不要な場合には困りそうです。</p>

<figure class='code'><figcaption><span>gnutls</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">$</span> certtool -q --load-privkey example-tls.key --outfile example-tls.csr
</span><span class='line'><span class="go">Generating a PKCS #10 certificate request...</span>
</span><span class='line'><span class="go">Country name (2 chars):</span>
</span><span class='line'><span class="go">Organization name:</span>
</span><span class='line'><span class="go">Organizational unit name:</span>
</span><span class='line'><span class="go">Locality name:</span>
</span><span class='line'><span class="go">State or province name:</span>
</span><span class='line'><span class="go">Common name: tls.example.jp</span>
</span><span class='line'><span class="go">UID:</span>
</span><span class='line'><span class="go">Enter a dnsName of the subject of the certificate:</span>
</span><span class='line'><span class="go">Enter the IP address of the subject of the certificate:</span>
</span><span class='line'><span class="go">Enter the e-mail of the subject of the certificate:</span>
</span><span class='line'><span class="go">Enter a challenge password:</span>
</span><span class='line'><span class="go">Does the certificate belong to an authority? (y/N):</span>
</span><span class='line'><span class="go">Will the certificate be used for signing (DHE and RSA-EXPORT ciphersuites)? (y/N):</span>
</span><span class='line'><span class="go">Will the certificate be used for encryption (RSA ciphersuites)? (y/N):</span>
</span><span class='line'><span class="go">Is this a TLS web client certificate? (y/N):</span>
</span><span class='line'><span class="go">Is this also a TLS web server certificate? (y/N):</span>
</span><span class='line'><span class="gp">$</span> openssl req -in example-tls.csr -text -noout
</span><span class='line'><span class="go">Certificate Request:</span>
</span><span class='line'><span class="go">    Data:</span>
</span><span class='line'><span class="go">        Version: 0 (0x0)</span>
</span><span class='line'><span class="go">        Subject: CN=tls.example.jp</span>
</span><span class='line'><span class="go">        Subject Public Key Info:</span>
</span><span class='line'><span class="go">            Public Key Algorithm: rsaEncryption</span>
</span><span class='line'><span class="go">                Public-Key: (4096 bit)</span>
</span><span class='line'><span class="go">                Modulus:</span>
</span><span class='line'><span class="go">                    00:da:45:da:ca:13:ac:59:43:55:87:68:04:16:1a:</span>
</span><span class='line'><span class="go">                 (略)</span>
</span><span class='line'><span class="go">                Exponent: 65537 (0x10001)</span>
</span><span class='line'><span class="go">        Attributes:</span>
</span><span class='line'><span class="go">        Requested Extensions:</span>
</span><span class='line'><span class="go">            X509v3 Basic Constraints: critical</span>
</span><span class='line'><span class="go">                CA:FALSE</span>
</span><span class='line'><span class="go">            X509v3 Key Usage: critical</span>
</span><span class='line'><span class="go">                Digital Signature</span>
</span><span class='line'><span class="go">    Signature Algorithm: sha1WithRSAEncryption</span>
</span><span class='line'><span class="go">         cb:71:d2:c9:a2:97:14:74:f0:63:69:6b:36:31:ff:ce:f2:a0:</span>
</span><span class='line'><span class="go">      (略)</span>
</span><span class='line'><span class="gp">$</span> certtool --crq-info --infile example-tls.csr
</span><span class='line'><span class="go">PKCS #10 Certificate Request Information:</span>
</span><span class='line'><span class="go">        Version: 1</span>
</span><span class='line'><span class="go">        Subject: CN=tls.example.jp</span>
</span><span class='line'><span class="go">        Subject Public Key Algorithm: RSA</span>
</span><span class='line'><span class="go">                Modulus (bits 4096):</span>
</span><span class='line'><span class="go">                        da:45:da:ca:13:ac:59:43:55:87:68:04:16:1a:09:41</span>
</span><span class='line'><span class="go">                     (略)</span>
</span><span class='line'><span class="go">                Exponent:</span>
</span><span class='line'><span class="go">                        01:00:01</span>
</span><span class='line'><span class="go">        Attributes:</span>
</span><span class='line'><span class="go">                Extensions:</span>
</span><span class='line'><span class="go">                        Basic Constraints (critical):</span>
</span><span class='line'><span class="go">                                Certificate Authority (CA): FALSE</span>
</span><span class='line'><span class="go">                        Key Usage (critical):</span>
</span><span class='line'><span class="go">                                Digital signature.</span>
</span><span class='line'><span class="go">Other Information:</span>
</span><span class='line'><span class="go">        Public Key Id:</span>
</span><span class='line'><span class="go">                4544bcc4bb9524975dc295bf2795022c50099e35</span>
</span><span class='line'>
</span><span class='line'><span class="go">-----BEGIN NEW CERTIFICATE REQUEST-----</span>
</span><span class='line'><span class="go">(略)</span>
</span><span class='line'><span class="go">-----END NEW CERTIFICATE REQUEST-----</span>
</span></code></pre></td></tr></table></div></figure>


<h2>まとめて作成</h2>

<p>CSR の生成の時に秘密鍵を指定しないと、
CSR と一緒に秘密鍵を生成できるようです。</p>

<h3>OpenSSL</h3>

<p><code>openssl req -new</code> で <code>-key</code> の代わりに <code>-newkey</code> などを指定すると CSR と一緒に秘密鍵も生成できます。
この場合もそのままだとパーミッションが <code>-rw-rw-r--</code> (664) になるようなので、注意が必要です。
<code>-nodes</code> を付けないと暗号化するためのパスフレーズを要求されます。</p>

<figure class='code'><figcaption><span>openssl</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">$</span> openssl req -new -newkey rsa:4096 -nodes -keyout server.key -out server.csr
</span><span class='line'><span class="go">Generating a 4096 bit RSA private key</span>
</span><span class='line'><span class="go">.............................................................................................................................................................................................................................................................................................................................................++</span>
</span><span class='line'><span class="go">......++</span>
</span><span class='line'><span class="go">writing new private key to &#39;server.key&#39;</span>
</span><span class='line'><span class="go">-----</span>
</span><span class='line'><span class="go">You are about to be asked to enter information that will be incorporated</span>
</span><span class='line'><span class="go">into your certificate request.</span>
</span><span class='line'><span class="go">What you are about to enter is what is called a Distinguished Name or a DN.</span>
</span><span class='line'><span class="go">There are quite a few fields but you can leave some blank</span>
</span><span class='line'><span class="go">For some fields there will be a default value,</span>
</span><span class='line'><span class="go">If you enter &#39;.&#39;, the field will be left blank.</span>
</span><span class='line'><span class="go">-----</span>
</span><span class='line'><span class="go">Country Name (2 letter code) [AU]:JP</span>
</span><span class='line'><span class="go">State or Province Name (full name) [Some-State]:Osaka</span>
</span><span class='line'><span class="go">Locality Name (eg, city) []:</span>
</span><span class='line'><span class="go">Organization Name (eg, company) [Internet Widgits Pty Ltd]:</span>
</span><span class='line'><span class="go">Organizational Unit Name (eg, section) []:</span>
</span><span class='line'><span class="go">Common Name (e.g. server FQDN or YOUR name) []:ssl.example.jp</span>
</span><span class='line'><span class="go">Email Address []:</span>
</span><span class='line'>
</span><span class='line'><span class="go">Please enter the following &#39;extra&#39; attributes</span>
</span><span class='line'><span class="go">to be sent with your certificate request</span>
</span><span class='line'><span class="go">A challenge password []:</span>
</span><span class='line'><span class="go">An optional company name []:</span>
</span></code></pre></td></tr></table></div></figure>


<h3>GnuTLS</h3>

<p><code>certtool -q</code> で <code>--load-privkey</code> を指定しないと秘密鍵も一緒に生成するようです。
出力は <code>--outfile</code> で指定したファイルにまとめて入ってしまって、
使い勝手は良くないので、個別に生成した方が良さそうです。</p>

<figure class='code'><figcaption><span>gnutls</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">$</span> certtool -q --outfile out.txt
</span><span class='line'><span class="go">Generating a PKCS #10 certificate request...</span>
</span><span class='line'><span class="go">Generating a 2432 bit RSA private key...</span>
</span><span class='line'><span class="go">Country name (2 chars):</span>
</span><span class='line'><span class="go">Organization name:</span>
</span><span class='line'><span class="go">Organizational unit name:</span>
</span><span class='line'><span class="go">Locality name:</span>
</span><span class='line'><span class="go">State or province name:</span>
</span><span class='line'><span class="go">Common name: tls.example.jp</span>
</span><span class='line'><span class="go">UID:</span>
</span><span class='line'><span class="go">Enter a dnsName of the subject of the certificate:</span>
</span><span class='line'><span class="go">Enter the IP address of the subject of the certificate:</span>
</span><span class='line'><span class="go">Enter the e-mail of the subject of the certificate:</span>
</span><span class='line'><span class="go">Enter a challenge password:</span>
</span><span class='line'><span class="go">Does the certificate belong to an authority? (y/N):</span>
</span><span class='line'><span class="go">Will the certificate be used for signing (DHE and RSA-EXPORT ciphersuites)? (y/N):</span>
</span><span class='line'><span class="go">Will the certificate be used for encryption (RSA ciphersuites)? (y/N):</span>
</span><span class='line'><span class="go">Is this a TLS web client certificate? (y/N):</span>
</span><span class='line'><span class="go">Is this also a TLS web server certificate? (y/N):</span>
</span><span class='line'><span class="gp">$</span> cat out.txt
</span><span class='line'><span class="go">-----BEGIN RSA PRIVATE KEY-----</span>
</span><span class='line'><span class="go">(略)</span>
</span><span class='line'><span class="go">-----END RSA PRIVATE KEY-----</span>
</span><span class='line'><span class="go">PKCS #10 Certificate Request Information:</span>
</span><span class='line'><span class="go">        Version: 1</span>
</span><span class='line'><span class="go">        Subject: CN=tls.example.jp</span>
</span><span class='line'><span class="go">        Subject Public Key Algorithm: RSA</span>
</span><span class='line'><span class="go">                Modulus (bits 2432):</span>
</span><span class='line'><span class="go">                        f4:ff:66:e8:c6:19:ab:7b:39:e3:72:ff:ee:13:fa:cf</span>
</span><span class='line'><span class="go">                     (略)</span>
</span><span class='line'><span class="go">                Exponent:</span>
</span><span class='line'><span class="go">                        01:00:01</span>
</span><span class='line'><span class="go">        Attributes:</span>
</span><span class='line'><span class="go">                Extensions:</span>
</span><span class='line'><span class="go">                        Basic Constraints (critical):</span>
</span><span class='line'><span class="go">                                Certificate Authority (CA): FALSE</span>
</span><span class='line'><span class="go">                        Key Usage (critical):</span>
</span><span class='line'><span class="go">                                Digital signature.</span>
</span><span class='line'><span class="go">Other Information:</span>
</span><span class='line'><span class="go">        Public Key Id:</span>
</span><span class='line'><span class="go">                61c9cef12d691e3373f71ad3a82d1ac4c4b71793</span>
</span><span class='line'>
</span><span class='line'><span class="go">-----BEGIN NEW CERTIFICATE REQUEST-----</span>
</span><span class='line'><span class="go">(略)</span>
</span><span class='line'><span class="go">-----END NEW CERTIFICATE REQUEST-----</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第3回 コンテナ型仮想化の情報交換会＠大阪 (コンテナ型VMや関連するカーネル等の技術が話題の勉強会)に参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2014-04-12-lxcjp.html"/>
    <updated>2014-04-12T22:23:56+09:00</updated>
    <id>http://blog.n-z.jp/blog/lxcjp</id>
    <content type="html"><![CDATA[<p><a href="http://atnd.org/events/46446">第3回 コンテナ型仮想化の情報交換会＠大阪 (コンテナ型VMや関連するカーネル等の技術が話題の勉強会)</a>
に参加してきました。</p>

<!--more-->


<h2>全体の感想</h2>

<p>全体的には LXC や Docker に限らず、
Hyper-V 上での FreeBSD jail の話や Vagrant や CircleCI (LXC を使っている) などの話もあって、面白かったです。</p>

<h2>会場</h2>

<p>ちょっと早めに出発して、梅田から難波橋を通って堺筋を通って会場まで歩いていきました。
場所もわかりやすくて交差点の名前と目的地のビルの名前をちゃんとチェックしていれば迷わずにたどり着けました。</p>

<p>会場無線 LAN があったのですが、
最初に接続した MacBook Air は問題なく繋がっていたのですが、
後から追加でつなごうとした iPod touch は無線 LAN 自体は繋がっているのに APIPA の IP アドレスになっていて、
DHCP の割り当て IP アドレスが足りなかったのではないかと思いました。</p>

<h2>LXC</h2>

<p>いろいろと知らないことも多くて勉強になったのですが、特に <code>veth</code> と <code>macvlan</code> の違いがよくわかっていなかったので、
<code>veth</code> は作成しただけだと通信に使えなくてペアの片方をネットワークネームスペースに入れないと使えないというコンテナ用の機能で、
<code>macvlan</code> は物理 NIC に別 MAC アドレスを付けて使うもの、
というのがわかって良かったです。</p>

<p>LXC という言葉がさすものが「カーネルのコンテナ機能」のときと「<code>lxc-start</code> などの LXC のユーザーランド」のことがある、というのは気をつける必要があると思いました。
たとえば Docker 0.9 で LXC への依存がなくなったというのは <code>lxc-start</code> などを使わなくなって、システムコールを <code>libcontainer</code> という別ライブラリで直接呼んでカーネルのコンテナ機能を使うようになったなど。</p>

<h2>FreeBSD jail</h2>

<p>jail については存在は知っていたのですが、使ったことはなかったので、そういうものなのかと思ってみていました。</p>

<h2>VagrantユーザのためのDocker入門</h2>

<p>途中の質問にあった container と image の違いで
<a href="http://docs.docker.io/en/latest/terms/image/">http://docs.docker.io/en/latest/terms/image/</a>
に書いてある
<code>In Docker terminology, a read-only Layer is called an image. An image never changes.</code>
が根拠だと思うのですが、
イメージはコンテナに名前をつけてリードオンリーにしたもの、という説明で
今まで曖昧にしていた違いがちゃんとわかったように思いました。</p>

<p>このブログの Docker 関連記事の中で一番人気の
<a href="http://blog.n-z.jp/blog/2013-12-24-docker-rm.html">Dockerで不要になったコンテナやイメージを削除する</a>
で割とコンテナとイメージを曖昧な感じで書いているのは、はっきりとは区別できていなかったからでした。</p>

<p>Vagrant との使い分けも実際に両方使っている人の話だったので、非常に参考になりました。
基本的には Vagrant も Docker も開発環境として使うという話でした。</p>

<h2>Docker運用の観点からみたLXC</h2>

<p>いろいろな話がありました。
基本的には production 環境として使う話でした。</p>

<h2>Docker の layer 数制限の話</h2>

<p>休憩時間に話をしていたのですが layer の制限が 42 から 127 に増えたのは
<a href="https://github.com/dotcloud/docker/pull/2897">Increase max image depth to 127</a>
からで、
理由は aufs の方で <code>CONFIG_AUFS_BRANCH_MAX_127</code> という設定を <code>y</code> にすると
制限が 127 になるから、ということのようでした。</p>

<p>懇親会の時にも話が出たのですが、
<code>RUN</code> ごとにキャッシュがきくので、
基本的には <code>Dockerfile</code> の変更を試している間は <code>RUN</code> ごとに細かくコマンドを並べて試行錯誤して、
出来上がったら <code>&amp;&amp;</code> でつなげて一行の <code>RUN</code> にまとめるのが良さそう、
という話でした。</p>

<p>関連する話としては aufs の layer が重なっているのを git で merge するときのようにまとめたい、
という意見に対して、
<code>Dockerfile</code> をマスター (主) として扱って、
イメージは捨てていつでも作り直せるもの (従) として扱う方が良い、
だから、無理に aufs の差分イメージの中を直接いじってマージしようとせずに
<code>Dockerfile</code> から再生成した方が良い、
という話がありました。</p>

<h2>CircleCI, Cucumber-Chef</h2>

<p><code>CircleCI</code> と <code>ngrok</code> を組み合わせて、
rebuild.fm で話があったブランチごとよりもさらに富豪的に、
コミットごとに時間制限付きのサーバーを動かす話などがありました。</p>

<p><code>CircleCI</code> の1時間という時間制限 (SSH で入れるようにして動かすと30分) と
ローカルサーバーを外に公開できる <code>ngrok</code> というものを組み合わせて
コミットごとに一定時間サーバーを動かしているという話でした。</p>

<h2>終わり</h2>

<p>他の発表の時間に余裕を持たせていて、パネルディスカッションはありませんでした。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CVE-2014-0160 での Cookie 漏洩]]></title>
    <link href="http://blog.n-z.jp/blog/2014-04-09-cve-2014-0160.html"/>
    <updated>2014-04-09T23:55:46+09:00</updated>
    <id>http://blog.n-z.jp/blog/cve-2014-0160</id>
    <content type="html"><![CDATA[<p>影響範囲の一例として
<a href="https://www.mattslifebytes.com/?p=533">Hijacking user sessions with the Heartbleed vulnerability</a>
の実際にどういうデータが抜き取られてしまうのか、という例で
<code>JSESSIONID</code>
が見えているように Cookie が漏洩している可能性があります。</p>

<!--more-->


<h2>考えられる攻撃シナリオ</h2>

<p><a href="http://www.exploit-db.com/exploits/32745/">OpenSSL TLS Heartbeat Extension &ndash; Memory Disclosure</a>
を自分のサーバーに試した時に
<code>mod-spdy-beta</code>
が原因で脆弱性が残ったままになっていて、
Rails アプリの Cookie が見えていました。</p>

<p>そこで考えたのは上記のブログに書いてあるようにセッションハイジャックが可能だということでした。</p>

<p>悪い状況を考えると、
脆弱性の情報が公開されてから対策がされるまでの間に
全世界の Web サーバーに Heartbleed の攻撃を仕掛けておいて、
後でログを調べて、こういう Cookie のような情報があれば
それを使って別途セッションハイジャックなどの別の攻撃をする、
という可能性があります。</p>

<h2>Rails での対処方法案</h2>

<p><code>config/initializers/secret_token.rb</code> の <code>secret_token</code> を再生成して設定し直すという方法が考えられます。
その際、ログインしているユーザーのセッションが無効になったり、
Remember me で覚えさせていても忘れられたりするということが起きるので、
ユーザーへの影響を考えて実施する必要がありそうです。</p>

<p>また、データベースへ保存するデータの暗号化の鍵としても使っていたら、
読めなくなってしまうので、そういう用途にも使っていたら、
別の方法で既存の Cookie を無効にするしかなさそうです。</p>

<h2>secure 属性を付けていても無関係</h2>

<p>クライアントとの通信内容の残骸が漏洩してしまうので、
Cookie に secure 属性を付けていても防げません。</p>

<h2>アプリケーションサーバーが別プロセスでも無関係</h2>

<p>apache+passenger や nginx+php-fpm のようにアプリケーションサーバーとフロントエンドの Web サーバーが別プロセスにわかれていても、
HTTPS 向けに暗号化する前の平文のデータがフロントエンドの Web サーバーに残っていて、そこの情報が漏洩してしまうので、
Cookie のようなクライアントに返す情報は影響を受けて漏洩している可能性があります。</p>

<p>バックエンドのサーバーでしか読み込んでいなくて、フロントエンドには渡していない情報はこの経路では漏洩しません。</p>

<p>例えば、典型的な Rails アプリの構成ではデータベースサーバーへ接続するためのユーザー名やパスワードはクライアントには渡さないので、この経路では漏洩しません。</p>

<h2>フロントエンドサーバーの秘密鍵</h2>

<p>既に情報収集していれば知って可能性が高いと思いますが、
フロントエンドサーバーのプロセスが読み込んでいる情報にあたる SSL/TLS の秘密鍵は漏洩している可能性があります。</p>

<p>きちんとした対処としては
<a href="http://d.hatena.ne.jp/nekoruri/20140408/heartbleed">CVE-2014-0160 OpenSSL Heartbleed 脆弱性まとめ &ndash; めもおきば</a>
にも書いてあるように</p>

<ol>
<li><em>秘密鍵から作り直して</em> 証明書を再発行</li>
<li>過去の証明書を <em>失効</em></li>
</ol>


<p>の両方が必要です。</p>

<h2>余談</h2>

<p>SPDY とか使いたいから HTTPS にしてるだけで HTTP で通信してても良いような内容しか扱ってないサーバーなら (VirtualHost の他のホストも含めてという条件付きで)、放置でも良いのかもしれませんが、少なくとも次の証明書の更新の時には秘密鍵を作り直した方が良いように思います。</p>

<h2>まとめ</h2>

<p>外部から SSL/TLS 接続を受けるプロセスが持っている情報が漏洩している可能性がある、ということで、具体例として Cookie について少し詳しく考えてみました。</p>

<p>簡単に言えば、脆弱性のある状態でクライアントと通信している内容はすべて漏洩している可能性がある、つまり HTTPS で通信していても HTTP と同じような機密性しかなかった可能性がある、と考えるのが良さそうです。</p>

<p>つまりクライアントから送った情報も漏洩の可能性があるので、
Heartbleed 脆弱性が残っているサーバーにはクレジットカード番号などの情報は
送らない方が良い、ということになります。</p>

<p>関連する話なので一緒に書いてしまったので、ちょっと紛らわしいですが、
サーバーの秘密鍵の漏洩の可能性もフロントエンドサーバーの管理者は別途対応する必要があります。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CVE-2014-0160 の OpenSSL の脆弱性対応]]></title>
    <link href="http://blog.n-z.jp/blog/2014-04-08-cve-2014-0160.html"/>
    <updated>2014-04-08T13:22:28+09:00</updated>
    <id>http://blog.n-z.jp/blog/cve-2014-0160</id>
    <content type="html"><![CDATA[<p><a href="http://heartbleed.com/">Heartbleed</a>
によると今回の OpenSSL の脆弱性は影響が大きそうなので、
OpenSSL の更新をして再起動だけでも早めにした方が良さそうです。</p>

<p>再起動が必要なものは Debian なら
<a href="http://blog.n-z.jp/blog/2013-12-06-checkrestart.html">debian-goodiesのcheckrestartで再起動が必要なプロセスを調べる</a>
のがオススメです。
Ubuntu なら libssl の更新は OS 自体を再起動した方が良いと思います。</p>

<p>秘密鍵を再生成した方が良いという話もあるようですが、
そこまでの対処は続報を待ってからでも良いかもしれません。</p>

<!--more-->


<h2><code>mod_spdy</code> にも影響</h2>

<p>(<code>mod_spdy</code> について 2014-04-09 に追記)</p>

<p><a href="https://groups.google.com/forum/#!topic/mod-spdy-discuss/EwCowyS1KTU">mod_spdy</a>
も影響を受けるので、
<code>mod-spdy-beta</code> パッケージの <code>0.9.4.1-r397</code> 以前を入れている場合は最新版 (2014-04-09 リリースの <code>0.9.4.2-r413</code> 以降) に更新する必要があります。</p>

<p><code>mod-spdy-beta</code> に含まれる <code>mod_ssl_with_npn.so</code> は改変した <code>libssl</code> を静的リンクしているようなので、
システム側の OpenSSL が 0.9.8 系などのディストリビューション (wheezy など) でも以下のようになっていて、脆弱性の影響を受けます。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ldd /usr/lib/apache2/modules/mod_ssl.so
</span><span class='line'>        linux-vdso.so.1 =&gt;  (0x00007fff25b9a000)
</span><span class='line'>        libssl.so.1.0.0 =&gt; /usr/lib/x86_64-linux-gnu/libssl.so.1.0.0 (0x00007f6ae2d93000)
</span><span class='line'>        libcrypto.so.1.0.0 =&gt; /usr/lib/x86_64-linux-gnu/libcrypto.so.1.0.0 (0x00007f6ae299c000)
</span><span class='line'>        libpthread.so.0 =&gt; /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007f6ae277f000)
</span><span class='line'>        libc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007f6ae23f4000)
</span><span class='line'>        libdl.so.2 =&gt; /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f6ae21f0000)
</span><span class='line'>        libz.so.1 =&gt; /lib/x86_64-linux-gnu/libz.so.1 (0x00007f6ae1fd8000)
</span><span class='line'>        /lib64/ld-linux-x86-64.so.2 (0x00007f6ae322d000)
</span><span class='line'>$ ldd /usr/lib/apache2/modules/mod_ssl_with_npn.so
</span><span class='line'>        linux-vdso.so.1 =&gt;  (0x00007fff825ff000)
</span><span class='line'>        librt.so.1 =&gt; /lib/x86_64-linux-gnu/librt.so.1 (0x00007f8704d4e000)
</span><span class='line'>        libcrypt.so.1 =&gt; /lib/x86_64-linux-gnu/libcrypt.so.1 (0x00007f8704b17000)
</span><span class='line'>        libpthread.so.0 =&gt; /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007f87048fa000)
</span><span class='line'>        libdl.so.2 =&gt; /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f87046f6000)
</span><span class='line'>        libc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007f870436b000)
</span><span class='line'>        /lib64/ld-linux-x86-64.so.2 (0x00007f8705367000)</span></code></pre></td></tr></table></div></figure>


<h2>影響を受ける OpenSSL のバージョン</h2>

<p>Heartbleed の <code>What versions of the OpenSSL are affected?</code>
によると、影響を受けるのは OpenSSL 1.0.1 から 1.0.1f で、
OpenSSL 1.0.0 系や OpenSSL 0.9.8 系という古いバージョンは
影響がないようです。</p>

<h2>Debian や Ubuntu への影響</h2>

<p>他の OS も含めた情報は
Heartbleed の <code>How about operating systems?</code>
にまとまっているので、
Debian と Ubuntu に付いてもう少し調べてみました。</p>

<p>Heartbleed にも書いてありますが、
<a href="https://www.debian.org/security/2014/dsa-2896">Debian &mdash; Security Information &mdash; DSA-2896-1 openssl</a>
によると Debian は oldstable (squeeze) は影響がなくて、
stable (wheezy) だと影響があるようです。
つまりまだ wheezy に上げていないサーバーは大丈夫でした。</p>

<p><a href="http://www.ubuntu.com/usn/usn-2165-1/">USN-2165-1: OpenSSL vulnerabilities | Ubuntu</a>
によると Ubuntu は</p>

<ul>
<li>Ubuntu 13.10 (saucy)</li>
<li>Ubuntu 12.10 (quantal)</li>
<li>Ubuntu 12.04 LTS (precise)</li>
</ul>


<p>にセキュリティアップデートが出ているようです。
10.04 LTS lucid は openssl が古いので影響がなくて、
13.04 (raring) は
<a href="http://www.ubuntu.com/info/release-end-of-life">サポート終了</a>
しているので、セキュリティアップデートは出ていないようです。
ついでに
<a href="http://distrowatch.com/table.php?distribution=ubuntu">DistroWatch.com: Ubuntu</a>
でもう少し調べてみると 1.0.1 になったのが 12.04 からなので、
11.10 以前は影響がないようです。</p>

<h2>攻撃を受けたかどうかの確認はできない</h2>

<p>Heartbleed に
<code>Can I detect if someone has exploited this against me?</code>
<code>Exploitation of this bug leaves no traces of anything abnormal happening to the logs.</code>
と書いてあって、
「このバグを突かれても何か変なことがあったというログは残らない」
ということのようなので、
普通は攻撃を受けたかどうか確認できないということのようです。</p>

<h2>秘密鍵は再生成するべき</h2>

<p>というわけで、
<a href="https://www.debian.org/security/2014/dsa-2896">DSA-2896</a>
に
<code>to the currently available information, private keys should be considered as compromised and regenerated as soon as possible.</code>
と書いてあるように、
秘密鍵は出来るだけ早く再生成した方が良いようです。</p>

<h2>openssh-server の鍵の再生成</h2>

<p>2014-04-08 追記:
<a href="http://undeadly.org/cgi?action=article&amp;sid=20140408063423">OpenSSH は影響を受けない</a>
ようです。
(2014-04-09 23:55 追記: SSH の通信部分で OpenSSL を使っていないので、直接は影響を受けないというだけで、 PAM で LDAPS を使っている場合などは当然影響を受けます。)</p>

<p>サーバー側では <code>/etc/ssh/ssh_host_*</code> を削除して <code>dpkg-reconfigure openssh-server</code> で再生成するのが良さそうです。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% sudo rm /etc/ssh/ssh_host_*
</span><span class='line'>% sudo dpkg-reconfigure openssh-server
</span><span class='line'>Creating SSH2 RSA key; this may take some time ...
</span><span class='line'>Creating SSH2 DSA key; this may take some time ...
</span><span class='line'>Creating SSH2 ECDSA key; this may take some time ...
</span><span class='line'>ssh stop/waiting
</span><span class='line'>ssh start/running, process 7230
</span><span class='line'>% sudo service ssh restart
</span><span class='line'>ssh stop/waiting
</span><span class='line'>ssh start/running, process 7339</span></code></pre></td></tr></table></div></figure>


<p>クライアント側では、
<code>HashKnownHosts no</code>
を設定していれば
<code>~/.ssh/known_hosts</code>
ファイルを直接編集しても良いのですが、
設定していないと、どの行がどのホストかわからないので、
<code>ssh-keygen -R foo.example.jp</code>
のように削除すると良さそうです。</p>

<p>場合によっては
<code>ssh-keygen -R 192.168.1.2</code>
のように IP アドレス側の削除や
<code>ssh-keygen -R '[foo.example.jp]:3843'</code>
のようにポート番号付きでの指定が必要かもしれません。</p>

<p><code>UserKnownHostsFile</code> で <code>known_hosts</code> ファイルを分割しているときは
<code>ssh-keygen -R foo.example.jp -f ~/.ssh/foo.known_hosts</code> のように
<code>UserKnownHostsFile</code> を指定する必要があります。</p>

<h2>その他のサーバーの鍵の再生成</h2>

<p>apache2 とかの Web サーバーなら
初回の設定と同様に再生成すれば良さそうですが、
証明書の再発行も必要なので、
気軽には出来ないということで、
しばらく様子見中です。</p>

<p>OpenVPN はサーバーの鍵は再生成した方が良さそうですが、
CA まで再生成する必要があるのかどうかがわからないので
様子見中です。</p>

<p>以前の Debian での修正ミスで脆弱な鍵しか生成できなくなっていた問題の修正のときの
<a href="https://www.debian.org/security/key-rollover/">Debian &mdash; 鍵のロールオーバー</a>
が参考になるかもしれませんが、
今回はサーバー外からでも鍵が抜き出せてしまうという問題のようなので、
LAN 内のサーバーなど、そのサーバーにアクセスできる環境に攻撃者が入れる時点で問題がある環境なら、
アップデートを適用して再起動して今後鍵を抜き取られる可能性をなくしてから、
ゆっくり続報を待ってから対処を考えるということでも良いと思います。</p>

<h2>参考リンク</h2>

<p>2014-04-09 参考リンクを追加</p>

<ul>
<li><a href="http://d.hatena.ne.jp/nekoruri/20140408/heartbleed">CVE-2014-0160 OpenSSL Heartbleed 脆弱性まとめ &ndash; めもおきば</a>

<ul>
<li>このリンク先が日本語としては一番情報がまとまっているようです。</li>
</ul>
</li>
<li><a href="http://jvn.jp/vu/JVNVU94401838/">JVNVU#94401838: OpenSSL の heartbeat 拡張に情報漏えいの脆弱性</a>

<ul>
<li>ベンダ情報とか CVSS とか。</li>
</ul>
</li>
<li><a href="http://heartbleed.com/">Heartbleed Bug</a>

<ul>
<li>英語だけど Google Chrome の翻訳機能でもだいたい読めます。</li>
</ul>
</li>
<li><a href="http://www.exploit-db.com/exploits/32745/">OpenSSL TLS Heartbeat Extension &ndash; Memory Disclosure</a>

<ul>
<li>実際に情報が抜き出せるチェックツールで、これをみて他のツールの誤検知ではなく <code>mod_spdy</code> が原因だと気付きました。</li>
</ul>
</li>
<li><a href="https://groups.google.com/forum/#!topic/mod-spdy-discuss/0yAGH8BHfQo">CVE-2014-0160 / heartbleed openssl bug &amp; mod_spdy &ndash; Google グループ</a>

<ul>
<li><code>mod_spdy</code> の対応の話 (英語) です。日本時間の 2014-04-09 02:00 時点ではまだ対応中で修正版のリリースはされていないようです。</li>
</ul>
</li>
<li><a href="https://groups.google.com/forum/#!msg/mod-spdy-discuss/EwCowyS1KTU/uGm4586P_CQJ">New mod_spdy binary bugfix release (v0.9.4.2) &ndash; SECURITY FIX</a>

<ul>
<li>日本時間の 2014-04-09 09:00 時点ではリリースされていました。</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[R と Ruby によるデータ解析入門　読書会　第1回に参加しました]]></title>
    <link href="http://blog.n-z.jp/blog/2014-04-05-amagasakirb.html"/>
    <updated>2014-04-05T22:55:31+09:00</updated>
    <id>http://blog.n-z.jp/blog/amagasakirb</id>
    <content type="html"><![CDATA[<p><a href="http://kokucheese.com/event/index/153995/">4月5日 R と Ruby によるデータ解析入門 読書会 第1回(兵庫県)</a>
に参加しました。
今回はまえがきから3章まででした。</p>

<div style="float:right">
<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=znz-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=4873116155" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>
</div>


<p>次回は5月17日だそうです。</p>

<!--more-->


<h2>会場</h2>

<p>いつもの部屋に戻っていました。
今回は参加者が多くて、最終的には10名になっていました。</p>

<h2>メモ</h2>

<p>以下今回のメモです。</p>

<ul>
<li>「はじめに」の「カラーテレビを見るとカラーの夢を見る」から白黒テレビの時代は白黒の夢だったのかとか、テレビの普及以前はどうだったのかという話</li>
<li>p.2 : 「C 言語はブール型を持たない」から C99 だと <code>_Bool</code> があるという話</li>
<li>p.5 : 脚注の magic comment から書き方の流派の話

<ul>
<li>2.0 からデフォルトエンコーディングは utf-8 になった。</li>
<li>1.9 のデフォルトエンコーディングは us-ascii だった。</li>
</ul>
</li>
<li>p.13 ループ : <code>hungry?</code> と <code>full?</code> の中間の状態はないのか</li>
<li>R で <code>demo('Japanese')</code> とか</li>
<li>shoes の Debian パッケージは wheezy にはあるが sid だとなくなっていた。</li>
<li><code>sd</code> とかから名前の省略の話</li>
<li>p.33 gforge のあたりから rubyforge はもうすぐ終了予定の話

<ul>
<li><a href="https://twitter.com/evanphx/status/399552820380053505">Announced today that we&rsquo;re sunsetting RubyForge. Last day will be May 15th. Begin your data migration now!</a></li>
</ul>
</li>
<li>1オリジンか0オリジンかとか西暦0年の有無の話とか Oracle と PostgreSQL の非互換の話とか</li>
<li>p.39 「最も基礎的なデータ構造であるベクトル」からスカラーはないのかという話</li>
<li>p.40 「二重角括弧は常に 1 つの値を返します」の意味が分かりにくいという話</li>
<li>このあたりで REPL で毎回付いていた <code>[1]</code> はベクトルを表してるっぽいことに気付いた</li>
<li>p.47 <code>rbind</code> は _r_ows bind だった。
<code>help(rbind)</code> で <code>cbind</code> と一緒に説明が出てきた。</li>
<li>p.57 <code>factor</code> の使用例 : 年を連続値ではなく離散値として扱うために使っているらしい。</li>
<li>3章は翻訳独自の追加の章

<ul>
<li>更なる前提知識がないとこれでもまだ難しい</li>
<li>8つの魔法とあるが、それぞれの説明の詳しさが違う</li>
</ul>
</li>
<li>p-value だけとりたい場合とかどうすればいいのかわからない

<ul>
<li><code>t.test()</code> の返り値はオブジェクトっぽいがその属性の取り出し方がわからない</li>
<li><code>help(t.test)</code> でいろいろ情報は出てきた</li>
<li><code>v = t.test(hoge)</code> だと <code>v$p.value</code> とか <code>v["p.value"]</code> とかで取り出せた。</li>
</ul>
</li>
<li><code>help</code> とかの使い方 (調べ方) を説明してほしかったという話</li>
<li>プログラマ (言語オタク?) 向けには今回の読書会の本よりも
<div style="float:right">
<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=znz-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=4873115795" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>
</div>
<a href="http://www.amazon.co.jp/gp/product/4873115795/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4873115795&amp;linkCode=as2&amp;tag=znz-22">アート・オブ・Rプログラミング</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4873115795" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />
がオススメらしい。</li>
</ul>


<h2>懇親会</h2>

<p>花見によさそうな場所がなかったのと、天気が下り坂ということもあり、結局いつものさくら水産での懇親会でした。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第60回 Ruby/Rails勉強会＠関西で正規表現の先読みについてという発表をしました]]></title>
    <link href="http://blog.n-z.jp/blog/2014-03-29-kansaiworkshop060.html"/>
    <updated>2014-03-29T22:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/kansaiworkshop060</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/rubykansai/workshops/wiki/Kansaiworkshop060">第50回 Ruby/Rails勉強会＠関西</a> に参加して、「正規表現の先読みについて」という発表をしてきました。</p>

<!--more-->


<h2>発表資料</h2>

<ul>
<li><a href="https://github.com/znz/regexp-201403">https://github.com/znz/regexp-201403</a></li>
<li><a href="http://slide.rabbit-shocker.org/authors/znz/regexp-201403/">http://slide.rabbit-shocker.org/authors/znz/regexp-201403/</a></li>
<li><a href="https://speakerdeck.com/znz/zheng-gui-biao-xian-falsexian-du-minituite">https://speakerdeck.com/znz/zheng-gui-biao-xian-falsexian-du-minituite</a></li>
<li><a href="http://www.slideshare.net/znzjp/regexp-201403">http://www.slideshare.net/znzjp/regexp-201403</a></li>
</ul>


<h2>デモアプリ</h2>

<p>デモに使った Web アプリのソースは
<a href="https://gist.github.com/znz/9835956#file-regexp-201403-rb">https://gist.github.com/znz/9835956#file-regexp-201403-rb</a>
で公開しています。</p>

<p>heroku にも deploy したので、
<a href="http://regexp-201403.herokuapp.com/">http://regexp-201403.herokuapp.com/</a>
で試せます。</p>

<h3>制限事項</h3>

<p>発表で見せる範囲しかちゃんと作っていないので、
変なことをすると変になるのはそういうものです。</p>

<p>対応している正規表現も最初に例として並んでいるもので使っているようなものしか対応していません。</p>

<h2>発表内容</h2>

<p>デモを先に作って後で発表資料を作ったので、デモの方がメインで資料は後付けという感じです。</p>

<h2>KPT</h2>

<ul>
<li>Keep

<ul>
<li>ちゃんと発表できた。</li>
<li>直前になってしまったけれど、発表資料もちゃんと作成できた。</li>
</ul>
</li>
<li>Problem

<ul>
<li>準備の時間があまり取れなかった。</li>
<li>会場の後ろの方でちゃんと見えていたのかとか、聞こえていたのかとかが確認できなかった。</li>
<li>発表資料の公開が遅くなった。(4月3日)</li>
</ul>
</li>
<li>Try

<ul>
<li>中継内容の事前確認をしておきたい。録画ありかどうかとか。</li>
<li>今度こそ rabbiter を使いたい。</li>
</ul>
</li>
</ul>


<h2>他の発表の感想とか</h2>

<p>RSpec 3 対応のライブコーディングは事前にかなりちゃんと準備をしてきた感じがして、
内容も参考になって非常に良かったです。</p>

<p>他はこういうことをやっています、というサービスの紹介っぽい感じが多くて、
プログラミングの話は少なかったので、内容は面白いけど
Ruby/Rails勉強会＠関西向きではないかも、と感じるものもありました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第 9 回 RubyMotion もくもく会 in Osaka に参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2014-03-19-rubymotion-mokumoku-osaka.html"/>
    <updated>2014-03-19T19:32:08+09:00</updated>
    <id>http://blog.n-z.jp/blog/rubymotion-mokumoku-osaka</id>
    <content type="html"><![CDATA[<p>第 1 回から第 8 回にも参加した RubyMotion もくもく会 in Osaka の
<a href="http://connpass.com/event/5276/">第 9 回 RubyMotion もくもく会 in Osaka</a>
に参加してきました。</p>

<p>次回の
<a href="http://connpass.com/event/5674/">第 10 回 RubyMotion もくもく会 in Osaka</a>
は 4/23(水) になりました。</p>

<!--more-->


<h2>メモ</h2>

<ul>
<li><a href="https://github.com/shin1x1/vagrantx/issues/1">VagrantX のロゴ</a></li>
<li><a href="http://www.jetbrains.com/ruby/">RubyMine</a></li>
<li><a href="http://testflightapp.com/">TestFlight</a> の代わりに今は <a href="https://deploygate.com/">DeployGate</a> が良いという話</li>
</ul>


<h2>やったこと</h2>

<p>RubyMine をインストールして使い始めてみました。
試用期間は次回のもくもく会には切れているので、
それまでに他でも使っておかないとあっという間に試用期間が終わってしまいそうです。</p>

<p><a href="http://stackoverflow.com/questions/9289613/handlegeturlevent-doesnt-get-called">イベントハンドラの設定を init でやれば良い</a>というような話があったので、
init メソッドを定義してみたところ、呼ばれていなかったので、
initialize にしてみたら、
呼ばれていることは確認できても、
やっぱり起動時の URL は受け取れないままでした。</p>

<p>内部的な変更としては
REPL で確認した時に
<code>KeyDirectObject</code> が存在しなかったので、
<code>keyDirectObject = '----'.unpack('L')[0]</code>
のように作っていたのを
<code>KeyDirectObject</code>
を使うように変えました。</p>

<p>以前のもくもく会の時に気付いたように
<code>rake</code>
でのコンパイル時に参照していない定数は REPL でも存在しないというだけでした。</p>

<p>他にはいろいろ調べている時に
<a href="http://vivacocoa.jp/objective-c3e/chapter5c.html">ウィンドウのクローズとアプリケーションの終了を同期させる</a>
というのを知ったので、
以下のメソッド定義を追加して
window を閉じた時に終了するようにしました。
これを追加するまでは閉じたら開き直す手段がなくて何も出来なくなっていました。</p>

<figure class='code'><figcaption><span>app/app_delegate.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="k">def</span> <span class="nf">applicationShouldTerminateAfterLastWindowClosed</span><span class="p">(</span><span class="n">application</span><span class="p">)</span>
</span><span class='line'>    <span class="kp">true</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[bootstrap 2.3.2 から bootstrap 3.1.1 への移行]]></title>
    <link href="http://blog.n-z.jp/blog/2014-03-14-bootstrap-2-to-3.html"/>
    <updated>2014-03-14T23:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/bootstrap-2-to-3</id>
    <content type="html"><![CDATA[<p>Rails 3.2.17 を使っている rails アプリで
bootstrap 2.3.2 から bootstrap 3.1.1 に移行している途中なのですが、
どういうところに対処が必要だったのか、
メモをまとめてみました。</p>

<!--more-->


<h2>Gemfile 変更</h2>

<p>bootstrap 2 系のときは twitter-bootstrap-rails gem を使っていたのですが、
bootstrap 3 系対応がリリースされていないこともあって、
bootstrap 側から公式にリリースされている bootstrap-sass gem に移行しました。</p>

<p>bootstrap-sass は rails_admin gem で使われていて、
バージョンが rails_admin によって制限されてしまうので、
公式の less の gem があれば良かったのですが、
見つけられなかったので、
自分しか使っていない rails_admin を rails 4 に上げるまでの間、
一時的に rails_admin を外して、
新しい bootstrap-sass を rails 3.2.17 と一緒に使いました。</p>

<figure class='code'><figcaption><span>Gemfile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;less-rails&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;twitter-bootstrap-rails&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>を <a href="https://github.com/twbs/bootstrap-sass">https://github.com/twbs/bootstrap-sass</a> に書いてあるバージョン指定付きで</p>

<figure class='code'><figcaption><span>Gemfile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;sass-rails&#39;</span><span class="p">,</span> <span class="s1">&#39;&gt;= 3.2&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;bootstrap-sass&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 3.1.1&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>に書き換えて、 <code>bundle update</code> で反映しました。</p>

<h2>twitter-bootstrap-rails のヘルパーメソッド削除</h2>

<p>twitter-bootstrap-rails で定義されているヘルパーメソッドを使っていたら、
削除するなり代替メソッドを定義して置き換えるなり、
一時的にコメントアウトするなりしてエラーにならないようにしておきます。</p>

<p>今回は <code>glyph</code> と <code>add_breadcrumb</code> がひっかかりました。</p>

<h2>bootstrap_and_overrides.css.less 削除</h2>

<p>app/assets/stylesheets/bootstrap_and_overrides.css.less を削除して、
app/assets/stylesheets/app.css.scss のようなファイルに移行しました。</p>

<figure class='code'><figcaption><span>app.css.scss</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="k">@import</span> <span class="s2">&quot;bootstrap&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="o">//</span> <span class="err">その他の</span> <span class="nt">bootstrap_and_overrides</span><span class="nc">.css.less</span> <span class="err">から移行した内容</span>
</span></code></pre></td></tr></table></div></figure>


<h2>キャッシュ削除</h2>

<p>less を消したはずなのにエラーにならなくておかしいと思っていたら、
キャッシュの影響だったので、
development 環境でもキャッシュを有効にしている場合は削除します。</p>

<p><code>bundle exec rake tmp:clear</code> で消したり、
<code>rake</code> 経由だと遅いと思ったら
<code>rm -rf tmp/cache</code> のようにばっさり削除したりすると良いと思います。</p>

<h2>.navbar</h2>

<p>bootstrap 2 を使っていた頃は
<code>.navbar</code> と <code>.nav</code> の違いがよくわかっていなかったのですが、
<code>.navbar</code> は上 (または下) のバーのことで、
<code>.nav</code> はその中にある <code>ul</code> のリンクのことでした。</p>

<p><code>.nav</code> は他にも <code>.nav-tabs</code> のような使い方もするというのを先に知っていれば
迷わなかったと思います。</p>

<p><a href="http://getbootstrap.com/components/#nav">http://getbootstrap.com/components/#nav</a>
(古い方: <a href="http://getbootstrap.com/2.3.2/components.html#navs">http://getbootstrap.com/2.3.2/components.html#navs</a> )
の説明では navbar の上なのですが、
サイトの作成順として画面の上から作っていっていたので、
迷ってしまっていたようです。</p>

<p><code>.navbar</code> の中の <code>.nav</code> は <code>.navbar-nav</code> に変わっている、
<code>.navbar-inner</code> は <code>.container</code> か <code>.container-fluid</code> に置き換えなど、
変更点が多いので、
<code>.navbar</code> の中身は全面的に見直すのが良さそうです。</p>

<h2>.brand から .navbar-brand</h2>

<p><code>.brand</code> から <code>.navbar-brand</code> に変わっていました。</p>

<p>中に画像を入れているとずれてしまうので、
scss に以下のように書いて調整しました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nc">.navbar-brand</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">padding-top</span><span class="o">:</span> <span class="m">8px</span><span class="p">;</span>
</span><span class='line'>  <span class="n">img</span> <span class="err">{</span>
</span><span class='line'>    <span class="k">height</span><span class="o">:</span> <span class="m">34px</span><span class="p">;</span>
</span><span class='line'>    <span class="k">width</span><span class="o">:</span> <span class="m">34px</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="err">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>8 + 34 + 8 ということで高さ 50px の <code>.navbar</code> の真ん中になることを期待しています。</p>

<h2>.container (固定幅) か .container-fluid (横幅いっぱい)</h2>

<p>grid system の配置を使うなら <code>.row</code> は <code>.container</code> か <code>.container-fluid</code> の中に置く必要があります。</p>

<p>違いは実際に window の横幅を変えてみればわかるのですが、
<code>.container</code> だと
<a href="http://getbootstrap.com/css/#grid">http://getbootstrap.com/css/#grid</a>
のように 768px 992px 1200px のところで急に配置が変わって、
その間は左右の余白が増減するだけのようです。</p>

<p><code>.container-fluid</code> だと普通のサイトと同じように出来るだけ横幅いっぱいになるように中身の横幅が変わります。</p>

<p>bootstrap 2 ではレスポンシブにしたいときは <code>.container-fluid</code> で固定幅の時は <code>.container</code> だったので、
<code>.container-fluid</code> しか使っていなかったのですが、
今はレスポンシブな中で使い分けが出来るようになっているようです。</p>

<p><a href="http://getbootstrap.com/examples/navbar-fixed-top/">http://getbootstrap.com/examples/navbar-fixed-top/</a>
の例で <code>Project name</code> が左端によっていないのも <code>.container</code> を使っているからです。
ブラウザーのデベロッパーツールで <code>.container-fluid</code> に変えて横幅を変えてみれば
違いがわかると思います。</p>

<h2><code>.row-fluid .span*</code> から <code>.row .col-xs-*</code></h2>

<p><code>.row</code> と <code>.row-fluid</code> の区別はなくなって、
<code>.row</code> に統一されています。</p>

<p><code>.span*</code> の置き換えは <code>.col-md-*</code> と説明されていることが多いようですが、
<code>.col-md-</code> が <code>@media (min-width: 992px)</code> になっているなど、
小さい画面サイズ用のスタイルを大きい画面用のスタイルで上書きするようになっているので、
画面サイズに関わらず同じ分割をしたいのなら <code>.col-xs-</code> だけ指定すれば良さそうです。</p>

<h2>btn</h2>

<p><code>btn</code> だけでは色や枠 (border) が変わらなくなったので、
<code>btn-default</code> を足す必要がありました。</p>

<p>サイズ変更の <code>btn-mini</code> などがなくなって <code>btn-xs</code> などに変更する必要がありました。</p>

<h2>list-unstyled</h2>

<p><code>ul.unstyled</code> は <code>ul.list-unstyled</code> に変更する必要がありました。</p>

<h2>font-awesome-sass</h2>

<p>アイコンは glyphicons ではなく font-awesome を使っていたので、
<a href="https://github.com/FortAwesome/font-awesome-sass">font-awesome-sass</a>
に乗り換えました。</p>

<p>mixin や variables などがなければ関係なさそうですが、
<a href="https://github.com/twbs/bootstrap-sass#usage">bootstrap-sass の Usage</a>
では <code>//= require</code> より <code>@import</code> が推奨されていたので、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="k">@import</span> <span class="s2">&quot;bootstrap&quot;</span><span class="p">;</span>
</span><span class='line'><span class="k">@import</span> <span class="s2">&quot;font-awesome&quot;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>のように <code>@import</code> にしてみました。</p>

<p><code>&lt;i class="icon-sort"&gt;&lt;/i&gt;</code> が
<code>&lt;i class="fa fa-sort"&gt;&lt;/i&gt;</code> に変わるような感じで、
<code>icon-</code> を <code>fa-</code> に置き換えるだけではなく、
<code>fa</code> の追加が必要でした。</p>

<p><code>glyph</code> ヘルパーメソッドを使っていた場合は、
<code>icon</code> ヘルパーメソッドに書き換えると良いのですが、
複数引数の扱いが違うのと、
<code>_</code> を <code>-</code> に置き換える処理がなくなっているのに注意が必要です。</p>

<p>たとえば <code>glyph(:sort_up)</code> は <code>icon('sort-up')</code> のように書き換えました。</p>

<p><code>glyph(:lock, :white)</code> のような複数指定には対応していないようなので、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='haml'><span class='line'><span class="p">=</span> <span class="n">icon</span><span class="p">(</span><span class="s1">&#39;spinner fa-spin&#39;</span><span class="o">.</span><span class="n">freeze</span><span class="p">)</span>
</span><span class='line'><span class="cp">-# or</span>
</span><span class='line'><span class="p">=</span> <span class="n">icon</span><span class="p">(</span><span class="ss">:spinner</span><span class="p">,</span> <span class="kp">nil</span><span class="p">,</span> <span class="ss">class</span><span class="p">:</span> <span class="s1">&#39;fa-spin&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>のように 2 個目以降は無理矢理埋め込むしかなさそうです。</p>

<p>それぞれのヘルパーメソッドのソースは以下のようになっています。</p>

<ul>
<li><a href="https://github.com/seyhunak/twitter-bootstrap-rails/blob/40afc477f6a3813ef82cf5821602c9cf2422efc2/app/helpers/glyph_helper.rb">glyph</a></li>
<li><a href="https://github.com/FortAwesome/font-awesome-sass/blob/23ca05e75e85ec84afecca9f62e7f01d1fb9628b/lib/font_awesome/sass/rails/helpers.rb">icon</a></li>
</ul>


<p><code>icon</code> は第2引数に文字列を指定すると間にスペースを入れてくれるので、
今までは</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nt">i</span><span class="o">[</span><span class="nt">class</span><span class="o">^=</span><span class="s2">&quot;icon-&quot;</span><span class="o">]</span><span class="nd">:after</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">content</span><span class="o">:</span> <span class="s2">&quot; &quot;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>のようにスタイルシートで空白を足していたのですが、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">icon</span><span class="p">(</span><span class="ss">:pencil</span><span class="p">,</span> <span class="n">t</span><span class="p">(</span><span class="s1">&#39;.edit&#39;</span><span class="p">,</span> <span class="ss">default</span><span class="p">:</span> <span class="ss">:&#39;helpers.links.edit&#39;</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>


<p>のように使うのも良さそうです。</p>

<p>今回は書き換えの手間を減らすため、以下のように今までと同じようにスタイルシートで空白を入れるようにしました。
何のスタイルが影響しているのか調べていないのですが、半角スペースだとうまくいかなかったので、 NBSP を直接埋め込みました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nt">i</span><span class="nc">.fa</span><span class="nd">:after</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">content</span><span class="o">:</span> <span class="s2">&quot; &quot;</span><span class="p">;</span> <span class="o">//</span> <span class="n">nbsp</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>いくつかのアイコンの名前は変更が必要でした。
使っていて影響があったのは以下のアイコンでした。</p>

<ul>
<li>変更前 変更後</li>
<li>comment-alt comment-o</li>
<li>folder_close folder</li>
<li>picture picture-o</li>
<li>remove times</li>
<li>signin sign-in</li>
<li>signout sign-out</li>
<li>star-empty star-o</li>
<li>trash trash-o</li>
</ul>


<h2>pagination</h2>

<p>kaminari を使っているので、
<code>app/views/kaminari/_paginator.html.*</code>
の
<code>nav.pagination ul</code>
という構造になっている部分を
<code>ul.pagination</code>
に書き換えるだけでした。</p>

<h2>label</h2>

<p><code>btn</code> と同様に <code>label</code> 単独ではなく <code>label-default</code> と組み合わせるようになりました。</p>

<p>選択されているものに <code>label-inverse</code> を使っていたのになくなってしまったので、
<code>label-primary</code> に変えました。</p>

<p>意味的には <code>.nav</code> に変えた方が良さそうなので、
一通り一時的な対処をした後にちゃんと変更しようと思っています。</p>

<h2>muted</h2>

<p><code>.muted</code> は <code>.text-muted</code> に変更しました。</p>

<h2>参考サイト: Bootstrap3移行ガイド</h2>

<p>基本的に本家のドキュメントを参照していたのですが、
ここまで変更してから 2 から 3 への移行のドキュメントを探して、
<a href="http://bootstrap.s1.adexd.net/">Bootstrap3移行ガイド</a>
をみつけて見てみたのですが、全体としては非常に参考になるのですが、
所々気になる点がありました。
連絡先が見つけられなかったので、ここにメモしておきます。</p>

<p><a href="http://bootstrap.s1.adexd.net/css.php#grid">グリッドシステム（Grid system）</a>
の【Bootstrap2.xとの変更箇所】の説明で <code>.row</code> と使い分けると書いているのは
間違いだと思います。</p>

<p>スクリーンリーダー用のクラスを
<a href="http://bootstrap.s1.adexd.net/css.php#screen-reader">すべての要素の表示を隠す</a>
と説明しているなど、たまに間違いがあるようです。</p>

<h2>現状まとめ</h2>

<p>layouts といくつかのコントローラーに対応する views を変更すれば
ある程度自分のアプリで使っているものは網羅できるので、
そこからは移行に必要な変更点はわかってきて速くなっていく感じでした。</p>

<p>先日書いた haml から slim への移行も同時にやっていて、
views 全体を見直す良い機会になっています。</p>

<p>一部で jquery-ui を使っていて、
機能的には問題ないのですが、
見た目が bootstrap 3 となじまないので、
後で対処が必要そうでした。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[hamlからslimへの移行でひっかかったこと]]></title>
    <link href="http://blog.n-z.jp/blog/2014-03-11-haml-to-slim.html"/>
    <updated>2014-03-11T22:39:11+09:00</updated>
    <id>http://blog.n-z.jp/blog/haml-to-slim</id>
    <content type="html"><![CDATA[<p>haml より slim の方が速いらしいという話を良く見かけるので、
haml から少しずつ slim に移行しようとして、
haml2slim で変換してみたらひっかかりまくりました。</p>

<!--more-->


<h2>インデントがない</h2>

<p>haml は生成される HTML がインデントされていてみやすいのですが、
slim は不要なスペースは入れずにコンパクトな HTML が生成されるようで、
単純に比較できなくて困りましたが、
<a href="https://github.com/slim-template/slim#default-options">https://github.com/slim-template/slim#default-options</a>
で設定できるようだったので、以下のように設定しました。</p>

<figure class='code'><figcaption><span>config/initializers/slim.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">if</span> <span class="no">Rails</span><span class="o">.</span><span class="n">env</span><span class="o">.</span><span class="n">development?</span>
</span><span class='line'>  <span class="ss">Slim</span><span class="p">:</span><span class="ss">:Engine</span><span class="o">.</span><span class="n">set_default_options</span> <span class="ss">pretty</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>1.9 hash style</h2>

<p><a href="https://github.com/slim-template/haml2slim/pull/23">https://github.com/slim-template/haml2slim/pull/23</a>
に pull request がでているように
haml で属性を <code>{foo: bar}</code> のように書く形式には対応していないようです。</p>

<h2>string interpolation がおかしい</h2>

<p><a href="https://github.com/slim-template/haml2slim/issues/7">https://github.com/slim-template/haml2slim/issues/7</a>
などで報告されているように <code>#{ ... }</code> という書き方の変換で問題があるようです。
<code>%tag(foo="#{bar}")</code> が <code>tag(foo="# bar ")</code> になっていて気づきました。</p>

<h2>HTML コメントの中でタグにならない</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='haml'><span class='line'><span class="c">/</span><span class="cs">[if lt IE 9]</span><span class="c"></span>
</span><span class='line'>  <span class="nt">%script</span><span class="p">{</span><span class="ss">src</span><span class="p">:</span> <span class="n">url_for</span><span class="p">(</span><span class="n">html5shiv</span><span class="p">)}</span>
</span></code></pre></td></tr></table></div></figure>


<p>のように書いていたのが</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>/![if lt IE 9]
</span><span class='line'>  script src: url_for(html5shiv)
</span></code></pre></td></tr></table></div></figure>


<p>のように変換されてさっぱりダメだったので、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>/[if lt IE 9]
</span><span class='line'>  script(src=&quot;#{url_for(html5shiv)}&quot;)
</span></code></pre></td></tr></table></div></figure>


<p>または</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>/[if lt IE 9]
</span><span class='line'>  script(src=url_for(html5shiv))
</span></code></pre></td></tr></table></div></figure>


<p>のように書き換えました。
HTML コメント <code>/!</code> の中だとタグが使えない (そのまま文字列としてコメントの中に入る) ようなので、
IE コンディショナルコメント <code>/[...]</code> を使う必要があるようです。</p>

<h2>エラーメッセージがわかりにくい</h2>

<p>書き換え途中で、属性値をくくる <code>""</code> を忘れると
エラーメッセージが
<code>syntax error, unexpected ';'</code>
としかでないので原因がわかりにくくて困りました。</p>

<p>他のところでも ruby のエラーメッセージそのままなので、
閉じ忘れ系は原因の行と離れたところでエラーになって、
行番号もあまり当てにならなくて不便です。</p>

<h2>真偽値属性の属性値が省略できない</h2>

<p>haml だと <code>%div(data-pjax-container)</code> で <code>&lt;div data-pjax-container&gt;</code> に変換できるのに、
slim だと <code>div(data-pjax-container)</code> が <code>&lt;div data-pjax-container=""&gt;</code> になってしまって、
<code>=""</code> が余計です。</p>

<p><a href="https://github.com/slim-template/slim/issues/480">Render boolean attributes without value in html5</a>
によると
<code>:format</code> を <code>:html</code> にすれば良いということで</p>

<figure class='code'><figcaption><span>config/initializers/slim.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">Slim</span><span class="p">:</span><span class="ss">:Engine</span><span class="o">.</span><span class="n">set_default_options</span> <span class="nb">format</span><span class="p">:</span> <span class="ss">:html</span>
</span></code></pre></td></tr></table></div></figure>


<p>と設定してみても slim 2.0.2 だと変化がありませんでした。</p>

<p>まだリリースされていないバージョンを使う必要があるようで、
<code>Gemfile</code> で <code>gem 'slim', github: 'slim-template/slim'</code> と指定して
試そうとしたのですが、
rails 3.2.17 との組み合わせは tilt の要求バージョンの解決が
出来なくて使えませんでした。</p>

<p>実験のため slim 専用の Gemfile を用意して以下のように試したところ、
slim と temple の両方をまだリリースされていないバージョンにすると
使えることが確認できました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">%</span> mkdir /tmp/slim-test
</span><span class='line'><span class="gp">%</span> <span class="nb">cd</span> /tmp/slim-test
</span><span class='line'><span class="gp">%</span> bundle init
</span><span class='line'><span class="gp">%</span> <span class="nb">echo</span> <span class="s1">&#39;gem &quot;slim&quot;, github: &quot;slim-template/slim&quot;&#39;</span> &gt;&gt; Gemfile
</span><span class='line'><span class="gp">%</span> <span class="nb">echo</span> <span class="s1">&#39;gem &quot;temple&quot;, github: &quot;judofyr/temple&quot;&#39;</span> &gt;&gt; Gemfile
</span><span class='line'><span class="gp">%</span> bundle
</span><span class='line'><span class="gp">%</span> <span class="nb">echo</span> <span class="s1">&#39;div(ng-app)&#39;</span> | bundle <span class="nb">exec </span>slimrb
</span><span class='line'><span class="go">&lt;div ng-app=&quot;&quot;&gt;&lt;/div&gt;</span>
</span><span class='line'><span class="gp">%</span> <span class="nb">echo</span> <span class="s1">&#39;div(ng-app)&#39;</span> | bundle <span class="nb">exec </span>slimrb -o <span class="nv">format</span><span class="o">=</span>:html
</span><span class='line'><span class="go">&lt;div ng-app&gt;&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>今のところ、 <code>rack-pjax</code> の使用は止めていて、
 <code>=""</code> がつく挙動で直接困ることはなさそうなので、
この問題は保留することにしました。</p>

<h2>javascript や css の埋め込み</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='haml'><span class='line'><span class="nd">:javascript</span>
</span><span class='line'>  <span class="nd">window.current_user_id = </span><span class="si">#{</span><span class="n">current_user</span><span class="o">.</span><span class="n">id</span><span class="o">.</span><span class="n">to_i</span><span class="si">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>のように書いていたら、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>javascript:
</span><span class='line'>  | window.current_user_id = #{current_user.id.to_i}
</span></code></pre></td></tr></table></div></figure>


<p>と変換されて <code>|</code> がそのまま <code>script</code> の中身に付いてしまったので、
削除しました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>javascript:
</span><span class='line'>  window.current_user_id = #{current_user.id.to_i}
</span></code></pre></td></tr></table></div></figure>


<p><code>:css</code> から <code>css:</code> の変換でも同様でした。
CSS の場合は行頭が記号だと <code>|</code> がついていないこともありました。</p>

<h2>空白の有無の問題</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='haml'><span class='line'>        <span class="p">=</span> <span class="n">link_to</span> <span class="n">home_path</span><span class="p">,</span> <span class="ss">class</span><span class="p">:</span> <span class="s1">&#39;brand&#39;</span> <span class="k">do</span>
</span><span class='line'>          <span class="p">=</span> <span class="n">image_tag</span><span class="p">(</span><span class="s2">&quot;brand.png&quot;</span><span class="p">,</span> <span class="ss">alt</span><span class="p">:</span> <span class="s2">&quot;&quot;</span><span class="p">,</span> <span class="ss">size</span><span class="p">:</span> <span class="s2">&quot;35x35&quot;</span><span class="p">)</span>
</span><span class='line'>          <span class="p">=</span> <span class="n">base_title</span>
</span></code></pre></td></tr></table></div></figure>


<p>がそのまま slim になっていて、基本的には問題なかったのですが、
haml と違って slim だとタグとタイトルの間に空白が入らなくなってしまって、
見た目が変わってしまっていたので、
<code>'</code> だけの行を追加して空白が入るようにしました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>        = link_to home_path, class: &#39;brand&#39; do
</span><span class='line'>          = image_tag(&quot;brand.png&quot;, alt: &quot;&quot;, size: &quot;35x35&quot;)
</span><span class='line'>          &#39;
</span><span class='line'>          = base_title
</span></code></pre></td></tr></table></div></figure>


<h2>end が抜けるバグで SyntaxError</h2>

<p><code>syntax error, unexpected keyword_ensure, expecting keyword_end</code>
になるので原因を調べてみたところ、
インデントの中の最初がコメントだと、
そのブロックの <code>end</code> が抜けてしまうようです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">%</span> <span class="nb">echo</span> <span class="s1">$&#39;- if true\n  / comment&#39;</span> | bundle <span class="nb">exec </span>slimrb -e
</span><span class='line'><span class="go">&lt;% if true</span>
</span><span class='line'>
</span><span class='line'><span class="go"> %&gt;</span>
</span><span class='line'><span class="gp">%</span> <span class="nb">echo</span> <span class="s1">$&#39;- if true\n  |&#39;</span> | bundle <span class="nb">exec </span>slimrb -e
</span><span class='line'><span class="go">&lt;% if true</span>
</span><span class='line'>
</span><span class='line'><span class="go">end %&gt;</span>
</span><span class='line'><span class="gp">%</span> <span class="nb">echo</span> <span class="s1">$&#39;- articles.each do |a|\n  / comment&#39;</span> | bundle <span class="nb">exec </span>slimrb -e
</span><span class='line'><span class="go">&lt;% articles.each do |a|</span>
</span><span class='line'>
</span><span class='line'><span class="go"> %&gt;</span>
</span><span class='line'><span class="gp">%</span> <span class="nb">echo</span> <span class="s1">$&#39;- articles.each do |a|\n  | text&#39;</span> | bundle <span class="nb">exec </span>slimrb -e
</span><span class='line'><span class="go">&lt;% articles.each do |a|</span>
</span><span class='line'><span class="go"> %&gt;text&lt;%</span>
</span><span class='line'><span class="gp">%</span>&gt;&lt;% end %&gt;
</span><span class='line'><span class="gp">%</span> <span class="nb">echo</span> <span class="s1">$&#39;- articles.each do |a|\n  / comment\n/ more comment&#39;</span> | bundle <span class="nb">exec </span>slimrb -e
</span><span class='line'><span class="go">&lt;% articles.each do |a|</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="go"> %&gt;</span>
</span><span class='line'><span class="gp">%</span> <span class="nb">echo</span> <span class="s1">$&#39;- articles.each do |a|\n  / comment\n| text\n/ more comment&#39;</span> | bundle <span class="nb">exec </span>slimrb -e
</span><span class='line'><span class="go">&lt;% articles.each do |a|</span>
</span><span class='line'>
</span><span class='line'><span class="go"> %&gt;text&lt;%</span>
</span><span class='line'><span class="gp">%</span>&gt;&lt;%
</span><span class='line'><span class="gp">%</span>&gt;
</span><span class='line'><span class="gp">%</span> <span class="nb">echo</span> <span class="s1">$&#39;- articles.each do |a|\n  / comment\n| text\n&#39;</span> | bundle <span class="nb">exec </span>slimrb -e
</span><span class='line'><span class="go">&lt;% articles.each do |a|</span>
</span><span class='line'>
</span><span class='line'><span class="go"> %&gt;text&lt;%</span>
</span><span class='line'><span class="gp">%</span>&gt;
</span></code></pre></td></tr></table></div></figure>


<p>この件は <a href="https://github.com/slim-template/slim/issues/485">https://github.com/slim-template/slim/issues/485</a> で報告してみました。</p>

<h2>ファイル名の指定が面倒</h2>

<p>これは slim や haml2slim の問題ではないのですが、
zsh で久しぶりに compctl を使って</p>

<pre><code>compctl -g '*.haml' + -g '*(-/)' haml2slim
</code></pre>

<p>と設定しましたが、ちゃんと compsys を使った方が良いと思い直して、</p>

<pre><code>compdef '_files -g "*.haml"' haml2slim
</code></pre>

<p>と設定しました。</p>

<h2>感想</h2>

<p>シンプルとか入力が楽とかいう主観的なものは個人的には同意できなくて利点とは思えないので、
速いという客観的な理由で slim への移行をしているのですが、
haml2slim の出来が悪かったり、
空白の扱いの違いで同じようなソースからでも最終的な見た目が違うものが出来たりして、
移行は思ったより大変な印象を受けました。</p>

<p>はまりどころさえわかっていれば、そこを注意して haml2slim での変換結果を修正していけば良いので、途中からはどんどん変換していけるようになりました。
(まだ一部しか終わっていませんが。)</p>

<p>それなりの数の変換をしてみた結果、最初から slim で書くようにすれば haml と大きな違いはなさそうにも感じました。</p>

<p><code>end</code> 抜けなどの問題が起きたことから、
haml と比べていろんな書き方で使われていなさそうということで、
まだ安定してなさそうと感じました。</p>

<p>また属性値なしの <code>&lt;div ng-app&gt;</code> のような出力に対応しているリリースがまだないなど、
融通が利かない点があって問題が起きそうな可能性がありそうだと感じました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby 2.1.1のHash#rejectの不具合対策]]></title>
    <link href="http://blog.n-z.jp/blog/2014-03-11-hash-reject.html"/>
    <updated>2014-03-11T14:22:28+09:00</updated>
    <id>http://blog.n-z.jp/blog/hash-reject</id>
    <content type="html"><![CDATA[<p><a href="https://www.ruby-lang.org/ja/news/2014/03/10/regression-of-hash-reject-in-ruby-2-1-1/">Ruby 2.1.1 に含まれる Hash#reject の不具合について</a>
という話があって、
自分で書くコードでは普通は Hash を継承することはない (is-a にせずに has-a にすることが多い) ので影響はないのですが、
Rails の中の ActiveSupport が影響を受けるということで対処を入れました。</p>

<p>他にもバックポート漏れのコミットをあてた独自ビルドを使うとか、
Ruby 2.1.0 を使う、という対処もあるようです。</p>

<!--more-->


<p><a href="https://github.com/rails/rails/issues/14188">Rails の Issue #14188</a>
で話があるようにセキュリティ修正ではないため、
Rails 3.2 系にこの修正は入らないので、
モンキーパッチを入れることにしました。</p>

<p>bugs.ruby-lang.org では
<a href="https://github.com/ruby/bugs.ruby-lang.org/blob/ro-2-5/lib/redmine/core_ext.rb">https://github.com/ruby/bugs.ruby-lang.org/blob/ro-2-5/lib/redmine/core_ext.rb</a>
のように対処していたのを参考にして、
以下のようなコードを
<code>config/initializers/hash_reject.rb</code>
に置いて対処することにしました。</p>

<figure class='code'><figcaption><span>config/initializers/hash_reject.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># monkey patch for regression of Hash#reject in Ruby 2.1.1</span>
</span><span class='line'><span class="c1"># see https://www.ruby-lang.org/ja/news/2014/03/10/regression-of-hash-reject-in-ruby-2-1-1/</span>
</span><span class='line'><span class="c1"># or https://www.ruby-lang.org/en/news/2014/03/10/regression-of-hash-reject-in-ruby-2-1-1/</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;active_support/hash_with_indifferent_access&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;active_support/ordered_hash&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">module</span> <span class="nn">ActiveSupport</span>
</span><span class='line'>  <span class="k">class</span> <span class="nc">HashWithIndifferentAccess</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">select</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>      <span class="nb">dup</span><span class="o">.</span><span class="n">tap</span> <span class="p">{</span> <span class="o">|</span><span class="nb">hash</span><span class="o">|</span> <span class="nb">hash</span><span class="o">.</span><span class="n">select!</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">reject</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>      <span class="nb">dup</span><span class="o">.</span><span class="n">tap</span> <span class="p">{</span> <span class="o">|</span><span class="nb">hash</span><span class="o">|</span> <span class="nb">hash</span><span class="o">.</span><span class="n">reject!</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">class</span> <span class="nc">OrderedHash</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">select</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>      <span class="nb">dup</span><span class="o">.</span><span class="n">tap</span> <span class="p">{</span> <span class="o">|</span><span class="nb">hash</span><span class="o">|</span> <span class="nb">hash</span><span class="o">.</span><span class="n">select!</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">reject</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>      <span class="nb">dup</span><span class="o">.</span><span class="n">tap</span> <span class="p">{</span> <span class="o">|</span><span class="nb">hash</span><span class="o">|</span> <span class="nb">hash</span><span class="o">.</span><span class="n">reject!</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>ここのコードが実行される前に読み込まれていれば問題ないのですが、
ここでクラス定義してしまうと元々の定義が autoload されなくなるので、
念のため require しています。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ページの切り替わりごとに背景の自動変更]]></title>
    <link href="http://blog.n-z.jp/blog/2014-03-03-auto-change-background.html"/>
    <updated>2014-03-03T23:25:01+09:00</updated>
    <id>http://blog.n-z.jp/blog/auto-change-background</id>
    <content type="html"><![CDATA[<p>ある Rails アプリでページの切り替わりごとに背景を自動で変更するようにしていたのですが、
デザイン変更で使わなくなったので、どういうことをやっていたのか、メモとして残しておくことにします。</p>

<!--more-->


<h2>HTML</h2>

<p>まず CSS 用のクラスとして自動変更する目印の <code>background</code> と初期状態の <code>background-0</code> を <code>body</code> に設定しました。</p>

<figure class='code'><figcaption><span>app/views/layouts/application.html.haml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='haml'><span class='line'>  <span class="nt">%body</span><span class="nc">.background.background-0</span>
</span></code></pre></td></tr></table></div></figure>


<h2>スクリプト</h2>

<p><code>sessionStorage</code> を使ってタブごとに状態を保存するようにしました。
今回は画像として <code>app/assets/images/background-0.jpg</code> と <code>app/assets/images/background-1.jpg</code> の 2 枚だけだったので、
<code>background_num = 2</code> にしています。</p>

<p>以下のコードを書いた時には知らなかったので対処が入っていないのですが、
Safari のプライベートブラウズでは <code>sessionStorage</code> があるのに使えないという厄介なことになっているので、必要ならそのあたりのエラー処理も入れた方が良いです。</p>

<figure class='code'><figcaption><span>app/assets/javascripts/background.js.coffee</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nx">jQuery</span> <span class="nf">-&gt;</span>
</span><span class='line'>  <span class="k">if</span> <span class="k">typeof</span> <span class="nx">sessionStorage</span> <span class="o">!=</span> <span class="s">&#39;undefined&#39;</span>
</span><span class='line'>    <span class="nv">background_num = </span><span class="mi">2</span>
</span><span class='line'>    <span class="nv">change_background = </span><span class="nf">-&gt;</span>
</span><span class='line'>      <span class="nv">body = </span><span class="nx">$</span><span class="p">(</span><span class="s">&quot;body&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">!</span><span class="nx">body</span><span class="p">.</span><span class="nx">hasClass</span><span class="p">(</span><span class="s">&quot;background&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="k">return</span>
</span><span class='line'>      <span class="nv">background = </span><span class="nx">sessionStorage</span><span class="p">.</span><span class="nx">getItem</span><span class="p">(</span><span class="s">&quot;background&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">background</span>
</span><span class='line'>        <span class="nv">background = </span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">background</span><span class="p">)</span>
</span><span class='line'>        <span class="nx">$</span><span class="p">(</span><span class="s">&quot;body&quot;</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="s">&quot;background-&quot;</span> <span class="o">+</span> <span class="nx">background</span><span class="p">)</span>
</span><span class='line'>        <span class="nv">background = </span><span class="p">(</span><span class="nx">background</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">%</span> <span class="nx">background_num</span>
</span><span class='line'>        <span class="nx">$</span><span class="p">(</span><span class="s">&quot;body&quot;</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="s">&quot;background-&quot;</span> <span class="o">+</span> <span class="nx">background</span><span class="p">)</span>
</span><span class='line'>      <span class="k">else</span>
</span><span class='line'>        <span class="nv">background = </span><span class="mi">0</span>
</span><span class='line'>      <span class="nx">sessionStorage</span><span class="p">.</span><span class="nx">setItem</span><span class="p">(</span><span class="s">&quot;background&quot;</span><span class="p">,</span> <span class="nx">background</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">on</span> <span class="s">&#39;ajax:success.background&#39;</span><span class="p">,</span> <span class="nx">change_background</span>
</span><span class='line'>    <span class="nx">change_background</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<h2>スタイルシート</h2>

<p>rails 4.0.3, sass-rails 4.0.1, sprockets 2.11.0, sprockets-rails 2.0.1
で確認したところ、
<code>depend_on_asset</code> ではなく <code>depend_on</code> を使って拡張子付きのファイル名で
ファイルの先頭に <code>depend_on</code> を並べれば画像ファイルを変更したときに
<code>rake assets:precompile</code> で <code>css</code> も再生成されるように見えました。</p>

<p>つまり <code>//= depend_on "background-1.jpg"</code> を <code>.background-1</code> の直前に持っていくと反映されませんでした。</p>

<p><code>depend_on_asset</code> だと全く反映されませんでした。</p>

<p>ファイルの指定は <code>//= depend_on "../images/background-0.jpg"</code> や <code>//= depend_on "../images/background-1.jpg"</code> のように相対パスでも、ファイル名のみでも大丈夫でした。</p>

<p><code>image-url</code> で参照しているのだから、そこで自動的に依存関係に入ってほしいところですが、そういう仕組みにはなっていないようです。
ちゃんと読んでいないのですが、
<a href="https://github.com/sstephenson/sprockets/issues/488">Dependent assets might not be recompiled</a>
のあたりにすでに話が出ているので、仕様なのかもしれません。</p>

<figure class='code'><figcaption><span>app/assets/stylesheets/background.css.scss</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="o">//=</span> <span class="nt">depend_on</span> <span class="s2">&quot;background-0.jpg&quot;</span>
</span><span class='line'><span class="o">//=</span> <span class="nt">depend_on</span> <span class="s2">&quot;background-1.jpg&quot;</span>
</span><span class='line'><span class="nc">.background-0</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">background-image</span><span class="o">:</span> <span class="n">image</span><span class="o">-</span><span class="sx">url(&quot;background-0.jpg&quot;)</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nc">.background-1</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">background-image</span><span class="o">:</span> <span class="n">image</span><span class="o">-</span><span class="sx">url(&quot;background-1.jpg&quot;)</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[autopagerizeのような動作をkaminariとransackを使った環境で実装した]]></title>
    <link href="http://blog.n-z.jp/blog/2014-02-25-autopagerize-kaminari-ransack.html"/>
    <updated>2014-02-25T18:58:39+09:00</updated>
    <id>http://blog.n-z.jp/blog/autopagerize-kaminari-ransack</id>
    <content type="html"><![CDATA[<p>autopagerize のような動作をするときに id 重複問題があるので、
<a href="http://qa.atmarkit.co.jp/q/3513">QA@IT で質問</a>
してみたところ、
今のページに表示されている最後の id で対処するしかなさそうだとわかったので、
そういう方針で実装してみました。</p>

<!--more-->


<h2>スクリプト部分</h2>

<p>コア部分は以前に実装したものをそのまま使いました。
i18n 対応などが出来ていませんが、冒頭に書いてある id や class が関連要素になります。</p>

<figure class='code'><figcaption><span>app/assets/javascripts/autonext.js.coffee</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nx">jQuery</span> <span class="nf">-&gt;</span>
</span><span class='line'>  <span class="nv">timerId = </span><span class="kc">null</span>
</span><span class='line'>  <span class="nv">loadingId = </span><span class="s">&#39;#autopager_loading&#39;</span>
</span><span class='line'>  <span class="nv">nextId = </span><span class="s">&#39;#next_for_pager&#39;</span>
</span><span class='line'>  <span class="nv">pageElement = </span><span class="s">&#39;.page_element&#39;</span>
</span><span class='line'>  <span class="nv">lastContent = </span><span class="s">&#39;.page_content:last&#39;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nv">loadNext = </span><span class="nf">-&gt;</span>
</span><span class='line'>    <span class="nv">nextLink = </span><span class="nx">$</span><span class="p">(</span><span class="nx">nextId</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'>    <span class="k">if</span> <span class="nx">nextLink</span>
</span><span class='line'>      <span class="nx">$</span><span class="p">(</span><span class="nx">loadingId</span><span class="p">).</span><span class="nx">show</span><span class="p">()</span>
</span><span class='line'>      <span class="nx">$</span><span class="p">(</span><span class="nx">nextId</span><span class="p">).</span><span class="nx">remove</span><span class="p">()</span>
</span><span class='line'>      <span class="nv">request = </span><span class="nx">$</span><span class="p">.</span><span class="nx">get</span> <span class="nx">nextLink</span><span class="p">.</span><span class="nx">href</span><span class="p">,</span> <span class="nf">(data) -&gt;</span>
</span><span class='line'>        <span class="nx">$</span><span class="p">(</span><span class="nx">loadingId</span><span class="p">).</span><span class="nx">before</span><span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="nx">data</span><span class="p">).</span><span class="nx">find</span><span class="p">(</span><span class="nx">pageElement</span><span class="p">)).</span><span class="nx">hide</span><span class="p">()</span>
</span><span class='line'>        <span class="c1"># 必要なら turbolinks の `page:change` のような DOM 変更通知をする</span>
</span><span class='line'>      <span class="nx">request</span><span class="p">.</span><span class="nx">error</span> <span class="nf">(xhr, status, error) -&gt;</span>
</span><span class='line'>        <span class="k">if</span> <span class="nx">error</span> <span class="o">==</span> <span class="s">&quot;Unauthorized&quot;</span>
</span><span class='line'>          <span class="nx">alert</span><span class="p">(</span><span class="s">&quot;認証の期限切れです。再読み込みしてください。&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="k">else</span>
</span><span class='line'>          <span class="nx">alert</span><span class="p">(</span><span class="s">&quot;何かエラーです。少し待ってから、再読み込みしてください。&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="nx">$</span><span class="p">(</span><span class="nx">loadingId</span><span class="p">).</span><span class="nx">html</span><span class="p">(</span><span class="s">&quot;&lt;a href=&#39;javascript:location.reload()&#39; class=&#39;btn btn-block btn-primary&#39;&gt;再読み込み&lt;/a&gt;&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nv">autoNext = </span><span class="nf">-&gt;</span>
</span><span class='line'>    <span class="nv">content = </span><span class="nx">$</span><span class="p">(</span><span class="nx">lastContent</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="nx">content</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&amp;&amp;</span> <span class="nx">content</span><span class="p">.</span><span class="nx">offset</span><span class="p">().</span><span class="nx">top</span> <span class="o">&lt;</span> <span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">scrollTop</span><span class="p">()</span> <span class="o">+</span> <span class="nx">$</span><span class="p">(</span><span class="nb">window</span><span class="p">).</span><span class="nx">height</span><span class="p">()</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">$</span><span class="p">(</span><span class="nx">loadingId</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="s">&#39;display&#39;</span><span class="p">)</span> <span class="o">is</span> <span class="s">&#39;none&#39;</span>
</span><span class='line'>        <span class="nx">loadNext</span><span class="p">()</span>
</span><span class='line'>    <span class="nv">timerId = </span><span class="kc">null</span>
</span><span class='line'>    <span class="nx">$</span><span class="p">(</span><span class="nb">window</span><span class="p">).</span><span class="nx">on</span> <span class="s">&#39;scroll.autoNext&#39;</span><span class="p">,</span> <span class="nx">autoNextDefer</span>
</span><span class='line'>
</span><span class='line'>  <span class="nv">autoNextDefer = </span><span class="nf">-&gt;</span>
</span><span class='line'>    <span class="nx">$</span><span class="p">(</span><span class="nb">window</span><span class="p">).</span><span class="nx">off</span> <span class="s">&#39;scroll.autoNext&#39;</span>
</span><span class='line'>    <span class="nv">timerId = </span><span class="nx">setTimeout</span> <span class="nx">autoNext</span><span class="p">,</span> <span class="mi">1000</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">$</span><span class="p">(</span><span class="nb">window</span><span class="p">).</span><span class="nx">on</span> <span class="s">&#39;scroll.autoNext&#39;</span><span class="p">,</span> <span class="nx">autoNextDefer</span>
</span></code></pre></td></tr></table></div></figure>


<h2>views</h2>

<p>view は次のような感じにしました。
<code>page_entries_info</code> を <code>.page_element</code> の中にするか、外にするかは悩ましいところです。</p>

<figure class='code'><figcaption><span>app/views/posts/index.html.haml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='haml'><span class='line'><span class="nc">.page_element</span>
</span><span class='line'>  <span class="nt">%small</span><span class="nc">.page-entries-info</span><span class="p">=</span> <span class="n">page_entries_info</span> <span class="vi">@posts</span>
</span><span class='line'>  <span class="p">=</span> <span class="n">render</span> <span class="vi">@posts</span>
</span><span class='line'>  <span class="p">=</span> <span class="n">link_to_auto_next_page_with_ransack</span> <span class="vi">@q</span><span class="p">,</span> <span class="vi">@posts</span><span class="p">,</span> <span class="n">t</span><span class="p">(</span><span class="s1">&#39;views.pagination.next&#39;</span><span class="p">),</span> <span class="ss">class</span><span class="p">:</span> <span class="s2">&quot;btn btn-large btn-block btn-success&quot;</span><span class="p">,</span> <span class="nb">id</span><span class="p">:</span> <span class="s2">&quot;next_for_pager&quot;</span><span class="p">,</span> <span class="ss">params</span><span class="p">:</span> <span class="n">params</span>
</span><span class='line'><span class="nf">#autopager_loading</span>(<span class="na">style=</span><span class="s">&quot;display:none&quot;</span>)
</span><span class='line'>  <span class="p">=</span> <span class="n">fa_icon</span> <span class="s2">&quot;spinner spin&quot;</span>
</span><span class='line'>  <span class="p">=</span> <span class="n">t</span><span class="p">(</span><span class="s2">&quot;loading&quot;</span><span class="p">,</span> <span class="ss">default</span><span class="p">:</span> <span class="s2">&quot;Loading...&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>kaminari</code> の <code>link_to_next_page</code> を使っている時に問題になったのですが、
<code>params</code> をちゃんと渡さないと <code>paginate @posts</code> で生成されるリンクと違って
パラメーター不足になってしまうようです。
そのため自作の <code>link_to_auto_next_page_with_ransack</code> でも渡すようにしています。</p>

<h2>helper</h2>

<p>ここがリンク生成の肝になります。
ソートのキーのうち、今表示されている最後のものを使って、
<code>updated_at desc</code> でソートされているなら、
<code>updated_at_lt</code> で指定する、ということをしています。
仕組みの都合上、同じ値が複数入ると表示されずに抜け落ちてしまうので、
<code>id</code> やタイムスタンプなどのようなカラムに限定する必要がありそうです。</p>

<p>時刻は標準の <code>to_s</code> だと開発環境の一気に入力したデータで問題が起きたので、
<code>strftime</code> を使って <code>%N</code> (ナノ秒) まで入れるようにしました。</p>

<figure class='code'><figcaption><span>app/helpers/link_to_helper.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="k">def</span> <span class="nf">link_to_auto_next_page_with_ransack</span><span class="p">(</span><span class="n">search</span><span class="p">,</span> <span class="n">scope</span><span class="p">,</span> <span class="nb">name</span><span class="p">,</span> <span class="n">options</span> <span class="o">=</span> <span class="p">{},</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="k">if</span> <span class="n">scope</span><span class="o">.</span><span class="n">last_page?</span>
</span><span class='line'>    <span class="n">params</span> <span class="o">=</span> <span class="n">options</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="ss">:params</span><span class="p">)</span> <span class="o">||</span> <span class="p">{}</span>
</span><span class='line'>    <span class="n">sorts</span> <span class="o">=</span> <span class="n">search</span><span class="o">.</span><span class="n">sorts</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">sorts</span><span class="o">.</span><span class="n">empty?</span>
</span><span class='line'>      <span class="k">raise</span> <span class="s2">&quot;You must set sorts to ransack (e.g. `@q.sorts = &#39;updated_at desc&#39; if @q.sorts.empty?`)&quot;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="n">order</span> <span class="o">=</span> <span class="n">sorts</span><span class="o">.</span><span class="n">first</span>
</span><span class='line'>    <span class="n">column</span> <span class="o">=</span> <span class="n">order</span><span class="o">.</span><span class="n">name</span>
</span><span class='line'>    <span class="n">dir</span> <span class="o">=</span> <span class="n">order</span><span class="o">.</span><span class="n">dir</span> <span class="o">==</span> <span class="s2">&quot;desc&quot;</span> <span class="p">?</span> <span class="s2">&quot;lt&quot;</span> <span class="p">:</span> <span class="s2">&quot;gt&quot;</span>
</span><span class='line'>    <span class="n">value</span> <span class="o">=</span> <span class="n">scope</span><span class="o">.</span><span class="n">last</span><span class="o">[</span><span class="n">column</span><span class="o">]</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">value</span><span class="o">.</span><span class="n">respond_to?</span><span class="p">(</span><span class="ss">:strftime</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="n">value</span><span class="o">.</span><span class="n">respond_to?</span><span class="p">(</span><span class="ss">:hour</span><span class="p">)</span>
</span><span class='line'>      <span class="c1"># expect Time, DateTime, ActiveSupport::TimeWithZone</span>
</span><span class='line'>      <span class="c1"># and not Date</span>
</span><span class='line'>      <span class="n">value</span> <span class="o">=</span> <span class="n">value</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s2">&quot;%Y-%m-%d %H:%M:%S.%N %Z&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="n">q</span> <span class="o">=</span> <span class="n">params</span><span class="o">[</span><span class="ss">:q</span><span class="o">]</span> <span class="o">||</span> <span class="p">{}</span>
</span><span class='line'>    <span class="n">q</span> <span class="o">=</span> <span class="n">q</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">#{</span><span class="n">column</span><span class="si">}</span><span class="s2">_</span><span class="si">#{</span><span class="n">dir</span><span class="si">}</span><span class="s2">&quot;</span> <span class="o">=&gt;</span> <span class="n">value</span><span class="p">)</span>
</span><span class='line'>    <span class="n">params</span> <span class="o">=</span> <span class="n">params</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">search</span><span class="o">.</span><span class="n">context</span><span class="o">.</span><span class="n">search_key</span> <span class="o">=&gt;</span> <span class="n">q</span><span class="p">)</span>
</span><span class='line'>    <span class="n">link_to</span> <span class="nb">name</span><span class="p">,</span> <span class="n">params</span><span class="p">,</span> <span class="n">options</span><span class="o">.</span><span class="n">reverse_merge</span><span class="p">(</span><span class="ss">:rel</span> <span class="o">=&gt;</span> <span class="s1">&#39;next&#39;</span><span class="p">),</span> <span class="o">&amp;</span><span class="n">block</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>controller</h2>

<p>コントローラーは <code>kaminari</code> や <code>ransack</code> を普通に使っているだけです。
<code>@posts = Post</code> の行は <code>cancan</code> の <code>load_and_authorize_resource</code> を使っている場合には不要なので、
別の行にしています。</p>

<figure class='code'><figcaption><span>app/controllers/posts_controller.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="k">def</span> <span class="nf">index</span>
</span><span class='line'>    <span class="vi">@posts</span> <span class="o">=</span> <span class="no">Post</span>
</span><span class='line'>    <span class="vi">@q</span> <span class="o">=</span> <span class="vi">@posts</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:q</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@q</span><span class="o">.</span><span class="n">sorts</span> <span class="o">=</span> <span class="s1">&#39;updated_at desc&#39;</span> <span class="k">if</span> <span class="vi">@q</span><span class="o">.</span><span class="n">sorts</span><span class="o">.</span><span class="n">empty?</span>
</span><span class='line'>    <span class="vi">@posts</span> <span class="o">=</span> <span class="vi">@q</span><span class="o">.</span><span class="n">result</span><span class="p">(</span><span class="ss">distinct</span><span class="p">:</span> <span class="kp">true</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@posts</span> <span class="o">=</span> <span class="vi">@posts</span><span class="o">.</span><span class="n">page</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:page</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">per</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>スタイルシート</h2>

<p>読み込み中の部分のスタイルは以下のようにして、画面の最下部の横幅いっぱいに出るようにしています。
エラーの時はこの中身が再読み込みボタンに変わります。
開発環境だと <code>rails server</code> を停止した状態で自動読み込みさせれば、すぐに確認できます。</p>

<figure class='code'><figcaption><span>app/assets/stylesheets/application.css.scss</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nf">#autopager_loading</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">background-color</span><span class="o">:</span> <span class="m">#000</span><span class="p">;</span>
</span><span class='line'>  <span class="k">bottom</span><span class="o">:</span> <span class="m">0px</span><span class="p">;</span>
</span><span class='line'>  <span class="k">color</span><span class="o">:</span> <span class="m">#fff</span><span class="p">;</span>
</span><span class='line'>  <span class="k">font-size</span><span class="o">:</span> <span class="m">12px</span><span class="p">;</span>
</span><span class='line'>  <span class="k">height</span><span class="o">:</span> <span class="m">25px</span><span class="p">;</span>
</span><span class='line'>  <span class="k">left</span><span class="o">:</span> <span class="m">0px</span><span class="p">;</span>
</span><span class='line'>  <span class="k">opacity</span><span class="o">:</span> <span class="m">0</span><span class="o">.</span><span class="m">8</span><span class="p">;</span>
</span><span class='line'>  <span class="k">position</span><span class="o">:</span> <span class="k">fixed</span><span class="p">;</span>
</span><span class='line'>  <span class="k">text-align</span><span class="o">:</span> <span class="k">center</span><span class="p">;</span>
</span><span class='line'>  <span class="k">width</span><span class="o">:</span> <span class="m">100</span><span class="o">%</span><span class="p">;</span>
</span><span class='line'>  <span class="k">z-index</span><span class="o">:</span> <span class="m">1000</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>まとめ</h2>

<p>autopagerize のような自動読み込みを <code>kaminari</code> と <code>ransack</code> を使った rails アプリに組み込んだ実装例を紹介しました。
部品だけで全体を示せていないので、もしかしたら書き忘れている部分もあるかもしれませんが、重要な部分は載せていると思いますので、参考にしてみてください。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第 81 回 関西 Debian 勉強会に参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2014-02-23-kansai-debian-meeting.html"/>
    <updated>2014-02-23T14:02:06+09:00</updated>
    <id>http://blog.n-z.jp/blog/kansai-debian-meeting</id>
    <content type="html"><![CDATA[<p><a href="https://wiki.debian.org/KansaiDebianMeeting/20140223">第 81 回 関西 Debian 勉強会</a>
に参加してきました。</p>

<!--more-->


<h2>もくもくの会</h2>

<p>今回ももくもくの会がありました。</p>

<p>前回のもくもくの会の時に作っていた
<a href="https://github.com/znz/rd2markdown-app">rd2markdown</a>
を使って
<a href="https://bugs.ruby-lang.org/projects/ruby/wiki">ruby-lang.org の Wiki</a>
で RD 記法のままになっていたページの変換を試しつつ、
うまく変換できなかった部分を修正して、
ほぼすべてのページを変換していきました。
最終的には家に帰ってから、
このブログ記事を書く前に残りを変換しました。</p>

<p>成果発表などの時にも変換作業をしていたので、
他の人の話はあまり聞けなかったのですが、
<a href="http://i3wm.org/">http://i3wm.org/</a>
や
<a href="https://github.com/sn0w75/MikuMikuPenguin">https://github.com/sn0w75/MikuMikuPenguin</a>
の話などがありました。</p>

<h2>LT</h2>

<p><a href="http://blog.n-z.jp/blog/2014-02-23-upstart-has-missing-features.html">upstartに不足している機能</a>
の話と
<a href="http://blog.n-z.jp/blog/2014-02-23-boot2docker.html">boot2docker</a>
でインストールした docker 環境でのデモをしました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[upstartに不足している機能]]></title>
    <link href="http://blog.n-z.jp/blog/2014-02-23-upstart-has-missing-features.html"/>
    <updated>2014-02-23T11:15:27+09:00</updated>
    <id>http://blog.n-z.jp/blog/upstart-has-missing-features</id>
    <content type="html"><![CDATA[<p>Ubuntu の標準の init の upstart で機能不足を感じた話です。</p>

<!--more-->


<h2>workaround-upstart-snafu</h2>

<p>2012年6月の頃の Ubuntu で起きた話です。
昔の話でバージョンなどもちゃんとメモしていなかったのですが、
当時サポート対象だったバージョンのどれかです。</p>

<p>現象としては自作の <code>/etc/init/hoge.conf</code> を作成するために
<code>expect</code> stanza を試行錯誤していたら、
設定が間違っていたらしく、
プロセスの終了をちゃんと認識できなくて、
もう存在しないプロセス ID を終了したジョブのプロセス ID として認識したまま
<code>start</code> も <code>stop</code> もきかなくなってしまった、
ということがありました。</p>

<p>ここまでは自分が書いた設定が間違いということで、
別に良いのですが、
その状態を解消する方法が upstart 自体には存在していなくて、
<a href="http://irclogs.ubuntu.com/2011/01/31/%23upstart.html">http://irclogs.ubuntu.com/2011/01/31/%23upstart.html</a>
で紹介されていた
<a href="https://github.com/ion1/workaround-upstart-snafu">workaround-upstart-snafu</a>
を使うしかありませんでした。</p>

<p>このスクリプトは指定したプロセス ID になるまで fork してすぐに終了するのを繰り返して
upstart に該当するプロセス ID のプロセス終了を認識させる、という仕組みのようです。</p>

<p>このような無理矢理な方法ではなく upstart 自体にプロセスがまだ存在しているかどうかチェックし直す機能が存在するべきだと思いました。</p>

<h2>Should-Start</h2>

<p><code>/etc/init.d/</code> に置かれる
<a href="https://wiki.debian.org/LSBInitScripts">LSB の Init スクリプト</a>
には、起動時の順番 (依存関係) を指定するためのヘッダーを書くようになっています。</p>

<p>この指定の中には <code>Should-Start</code> というインストールされていれば先に起動する必要があり、
インストールされていなければ影響しない、ということが出来ます。</p>

<p>たとえば、
デーモンが依存しているデータベースが同じマシンに入っていれば
先に起動している必要があるけれど、
別のマシンのデータベースを使っているかもしれないので、
インストールされていなくても良い、
という用途が想定されているようです。</p>

<p>具体的な例としては
Ubuntu 13.10 の
<code>zabbix-server-pgsql</code> 2.0.6+dfsg-1ubuntu2
の
<code>/etc/init.d/zabbix-server</code>
では</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>### BEGIN INIT INFO
</span><span class='line'># Provides:          zabbix-server
</span><span class='line'># Required-Start:    $remote_fs $network
</span><span class='line'># Required-Stop:     $remote_fs
</span><span class='line'># Default-Start:     2 3 4 5
</span><span class='line'># Default-Stop:      0 1 6
</span><span class='line'># Should-Start:      postgresql
</span><span class='line'># Should-Stop:       postgresql
</span><span class='line'># Short-Description: Start zabbix-server daemon
</span><span class='line'># Description: Start zabbix-server daemon (PostgreSQL)
</span><span class='line'>### END INIT INFO</span></code></pre></td></tr></table></div></figure>


<p>となっていて、
<code>postgresql</code> より後に起動するようになっているのに、</p>

<p><code>/etc/init/zabbix-server.conf</code>
では</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>start on (filesystem and net-device-up IFACE=lo)
</span><span class='line'>stop on runlevel [!2345]</span></code></pre></td></tr></table></div></figure>


<p>となっていて、起動順序の関係が不足しています。</p>

<p>その結果、
<code>zabbix-server</code> の方が <code>postgresql</code> より早く起動してしまって、
データベースに接続できなくて起動に失敗する、
ということが起きることがありました。
(以前の Ubuntu で起きていた現象で Ubuntu 13.10 だと別の現象になっているかもしれないので、
再度検証が必要そうです。)</p>

<p>対策として
<code>/etc/cron.d/local</code>
に</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># zabbix-server may fail to start before postgresql
</span><span class='line'>@reboot root /usr/sbin/service zabbix-server start</span></code></pre></td></tr></table></div></figure>


<p>という設定を置いていて、
<code>cron</code> の <code>@reboot</code> が実行されるタイミングで起動し直すようにしています。</p>

<h2>まとめ</h2>

<p>起動時の処理ということで、
実運用環境では検証しづらく、
問題が起きてもマシンの再起動時に注意していれば良いだけなので、
優先度が低くて、
検証環境を用意してまで調査するという手間をかけるまでは出来ていないのですが、
upstart はいろいろと sysvinit (insserv) に比べて劣化している部分があるようなので、
困ります。</p>

<p>主流が systemd に変わりつつあるという話もあるようなので、
どうなっていくのかわかりませんが、
init は OS の根幹に関わる部分なので、
もっと安定して信頼性のあるものになってほしいと思いました。</p>
]]></content>
  </entry>
  
</feed>
