<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[@znz blog]]></title>
  <link href="http://blog.n-z.jp/atom.xml" rel="self"/>
  <link href="http://blog.n-z.jp/"/>
  <updated>2014-04-10T01:08:56+09:00</updated>
  <id>http://blog.n-z.jp/</id>
  <author>
    <name><![CDATA[Kazuhiro NISHIYAMA]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[CVE-2014-0160 での Cookie 漏洩]]></title>
    <link href="http://blog.n-z.jp/blog/2014-04-09-cve-2014-0160.html"/>
    <updated>2014-04-09T23:55:46+09:00</updated>
    <id>http://blog.n-z.jp/blog/cve-2014-0160</id>
    <content type="html"><![CDATA[<p>影響範囲の一例として
<a href="https://www.mattslifebytes.com/?p=533">Hijacking user sessions with the Heartbleed vulnerability</a>
の実際にどういうデータが抜き取られてしまうのか、という例で
<code>JSESSIONID</code>
が見えているように Cookie が漏洩している可能性があります。</p>

<!--more-->


<h2>考えられる攻撃シナリオ</h2>

<p><a href="http://www.exploit-db.com/exploits/32745/">OpenSSL TLS Heartbeat Extension &ndash; Memory Disclosure</a>
を自分のサーバーに試した時に
<code>mod-spdy-beta</code>
が原因で脆弱性が残ったままになっていて、
Rails アプリの Cookie が見えていました。</p>

<p>そこで考えたのは上記のブログに書いてあるようにセッションハイジャックが可能だということでした。</p>

<p>悪い状況を考えると、
脆弱性の情報が公開されてから対策がされるまでの間に
全世界の Web サーバーに Heartbleed の攻撃を仕掛けておいて、
後でログを調べて、こういう Cookie のような情報があれば
それを使って別途セッションハイジャックなどの別の攻撃をする、
という可能性があります。</p>

<h2>Rails での対処方法案</h2>

<p><code>config/initializers/secret_token.rb</code> の <code>secret_token</code> を再生成して設定し直すという方法が考えられます。
その際、ログインしているユーザーのセッションが無効になったり、
Remember me で覚えさせていても忘れられたりするということが起きるので、
ユーザーへの影響を考えて実施する必要がありそうです。</p>

<p>また、データベースへ保存するデータの暗号化の鍵としても使っていたら、
読めなくなってしまうので、そういう用途にも使っていたら、
別の方法で既存の Cookie を無効にするしかなさそうです。</p>

<h2>secure 属性を付けていても無関係</h2>

<p>クライアントとの通信内容の残骸が漏洩してしまうので、
Cookie に secure 属性を付けていても防げません。</p>

<h2>アプリケーションサーバーが別プロセスでも無関係</h2>

<p>apache+passenger や nginx+php-fpm のようにアプリケーションサーバーとフロントエンドの Web サーバーが別プロセスにわかれていても、
HTTPS 向けに暗号化する前の平文のデータがフロントエンドの Web サーバーに残っていて、そこの情報が漏洩してしまうので、
Cookie のようなクライアントに返す情報は影響を受けて漏洩している可能性があります。</p>

<p>バックエンドのサーバーでしか読み込んでいなくて、フロントエンドには渡していない情報はこの経路では漏洩しません。</p>

<p>例えば、典型的な Rails アプリの構成ではデータベースサーバーへ接続するためのユーザー名やパスワードはクライアントには渡さないので、この経路では漏洩しません。</p>

<h2>フロントエンドサーバーの秘密鍵</h2>

<p>既に情報収集していれば知って可能性が高いと思いますが、
フロントエンドサーバーのプロセスが読み込んでいる情報にあたる SSL/TLS の秘密鍵は漏洩している可能性があります。</p>

<p>きちんとした対処としては
<a href="http://d.hatena.ne.jp/nekoruri/20140408/heartbleed">CVE-2014-0160 OpenSSL Heartbleed 脆弱性まとめ &ndash; めもおきば</a>
にも書いてあるように</p>

<ol>
<li><em>秘密鍵から作り直して</em> 証明書を再発行</li>
<li>過去の証明書を <em>失効</em></li>
</ol>


<p>の両方が必要です。</p>

<h2>余談</h2>

<p>SPDY とか使いたいから HTTPS にしてるだけで HTTP で通信してても良いような内容しか扱ってないサーバーなら (VirtualHost の他のホストも含めてという条件付きで)、放置でも良いのかもしれませんが、少なくとも次の証明書の更新の時には秘密鍵を作り直した方が良いように思います。</p>

<h2>まとめ</h2>

<p>外部から SSL/TLS 接続を受けるプロセスが持っている情報が漏洩している可能性がある、ということで、具体例として Cookie について少し詳しく考えてみました。</p>

<p>簡単に言えば、脆弱性のある状態でクライアントと通信している内容はすべて漏洩している可能性がある、つまり HTTPS で通信していても HTTP と同じような機密性しかなかった可能性がある、と考えるのが良さそうです。</p>

<p>つまりクライアントから送った情報も漏洩の可能性があるので、
Heartbleed 脆弱性が残っているサーバーにはクレジットカード番号などの情報は
送らない方が良い、ということになります。</p>

<p>関連する話なので一緒に書いてしまったので、ちょっと紛らわしいですが、
サーバーの秘密鍵の漏洩の可能性もフロントエンドサーバーの管理者は別途対応する必要があります。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CVE-2014-0160 の OpenSSL の脆弱性対応]]></title>
    <link href="http://blog.n-z.jp/blog/2014-04-08-cve-2014-0160.html"/>
    <updated>2014-04-08T13:22:28+09:00</updated>
    <id>http://blog.n-z.jp/blog/cve-2014-0160</id>
    <content type="html"><![CDATA[<p><a href="http://heartbleed.com/">Heartbleed</a>
によると今回の OpenSSL の脆弱性は影響が大きそうなので、
OpenSSL の更新をして再起動だけでも早めにした方が良さそうです。</p>

<p>再起動が必要なものは Debian なら
<a href="http://blog.n-z.jp/blog/2013-12-06-checkrestart.html">debian-goodiesのcheckrestartで再起動が必要なプロセスを調べる</a>
のがオススメです。
Ubuntu なら libssl の更新は OS 自体を再起動した方が良いと思います。</p>

<p>秘密鍵を再生成した方が良いという話もあるようですが、
そこまでの対処は続報を待ってからでも良いかもしれません。</p>

<!--more-->


<h2><code>mod_spdy</code> にも影響</h2>

<p>(<code>mod_spdy</code> について 2014-04-09 に追記)</p>

<p><a href="https://groups.google.com/forum/#!topic/mod-spdy-discuss/EwCowyS1KTU">mod_spdy</a>
も影響を受けるので、
<code>mod-spdy-beta</code> パッケージの <code>0.9.4.1-r397</code> 以前を入れている場合は最新版 (2014-04-09 リリースの <code>0.9.4.2-r413</code> 以降) に更新する必要があります。</p>

<p><code>mod-spdy-beta</code> に含まれる <code>mod_ssl_with_npn.so</code> は改変した <code>libssl</code> を静的リンクしているようなので、
システム側の OpenSSL が 0.9.8 系などのディストリビューション (wheezy など) でも以下のようになっていて、脆弱性の影響を受けます。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ldd /usr/lib/apache2/modules/mod_ssl.so
</span><span class='line'>        linux-vdso.so.1 =&gt;  (0x00007fff25b9a000)
</span><span class='line'>        libssl.so.1.0.0 =&gt; /usr/lib/x86_64-linux-gnu/libssl.so.1.0.0 (0x00007f6ae2d93000)
</span><span class='line'>        libcrypto.so.1.0.0 =&gt; /usr/lib/x86_64-linux-gnu/libcrypto.so.1.0.0 (0x00007f6ae299c000)
</span><span class='line'>        libpthread.so.0 =&gt; /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007f6ae277f000)
</span><span class='line'>        libc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007f6ae23f4000)
</span><span class='line'>        libdl.so.2 =&gt; /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f6ae21f0000)
</span><span class='line'>        libz.so.1 =&gt; /lib/x86_64-linux-gnu/libz.so.1 (0x00007f6ae1fd8000)
</span><span class='line'>        /lib64/ld-linux-x86-64.so.2 (0x00007f6ae322d000)
</span><span class='line'>$ ldd /usr/lib/apache2/modules/mod_ssl_with_npn.so
</span><span class='line'>        linux-vdso.so.1 =&gt;  (0x00007fff825ff000)
</span><span class='line'>        librt.so.1 =&gt; /lib/x86_64-linux-gnu/librt.so.1 (0x00007f8704d4e000)
</span><span class='line'>        libcrypt.so.1 =&gt; /lib/x86_64-linux-gnu/libcrypt.so.1 (0x00007f8704b17000)
</span><span class='line'>        libpthread.so.0 =&gt; /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007f87048fa000)
</span><span class='line'>        libdl.so.2 =&gt; /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f87046f6000)
</span><span class='line'>        libc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007f870436b000)
</span><span class='line'>        /lib64/ld-linux-x86-64.so.2 (0x00007f8705367000)</span></code></pre></td></tr></table></div></figure>


<h2>影響を受ける OpenSSL のバージョン</h2>

<p>Heartbleed の <code>What versions of the OpenSSL are affected?</code>
によると、影響を受けるのは OpenSSL 1.0.1 から 1.0.1f で、
OpenSSL 1.0.0 系や OpenSSL 0.9.8 系という古いバージョンは
影響がないようです。</p>

<h2>Debian や Ubuntu への影響</h2>

<p>他の OS も含めた情報は
Heartbleed の <code>How about operating systems?</code>
にまとまっているので、
Debian と Ubuntu に付いてもう少し調べてみました。</p>

<p>Heartbleed にも書いてありますが、
<a href="https://www.debian.org/security/2014/dsa-2896">Debian &mdash; Security Information &mdash; DSA-2896-1 openssl</a>
によると Debian は oldstable (squeeze) は影響がなくて、
stable (wheezy) だと影響があるようです。
つまりまだ wheezy に上げていないサーバーは大丈夫でした。</p>

<p><a href="http://www.ubuntu.com/usn/usn-2165-1/">USN-2165-1: OpenSSL vulnerabilities | Ubuntu</a>
によると Ubuntu は</p>

<ul>
<li>Ubuntu 13.10 (saucy)</li>
<li>Ubuntu 12.10 (quantal)</li>
<li>Ubuntu 12.04 LTS (precise)</li>
</ul>


<p>にセキュリティアップデートが出ているようです。
10.04 LTS lucid は openssl が古いので影響がなくて、
13.04 (raring) は
<a href="http://www.ubuntu.com/info/release-end-of-life">サポート終了</a>
しているので、セキュリティアップデートは出ていないようです。
ついでに
<a href="http://distrowatch.com/table.php?distribution=ubuntu">DistroWatch.com: Ubuntu</a>
でもう少し調べてみると 1.0.1 になったのが 12.04 からなので、
11.10 以前は影響がないようです。</p>

<h2>攻撃を受けたかどうかの確認はできない</h2>

<p>Heartbleed に
<code>Can I detect if someone has exploited this against me?</code>
<code>Exploitation of this bug leaves no traces of anything abnormal happening to the logs.</code>
と書いてあって、
「このバグを突かれても何か変なことがあったというログは残らない」
ということのようなので、
普通は攻撃を受けたかどうか確認できないということのようです。</p>

<h2>秘密鍵は再生成するべき</h2>

<p>というわけで、
<a href="https://www.debian.org/security/2014/dsa-2896">DSA-2896</a>
に
<code>to the currently available information, private keys should be considered as compromised and regenerated as soon as possible.</code>
と書いてあるように、
秘密鍵は出来るだけ早く再生成した方が良いようです。</p>

<h2>openssh-server の鍵の再生成</h2>

<p>2014-04-08 追記:
<a href="http://undeadly.org/cgi?action=article&amp;sid=20140408063423">OpenSSH は影響を受けない</a>
ようです。
(2014-04-09 23:55 追記: SSH の通信部分で OpenSSL を使っていないので、直接は影響を受けないというだけで、 PAM で LDAPS を使っている場合などは当然影響を受けます。)</p>

<p>サーバー側では <code>/etc/ssh/ssh_host_*</code> を削除して <code>dpkg-reconfigure openssh-server</code> で再生成するのが良さそうです。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% sudo rm /etc/ssh/ssh_host_*
</span><span class='line'>% sudo dpkg-reconfigure openssh-server
</span><span class='line'>Creating SSH2 RSA key; this may take some time ...
</span><span class='line'>Creating SSH2 DSA key; this may take some time ...
</span><span class='line'>Creating SSH2 ECDSA key; this may take some time ...
</span><span class='line'>ssh stop/waiting
</span><span class='line'>ssh start/running, process 7230
</span><span class='line'>% sudo service ssh restart
</span><span class='line'>ssh stop/waiting
</span><span class='line'>ssh start/running, process 7339</span></code></pre></td></tr></table></div></figure>


<p>クライアント側では、
<code>HashKnownHosts no</code>
を設定していれば
<code>~/.ssh/known_hosts</code>
ファイルを直接編集しても良いのですが、
設定していないと、どの行がどのホストかわからないので、
<code>ssh-keygen -R foo.example.jp</code>
のように削除すると良さそうです。</p>

<p>場合によっては
<code>ssh-keygen -R 192.168.1.2</code>
のように IP アドレス側の削除や
<code>ssh-keygen -R '[foo.example.jp]:3843'</code>
のようにポート番号付きでの指定が必要かもしれません。</p>

<p><code>UserKnownHostsFile</code> で <code>known_hosts</code> ファイルを分割しているときは
<code>ssh-keygen -R foo.example.jp -f ~/.ssh/foo.known_hosts</code> のように
<code>UserKnownHostsFile</code> を指定する必要があります。</p>

<h2>その他のサーバーの鍵の再生成</h2>

<p>apache2 とかの Web サーバーなら
初回の設定と同様に再生成すれば良さそうですが、
証明書の再発行も必要なので、
気軽には出来ないということで、
しばらく様子見中です。</p>

<p>OpenVPN はサーバーの鍵は再生成した方が良さそうですが、
CA まで再生成する必要があるのかどうかがわからないので
様子見中です。</p>

<p>以前の Debian での修正ミスで脆弱な鍵しか生成できなくなっていた問題の修正のときの
<a href="https://www.debian.org/security/key-rollover/">Debian &mdash; 鍵のロールオーバー</a>
が参考になるかもしれませんが、
今回はサーバー外からでも鍵が抜き出せてしまうという問題のようなので、
LAN 内のサーバーなど、そのサーバーにアクセスできる環境に攻撃者が入れる時点で問題がある環境なら、
アップデートを適用して再起動して今後鍵を抜き取られる可能性をなくしてから、
ゆっくり続報を待ってから対処を考えるということでも良いと思います。</p>

<h2>参考リンク</h2>

<p>2014-04-09 参考リンクを追加</p>

<ul>
<li><a href="http://d.hatena.ne.jp/nekoruri/20140408/heartbleed">CVE-2014-0160 OpenSSL Heartbleed 脆弱性まとめ &ndash; めもおきば</a>

<ul>
<li>このリンク先が日本語としては一番情報がまとまっているようです。</li>
</ul>
</li>
<li><a href="http://jvn.jp/vu/JVNVU94401838/">JVNVU#94401838: OpenSSL の heartbeat 拡張に情報漏えいの脆弱性</a>

<ul>
<li>ベンダ情報とか CVSS とか。</li>
</ul>
</li>
<li><a href="http://heartbleed.com/">Heartbleed Bug</a>

<ul>
<li>英語だけど Google Chrome の翻訳機能でもだいたい読めます。</li>
</ul>
</li>
<li><a href="http://www.exploit-db.com/exploits/32745/">OpenSSL TLS Heartbeat Extension &ndash; Memory Disclosure</a>

<ul>
<li>実際に情報が抜き出せるチェックツールで、これをみて他のツールの誤検知ではなく <code>mod_spdy</code> が原因だと気付きました。</li>
</ul>
</li>
<li><a href="https://groups.google.com/forum/#!topic/mod-spdy-discuss/0yAGH8BHfQo">CVE-2014-0160 / heartbleed openssl bug &amp; mod_spdy &ndash; Google グループ</a>

<ul>
<li><code>mod_spdy</code> の対応の話 (英語) です。日本時間の 2014-04-09 02:00 時点ではまだ対応中で修正版のリリースはされていないようです。</li>
</ul>
</li>
<li><a href="https://groups.google.com/forum/#!msg/mod-spdy-discuss/EwCowyS1KTU/uGm4586P_CQJ">New mod_spdy binary bugfix release (v0.9.4.2) &ndash; SECURITY FIX</a>

<ul>
<li>日本時間の 2014-04-09 09:00 時点ではリリースされていました。</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[R と Ruby によるデータ解析入門　読書会　第1回に参加しました]]></title>
    <link href="http://blog.n-z.jp/blog/2014-04-05-amagasakirb.html"/>
    <updated>2014-04-05T22:55:31+09:00</updated>
    <id>http://blog.n-z.jp/blog/amagasakirb</id>
    <content type="html"><![CDATA[<p><a href="http://kokucheese.com/event/index/153995/">4月5日 R と Ruby によるデータ解析入門 読書会 第1回(兵庫県)</a>
に参加しました。
今回はまえがきから3章まででした。</p>

<div style="float:right">
<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=znz-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=4873116155" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>
</div>


<p>次回は5月17日だそうです。</p>

<!--more-->


<h2>会場</h2>

<p>いつもの部屋に戻っていました。
今回は参加者が多くて、最終的には10名になっていました。</p>

<h2>メモ</h2>

<p>以下今回のメモです。</p>

<ul>
<li>「はじめに」の「カラーテレビを見るとカラーの夢を見る」から白黒テレビの時代は白黒の夢だったのかとか、テレビの普及以前はどうだったのかという話</li>
<li>p.2 : 「C 言語はブール型を持たない」から C99 だと <code>_Bool</code> があるという話</li>
<li>p.5 : 脚注の magic comment から書き方の流派の話

<ul>
<li>2.0 からデフォルトエンコーディングは utf-8 になった。</li>
<li>1.9 のデフォルトエンコーディングは us-ascii だった。</li>
</ul>
</li>
<li>p.13 ループ : <code>hungry?</code> と <code>full?</code> の中間の状態はないのか</li>
<li>R で <code>demo('Japanese')</code> とか</li>
<li>shoes の Debian パッケージは wheezy にはあるが sid だとなくなっていた。</li>
<li><code>sd</code> とかから名前の省略の話</li>
<li>p.33 gforge のあたりから rubyforge はもうすぐ終了予定の話

<ul>
<li><a href="https://twitter.com/evanphx/status/399552820380053505">Announced today that we&rsquo;re sunsetting RubyForge. Last day will be May 15th. Begin your data migration now!</a></li>
</ul>
</li>
<li>1オリジンか0オリジンかとか西暦0年の有無の話とか Oracle と PostgreSQL の非互換の話とか</li>
<li>p.39 「最も基礎的なデータ構造であるベクトル」からスカラーはないのかという話</li>
<li>p.40 「二重角括弧は常に 1 つの値を返します」の意味が分かりにくいという話</li>
<li>このあたりで REPL で毎回付いていた <code>[1]</code> はベクトルを表してるっぽいことに気付いた</li>
<li>p.47 <code>rbind</code> は _r_ows bind だった。
<code>help(rbind)</code> で <code>cbind</code> と一緒に説明が出てきた。</li>
<li>p.57 <code>factor</code> の使用例 : 年を連続値ではなく離散値として扱うために使っているらしい。</li>
<li>3章は翻訳独自の追加の章

<ul>
<li>更なる前提知識がないとこれでもまだ難しい</li>
<li>8つの魔法とあるが、それぞれの説明の詳しさが違う</li>
</ul>
</li>
<li>p-value だけとりたい場合とかどうすればいいのかわからない

<ul>
<li><code>t.test()</code> の返り値はオブジェクトっぽいがその属性の取り出し方がわからない</li>
<li><code>help(t.test)</code> でいろいろ情報は出てきた</li>
<li><code>v = t.test(hoge)</code> だと <code>v$p.value</code> とか <code>v["p.value"]</code> とかで取り出せた。</li>
</ul>
</li>
<li><code>help</code> とかの使い方 (調べ方) を説明してほしかったという話</li>
<li>プログラマ (言語オタク?) 向けには今回の読書会の本よりも
<div style="float:right">
<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=znz-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=4873115795" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>
</div>
<a href="http://www.amazon.co.jp/gp/product/4873115795/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4873115795&amp;linkCode=as2&amp;tag=znz-22">アート・オブ・Rプログラミング</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4873115795" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />
がオススメらしい。</li>
</ul>


<h2>懇親会</h2>

<p>花見によさそうな場所がなかったのと、天気が下り坂ということもあり、結局いつものさくら水産での懇親会でした。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第60回 Ruby/Rails勉強会＠関西で正規表現の先読みについてという発表をしました]]></title>
    <link href="http://blog.n-z.jp/blog/2014-03-29-kansaiworkshop060.html"/>
    <updated>2014-03-29T22:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/kansaiworkshop060</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/rubykansai/workshops/wiki/Kansaiworkshop060">第50回 Ruby/Rails勉強会＠関西</a> に参加して、「正規表現の先読みについて」という発表をしてきました。</p>

<!--more-->


<h2>発表資料</h2>

<ul>
<li><a href="https://github.com/znz/regexp-201403">https://github.com/znz/regexp-201403</a></li>
<li><a href="http://slide.rabbit-shocker.org/authors/znz/regexp-201403/">http://slide.rabbit-shocker.org/authors/znz/regexp-201403/</a></li>
<li><a href="https://speakerdeck.com/znz/zheng-gui-biao-xian-falsexian-du-minituite">https://speakerdeck.com/znz/zheng-gui-biao-xian-falsexian-du-minituite</a></li>
<li><a href="http://www.slideshare.net/znzjp/regexp-201403">http://www.slideshare.net/znzjp/regexp-201403</a></li>
</ul>


<h2>デモアプリ</h2>

<p>デモに使った Web アプリのソースは
<a href="https://gist.github.com/znz/9835956#file-regexp-201403-rb">https://gist.github.com/znz/9835956#file-regexp-201403-rb</a>
で公開しています。</p>

<p>heroku にも deploy したので、
<a href="http://regexp-201403.herokuapp.com/">http://regexp-201403.herokuapp.com/</a>
で試せます。</p>

<h3>制限事項</h3>

<p>発表で見せる範囲しかちゃんと作っていないので、
変なことをすると変になるのはそういうものです。</p>

<p>対応している正規表現も最初に例として並んでいるもので使っているようなものしか対応していません。</p>

<h2>発表内容</h2>

<p>デモを先に作って後で発表資料を作ったので、デモの方がメインで資料は後付けという感じです。</p>

<h2>KPT</h2>

<ul>
<li>Keep

<ul>
<li>ちゃんと発表できた。</li>
<li>直前になってしまったけれど、発表資料もちゃんと作成できた。</li>
</ul>
</li>
<li>Problem

<ul>
<li>準備の時間があまり取れなかった。</li>
<li>会場の後ろの方でちゃんと見えていたのかとか、聞こえていたのかとかが確認できなかった。</li>
<li>発表資料の公開が遅くなった。(4月3日)</li>
</ul>
</li>
<li>Try

<ul>
<li>中継内容の事前確認をしておきたい。録画ありかどうかとか。</li>
<li>今度こそ rabbiter を使いたい。</li>
</ul>
</li>
</ul>


<h2>他の発表の感想とか</h2>

<p>RSpec 3 対応のライブコーディングは事前にかなりちゃんと準備をしてきた感じがして、
内容も参考になって非常に良かったです。</p>

<p>他はこういうことをやっています、というサービスの紹介っぽい感じが多くて、
プログラミングの話は少なかったので、内容は面白いけど
Ruby/Rails勉強会＠関西向きではないかも、と感じるものもありました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第 9 回 RubyMotion もくもく会 in Osaka に参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2014-03-19-rubymotion-mokumoku-osaka.html"/>
    <updated>2014-03-19T19:32:08+09:00</updated>
    <id>http://blog.n-z.jp/blog/rubymotion-mokumoku-osaka</id>
    <content type="html"><![CDATA[<p>第 1 回から第 8 回にも参加した RubyMotion もくもく会 in Osaka の
<a href="http://connpass.com/event/5276/">第 9 回 RubyMotion もくもく会 in Osaka</a>
に参加してきました。</p>

<p>次回の
<a href="http://connpass.com/event/5674/">第 10 回 RubyMotion もくもく会 in Osaka</a>
は 4/23(水) になりました。</p>

<!--more-->


<h2>メモ</h2>

<ul>
<li><a href="https://github.com/shin1x1/vagrantx/issues/1">VagrantX のロゴ</a></li>
<li><a href="http://www.jetbrains.com/ruby/">RubyMine</a></li>
<li><a href="http://testflightapp.com/">TestFlight</a> の代わりに今は <a href="https://deploygate.com/">DeployGate</a> が良いという話</li>
</ul>


<h2>やったこと</h2>

<p>RubyMine をインストールして使い始めてみました。
試用期間は次回のもくもく会には切れているので、
それまでに他でも使っておかないとあっという間に試用期間が終わってしまいそうです。</p>

<p><a href="http://stackoverflow.com/questions/9289613/handlegeturlevent-doesnt-get-called">イベントハンドラの設定を init でやれば良い</a>というような話があったので、
init メソッドを定義してみたところ、呼ばれていなかったので、
initialize にしてみたら、
呼ばれていることは確認できても、
やっぱり起動時の URL は受け取れないままでした。</p>

<p>内部的な変更としては
REPL で確認した時に
<code>KeyDirectObject</code> が存在しなかったので、
<code>keyDirectObject = '----'.unpack('L')[0]</code>
のように作っていたのを
<code>KeyDirectObject</code>
を使うように変えました。</p>

<p>以前のもくもく会の時に気付いたように
<code>rake</code>
でのコンパイル時に参照していない定数は REPL でも存在しないというだけでした。</p>

<p>他にはいろいろ調べている時に
<a href="http://vivacocoa.jp/objective-c3e/chapter5c.html">ウィンドウのクローズとアプリケーションの終了を同期させる</a>
というのを知ったので、
以下のメソッド定義を追加して
window を閉じた時に終了するようにしました。
これを追加するまでは閉じたら開き直す手段がなくて何も出来なくなっていました。</p>

<figure class='code'><figcaption><span>app/app_delegate.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="k">def</span> <span class="nf">applicationShouldTerminateAfterLastWindowClosed</span><span class="p">(</span><span class="n">application</span><span class="p">)</span>
</span><span class='line'>    <span class="kp">true</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[bootstrap 2.3.2 から bootstrap 3.1.1 への移行]]></title>
    <link href="http://blog.n-z.jp/blog/2014-03-14-bootstrap-2-to-3.html"/>
    <updated>2014-03-14T23:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/bootstrap-2-to-3</id>
    <content type="html"><![CDATA[<p>Rails 3.2.17 を使っている rails アプリで
bootstrap 2.3.2 から bootstrap 3.1.1 に移行している途中なのですが、
どういうところに対処が必要だったのか、
メモをまとめてみました。</p>

<!--more-->


<h2>Gemfile 変更</h2>

<p>bootstrap 2 系のときは twitter-bootstrap-rails gem を使っていたのですが、
bootstrap 3 系対応がリリースされていないこともあって、
bootstrap 側から公式にリリースされている bootstrap-sass gem に移行しました。</p>

<p>bootstrap-sass は rails_admin gem で使われていて、
バージョンが rails_admin によって制限されてしまうので、
公式の less の gem があれば良かったのですが、
見つけられなかったので、
自分しか使っていない rails_admin を rails 4 に上げるまでの間、
一時的に rails_admin を外して、
新しい bootstrap-sass を rails 3.2.17 と一緒に使いました。</p>

<figure class='code'><figcaption><span>Gemfile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;less-rails&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;twitter-bootstrap-rails&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>を <a href="https://github.com/twbs/bootstrap-sass">https://github.com/twbs/bootstrap-sass</a> に書いてあるバージョン指定付きで</p>

<figure class='code'><figcaption><span>Gemfile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;sass-rails&#39;</span><span class="p">,</span> <span class="s1">&#39;&gt;= 3.2&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;bootstrap-sass&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 3.1.1&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>に書き換えて、 <code>bundle update</code> で反映しました。</p>

<h2>twitter-bootstrap-rails のヘルパーメソッド削除</h2>

<p>twitter-bootstrap-rails で定義されているヘルパーメソッドを使っていたら、
削除するなり代替メソッドを定義して置き換えるなり、
一時的にコメントアウトするなりしてエラーにならないようにしておきます。</p>

<p>今回は <code>glyph</code> と <code>add_breadcrumb</code> がひっかかりました。</p>

<h2>bootstrap_and_overrides.css.less 削除</h2>

<p>app/assets/stylesheets/bootstrap_and_overrides.css.less を削除して、
app/assets/stylesheets/app.css.scss のようなファイルに移行しました。</p>

<figure class='code'><figcaption><span>app.css.scss</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="k">@import</span> <span class="s2">&quot;bootstrap&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="o">//</span> <span class="err">その他の</span> <span class="nt">bootstrap_and_overrides</span><span class="nc">.css.less</span> <span class="err">から移行した内容</span>
</span></code></pre></td></tr></table></div></figure>


<h2>キャッシュ削除</h2>

<p>less を消したはずなのにエラーにならなくておかしいと思っていたら、
キャッシュの影響だったので、
development 環境でもキャッシュを有効にしている場合は削除します。</p>

<p><code>bundle exec rake tmp:clear</code> で消したり、
<code>rake</code> 経由だと遅いと思ったら
<code>rm -rf tmp/cache</code> のようにばっさり削除したりすると良いと思います。</p>

<h2>.navbar</h2>

<p>bootstrap 2 を使っていた頃は
<code>.navbar</code> と <code>.nav</code> の違いがよくわかっていなかったのですが、
<code>.navbar</code> は上 (または下) のバーのことで、
<code>.nav</code> はその中にある <code>ul</code> のリンクのことでした。</p>

<p><code>.nav</code> は他にも <code>.nav-tabs</code> のような使い方もするというのを先に知っていれば
迷わなかったと思います。</p>

<p><a href="http://getbootstrap.com/components/#nav">http://getbootstrap.com/components/#nav</a>
(古い方: <a href="http://getbootstrap.com/2.3.2/components.html#navs">http://getbootstrap.com/2.3.2/components.html#navs</a> )
の説明では navbar の上なのですが、
サイトの作成順として画面の上から作っていっていたので、
迷ってしまっていたようです。</p>

<p><code>.navbar</code> の中の <code>.nav</code> は <code>.navbar-nav</code> に変わっている、
<code>.navbar-inner</code> は <code>.container</code> か <code>.container-fluid</code> に置き換えなど、
変更点が多いので、
<code>.navbar</code> の中身は全面的に見直すのが良さそうです。</p>

<h2>.brand から .navbar-brand</h2>

<p><code>.brand</code> から <code>.navbar-brand</code> に変わっていました。</p>

<p>中に画像を入れているとずれてしまうので、
scss に以下のように書いて調整しました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nc">.navbar-brand</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">padding-top</span><span class="o">:</span> <span class="m">8px</span><span class="p">;</span>
</span><span class='line'>  <span class="n">img</span> <span class="err">{</span>
</span><span class='line'>    <span class="k">height</span><span class="o">:</span> <span class="m">34px</span><span class="p">;</span>
</span><span class='line'>    <span class="k">width</span><span class="o">:</span> <span class="m">34px</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="err">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>8 + 34 + 8 ということで高さ 50px の <code>.navbar</code> の真ん中になることを期待しています。</p>

<h2>.container (固定幅) か .container-fluid (横幅いっぱい)</h2>

<p>grid system の配置を使うなら <code>.row</code> は <code>.container</code> か <code>.container-fluid</code> の中に置く必要があります。</p>

<p>違いは実際に window の横幅を変えてみればわかるのですが、
<code>.container</code> だと
<a href="http://getbootstrap.com/css/#grid">http://getbootstrap.com/css/#grid</a>
のように 768px 992px 1200px のところで急に配置が変わって、
その間は左右の余白が増減するだけのようです。</p>

<p><code>.container-fluid</code> だと普通のサイトと同じように出来るだけ横幅いっぱいになるように中身の横幅が変わります。</p>

<p>bootstrap 2 ではレスポンシブにしたいときは <code>.container-fluid</code> で固定幅の時は <code>.container</code> だったので、
<code>.container-fluid</code> しか使っていなかったのですが、
今はレスポンシブな中で使い分けが出来るようになっているようです。</p>

<p><a href="http://getbootstrap.com/examples/navbar-fixed-top/">http://getbootstrap.com/examples/navbar-fixed-top/</a>
の例で <code>Project name</code> が左端によっていないのも <code>.container</code> を使っているからです。
ブラウザーのデベロッパーツールで <code>.container-fluid</code> に変えて横幅を変えてみれば
違いがわかると思います。</p>

<h2><code>.row-fluid .span*</code> から <code>.row .col-xs-*</code></h2>

<p><code>.row</code> と <code>.row-fluid</code> の区別はなくなって、
<code>.row</code> に統一されています。</p>

<p><code>.span*</code> の置き換えは <code>.col-md-*</code> と説明されていることが多いようですが、
<code>.col-md-</code> が <code>@media (min-width: 992px)</code> になっているなど、
小さい画面サイズ用のスタイルを大きい画面用のスタイルで上書きするようになっているので、
画面サイズに関わらず同じ分割をしたいのなら <code>.col-xs-</code> だけ指定すれば良さそうです。</p>

<h2>btn</h2>

<p><code>btn</code> だけでは色や枠 (border) が変わらなくなったので、
<code>btn-default</code> を足す必要がありました。</p>

<p>サイズ変更の <code>btn-mini</code> などがなくなって <code>btn-xs</code> などに変更する必要がありました。</p>

<h2>list-unstyled</h2>

<p><code>ul.unstyled</code> は <code>ul.list-unstyled</code> に変更する必要がありました。</p>

<h2>font-awesome-sass</h2>

<p>アイコンは glyphicons ではなく font-awesome を使っていたので、
<a href="https://github.com/FortAwesome/font-awesome-sass">font-awesome-sass</a>
に乗り換えました。</p>

<p>mixin や variables などがなければ関係なさそうですが、
<a href="https://github.com/twbs/bootstrap-sass#usage">bootstrap-sass の Usage</a>
では <code>//= require</code> より <code>@import</code> が推奨されていたので、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="k">@import</span> <span class="s2">&quot;bootstrap&quot;</span><span class="p">;</span>
</span><span class='line'><span class="k">@import</span> <span class="s2">&quot;font-awesome&quot;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>のように <code>@import</code> にしてみました。</p>

<p><code>&lt;i class="icon-sort"&gt;&lt;/i&gt;</code> が
<code>&lt;i class="fa fa-sort"&gt;&lt;/i&gt;</code> に変わるような感じで、
<code>icon-</code> を <code>fa-</code> に置き換えるだけではなく、
<code>fa</code> の追加が必要でした。</p>

<p><code>glyph</code> ヘルパーメソッドを使っていた場合は、
<code>icon</code> ヘルパーメソッドに書き換えると良いのですが、
複数引数の扱いが違うのと、
<code>_</code> を <code>-</code> に置き換える処理がなくなっているのに注意が必要です。</p>

<p>たとえば <code>glyph(:sort_up)</code> は <code>icon('sort-up')</code> のように書き換えました。</p>

<p><code>glyph(:lock, :white)</code> のような複数指定には対応していないようなので、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='haml'><span class='line'><span class="p">=</span> <span class="n">icon</span><span class="p">(</span><span class="s1">&#39;spinner fa-spin&#39;</span><span class="o">.</span><span class="n">freeze</span><span class="p">)</span>
</span><span class='line'><span class="cp">-# or</span>
</span><span class='line'><span class="p">=</span> <span class="n">icon</span><span class="p">(</span><span class="ss">:spinner</span><span class="p">,</span> <span class="kp">nil</span><span class="p">,</span> <span class="ss">class</span><span class="p">:</span> <span class="s1">&#39;fa-spin&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>のように 2 個目以降は無理矢理埋め込むしかなさそうです。</p>

<p>それぞれのヘルパーメソッドのソースは以下のようになっています。</p>

<ul>
<li><a href="https://github.com/seyhunak/twitter-bootstrap-rails/blob/40afc477f6a3813ef82cf5821602c9cf2422efc2/app/helpers/glyph_helper.rb">glyph</a></li>
<li><a href="https://github.com/FortAwesome/font-awesome-sass/blob/23ca05e75e85ec84afecca9f62e7f01d1fb9628b/lib/font_awesome/sass/rails/helpers.rb">icon</a></li>
</ul>


<p><code>icon</code> は第2引数に文字列を指定すると間にスペースを入れてくれるので、
今までは</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nt">i</span><span class="o">[</span><span class="nt">class</span><span class="o">^=</span><span class="s2">&quot;icon-&quot;</span><span class="o">]</span><span class="nd">:after</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">content</span><span class="o">:</span> <span class="s2">&quot; &quot;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>のようにスタイルシートで空白を足していたのですが、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">icon</span><span class="p">(</span><span class="ss">:pencil</span><span class="p">,</span> <span class="n">t</span><span class="p">(</span><span class="s1">&#39;.edit&#39;</span><span class="p">,</span> <span class="ss">default</span><span class="p">:</span> <span class="ss">:&#39;helpers.links.edit&#39;</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>


<p>のように使うのも良さそうです。</p>

<p>今回は書き換えの手間を減らすため、以下のように今までと同じようにスタイルシートで空白を入れるようにしました。
何のスタイルが影響しているのか調べていないのですが、半角スペースだとうまくいかなかったので、 NBSP を直接埋め込みました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nt">i</span><span class="nc">.fa</span><span class="nd">:after</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">content</span><span class="o">:</span> <span class="s2">&quot; &quot;</span><span class="p">;</span> <span class="o">//</span> <span class="n">nbsp</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>いくつかのアイコンの名前は変更が必要でした。
使っていて影響があったのは以下のアイコンでした。</p>

<ul>
<li>変更前 変更後</li>
<li>comment-alt comment-o</li>
<li>folder_close folder</li>
<li>picture picture-o</li>
<li>remove times</li>
<li>signin sign-in</li>
<li>signout sign-out</li>
<li>star-empty star-o</li>
<li>trash trash-o</li>
</ul>


<h2>pagination</h2>

<p>kaminari を使っているので、
<code>app/views/kaminari/_paginator.html.*</code>
の
<code>nav.pagination ul</code>
という構造になっている部分を
<code>ul.pagination</code>
に書き換えるだけでした。</p>

<h2>label</h2>

<p><code>btn</code> と同様に <code>label</code> 単独ではなく <code>label-default</code> と組み合わせるようになりました。</p>

<p>選択されているものに <code>label-inverse</code> を使っていたのになくなってしまったので、
<code>label-primary</code> に変えました。</p>

<p>意味的には <code>.nav</code> に変えた方が良さそうなので、
一通り一時的な対処をした後にちゃんと変更しようと思っています。</p>

<h2>muted</h2>

<p><code>.muted</code> は <code>.text-muted</code> に変更しました。</p>

<h2>参考サイト: Bootstrap3移行ガイド</h2>

<p>基本的に本家のドキュメントを参照していたのですが、
ここまで変更してから 2 から 3 への移行のドキュメントを探して、
<a href="http://bootstrap.s1.adexd.net/">Bootstrap3移行ガイド</a>
をみつけて見てみたのですが、全体としては非常に参考になるのですが、
所々気になる点がありました。
連絡先が見つけられなかったので、ここにメモしておきます。</p>

<p><a href="http://bootstrap.s1.adexd.net/css.php#grid">グリッドシステム（Grid system）</a>
の【Bootstrap2.xとの変更箇所】の説明で <code>.row</code> と使い分けると書いているのは
間違いだと思います。</p>

<p>スクリーンリーダー用のクラスを
<a href="http://bootstrap.s1.adexd.net/css.php#screen-reader">すべての要素の表示を隠す</a>
と説明しているなど、たまに間違いがあるようです。</p>

<h2>現状まとめ</h2>

<p>layouts といくつかのコントローラーに対応する views を変更すれば
ある程度自分のアプリで使っているものは網羅できるので、
そこからは移行に必要な変更点はわかってきて速くなっていく感じでした。</p>

<p>先日書いた haml から slim への移行も同時にやっていて、
views 全体を見直す良い機会になっています。</p>

<p>一部で jquery-ui を使っていて、
機能的には問題ないのですが、
見た目が bootstrap 3 となじまないので、
後で対処が必要そうでした。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[hamlからslimへの移行でひっかかったこと]]></title>
    <link href="http://blog.n-z.jp/blog/2014-03-11-haml-to-slim.html"/>
    <updated>2014-03-11T22:39:11+09:00</updated>
    <id>http://blog.n-z.jp/blog/haml-to-slim</id>
    <content type="html"><![CDATA[<p>haml より slim の方が速いらしいという話を良く見かけるので、
haml から少しずつ slim に移行しようとして、
haml2slim で変換してみたらひっかかりまくりました。</p>

<!--more-->


<h2>インデントがない</h2>

<p>haml は生成される HTML がインデントされていてみやすいのですが、
slim は不要なスペースは入れずにコンパクトな HTML が生成されるようで、
単純に比較できなくて困りましたが、
<a href="https://github.com/slim-template/slim#default-options">https://github.com/slim-template/slim#default-options</a>
で設定できるようだったので、以下のように設定しました。</p>

<figure class='code'><figcaption><span>config/initializers/slim.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">if</span> <span class="no">Rails</span><span class="o">.</span><span class="n">env</span><span class="o">.</span><span class="n">development?</span>
</span><span class='line'>  <span class="ss">Slim</span><span class="p">:</span><span class="ss">:Engine</span><span class="o">.</span><span class="n">set_default_options</span> <span class="ss">pretty</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>1.9 hash style</h2>

<p><a href="https://github.com/slim-template/haml2slim/pull/23">https://github.com/slim-template/haml2slim/pull/23</a>
に pull request がでているように
haml で属性を <code>{foo: bar}</code> のように書く形式には対応していないようです。</p>

<h2>string interpolation がおかしい</h2>

<p><a href="https://github.com/slim-template/haml2slim/issues/7">https://github.com/slim-template/haml2slim/issues/7</a>
などで報告されているように <code>#{ ... }</code> という書き方の変換で問題があるようです。
<code>%tag(foo="#{bar}")</code> が <code>tag(foo="# bar ")</code> になっていて気づきました。</p>

<h2>HTML コメントの中でタグにならない</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='haml'><span class='line'><span class="c">/</span><span class="cs">[if lt IE 9]</span><span class="c"></span>
</span><span class='line'>  <span class="nt">%script</span><span class="p">{</span><span class="ss">src</span><span class="p">:</span> <span class="n">url_for</span><span class="p">(</span><span class="n">html5shiv</span><span class="p">)}</span>
</span></code></pre></td></tr></table></div></figure>


<p>のように書いていたのが</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>/![if lt IE 9]
</span><span class='line'>  script src: url_for(html5shiv)
</span></code></pre></td></tr></table></div></figure>


<p>のように変換されてさっぱりダメだったので、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>/[if lt IE 9]
</span><span class='line'>  script(src=&quot;#{url_for(html5shiv)}&quot;)
</span></code></pre></td></tr></table></div></figure>


<p>または</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>/[if lt IE 9]
</span><span class='line'>  script(src=url_for(html5shiv))
</span></code></pre></td></tr></table></div></figure>


<p>のように書き換えました。
HTML コメント <code>/!</code> の中だとタグが使えない (そのまま文字列としてコメントの中に入る) ようなので、
IE コンディショナルコメント <code>/[...]</code> を使う必要があるようです。</p>

<h2>エラーメッセージがわかりにくい</h2>

<p>書き換え途中で、属性値をくくる <code>""</code> を忘れると
エラーメッセージが
<code>syntax error, unexpected ';'</code>
としかでないので原因がわかりにくくて困りました。</p>

<p>他のところでも ruby のエラーメッセージそのままなので、
閉じ忘れ系は原因の行と離れたところでエラーになって、
行番号もあまり当てにならなくて不便です。</p>

<h2>真偽値属性の属性値が省略できない</h2>

<p>haml だと <code>%div(data-pjax-container)</code> で <code>&lt;div data-pjax-container&gt;</code> に変換できるのに、
slim だと <code>div(data-pjax-container)</code> が <code>&lt;div data-pjax-container=""&gt;</code> になってしまって、
<code>=""</code> が余計です。</p>

<p><a href="https://github.com/slim-template/slim/issues/480">Render boolean attributes without value in html5</a>
によると
<code>:format</code> を <code>:html</code> にすれば良いということで</p>

<figure class='code'><figcaption><span>config/initializers/slim.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">Slim</span><span class="p">:</span><span class="ss">:Engine</span><span class="o">.</span><span class="n">set_default_options</span> <span class="nb">format</span><span class="p">:</span> <span class="ss">:html</span>
</span></code></pre></td></tr></table></div></figure>


<p>と設定してみても slim 2.0.2 だと変化がありませんでした。</p>

<p>まだリリースされていないバージョンを使う必要があるようで、
<code>Gemfile</code> で <code>gem 'slim', github: 'slim-template/slim'</code> と指定して
試そうとしたのですが、
rails 3.2.17 との組み合わせは tilt の要求バージョンの解決が
出来なくて使えませんでした。</p>

<p>実験のため slim 専用の Gemfile を用意して以下のように試したところ、
slim と temple の両方をまだリリースされていないバージョンにすると
使えることが確認できました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">%</span> mkdir /tmp/slim-test
</span><span class='line'><span class="gp">%</span> <span class="nb">cd</span> /tmp/slim-test
</span><span class='line'><span class="gp">%</span> bundle init
</span><span class='line'><span class="gp">%</span> <span class="nb">echo</span> <span class="s1">&#39;gem &quot;slim&quot;, github: &quot;slim-template/slim&quot;&#39;</span> &gt;&gt; Gemfile
</span><span class='line'><span class="gp">%</span> <span class="nb">echo</span> <span class="s1">&#39;gem &quot;temple&quot;, github: &quot;judofyr/temple&quot;&#39;</span> &gt;&gt; Gemfile
</span><span class='line'><span class="gp">%</span> bundle
</span><span class='line'><span class="gp">%</span> <span class="nb">echo</span> <span class="s1">&#39;div(ng-app)&#39;</span> | bundle <span class="nb">exec </span>slimrb
</span><span class='line'><span class="go">&lt;div ng-app=&quot;&quot;&gt;&lt;/div&gt;</span>
</span><span class='line'><span class="gp">%</span> <span class="nb">echo</span> <span class="s1">&#39;div(ng-app)&#39;</span> | bundle <span class="nb">exec </span>slimrb -o <span class="nv">format</span><span class="o">=</span>:html
</span><span class='line'><span class="go">&lt;div ng-app&gt;&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>今のところ、 <code>rack-pjax</code> の使用は止めていて、
 <code>=""</code> がつく挙動で直接困ることはなさそうなので、
この問題は保留することにしました。</p>

<h2>javascript や css の埋め込み</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='haml'><span class='line'><span class="nd">:javascript</span>
</span><span class='line'>  <span class="nd">window.current_user_id = </span><span class="si">#{</span><span class="n">current_user</span><span class="o">.</span><span class="n">id</span><span class="o">.</span><span class="n">to_i</span><span class="si">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>のように書いていたら、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>javascript:
</span><span class='line'>  | window.current_user_id = #{current_user.id.to_i}
</span></code></pre></td></tr></table></div></figure>


<p>と変換されて <code>|</code> がそのまま <code>script</code> の中身に付いてしまったので、
削除しました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>javascript:
</span><span class='line'>  window.current_user_id = #{current_user.id.to_i}
</span></code></pre></td></tr></table></div></figure>


<p><code>:css</code> から <code>css:</code> の変換でも同様でした。
CSS の場合は行頭が記号だと <code>|</code> がついていないこともありました。</p>

<h2>空白の有無の問題</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='haml'><span class='line'>        <span class="p">=</span> <span class="n">link_to</span> <span class="n">home_path</span><span class="p">,</span> <span class="ss">class</span><span class="p">:</span> <span class="s1">&#39;brand&#39;</span> <span class="k">do</span>
</span><span class='line'>          <span class="p">=</span> <span class="n">image_tag</span><span class="p">(</span><span class="s2">&quot;brand.png&quot;</span><span class="p">,</span> <span class="ss">alt</span><span class="p">:</span> <span class="s2">&quot;&quot;</span><span class="p">,</span> <span class="ss">size</span><span class="p">:</span> <span class="s2">&quot;35x35&quot;</span><span class="p">)</span>
</span><span class='line'>          <span class="p">=</span> <span class="n">base_title</span>
</span></code></pre></td></tr></table></div></figure>


<p>がそのまま slim になっていて、基本的には問題なかったのですが、
haml と違って slim だとタグとタイトルの間に空白が入らなくなってしまって、
見た目が変わってしまっていたので、
<code>'</code> だけの行を追加して空白が入るようにしました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>        = link_to home_path, class: &#39;brand&#39; do
</span><span class='line'>          = image_tag(&quot;brand.png&quot;, alt: &quot;&quot;, size: &quot;35x35&quot;)
</span><span class='line'>          &#39;
</span><span class='line'>          = base_title
</span></code></pre></td></tr></table></div></figure>


<h2>end が抜けるバグで SyntaxError</h2>

<p><code>syntax error, unexpected keyword_ensure, expecting keyword_end</code>
になるので原因を調べてみたところ、
インデントの中の最初がコメントだと、
そのブロックの <code>end</code> が抜けてしまうようです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">%</span> <span class="nb">echo</span> <span class="s1">$&#39;- if true\n  / comment&#39;</span> | bundle <span class="nb">exec </span>slimrb -e
</span><span class='line'><span class="go">&lt;% if true</span>
</span><span class='line'>
</span><span class='line'><span class="go"> %&gt;</span>
</span><span class='line'><span class="gp">%</span> <span class="nb">echo</span> <span class="s1">$&#39;- if true\n  |&#39;</span> | bundle <span class="nb">exec </span>slimrb -e
</span><span class='line'><span class="go">&lt;% if true</span>
</span><span class='line'>
</span><span class='line'><span class="go">end %&gt;</span>
</span><span class='line'><span class="gp">%</span> <span class="nb">echo</span> <span class="s1">$&#39;- articles.each do |a|\n  / comment&#39;</span> | bundle <span class="nb">exec </span>slimrb -e
</span><span class='line'><span class="go">&lt;% articles.each do |a|</span>
</span><span class='line'>
</span><span class='line'><span class="go"> %&gt;</span>
</span><span class='line'><span class="gp">%</span> <span class="nb">echo</span> <span class="s1">$&#39;- articles.each do |a|\n  | text&#39;</span> | bundle <span class="nb">exec </span>slimrb -e
</span><span class='line'><span class="go">&lt;% articles.each do |a|</span>
</span><span class='line'><span class="go"> %&gt;text&lt;%</span>
</span><span class='line'><span class="gp">%</span>&gt;&lt;% end %&gt;
</span><span class='line'><span class="gp">%</span> <span class="nb">echo</span> <span class="s1">$&#39;- articles.each do |a|\n  / comment\n/ more comment&#39;</span> | bundle <span class="nb">exec </span>slimrb -e
</span><span class='line'><span class="go">&lt;% articles.each do |a|</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="go"> %&gt;</span>
</span><span class='line'><span class="gp">%</span> <span class="nb">echo</span> <span class="s1">$&#39;- articles.each do |a|\n  / comment\n| text\n/ more comment&#39;</span> | bundle <span class="nb">exec </span>slimrb -e
</span><span class='line'><span class="go">&lt;% articles.each do |a|</span>
</span><span class='line'>
</span><span class='line'><span class="go"> %&gt;text&lt;%</span>
</span><span class='line'><span class="gp">%</span>&gt;&lt;%
</span><span class='line'><span class="gp">%</span>&gt;
</span><span class='line'><span class="gp">%</span> <span class="nb">echo</span> <span class="s1">$&#39;- articles.each do |a|\n  / comment\n| text\n&#39;</span> | bundle <span class="nb">exec </span>slimrb -e
</span><span class='line'><span class="go">&lt;% articles.each do |a|</span>
</span><span class='line'>
</span><span class='line'><span class="go"> %&gt;text&lt;%</span>
</span><span class='line'><span class="gp">%</span>&gt;
</span></code></pre></td></tr></table></div></figure>


<p>この件は <a href="https://github.com/slim-template/slim/issues/485">https://github.com/slim-template/slim/issues/485</a> で報告してみました。</p>

<h2>ファイル名の指定が面倒</h2>

<p>これは slim や haml2slim の問題ではないのですが、
zsh で久しぶりに compctl を使って</p>

<pre><code>compctl -g '*.haml' + -g '*(-/)' haml2slim
</code></pre>

<p>と設定しましたが、ちゃんと compsys を使った方が良いと思い直して、</p>

<pre><code>compdef '_files -g "*.haml"' haml2slim
</code></pre>

<p>と設定しました。</p>

<h2>感想</h2>

<p>シンプルとか入力が楽とかいう主観的なものは個人的には同意できなくて利点とは思えないので、
速いという客観的な理由で slim への移行をしているのですが、
haml2slim の出来が悪かったり、
空白の扱いの違いで同じようなソースからでも最終的な見た目が違うものが出来たりして、
移行は思ったより大変な印象を受けました。</p>

<p>はまりどころさえわかっていれば、そこを注意して haml2slim での変換結果を修正していけば良いので、途中からはどんどん変換していけるようになりました。
(まだ一部しか終わっていませんが。)</p>

<p>それなりの数の変換をしてみた結果、最初から slim で書くようにすれば haml と大きな違いはなさそうにも感じました。</p>

<p><code>end</code> 抜けなどの問題が起きたことから、
haml と比べていろんな書き方で使われていなさそうということで、
まだ安定してなさそうと感じました。</p>

<p>また属性値なしの <code>&lt;div ng-app&gt;</code> のような出力に対応しているリリースがまだないなど、
融通が利かない点があって問題が起きそうな可能性がありそうだと感じました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby 2.1.1のHash#rejectの不具合対策]]></title>
    <link href="http://blog.n-z.jp/blog/2014-03-11-hash-reject.html"/>
    <updated>2014-03-11T14:22:28+09:00</updated>
    <id>http://blog.n-z.jp/blog/hash-reject</id>
    <content type="html"><![CDATA[<p><a href="https://www.ruby-lang.org/ja/news/2014/03/10/regression-of-hash-reject-in-ruby-2-1-1/">Ruby 2.1.1 に含まれる Hash#reject の不具合について</a>
という話があって、
自分で書くコードでは普通は Hash を継承することはない (is-a にせずに has-a にすることが多い) ので影響はないのですが、
Rails の中の ActiveSupport が影響を受けるということで対処を入れました。</p>

<p>他にもバックポート漏れのコミットをあてた独自ビルドを使うとか、
Ruby 2.1.0 を使う、という対処もあるようです。</p>

<!--more-->


<p><a href="https://github.com/rails/rails/issues/14188">Rails の Issue #14188</a>
で話があるようにセキュリティ修正ではないため、
Rails 3.2 系にこの修正は入らないので、
モンキーパッチを入れることにしました。</p>

<p>bugs.ruby-lang.org では
<a href="https://github.com/ruby/bugs.ruby-lang.org/blob/ro-2-5/lib/redmine/core_ext.rb">https://github.com/ruby/bugs.ruby-lang.org/blob/ro-2-5/lib/redmine/core_ext.rb</a>
のように対処していたのを参考にして、
以下のようなコードを
<code>config/initializers/hash_reject.rb</code>
に置いて対処することにしました。</p>

<figure class='code'><figcaption><span>config/initializers/hash_reject.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># monkey patch for regression of Hash#reject in Ruby 2.1.1</span>
</span><span class='line'><span class="c1"># see https://www.ruby-lang.org/ja/news/2014/03/10/regression-of-hash-reject-in-ruby-2-1-1/</span>
</span><span class='line'><span class="c1"># or https://www.ruby-lang.org/en/news/2014/03/10/regression-of-hash-reject-in-ruby-2-1-1/</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;active_support/hash_with_indifferent_access&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;active_support/ordered_hash&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">module</span> <span class="nn">ActiveSupport</span>
</span><span class='line'>  <span class="k">class</span> <span class="nc">HashWithIndifferentAccess</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">select</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>      <span class="nb">dup</span><span class="o">.</span><span class="n">tap</span> <span class="p">{</span> <span class="o">|</span><span class="nb">hash</span><span class="o">|</span> <span class="nb">hash</span><span class="o">.</span><span class="n">select!</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">reject</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>      <span class="nb">dup</span><span class="o">.</span><span class="n">tap</span> <span class="p">{</span> <span class="o">|</span><span class="nb">hash</span><span class="o">|</span> <span class="nb">hash</span><span class="o">.</span><span class="n">reject!</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">class</span> <span class="nc">OrderedHash</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">select</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>      <span class="nb">dup</span><span class="o">.</span><span class="n">tap</span> <span class="p">{</span> <span class="o">|</span><span class="nb">hash</span><span class="o">|</span> <span class="nb">hash</span><span class="o">.</span><span class="n">select!</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">reject</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>      <span class="nb">dup</span><span class="o">.</span><span class="n">tap</span> <span class="p">{</span> <span class="o">|</span><span class="nb">hash</span><span class="o">|</span> <span class="nb">hash</span><span class="o">.</span><span class="n">reject!</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>ここのコードが実行される前に読み込まれていれば問題ないのですが、
ここでクラス定義してしまうと元々の定義が autoload されなくなるので、
念のため require しています。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ページの切り替わりごとに背景の自動変更]]></title>
    <link href="http://blog.n-z.jp/blog/2014-03-03-auto-change-background.html"/>
    <updated>2014-03-03T23:25:01+09:00</updated>
    <id>http://blog.n-z.jp/blog/auto-change-background</id>
    <content type="html"><![CDATA[<p>ある Rails アプリでページの切り替わりごとに背景を自動で変更するようにしていたのですが、
デザイン変更で使わなくなったので、どういうことをやっていたのか、メモとして残しておくことにします。</p>

<!--more-->


<h2>HTML</h2>

<p>まず CSS 用のクラスとして自動変更する目印の <code>background</code> と初期状態の <code>background-0</code> を <code>body</code> に設定しました。</p>

<figure class='code'><figcaption><span>app/views/layouts/application.html.haml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='haml'><span class='line'>  <span class="nt">%body</span><span class="nc">.background.background-0</span>
</span></code></pre></td></tr></table></div></figure>


<h2>スクリプト</h2>

<p><code>sessionStorage</code> を使ってタブごとに状態を保存するようにしました。
今回は画像として <code>app/assets/images/background-0.jpg</code> と <code>app/assets/images/background-1.jpg</code> の 2 枚だけだったので、
<code>background_num = 2</code> にしています。</p>

<p>以下のコードを書いた時には知らなかったので対処が入っていないのですが、
Safari のプライベートブラウズでは <code>sessionStorage</code> があるのに使えないという厄介なことになっているので、必要ならそのあたりのエラー処理も入れた方が良いです。</p>

<figure class='code'><figcaption><span>app/assets/javascripts/background.js.coffee</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nx">jQuery</span> <span class="nf">-&gt;</span>
</span><span class='line'>  <span class="k">if</span> <span class="k">typeof</span> <span class="nx">sessionStorage</span> <span class="o">!=</span> <span class="s">&#39;undefined&#39;</span>
</span><span class='line'>    <span class="nv">background_num = </span><span class="mi">2</span>
</span><span class='line'>    <span class="nv">change_background = </span><span class="nf">-&gt;</span>
</span><span class='line'>      <span class="nv">body = </span><span class="nx">$</span><span class="p">(</span><span class="s">&quot;body&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="k">if</span> <span class="o">!</span><span class="nx">body</span><span class="p">.</span><span class="nx">hasClass</span><span class="p">(</span><span class="s">&quot;background&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="k">return</span>
</span><span class='line'>      <span class="nv">background = </span><span class="nx">sessionStorage</span><span class="p">.</span><span class="nx">getItem</span><span class="p">(</span><span class="s">&quot;background&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">background</span>
</span><span class='line'>        <span class="nv">background = </span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">background</span><span class="p">)</span>
</span><span class='line'>        <span class="nx">$</span><span class="p">(</span><span class="s">&quot;body&quot;</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="s">&quot;background-&quot;</span> <span class="o">+</span> <span class="nx">background</span><span class="p">)</span>
</span><span class='line'>        <span class="nv">background = </span><span class="p">(</span><span class="nx">background</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">%</span> <span class="nx">background_num</span>
</span><span class='line'>        <span class="nx">$</span><span class="p">(</span><span class="s">&quot;body&quot;</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="s">&quot;background-&quot;</span> <span class="o">+</span> <span class="nx">background</span><span class="p">)</span>
</span><span class='line'>      <span class="k">else</span>
</span><span class='line'>        <span class="nv">background = </span><span class="mi">0</span>
</span><span class='line'>      <span class="nx">sessionStorage</span><span class="p">.</span><span class="nx">setItem</span><span class="p">(</span><span class="s">&quot;background&quot;</span><span class="p">,</span> <span class="nx">background</span><span class="p">)</span>
</span><span class='line'>    <span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">on</span> <span class="s">&#39;ajax:success.background&#39;</span><span class="p">,</span> <span class="nx">change_background</span>
</span><span class='line'>    <span class="nx">change_background</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<h2>スタイルシート</h2>

<p>rails 4.0.3, sass-rails 4.0.1, sprockets 2.11.0, sprockets-rails 2.0.1
で確認したところ、
<code>depend_on_asset</code> ではなく <code>depend_on</code> を使って拡張子付きのファイル名で
ファイルの先頭に <code>depend_on</code> を並べれば画像ファイルを変更したときに
<code>rake assets:precompile</code> で <code>css</code> も再生成されるように見えました。</p>

<p>つまり <code>//= depend_on "background-1.jpg"</code> を <code>.background-1</code> の直前に持っていくと反映されませんでした。</p>

<p><code>depend_on_asset</code> だと全く反映されませんでした。</p>

<p>ファイルの指定は <code>//= depend_on "../images/background-0.jpg"</code> や <code>//= depend_on "../images/background-1.jpg"</code> のように相対パスでも、ファイル名のみでも大丈夫でした。</p>

<p><code>image-url</code> で参照しているのだから、そこで自動的に依存関係に入ってほしいところですが、そういう仕組みにはなっていないようです。
ちゃんと読んでいないのですが、
<a href="https://github.com/sstephenson/sprockets/issues/488">Dependent assets might not be recompiled</a>
のあたりにすでに話が出ているので、仕様なのかもしれません。</p>

<figure class='code'><figcaption><span>app/assets/stylesheets/background.css.scss</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="o">//=</span> <span class="nt">depend_on</span> <span class="s2">&quot;background-0.jpg&quot;</span>
</span><span class='line'><span class="o">//=</span> <span class="nt">depend_on</span> <span class="s2">&quot;background-1.jpg&quot;</span>
</span><span class='line'><span class="nc">.background-0</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">background-image</span><span class="o">:</span> <span class="n">image</span><span class="o">-</span><span class="sx">url(&quot;background-0.jpg&quot;)</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nc">.background-1</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">background-image</span><span class="o">:</span> <span class="n">image</span><span class="o">-</span><span class="sx">url(&quot;background-1.jpg&quot;)</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[autopagerizeのような動作をkaminariとransackを使った環境で実装した]]></title>
    <link href="http://blog.n-z.jp/blog/2014-02-25-autopagerize-kaminari-ransack.html"/>
    <updated>2014-02-25T18:58:39+09:00</updated>
    <id>http://blog.n-z.jp/blog/autopagerize-kaminari-ransack</id>
    <content type="html"><![CDATA[<p>autopagerize のような動作をするときに id 重複問題があるので、
<a href="http://qa.atmarkit.co.jp/q/3513">QA@IT で質問</a>
してみたところ、
今のページに表示されている最後の id で対処するしかなさそうだとわかったので、
そういう方針で実装してみました。</p>

<!--more-->


<h2>スクリプト部分</h2>

<p>コア部分は以前に実装したものをそのまま使いました。
i18n 対応などが出来ていませんが、冒頭に書いてある id や class が関連要素になります。</p>

<figure class='code'><figcaption><span>app/assets/javascripts/autonext.js.coffee</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nx">jQuery</span> <span class="nf">-&gt;</span>
</span><span class='line'>  <span class="nv">timerId = </span><span class="kc">null</span>
</span><span class='line'>  <span class="nv">loadingId = </span><span class="s">&#39;#autopager_loading&#39;</span>
</span><span class='line'>  <span class="nv">nextId = </span><span class="s">&#39;#next_for_pager&#39;</span>
</span><span class='line'>  <span class="nv">pageElement = </span><span class="s">&#39;.page_element&#39;</span>
</span><span class='line'>  <span class="nv">lastContent = </span><span class="s">&#39;.page_content:last&#39;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nv">loadNext = </span><span class="nf">-&gt;</span>
</span><span class='line'>    <span class="nv">nextLink = </span><span class="nx">$</span><span class="p">(</span><span class="nx">nextId</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'>    <span class="k">if</span> <span class="nx">nextLink</span>
</span><span class='line'>      <span class="nx">$</span><span class="p">(</span><span class="nx">loadingId</span><span class="p">).</span><span class="nx">show</span><span class="p">()</span>
</span><span class='line'>      <span class="nx">$</span><span class="p">(</span><span class="nx">nextId</span><span class="p">).</span><span class="nx">remove</span><span class="p">()</span>
</span><span class='line'>      <span class="nv">request = </span><span class="nx">$</span><span class="p">.</span><span class="nx">get</span> <span class="nx">nextLink</span><span class="p">.</span><span class="nx">href</span><span class="p">,</span> <span class="nf">(data) -&gt;</span>
</span><span class='line'>        <span class="nx">$</span><span class="p">(</span><span class="nx">loadingId</span><span class="p">).</span><span class="nx">before</span><span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="nx">data</span><span class="p">).</span><span class="nx">find</span><span class="p">(</span><span class="nx">pageElement</span><span class="p">)).</span><span class="nx">hide</span><span class="p">()</span>
</span><span class='line'>        <span class="c1"># 必要なら turbolinks の `page:change` のような DOM 変更通知をする</span>
</span><span class='line'>      <span class="nx">request</span><span class="p">.</span><span class="nx">error</span> <span class="nf">(xhr, status, error) -&gt;</span>
</span><span class='line'>        <span class="k">if</span> <span class="nx">error</span> <span class="o">==</span> <span class="s">&quot;Unauthorized&quot;</span>
</span><span class='line'>          <span class="nx">alert</span><span class="p">(</span><span class="s">&quot;認証の期限切れです。再読み込みしてください。&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="k">else</span>
</span><span class='line'>          <span class="nx">alert</span><span class="p">(</span><span class="s">&quot;何かエラーです。少し待ってから、再読み込みしてください。&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="nx">$</span><span class="p">(</span><span class="nx">loadingId</span><span class="p">).</span><span class="nx">html</span><span class="p">(</span><span class="s">&quot;&lt;a href=&#39;javascript:location.reload()&#39; class=&#39;btn btn-block btn-primary&#39;&gt;再読み込み&lt;/a&gt;&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="nv">autoNext = </span><span class="nf">-&gt;</span>
</span><span class='line'>    <span class="nv">content = </span><span class="nx">$</span><span class="p">(</span><span class="nx">lastContent</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="nx">content</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&amp;&amp;</span> <span class="nx">content</span><span class="p">.</span><span class="nx">offset</span><span class="p">().</span><span class="nx">top</span> <span class="o">&lt;</span> <span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">scrollTop</span><span class="p">()</span> <span class="o">+</span> <span class="nx">$</span><span class="p">(</span><span class="nb">window</span><span class="p">).</span><span class="nx">height</span><span class="p">()</span>
</span><span class='line'>      <span class="k">if</span> <span class="nx">$</span><span class="p">(</span><span class="nx">loadingId</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="s">&#39;display&#39;</span><span class="p">)</span> <span class="o">is</span> <span class="s">&#39;none&#39;</span>
</span><span class='line'>        <span class="nx">loadNext</span><span class="p">()</span>
</span><span class='line'>    <span class="nv">timerId = </span><span class="kc">null</span>
</span><span class='line'>    <span class="nx">$</span><span class="p">(</span><span class="nb">window</span><span class="p">).</span><span class="nx">on</span> <span class="s">&#39;scroll.autoNext&#39;</span><span class="p">,</span> <span class="nx">autoNextDefer</span>
</span><span class='line'>
</span><span class='line'>  <span class="nv">autoNextDefer = </span><span class="nf">-&gt;</span>
</span><span class='line'>    <span class="nx">$</span><span class="p">(</span><span class="nb">window</span><span class="p">).</span><span class="nx">off</span> <span class="s">&#39;scroll.autoNext&#39;</span>
</span><span class='line'>    <span class="nv">timerId = </span><span class="nx">setTimeout</span> <span class="nx">autoNext</span><span class="p">,</span> <span class="mi">1000</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">$</span><span class="p">(</span><span class="nb">window</span><span class="p">).</span><span class="nx">on</span> <span class="s">&#39;scroll.autoNext&#39;</span><span class="p">,</span> <span class="nx">autoNextDefer</span>
</span></code></pre></td></tr></table></div></figure>


<h2>views</h2>

<p>view は次のような感じにしました。
<code>page_entries_info</code> を <code>.page_element</code> の中にするか、外にするかは悩ましいところです。</p>

<figure class='code'><figcaption><span>app/views/posts/index.html.haml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='haml'><span class='line'><span class="nc">.page_element</span>
</span><span class='line'>  <span class="nt">%small</span><span class="nc">.page-entries-info</span><span class="p">=</span> <span class="n">page_entries_info</span> <span class="vi">@posts</span>
</span><span class='line'>  <span class="p">=</span> <span class="n">render</span> <span class="vi">@posts</span>
</span><span class='line'>  <span class="p">=</span> <span class="n">link_to_auto_next_page_with_ransack</span> <span class="vi">@q</span><span class="p">,</span> <span class="vi">@posts</span><span class="p">,</span> <span class="n">t</span><span class="p">(</span><span class="s1">&#39;views.pagination.next&#39;</span><span class="p">),</span> <span class="ss">class</span><span class="p">:</span> <span class="s2">&quot;btn btn-large btn-block btn-success&quot;</span><span class="p">,</span> <span class="nb">id</span><span class="p">:</span> <span class="s2">&quot;next_for_pager&quot;</span><span class="p">,</span> <span class="ss">params</span><span class="p">:</span> <span class="n">params</span>
</span><span class='line'><span class="nf">#autopager_loading</span>(<span class="na">style=</span><span class="s">&quot;display:none&quot;</span>)
</span><span class='line'>  <span class="p">=</span> <span class="n">fa_icon</span> <span class="s2">&quot;spinner spin&quot;</span>
</span><span class='line'>  <span class="p">=</span> <span class="n">t</span><span class="p">(</span><span class="s2">&quot;loading&quot;</span><span class="p">,</span> <span class="ss">default</span><span class="p">:</span> <span class="s2">&quot;Loading...&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>kaminari</code> の <code>link_to_next_page</code> を使っている時に問題になったのですが、
<code>params</code> をちゃんと渡さないと <code>paginate @posts</code> で生成されるリンクと違って
パラメーター不足になってしまうようです。
そのため自作の <code>link_to_auto_next_page_with_ransack</code> でも渡すようにしています。</p>

<h2>helper</h2>

<p>ここがリンク生成の肝になります。
ソートのキーのうち、今表示されている最後のものを使って、
<code>updated_at desc</code> でソートされているなら、
<code>updated_at_lt</code> で指定する、ということをしています。
仕組みの都合上、同じ値が複数入ると表示されずに抜け落ちてしまうので、
<code>id</code> やタイムスタンプなどのようなカラムに限定する必要がありそうです。</p>

<p>時刻は標準の <code>to_s</code> だと開発環境の一気に入力したデータで問題が起きたので、
<code>strftime</code> を使って <code>%N</code> (ナノ秒) まで入れるようにしました。</p>

<figure class='code'><figcaption><span>app/helpers/link_to_helper.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="k">def</span> <span class="nf">link_to_auto_next_page_with_ransack</span><span class="p">(</span><span class="n">search</span><span class="p">,</span> <span class="n">scope</span><span class="p">,</span> <span class="nb">name</span><span class="p">,</span> <span class="n">options</span> <span class="o">=</span> <span class="p">{},</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="k">if</span> <span class="n">scope</span><span class="o">.</span><span class="n">last_page?</span>
</span><span class='line'>    <span class="n">params</span> <span class="o">=</span> <span class="n">options</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="ss">:params</span><span class="p">)</span> <span class="o">||</span> <span class="p">{}</span>
</span><span class='line'>    <span class="n">sorts</span> <span class="o">=</span> <span class="n">search</span><span class="o">.</span><span class="n">sorts</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">sorts</span><span class="o">.</span><span class="n">empty?</span>
</span><span class='line'>      <span class="k">raise</span> <span class="s2">&quot;You must set sorts to ransack (e.g. `@q.sorts = &#39;updated_at desc&#39; if @q.sorts.empty?`)&quot;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="n">order</span> <span class="o">=</span> <span class="n">sorts</span><span class="o">.</span><span class="n">first</span>
</span><span class='line'>    <span class="n">column</span> <span class="o">=</span> <span class="n">order</span><span class="o">.</span><span class="n">name</span>
</span><span class='line'>    <span class="n">dir</span> <span class="o">=</span> <span class="n">order</span><span class="o">.</span><span class="n">dir</span> <span class="o">==</span> <span class="s2">&quot;desc&quot;</span> <span class="p">?</span> <span class="s2">&quot;lt&quot;</span> <span class="p">:</span> <span class="s2">&quot;gt&quot;</span>
</span><span class='line'>    <span class="n">value</span> <span class="o">=</span> <span class="n">scope</span><span class="o">.</span><span class="n">last</span><span class="o">[</span><span class="n">column</span><span class="o">]</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">value</span><span class="o">.</span><span class="n">respond_to?</span><span class="p">(</span><span class="ss">:strftime</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="n">value</span><span class="o">.</span><span class="n">respond_to?</span><span class="p">(</span><span class="ss">:hour</span><span class="p">)</span>
</span><span class='line'>      <span class="c1"># expect Time, DateTime, ActiveSupport::TimeWithZone</span>
</span><span class='line'>      <span class="c1"># and not Date</span>
</span><span class='line'>      <span class="n">value</span> <span class="o">=</span> <span class="n">value</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s2">&quot;%Y-%m-%d %H:%M:%S.%N %Z&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="n">q</span> <span class="o">=</span> <span class="n">params</span><span class="o">[</span><span class="ss">:q</span><span class="o">]</span> <span class="o">||</span> <span class="p">{}</span>
</span><span class='line'>    <span class="n">q</span> <span class="o">=</span> <span class="n">q</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">#{</span><span class="n">column</span><span class="si">}</span><span class="s2">_</span><span class="si">#{</span><span class="n">dir</span><span class="si">}</span><span class="s2">&quot;</span> <span class="o">=&gt;</span> <span class="n">value</span><span class="p">)</span>
</span><span class='line'>    <span class="n">params</span> <span class="o">=</span> <span class="n">params</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">search</span><span class="o">.</span><span class="n">context</span><span class="o">.</span><span class="n">search_key</span> <span class="o">=&gt;</span> <span class="n">q</span><span class="p">)</span>
</span><span class='line'>    <span class="n">link_to</span> <span class="nb">name</span><span class="p">,</span> <span class="n">params</span><span class="p">,</span> <span class="n">options</span><span class="o">.</span><span class="n">reverse_merge</span><span class="p">(</span><span class="ss">:rel</span> <span class="o">=&gt;</span> <span class="s1">&#39;next&#39;</span><span class="p">),</span> <span class="o">&amp;</span><span class="n">block</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>controller</h2>

<p>コントローラーは <code>kaminari</code> や <code>ransack</code> を普通に使っているだけです。
<code>@posts = Post</code> の行は <code>cancan</code> の <code>load_and_authorize_resource</code> を使っている場合には不要なので、
別の行にしています。</p>

<figure class='code'><figcaption><span>app/controllers/posts_controller.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="k">def</span> <span class="nf">index</span>
</span><span class='line'>    <span class="vi">@posts</span> <span class="o">=</span> <span class="no">Post</span>
</span><span class='line'>    <span class="vi">@q</span> <span class="o">=</span> <span class="vi">@posts</span><span class="o">.</span><span class="n">search</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:q</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@q</span><span class="o">.</span><span class="n">sorts</span> <span class="o">=</span> <span class="s1">&#39;updated_at desc&#39;</span> <span class="k">if</span> <span class="vi">@q</span><span class="o">.</span><span class="n">sorts</span><span class="o">.</span><span class="n">empty?</span>
</span><span class='line'>    <span class="vi">@posts</span> <span class="o">=</span> <span class="vi">@q</span><span class="o">.</span><span class="n">result</span><span class="p">(</span><span class="ss">distinct</span><span class="p">:</span> <span class="kp">true</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@posts</span> <span class="o">=</span> <span class="vi">@posts</span><span class="o">.</span><span class="n">page</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:page</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">per</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>スタイルシート</h2>

<p>読み込み中の部分のスタイルは以下のようにして、画面の最下部の横幅いっぱいに出るようにしています。
エラーの時はこの中身が再読み込みボタンに変わります。
開発環境だと <code>rails server</code> を停止した状態で自動読み込みさせれば、すぐに確認できます。</p>

<figure class='code'><figcaption><span>app/assets/stylesheets/application.css.scss</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nf">#autopager_loading</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">background-color</span><span class="o">:</span> <span class="m">#000</span><span class="p">;</span>
</span><span class='line'>  <span class="k">bottom</span><span class="o">:</span> <span class="m">0px</span><span class="p">;</span>
</span><span class='line'>  <span class="k">color</span><span class="o">:</span> <span class="m">#fff</span><span class="p">;</span>
</span><span class='line'>  <span class="k">font-size</span><span class="o">:</span> <span class="m">12px</span><span class="p">;</span>
</span><span class='line'>  <span class="k">height</span><span class="o">:</span> <span class="m">25px</span><span class="p">;</span>
</span><span class='line'>  <span class="k">left</span><span class="o">:</span> <span class="m">0px</span><span class="p">;</span>
</span><span class='line'>  <span class="k">opacity</span><span class="o">:</span> <span class="m">0</span><span class="o">.</span><span class="m">8</span><span class="p">;</span>
</span><span class='line'>  <span class="k">position</span><span class="o">:</span> <span class="k">fixed</span><span class="p">;</span>
</span><span class='line'>  <span class="k">text-align</span><span class="o">:</span> <span class="k">center</span><span class="p">;</span>
</span><span class='line'>  <span class="k">width</span><span class="o">:</span> <span class="m">100</span><span class="o">%</span><span class="p">;</span>
</span><span class='line'>  <span class="k">z-index</span><span class="o">:</span> <span class="m">1000</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>まとめ</h2>

<p>autopagerize のような自動読み込みを <code>kaminari</code> と <code>ransack</code> を使った rails アプリに組み込んだ実装例を紹介しました。
部品だけで全体を示せていないので、もしかしたら書き忘れている部分もあるかもしれませんが、重要な部分は載せていると思いますので、参考にしてみてください。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第 81 回 関西 Debian 勉強会に参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2014-02-23-kansai-debian-meeting.html"/>
    <updated>2014-02-23T14:02:06+09:00</updated>
    <id>http://blog.n-z.jp/blog/kansai-debian-meeting</id>
    <content type="html"><![CDATA[<p><a href="https://wiki.debian.org/KansaiDebianMeeting/20140223">第 81 回 関西 Debian 勉強会</a>
に参加してきました。</p>

<!--more-->


<h2>もくもくの会</h2>

<p>今回ももくもくの会がありました。</p>

<p>前回のもくもくの会の時に作っていた
<a href="https://github.com/znz/rd2markdown-app">rd2markdown</a>
を使って
<a href="https://bugs.ruby-lang.org/projects/ruby/wiki">ruby-lang.org の Wiki</a>
で RD 記法のままになっていたページの変換を試しつつ、
うまく変換できなかった部分を修正して、
ほぼすべてのページを変換していきました。
最終的には家に帰ってから、
このブログ記事を書く前に残りを変換しました。</p>

<p>成果発表などの時にも変換作業をしていたので、
他の人の話はあまり聞けなかったのですが、
<a href="http://i3wm.org/">http://i3wm.org/</a>
や
<a href="https://github.com/sn0w75/MikuMikuPenguin">https://github.com/sn0w75/MikuMikuPenguin</a>
の話などがありました。</p>

<h2>LT</h2>

<p><a href="http://blog.n-z.jp/blog/2014-02-23-upstart-has-missing-features.html">upstartに不足している機能</a>
の話と
<a href="http://blog.n-z.jp/blog/2014-02-23-boot2docker.html">boot2docker</a>
でインストールした docker 環境でのデモをしました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[upstartに不足している機能]]></title>
    <link href="http://blog.n-z.jp/blog/2014-02-23-upstart-has-missing-features.html"/>
    <updated>2014-02-23T11:15:27+09:00</updated>
    <id>http://blog.n-z.jp/blog/upstart-has-missing-features</id>
    <content type="html"><![CDATA[<p>Ubuntu の標準の init の upstart で機能不足を感じた話です。</p>

<!--more-->


<h2>workaround-upstart-snafu</h2>

<p>2012年6月の頃の Ubuntu で起きた話です。
昔の話でバージョンなどもちゃんとメモしていなかったのですが、
当時サポート対象だったバージョンのどれかです。</p>

<p>現象としては自作の <code>/etc/init/hoge.conf</code> を作成するために
<code>expect</code> stanza を試行錯誤していたら、
設定が間違っていたらしく、
プロセスの終了をちゃんと認識できなくて、
もう存在しないプロセス ID を終了したジョブのプロセス ID として認識したまま
<code>start</code> も <code>stop</code> もきかなくなってしまった、
ということがありました。</p>

<p>ここまでは自分が書いた設定が間違いということで、
別に良いのですが、
その状態を解消する方法が upstart 自体には存在していなくて、
<a href="http://irclogs.ubuntu.com/2011/01/31/%23upstart.html">http://irclogs.ubuntu.com/2011/01/31/%23upstart.html</a>
で紹介されていた
<a href="https://github.com/ion1/workaround-upstart-snafu">workaround-upstart-snafu</a>
を使うしかありませんでした。</p>

<p>このスクリプトは指定したプロセス ID になるまで fork してすぐに終了するのを繰り返して
upstart に該当するプロセス ID のプロセス終了を認識させる、という仕組みのようです。</p>

<p>このような無理矢理な方法ではなく upstart 自体にプロセスがまだ存在しているかどうかチェックし直す機能が存在するべきだと思いました。</p>

<h2>Should-Start</h2>

<p><code>/etc/init.d/</code> に置かれる
<a href="https://wiki.debian.org/LSBInitScripts">LSB の Init スクリプト</a>
には、起動時の順番 (依存関係) を指定するためのヘッダーを書くようになっています。</p>

<p>この指定の中には <code>Should-Start</code> というインストールされていれば先に起動する必要があり、
インストールされていなければ影響しない、ということが出来ます。</p>

<p>たとえば、
デーモンが依存しているデータベースが同じマシンに入っていれば
先に起動している必要があるけれど、
別のマシンのデータベースを使っているかもしれないので、
インストールされていなくても良い、
という用途が想定されているようです。</p>

<p>具体的な例としては
Ubuntu 13.10 の
<code>zabbix-server-pgsql</code> 2.0.6+dfsg-1ubuntu2
の
<code>/etc/init.d/zabbix-server</code>
では</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>### BEGIN INIT INFO
</span><span class='line'># Provides:          zabbix-server
</span><span class='line'># Required-Start:    $remote_fs $network
</span><span class='line'># Required-Stop:     $remote_fs
</span><span class='line'># Default-Start:     2 3 4 5
</span><span class='line'># Default-Stop:      0 1 6
</span><span class='line'># Should-Start:      postgresql
</span><span class='line'># Should-Stop:       postgresql
</span><span class='line'># Short-Description: Start zabbix-server daemon
</span><span class='line'># Description: Start zabbix-server daemon (PostgreSQL)
</span><span class='line'>### END INIT INFO</span></code></pre></td></tr></table></div></figure>


<p>となっていて、
<code>postgresql</code> より後に起動するようになっているのに、</p>

<p><code>/etc/init/zabbix-server.conf</code>
では</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>start on (filesystem and net-device-up IFACE=lo)
</span><span class='line'>stop on runlevel [!2345]</span></code></pre></td></tr></table></div></figure>


<p>となっていて、起動順序の関係が不足しています。</p>

<p>その結果、
<code>zabbix-server</code> の方が <code>postgresql</code> より早く起動してしまって、
データベースに接続できなくて起動に失敗する、
ということが起きることがありました。
(以前の Ubuntu で起きていた現象で Ubuntu 13.10 だと別の現象になっているかもしれないので、
再度検証が必要そうです。)</p>

<p>対策として
<code>/etc/cron.d/local</code>
に</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># zabbix-server may fail to start before postgresql
</span><span class='line'>@reboot root /usr/sbin/service zabbix-server start</span></code></pre></td></tr></table></div></figure>


<p>という設定を置いていて、
<code>cron</code> の <code>@reboot</code> が実行されるタイミングで起動し直すようにしています。</p>

<h2>まとめ</h2>

<p>起動時の処理ということで、
実運用環境では検証しづらく、
問題が起きてもマシンの再起動時に注意していれば良いだけなので、
優先度が低くて、
検証環境を用意してまで調査するという手間をかけるまでは出来ていないのですが、
upstart はいろいろと sysvinit (insserv) に比べて劣化している部分があるようなので、
困ります。</p>

<p>主流が systemd に変わりつつあるという話もあるようなので、
どうなっていくのかわかりませんが、
init は OS の根幹に関わる部分なので、
もっと安定して信頼性のあるものになってほしいと思いました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[boot2dockerでdockerを試す]]></title>
    <link href="http://blog.n-z.jp/blog/2014-02-23-boot2docker.html"/>
    <updated>2014-02-23T00:47:22+09:00</updated>
    <id>http://blog.n-z.jp/blog/boot2docker</id>
    <content type="html"><![CDATA[<p>boot2docker で最新の docker を試してみました。
他ではあまり書いていないアンインストール方法も書いているので、
不要になった時や何か変になった時の削除方法も参考になると思います。</p>

<!--more-->


<h2>対象バージョン</h2>

<ul>
<li>Mac OS X 10.9.1 で試しましたが Linux でも同様に動くはずです</li>
<li>VirtualBox 4.3.6</li>
<li>boot2docker 0.6.0</li>
<li>docker 0.8.1</li>
</ul>


<h2>VirtualBox</h2>

<p>あらかじめ VirtualBox をインストールしておきます。</p>

<h2>boot2docker</h2>

<p><a href="http://docs.docker.io/en/latest/installation/mac/">http://docs.docker.io/en/latest/installation/mac/</a> の手順に従って
<code>boot2docker</code> を入れてみます。</p>

<h3>インストール</h3>

<p>適当なディレクトリに <code>boot2docker</code> をダウンロードして実行可能にします。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> mkdir -p ~/boot2docker
</span><span class='line'> cd ~/boot2docker
</span><span class='line'> curl https://raw.github.com/boot2docker/boot2docker/master/boot2docker &gt; boot2docker
</span><span class='line'> chmod +x boot2docker</span></code></pre></td></tr></table></div></figure>


<p>この段階でのアンインストールは <code>boot2docker</code> を削除するだけです。</p>

<h3>VM イメージの作成</h3>

<p>初回は <code>./boot2docker init</code> を実行して iso のダウンロードと VM の作成をします。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% ./boot2docker init
</span><span class='line'>[2014-02-22 23:43:36] Creating VM boot2docker-vm
</span><span class='line'>Virtual machine 'boot2docker-vm' is created and registered.
</span><span class='line'>UUID: 61e0ec36-fc80-4b70-ac11-899f6526a57e
</span><span class='line'>Settings file: '/Users/kazu/VirtualBox VMs/boot2docker-vm/boot2docker-vm.vbox'
</span><span class='line'>[2014-02-22 23:43:36] Setting VM settings
</span><span class='line'>[2014-02-22 23:43:36] Setting VM networking
</span><span class='line'>[2014-02-22 23:43:36] boot2docker.iso not found.
</span><span class='line'>[2014-02-22 23:43:38] Latest version is v0.6.0, downloading...
</span><span class='line'>  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
</span><span class='line'>                                 Dload  Upload   Total   Spent    Left  Speed
</span><span class='line'>100   346  100   346    0     0    319      0  0:00:01  0:00:01 --:--:--   319
</span><span class='line'>100 24.0M  100 24.0M    0     0   295k      0  0:01:23  0:01:23 --:--:--  498k
</span><span class='line'>[2014-02-22 23:45:02] Done
</span><span class='line'>[2014-02-22 23:45:02] Setting VM disks
</span><span class='line'>[2014-02-22 23:45:02] Creating 40000 Meg hard drive...
</span><span class='line'>Converting from raw image file="stdin" to file="/Users/kazu/.boot2docker/boot2docker-vm.vmdk"...
</span><span class='line'>Creating dynamic image with size 41943040000 bytes (40000MB)...
</span><span class='line'>[2014-02-22 23:45:02] Done.
</span><span class='line'>[2014-02-22 23:45:02] You can now type boot2docker up and wait for the VM to start.</span></code></pre></td></tr></table></div></figure>


<p>この段階のやり直しは VM が起動していれば <code>./boot2docker stop</code> で止めて、
<code>./boot2docker delete</code> で VM を削除するだけではダメで、
<code>~/.boot2docker</code> も削除する必要があります。</p>

<p>パスは <code>boot2docker</code> の中の <code>BOOT2DOCKER_CFG_DIR</code> に書かれていて、
以下の設定は <code>$HOME/.boot2docker/profile</code> で設定変更できます。</p>

<ul>
<li><code>VM_NAME</code> : VirtualBox での VM の名前 (デフォルト: <code>boot2docker-vm</code>)</li>
<li><code>DOCKER_PORT</code> : ホスト側で docker 用に使うポート (デフォルト: <code>4243</code>)</li>
<li><code>SSH_HOST_PORT</code> : ホスト側で ssh サーバー用に使うポート (デフォルト: <code>2022</code>)</li>
<li><code>VM_DISK</code> : vmdk ファイルのパス (デフォルト: <code>${BOOT2DOCKER_CFG_DIR}/${VM_NAME}.vmdk</code>)</li>
<li><code>VM_DISK_SIZE</code> : vmdk の容量 (デフォルト: <code>40000</code> メガバイト)</li>
<li><code>VM_MEM</code> : メモリ (デフォルト: <code>1024</code>)</li>
<li><code>BOOT2DOCKER_ISO</code> : ISO ファイルのパス (デフォルト: <code>${BOOT2DOCKER_CFG_DIR}/boot2docker.iso</code>)</li>
</ul>


<p>VM を作り直すだけなら <code>./boot2docker delete</code> して <code>./boot2docker init</code> すれば
ISO はダウンロードし直さずに VM だけ作り直せます。</p>

<p>間違えて先に <code>~/.boot2docker</code> を削除してしまうと VirtualBox の状態が不整合になるので、
VirtualBox の GUI の方の仮想メディアマネージャーで存在しなくっているファイルを除去するなどの対処をして直します。</p>

<h3>VM の起動</h3>

<p>docker デーモンの VM を <code>./boot2docker up</code> で起動します。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% ./boot2docker up
</span><span class='line'>[2014-02-22 23:50:43] Starting boot2docker-vm...
</span><span class='line'>[2014-02-22 23:51:03] Started.
</span><span class='line'>
</span><span class='line'>To connect the docker client to the Docker daemon, please set:
</span><span class='line'>export DOCKER_HOST=tcp://localhost:4243
</span></code></pre></td></tr></table></div></figure>


<p>止めるのは <code>./boot2docker stop</code> です。</p>

<h3>ssh で中に入る</h3>

<p><code>vagrant</code> と似た感じで <code>./boot2docker ssh</code> で中に入れます。
ユーザーは <code>docker</code> でパスワードは <code>tcuser</code> です。
Tiny Core Linux ベースなので、こういうパスワードになっているのだと思います。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% ./boot2docker ssh
</span><span class='line'>docker@localhost's password:
</span><span class='line'>                        ##        .
</span><span class='line'>                  ## ## ##       ==
</span><span class='line'>               ## ## ## ##      ===
</span><span class='line'>           /""""""""""""""""\___/ ===
</span><span class='line'>      ~~~ {~~ ~~~~ ~~~ ~~~~ ~~ ~ /  ===- ~~~
</span><span class='line'>           \______ o          __/
</span><span class='line'>             \    \        __/
</span><span class='line'>              \____\______/
</span><span class='line'> _                 _   ____     _            _
</span><span class='line'>| |__   ___   ___ | |_|___ \ __| | ___   ___| | _____ _ __
</span><span class='line'>| '_ \ / _ \ / _ \| __| __) / _` |/ _ \ / __| |/ / _ \ '__|
</span><span class='line'>| |_) | (_) | (_) | |_ / __/ (_| | (_) | (__|   &lt;  __/ |
</span><span class='line'>|_.__/ \___/ \___/ \__|_____\__,_|\___/ \___|_|\_\___|_|
</span><span class='line'>boot2docker: 0.6.0
</span><span class='line'>docker@boot2docker:~$</span></code></pre></td></tr></table></div></figure>


<h2>docker を使ってみる</h2>

<p>ホスト OS 側に docker コマンドをインストールして、そこから使っても良いのですが、
Homebrew でインストールできたバージョンが 0.8.0 で少し古かったので、
主に VM の中の docker コマンドを使いました。</p>

<p>ドキュメントでは <code>sudo docker</code> で実行していますが、
TCP 接続だったり、ローカルの unix socket の場合でもグループのアクセス権限で許可されている場合などは
<code>sudo</code> なしの <code>docker</code> コマンドだけで大丈夫です。</p>

<p><code>boot2docker</code> の VM の場合は <code>/var/run/docker.sock</code> が <code>docker</code> グループに読み書きが許可されていて、
<code>docker</code> ユーザーが <code>docker</code> グループに属しているため、 <code>sudo</code> が不要になっています。</p>

<h3>バージョンなどの情報確認</h3>

<p><code>docker version</code> や <code>docker info</code> で情報を確認します。</p>

<p><code>boot2docker</code> の場合は問題ないと思いますが、
docker のサーバーとの接続がうまくいかない場合はここでエラーなどになるので、
環境変数 <code>DOCKER_HOST</code> やポートフォワーディングや firewall などの設定を確認します。</p>

<p>まず VM の外の Homebrew でインストールした docker コマンドから確認しました。
ここでバージョンが古かったので、後は ssh で入った VM の中で docker コマンドを使うことにしました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% export DOCKER_HOST=tcp://127.0.0.1:4243
</span><span class='line'>% docker version
</span><span class='line'>Client version: 0.8.0
</span><span class='line'>Go version (client): go1.2
</span><span class='line'>Git commit (client): cc3a8c8d8ec57e15b7b7316797132d770408ab1a
</span><span class='line'>
</span><span class='line'>Server version: 0.8.1
</span><span class='line'>Git commit (server): a1598d1
</span><span class='line'>Go version (server): go1.2
</span><span class='line'>Last stable version: 0.8.1, please update docker</span></code></pre></td></tr></table></div></figure>


<p>VM の中では Server と Client のバージョンが最新版で一致しています。
ついでに <code>docker info</code> も確認しました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>docker@boot2docker:~$ docker version
</span><span class='line'>Client version: 0.8.1
</span><span class='line'>Go version (client): go1.2
</span><span class='line'>Git commit (client): a1598d1
</span><span class='line'>Server version: 0.8.1
</span><span class='line'>Git commit (server): a1598d1
</span><span class='line'>Go version (server): go1.2
</span><span class='line'>Last stable version: 0.8.1
</span><span class='line'>docker@boot2docker:~$ docker info
</span><span class='line'>Containers: 0
</span><span class='line'>Images: 0
</span><span class='line'>Driver: aufs
</span><span class='line'> Root Dir: /mnt/sda1/var/lib/docker/aufs
</span><span class='line'> Dirs: 0
</span><span class='line'>Debug mode (server): true
</span><span class='line'>Debug mode (client): false
</span><span class='line'>Fds: 10
</span><span class='line'>Goroutines: 13
</span><span class='line'>Execution Driver: lxc-0.8.0
</span><span class='line'>EventsListeners: 0
</span><span class='line'>Kernel Version: 3.13.3-tinycore64
</span><span class='line'>Init Path: /usr/local/bin/docker
</span><span class='line'>docker@boot2docker:~$</span></code></pre></td></tr></table></div></figure>


<h3>docker を試してみる</h3>

<p><code>docker pull ubuntu</code> であらかじめダウンロードしてから <code>docker run</code> を実行しても良いのですが、
いきなり <code>docker run -i -t ubuntu /bin/bash</code> を実行しても、
自動的にダウンロードしてから実行されます。</p>

<p>ダウンロードはサーバー側が遅いのか、時間がかかることがあるようなので、
ゆっくり待った方が良さそうです。</p>

<p>引数に指定した <code>/bin/bash</code> がコンテナの中の唯一のプロセスとして起動するので、
自由に試してみて、 <code>exit</code> などで <code>/bin/bash</code> が終了すればコンテナも終了します。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>docker@boot2docker:~$ docker run -i -t ubuntu /bin/bash
</span><span class='line'>Unable to find image 'ubuntu' locally
</span><span class='line'>Pulling repository ubuntu
</span><span class='line'>9cd978db300e: Download complete
</span><span class='line'>eb601b8965b8: Download complete
</span><span class='line'>5ac751e8d623: Download complete
</span><span class='line'>9cc9ea5ea540: Download complete
</span><span class='line'>9f676bd305a4: Download complete
</span><span class='line'>511136ea3c5a: Download complete
</span><span class='line'>f323cf34fd77: Download complete
</span><span class='line'>6170bb7b0ad1: Download complete
</span><span class='line'>1c7f181e78b9: Download complete
</span><span class='line'>7a4f87241845: Download complete
</span><span class='line'>321f7f4200f4: Download complete
</span><span class='line'>root@a64cca91db41:/# ps -ef
</span><span class='line'>UID        PID  PPID  C STIME TTY          TIME CMD
</span><span class='line'>root         1     0  0 15:32 ?        00:00:00 /bin/bash
</span><span class='line'>root         9     1  0 15:33 ?        00:00:00 ps -ef
</span><span class='line'>root@a64cca91db41:/# exit
</span><span class='line'>exit
</span><span class='line'>docker@boot2docker:~$</span></code></pre></td></tr></table></div></figure>


<p><a href="http://blog.n-z.jp/blog/2013-12-24-docker-rm.html">Dockerで不要になったコンテナやイメージを削除する</a>
に書いたようにコンテナが溜まっていくので、削除しておきます。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>docker@boot2docker:~$ docker ps -a -q
</span><span class='line'>a64cca91db41
</span><span class='line'>docker@boot2docker:~$ docker rm `docker ps -a -q`
</span><span class='line'>a64cca91db41
</span><span class='line'>docker@boot2docker:~$</span></code></pre></td></tr></table></div></figure>


<p>ちょっと試すだけなら <code>-rm</code> オプションを付けて自動削除するのが良さそうです。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>docker@boot2docker:~$ docker run -i -t -rm ubuntu /bin/bash
</span><span class='line'>root@f810cbccf394:/# exit
</span><span class='line'>exit
</span><span class='line'>docker@boot2docker:~$ docker ps -a -q
</span><span class='line'>docker@boot2docker:~$</span></code></pre></td></tr></table></div></figure>


<h2>つづく</h2>

<p><code>docker pull</code> に時間がかかって、すぐにはいろいろ試せないようなので、別の記事に続きます。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Land of Lisp 読書会 最終回（第5回）(兵庫県)に参加してきた]]></title>
    <link href="http://blog.n-z.jp/blog/2014-02-22-reading-land-of-lisp.html"/>
    <updated>2014-02-22T22:45:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/reading-land-of-lisp</id>
    <content type="html"><![CDATA[<p><a href="http://kokucheese.com/event/index/144998/">2月22日 Land of Lisp 読書会 最終回（第5回）(兵庫県)</a>
に参加してきました。
今回は第16章から最後まででした。</p>

<div style="float:right">
<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=znz-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=4873116155" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>
</div>


<p>次回は4月5日で<a href="http://www.amazon.co.jp/gp/product/4873116155/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4873116155&amp;linkCode=as2&amp;tag=znz-22">RとRubyによるデータ解析入門</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4873116155" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />の読書会に決まりました。</p>

<!--more-->


<h2>会場</h2>

<p>今回は今までと違って、普通の会議室がとれなかったということで音楽室でした。
静かだったり、外から見えるようになっていたりしたのが印象的でした。</p>

<h2>メモ</h2>

<p>以下今回のメモです。</p>

<ul>
<li><code>,</code> が気持ち悪い。</li>
<li>clojure だと <code>~</code></li>
<li><code>`</code> の話とマクロの話は別</li>
<li>Lisp のマクロの話と Ruby に似たようなものがあるかという話</li>
<li>Ruby の <code>eval</code> と <code>class_eval</code> と <code>instance_eval</code> の話</li>
<li>SVG の話</li>
<li>imagemagick とか minimagick とかでも画像生成できる話 (例: <a href="http://jarp.does.notwork.org/diary/201308a.html">http://jarp.does.notwork.org/diary/201308a.html</a> )</li>
<li>c14n (XML Canonicalization) してインデントを付けると読みやすくなる話</li>
<li>middleman : rails の asset pipe line などの技術を使って静的サイトが作れる</li>
<li>WMI : SNMP の Windows 専用版みたいなもの</li>
<li>PowerShell の話

<ul>
<li>パイプをオブジェクトが流れるのがモナドとか jQuery とかっぽい</li>
<li>他の言語の printf などと全く違う。エスケープがバッククオートとか</li>
<li>WSHは32ビットと64ビットの問題がある?</li>
</ul>
</li>
<li>単なる便利なライブラリと DSL の違いは?

<ul>
<li>外部 DSL だとわかりやすいけど、内部 DSL だと曖昧</li>
<li>その他いろいろな意見あり</li>
</ul>
</li>
<li>Ruby だと内部 DSL は括弧を省略するのが普通</li>
<li>Gemfile とか Rakefile とか</li>
<li>rspec の話</li>
<li>18章「Haskell や Clojure では、遅延評価が言語のコアでサポートされている。」</li>
<li>p.378 value が nil になることもあるから forced は必要そう</li>
<li>lazy-car や lazy-cdr は lazy を作るのではなく force で取り出すので lazy-cons や lazy-nil と意味が違ってわかりにくい</li>
<li>マンガはコマ割がわかりにくいし p.432 には矢印まであるのは矢印を付けるよりもコマ割を工夫すべきでは</li>
</ul>


<h2>次回の予定</h2>

<ul>
<li>エリック・エヴァンスのドメイン駆動設計</li>
<li>クラウドデザインパターン</li>
<li>SQLアンチパターン</li>
<li>RとRubyによるデータ解析入門</li>
</ul>


<p>などの候補が出ましたが R と Ruby の本に決定して、
amagasakirb としては久しぶりの Ruby の本ということになりました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第 8 回 RubyMotion もくもく会 in Osaka に参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2014-02-19-rubymotion-mokumoku-osaka.html"/>
    <updated>2014-02-19T19:27:12+09:00</updated>
    <id>http://blog.n-z.jp/blog/rubymotion-mokumoku-osaka</id>
    <content type="html"><![CDATA[<p>第 1 回から第 7 回にも参加した RubyMotion もくもく会 in Osaka の
<a href="http://connpass.com/event/4910/">第 8 回 RubyMotion もくもく会 in Osaka</a>
に参加してきました。</p>

<p>次回の
<a href="http://connpass.com/event/5276/">第 9 回 RubyMotion もくもく会 in Osaka</a>
は 3/19(水) になりました。</p>

<!--more-->


<h2>話に出たもの</h2>

<p>話に出てきたサイトなどのメモです。</p>

<ul>
<li><a href="http://connpass.com/event/5274/">iBeacon 勉強会（入門編）</a></li>
<li><a href="http://japan.gamesalad.com/">GameSalad</a></li>
<li><a href="http://www.hirotangame.net/">広探ゲーム</a></li>
</ul>


<h2>もくもく</h2>

<p>ブラウザを開くのに <code>open</code> コマンドを経由から <code>NSWorkspace</code> の <code>openURLs:withAppBundleIdentifier:options:additionalEventParamDescriptor:launchIdentifiers:</code> 経由に変更しました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="k">def</span> <span class="nf">openBrowser</span><span class="p">(</span><span class="n">app</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">)</span>
</span><span class='line'>    <span class="n">r</span><span class="p">,</span> <span class="n">w</span> <span class="o">=</span> <span class="no">IO</span><span class="o">.</span><span class="n">pipe</span>
</span><span class='line'>    <span class="n">pid</span> <span class="o">=</span> <span class="no">Process</span><span class="o">.</span><span class="n">spawn</span><span class="p">(</span><span class="s1">&#39;open&#39;</span><span class="p">,</span> <span class="s1">&#39;-a&#39;</span><span class="p">,</span> <span class="n">app</span><span class="p">,</span> <span class="vi">@text</span><span class="o">.</span><span class="n">stringValue</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">[</span><span class="ss">:out</span><span class="p">,</span> <span class="ss">:err</span><span class="o">]</span> <span class="o">=&gt;</span> <span class="n">w</span><span class="p">)</span>
</span><span class='line'>    <span class="n">w</span><span class="o">.</span><span class="n">close</span>
</span><span class='line'>    <span class="n">pid</span><span class="p">,</span> <span class="n">status</span> <span class="o">=</span> <span class="no">Process</span><span class="o">.</span><span class="n">waitpid2</span><span class="p">(</span><span class="n">pid</span><span class="p">)</span>
</span><span class='line'>    <span class="n">output</span> <span class="o">=</span> <span class="n">r</span><span class="o">.</span><span class="n">read</span>
</span><span class='line'>    <span class="n">r</span><span class="o">.</span><span class="n">close</span>
</span><span class='line'>    <span class="k">unless</span> <span class="n">status</span><span class="o">.</span><span class="n">success?</span>
</span><span class='line'>      <span class="n">alert</span> <span class="o">=</span> <span class="no">NSAlert</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>      <span class="n">alert</span><span class="o">.</span><span class="n">messageText</span> <span class="o">=</span> <span class="s2">&quot;Failed to open </span><span class="si">#{</span><span class="n">app</span><span class="si">}</span><span class="se">\n\n</span><span class="si">#{</span><span class="n">output</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>      <span class="n">alert</span><span class="o">.</span><span class="n">runModal</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>open -b</code> を使っていれば引数は変わらなかったのですが、 <code>open -a</code> を使っていたので、引数がアプリケーション名からバンドル ID に変わりました。</p>

<p><code>open -a 'Google Chrome' http://localhost:4000/ --args -incognito</code> の <code>-incognito</code> のような追加引数の渡し方がわからなかったので、 Chrome のシークレットウインドウを直接開く機能はなくしました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="no">NSWorkspaceLaunchAsync</span> <span class="o">=</span> <span class="mh">0x00010000</span>
</span><span class='line'>  <span class="no">NSWorkspaceLaunchAllowingClassicStartup</span> <span class="o">=</span> <span class="mh">0x00020000</span>
</span><span class='line'>  <span class="no">NSWorkspaceLaunchDefault</span> <span class="o">=</span> <span class="no">NSWorkspaceLaunchAsync</span> <span class="o">|</span> <span class="no">NSWorkspaceLaunchAllowingClassicStartup</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">openBrowser</span><span class="p">(</span><span class="n">app_bundle_id</span><span class="p">)</span>
</span><span class='line'>    <span class="n">url</span> <span class="o">=</span> <span class="no">NSURL</span><span class="o">.</span><span class="n">URLWithString</span> <span class="vi">@text</span><span class="o">.</span><span class="n">stringValue</span>
</span><span class='line'>    <span class="n">ret</span> <span class="o">=</span> <span class="no">NSWorkspace</span><span class="o">.</span><span class="n">sharedWorkspace</span><span class="o">.</span><span class="n">openURLs</span><span class="p">(</span><span class="o">[</span><span class="n">url</span><span class="o">]</span><span class="p">,</span> <span class="ss">withAppBundleIdentifier</span><span class="p">:</span> <span class="n">app_bundle_id</span><span class="p">,</span> <span class="ss">options</span><span class="p">:</span> <span class="no">NSWorkspaceLaunchDefault</span><span class="p">,</span> <span class="ss">additionalEventParamDescriptor</span><span class="p">:</span> <span class="kp">nil</span><span class="p">,</span> <span class="ss">launchIdentifiers</span><span class="p">:</span> <span class="kp">nil</span><span class="p">)</span>
</span><span class='line'>    <span class="k">unless</span> <span class="n">ret</span>
</span><span class='line'>      <span class="n">alert</span> <span class="o">=</span> <span class="no">NSAlert</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>      <span class="n">alert</span><span class="o">.</span><span class="n">messageText</span> <span class="o">=</span> <span class="s2">&quot;Failed to open </span><span class="si">#{</span><span class="n">app</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>      <span class="n">alert</span><span class="o">.</span><span class="n">runModal</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/Workspace/Articles/WorkspaceServices.html">Workspace Services Programming Topics: Manipulating Files</a>
には <code>openURL:</code> しか書いてなかったり、
<code>additionalEventParamDescriptor</code> には何を渡せばいいのかわかりにくかったりして困りましたが、
<a href="http://www.lancard.com/blog/2011/05/01/open-url-with-browser-about-mac-app/">http://www.lancard.com/blog/2011/05/01/open-url-with-browser-about-mac-app/</a>
のように呼び出せばうまくいきました。</p>

<p>最初に <code>rake</code> の REPL で試していたら、以下のエラーになるので、しばらく悩んでいましたが、 <code>app/app_delegate.rb</code> の中に書けば動いたので、 <code>rake</code> でコンパイルされるタイミングでリンクできていないメソッドは呼び出せないということなのかと思いました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go">(main)&gt; url = NSURL.URLWithString(&quot;http://www.apple.com&quot;)</span>
</span><span class='line'><span class="go">=&gt; #&lt;NSURL:0x7fcbe8e45060&gt;</span>
</span><span class='line'><span class="go">(main)&gt; NSWorkspaceLaunchAsync = 0x00010000</span>
</span><span class='line'><span class="go">=&gt; 65536</span>
</span><span class='line'><span class="go">(main)&gt; NSWorkspaceLaunchAllowingClassicStartup = 0x00020000</span>
</span><span class='line'><span class="go">=&gt; 131072</span>
</span><span class='line'><span class="go">(main)&gt; NSWorkspaceLaunchDefault = NSWorkspaceLaunchAsync | NSWorkspaceLaunchAllowingClassicStartup</span>
</span><span class='line'><span class="go">=&gt; 196608</span>
</span><span class='line'><span class="go">(main)&gt; NSWorkspace.sharedWorkspace.openURLs([url], withAppBundleIdentifier: &quot;com.google.Chrome&quot;, options: NSWorkspaceLaunchDefault, additionalEventParamDescriptor: nil, launchIdentifiers: nil)</span>
</span><span class='line'><span class="go">dyld: lazy symbol binding failed: Symbol not found: __ZN9RoxorCore14find_bs_cftypeESs</span>
</span><span class='line'><span class="go">  Referenced from: /Library/RubyMotion/data/osx/librubymotion-repl.dylib</span>
</span><span class='line'><span class="go">  Expected in: flat namespace</span>
</span><span class='line'>
</span><span class='line'><span class="go">dyld: Symbol not found: __ZN9RoxorCore14find_bs_cftypeESs</span>
</span><span class='line'><span class="go">  Referenced from: /Library/RubyMotion/data/osx/librubymotion-repl.dylib</span>
</span><span class='line'><span class="go">  Expected in: flat namespace</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="go">================================================================================</span>
</span><span class='line'><span class="go">The application terminated. A crash report file may have been generated by the</span>
</span><span class='line'><span class="go">system, use `rake crashlog&#39; to open it. Use `rake debug=1&#39; to restart the app</span>
</span><span class='line'><span class="go">in the debugger.</span>
</span><span class='line'><span class="go">================================================================================</span>
</span></code></pre></td></tr></table></div></figure>


<h2>NSDate</h2>

<p>途中 <code>NSDate.distantFuture</code> の返り値がおかしいという話がありました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go">(main)&gt; NSDate.distantFuture</span>
</span><span class='line'><span class="go">=&gt; 1677-09-21 09:12:43 +0900</span>
</span><span class='line'><span class="go">(main)&gt; NSDate.distantPast</span>
</span><span class='line'><span class="go">=&gt; 1677-09-21 09:12:43 +0900</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[installコマンドでコマンド数を減らす]]></title>
    <link href="http://blog.n-z.jp/blog/2014-02-14-install.html"/>
    <updated>2014-02-14T23:30:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/install</id>
    <content type="html"><![CDATA[<p>mkdir とか touch とか chown とか chmod とか個別に実行しなくても
install コマンドだけでまとめて出来るという話です。</p>

<!--more-->


<h2>問題例</h2>

<p>Dockerfile の RUN などが典型的な例ですが、他でも例えば
<code>mkdir -p /home/foo/.ssh; chown foo /home/foo/.ssh; chmod 0700 /home/foo/.ssh</code>
のようなことをすることがあると思います。</p>

<p>特に Dockerfile の場合は RUN ごとにイメージがたまっていくこともあって、
<code>;</code> や <code>&amp;&amp;</code> でつなげて単独の RUN にまとめて書くことも多いと思います。</p>

<h2>install でディレクトリを作る</h2>

<p>たとえば</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> mkdir -p /home/foo/.ssh
</span><span class='line'> chown foo /home/foo/.ssh
</span><span class='line'> chgrp users /home/foo/.ssh
</span><span class='line'> chmod 0700 /home/foo/.ssh</span></code></pre></td></tr></table></div></figure>


<p>なら
<code>install -o foo -g users -m 0700 -d /home/foo/.ssh</code>
にまとめられます。</p>

<p><code>install -o foo -g users -m 0700 -d /home/foo/.ssh /home/foo/tmp</code>
のように複数ディレクトリを同時に作成することも出来ます。</p>

<p>2014-02-16 追記:
<a href="http://qiita.com/znz/items/fee7c42587e995566a69#comment-a08bc7770a5fcdf902a0">Qiita の方のコメント</a>
で
<code>sudo -u user mkdir -p -m 700 /home/user/.ssh</code>
というやり方もあるという話がありました。</p>

<h2>install でファイルをコピーする</h2>

<p>たとえば</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> cp /path/from/*.txt /path/to/
</span><span class='line'> chown foo /path/to/*.txt
</span><span class='line'> chgrp users /path/to/*.txt
</span><span class='line'> chmod 0644 /path/to/*.txt</span></code></pre></td></tr></table></div></figure>


<p>なら
<code>install -o foo -g users -m 0644 /path/from/*.txt /path/to/</code>
にまとめられます。</p>

<p><code>install -o foo -g users -m 0644 -t /path/to /path/from/*.txt</code>
のようにディレクトリを先に書くことも出来ます。</p>

<p>1ファイルだけなら
<code>install -o foo -g users -m 0644  /path/from/foo.txt /path/to/bar.txt</code>
のようにコピー先のファイル名を指定することも出来ます。</p>

<h2>まとめ</h2>

<p>たくさん <code>chown</code> や <code>chmod</code> を実行していることがあれば、
<code>install</code> コマンドでまとめられないか検討してみてください。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[packerのtemplateを1から作ってみた]]></title>
    <link href="http://blog.n-z.jp/blog/2014-02-11-packer-template.html"/>
    <updated>2014-02-11T16:37:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/packer-template</id>
    <content type="html"><![CDATA[<p>packer.io のドキュメントの例の最初が amazon になっていて、
気軽に試しにくいと思ったので、
VirtualBox で最小限の設定を順番に試してみました。</p>

<!--more-->


<h2>動作確認バージョン</h2>

<ul>
<li>homebrew で入れた Packer v0.5.1</li>
<li>VirtualBox 4.3.6</li>
</ul>


<h2>空ファイルから builders の type 設定まで</h2>

<p>まず最低限必要な設定を <code>packer validate</code> で調べていきます。
最初は短いのでパイプを使ってコマンドラインのみで試し始めました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">%</span> packer -v
</span><span class='line'><span class="go">Packer v0.5.1</span>
</span><span class='line'><span class="gp">%</span> <span class="nb">echo</span> | packer validate -
</span><span class='line'><span class="go">Failed to parse template: Error in line 2, char -1: unexpected end of JSON input</span>
</span><span class='line'>
</span><span class='line'><span class="gp">%</span> <span class="nb">echo</span> <span class="s1">&#39;{}&#39;</span> | packer validate -
</span><span class='line'><span class="go">Failed to parse template: 1 error(s) occurred:</span>
</span><span class='line'>
</span><span class='line'><span class="go">* No builders are defined in the template.</span>
</span><span class='line'><span class="gp">%</span> <span class="nb">echo</span> <span class="s1">&#39;{&quot;builders&quot;:[{}]}&#39;</span> | packer validate -
</span><span class='line'><span class="go">Failed to parse template: 2 error(s) occurred:</span>
</span><span class='line'>
</span><span class='line'><span class="go">* builder 1: missing &#39;type&#39;</span>
</span><span class='line'><span class="go">* No builders are defined in the template.</span>
</span><span class='line'><span class="gp">%</span> <span class="nb">echo</span> <span class="s1">&#39;{&quot;builders&quot;:[{&quot;type&quot;:&quot;virtualbox-iso&quot;}]}&#39;</span> | packer validate -
</span><span class='line'><span class="go">Template validation failed. Errors are shown below.</span>
</span><span class='line'>
</span><span class='line'><span class="go">Errors validating build &#39;virtualbox-iso&#39;. 4 error(s) occurred:</span>
</span><span class='line'>
</span><span class='line'><span class="go">* An ssh_username must be specified.</span>
</span><span class='line'><span class="go">* Due to large file sizes, an iso_checksum is required</span>
</span><span class='line'><span class="go">* The iso_checksum_type must be specified.</span>
</span><span class='line'><span class="go">* One of iso_url or iso_urls must be specified.</span>
</span></code></pre></td></tr></table></div></figure>


<h2>virtualbox-iso の最低限の設定</h2>

<p>長くなってきたので、ここからファイルを使うことにしました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">%</span> cat template.json
</span><span class='line'><span class="go">{</span>
</span><span class='line'><span class="go">  &quot;builders&quot;: [{</span>
</span><span class='line'><span class="go">    &quot;type&quot;: &quot;virtualbox-iso&quot;,</span>
</span><span class='line'><span class="go">    &quot;ssh_username&quot;: &quot;packer&quot;,</span>
</span><span class='line'><span class="go">    &quot;iso_checksum&quot;: &quot;db79d463072da26b91c14e08b5a77a77bec9476ad1e5b0d2241228e4d59233f12c74477e77d427e407e1f45da4d2414c76367554352f57480fc7c00dde164028&quot;,</span>
</span><span class='line'><span class="go">    &quot;iso_checksum_type&quot;: &quot;sha512&quot;,</span>
</span><span class='line'><span class="go">    &quot;iso_urls&quot;: [</span>
</span><span class='line'><span class="go">      &quot;http://ftp.jaist.ac.jp/debian-cd/7.4.0/amd64/iso-cd/debian-7.4.0-amd64-netinst.iso&quot;,</span>
</span><span class='line'><span class="go">      &quot;http://cdimage.debian.org/debian-cd/7.4.0/amd64/iso-cd/debian-7.4.0-amd64-netinst.iso&quot;</span>
</span><span class='line'><span class="go">    ]</span>
</span><span class='line'><span class="go">  }]</span>
</span><span class='line'><span class="go">}</span>
</span><span class='line'><span class="gp">%</span> packer validate template.json
</span><span class='line'><span class="go">Template validation succeeded, but there were some warnings.</span>
</span><span class='line'><span class="go">These are ONLY WARNINGS, and Packer will attempt to build the</span>
</span><span class='line'><span class="go">template despite them, but they should be paid attention to.</span>
</span><span class='line'>
</span><span class='line'><span class="go">Warnings for build &#39;virtualbox-iso&#39;:</span>
</span><span class='line'>
</span><span class='line'><span class="go">* A shutdown_command was not specified. Without a shutdown command, Packer</span>
</span><span class='line'><span class="go">will forcibly halt the virtual machine, which may result in data loss.</span>
</span></code></pre></td></tr></table></div></figure>


<h2>boot_command 設定</h2>

<p>preseed.cfg と組み合わせるための boot_command の最低限の設定は以下のようになりました。
オプションの部分は追加削除しやすいように行ごとに <code>&lt;wait&gt;</code> を入れてソートしています。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="s2">&quot;boot_command&quot;</span><span class="err">:</span> <span class="p">[</span>
</span><span class='line'>  <span class="s2">&quot;&lt;esc&gt;&lt;wait&gt;&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;install&lt;wait&gt;&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot; auto=true&lt;wait&gt;&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot; netcfg/get_domain=example.jp&lt;wait&gt;&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot; netcfg/get_hostname=&lt;wait&gt;&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot; url=http://:/preseed.cfg&lt;wait&gt;&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;&lt;enter&gt;&lt;wait&gt;&quot;</span>
</span><span class='line'><span class="p">]</span><span class="err">,</span>
</span></code></pre></td></tr></table></div></figure>


<h3>boot: プロンプト</h3>

<p>Ubuntu の server 用インストーラーだと <code>&lt;esc&gt;&lt;esc&gt;&lt;enter&gt;&lt;wait&gt;</code> になっているようですが、
Debian の netinst のインストーラーの場合は <code>&lt;esc&gt;&lt;wait&gt;</code> だけで <code>boot:</code> プロンプトになりました。
余計な <code>&lt;esc&gt;</code> などがあるとメニューに戻ってしまうようなので、
うまくいかないときは実際に試して確認するのが良さそうです。</p>

<h3>install</h3>

<p><code>Install</code> のところで Tab を押してコマンドラインを確認すると
<code>/install.amd/vmlinuz vga=788 initrd=/install.amd/initrd.gz -- quiet</code>
となっていたので、展開して以下の設定でも良いようです。
<code>--</code> より後ろの部分はインストール後のカーネルの引数にも使われるので、
<code>quiet</code> を削りたい場合は展開する必要がありそうです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="s2">&quot;boot_command&quot;</span><span class="err">:</span> <span class="p">[</span>
</span><span class='line'>  <span class="s2">&quot;&lt;esc&gt;&lt;wait&gt;&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;/install.amd/vmlinuz&lt;wait&gt;&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot; auto=true&lt;wait&gt;&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot; netcfg/get_domain=example.jp&lt;wait&gt;&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot; netcfg/get_hostname=&lt;wait&gt;&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot; url=http://:/preseed.cfg&lt;wait&gt;&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot; vga=788&lt;wait&gt;&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot; initrd=/install.amd/initrd.gz&lt;wait&gt;&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot; -- quiet&lt;wait&gt;&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;&lt;enter&gt;&lt;wait&gt;&quot;</span>
</span><span class='line'><span class="p">]</span><span class="err">,</span>
</span></code></pre></td></tr></table></div></figure>


<h3>自動モード</h3>

<p>言語設定などを preseed.cfg に書くための
<a href="https://www.debian.org/releases/stable/amd64/apbs02.html.ja#preseed-auto">自動モード</a>
は
<a href="http://d.palmtb.net/2013/08/22/the_parameter_of_boot_option__auto__had_been_changed_for_auto_install_of_wheezy.html">The parameter of boot option “auto” had been changed for auto install of wheezy</a>
に書いてあるように wheezy だと <code>auto</code> ではなく <code>auto=true</code> にする必要がありました。</p>

<p><a href="https://www.debian.org/releases/stable/amd64/apbs02.html.ja#preseed-aliases">preseed で利用できるエイリアス</a>
は preseed.cfg の中では使えないようです。
(試した範囲では <code>d-i keymap select jp</code> ではなく <code>d-i keyboard-configuration/xkb-keymap select jp</code> にする必要がありました。)</p>

<h3>preseed.cfg</h3>

<p><code>"http_directory": "http"</code> で指定したディレクトリに <code>preseed.cfg</code> を置いて
<code>url=http://:/preseed.cfg</code>
で参照しています。</p>

<p><code>http_directory</code> の指定を忘れると &#8220; が 0 になっているなど、
ちゃんと見ていればなんか変だと気付けるようです。</p>

<h3>ホスト名、ドメイン名</h3>

<p>&#8220; を使えるように boot_command で設定しています。
固定なら preseed.cfg の中でも良いと思います。</p>

<h2>preseed.cfg</h2>

<p><a href="https://www.debian.org/releases/wheezy/example-preseed.txt">https://www.debian.org/releases/wheezy/example-preseed.txt</a> などを参考にして、
preseed.cfg を以下のように設定して途中で止まることなくインストールできました。</p>

<p>example-preseed.txt にはなかった設定の
<code>d-i grub-installer/only_debian boolean true</code>
を追加すると grub を MBR にインストールするかどうかというところも
止まらずに進みました。</p>

<figure class='code'><figcaption><span>http/preseed.cfg</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>#### Contents of the preconfiguration file (for wheezy)
</span><span class='line'>### Localization
</span><span class='line'>d-i debian-installer/locale string ja_JP
</span><span class='line'>d-i localechooser/supported-locales multiselect en_US.UTF-8, ja_JP.EUC-JP
</span><span class='line'>#d-i keymap select jp
</span><span class='line'>d-i keyboard-configuration/xkb-keymap select jp
</span><span class='line'>
</span><span class='line'>### Network configuration
</span><span class='line'>d-i netcfg/choose_interface select auto
</span><span class='line'>d-i netcfg/wireless_wep string
</span><span class='line'>
</span><span class='line'>### Mirror settings
</span><span class='line'>d-i mirror/protocol string http
</span><span class='line'>d-i mirror/country string manual
</span><span class='line'>d-i mirror/http/hostname string ftp.jp.debian.org
</span><span class='line'>d-i mirror/http/directory string /debian
</span><span class='line'>d-i mirror/http/proxy string
</span><span class='line'>d-i mirror/suite string wheezy
</span><span class='line'>
</span><span class='line'>### Account setup
</span><span class='line'>d-i passwd/root-login boolean false
</span><span class='line'>d-i passwd/make-user boolean true
</span><span class='line'>d-i passwd/user-fullname string Vagrant User
</span><span class='line'>d-i passwd/username string vagrant
</span><span class='line'>d-i passwd/user-password password vagrant
</span><span class='line'>d-i passwd/user-password-again password vagrant
</span><span class='line'>
</span><span class='line'>### Clock and time zone setup
</span><span class='line'>d-i clock-setup/utc boolean true
</span><span class='line'>d-i time/zone string Japan
</span><span class='line'>d-i clock-setup/ntp boolean true
</span><span class='line'>d-i clock-setup/ntp-server string ntp.mfeed.ad.jp
</span><span class='line'>
</span><span class='line'>### Partitioning
</span><span class='line'>d-i partman-auto/method string lvm
</span><span class='line'>d-i partman-lvm/device_remove_lvm boolean true
</span><span class='line'>d-i partman-md/device_remove_md boolean true
</span><span class='line'>d-i partman-lvm/confirm boolean true
</span><span class='line'>d-i partman-lvm/confirm_nooverwrite boolean true
</span><span class='line'>d-i partman-auto/choose_recipe select atomic
</span><span class='line'>d-i partman-partitioning/confirm_write_new_label boolean true
</span><span class='line'>d-i partman/choose_partition select finish
</span><span class='line'>d-i partman/confirm boolean true
</span><span class='line'>d-i partman/confirm_nooverwrite boolean true
</span><span class='line'># Install the GRUB boot loader to the master boot record?
</span><span class='line'>d-i grub-installer/only_debian boolean true
</span><span class='line'>
</span><span class='line'>### Package selection
</span><span class='line'>tasksel tasksel/first multiselect minimal
</span><span class='line'>d-i pkgsel/include string openssh-server build-essential
</span><span class='line'>d-i pkgsel/upgrade select none
</span><span class='line'>popularity-contest popularity-contest/participate boolean false
</span><span class='line'>
</span><span class='line'>### Finishing up the installation
</span><span class='line'>d-i finish-install/reboot_in_progress note
</span></code></pre></td></tr></table></div></figure>


<h2>template.json</h2>

<p>最終的に上の <code>preseed.cfg</code> と組み合わせる最低限の template.json は以下のようになりました。</p>

<figure class='code'><figcaption><span>template.json</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="nt">&quot;builders&quot;</span><span class="p">:</span> <span class="p">[{</span>
</span><span class='line'>    <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;virtualbox-iso&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;boot_command&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>      <span class="s2">&quot;&lt;esc&gt;&lt;wait&gt;&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s2">&quot;install&lt;wait&gt;&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s2">&quot; auto=true&lt;wait&gt;&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s2">&quot; netcfg/get_domain=example.jp&lt;wait&gt;&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s2">&quot; netcfg/get_hostname=&lt;wait&gt;&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s2">&quot; url=http://:/preseed.cfg&lt;wait&gt;&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s2">&quot;&lt;enter&gt;&lt;wait&gt;&quot;</span>
</span><span class='line'>    <span class="p">],</span>
</span><span class='line'>    <span class="nt">&quot;guest_os_type&quot;</span><span class="p">:</span> <span class="s2">&quot;Debian_64&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;http_directory&quot;</span><span class="p">:</span> <span class="s2">&quot;http&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;ssh_username&quot;</span><span class="p">:</span> <span class="s2">&quot;vagrant&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;ssh_password&quot;</span><span class="p">:</span> <span class="s2">&quot;vagrant&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;shutdown_command&quot;</span><span class="p">:</span> <span class="s2">&quot;echo vagrant|sudo -S /sbin/shutdown -hP now&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;iso_checksum&quot;</span><span class="p">:</span> <span class="s2">&quot;db79d463072da26b91c14e08b5a77a77bec9476ad1e5b0d2241228e4d59233f12c74477e77d427e407e1f45da4d2414c76367554352f57480fc7c00dde164028&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;iso_checksum_type&quot;</span><span class="p">:</span> <span class="s2">&quot;sha512&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;iso_urls&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>      <span class="s2">&quot;http://ftp.jaist.ac.jp/debian-cd/7.4.0/amd64/iso-cd/debian-7.4.0-amd64-netinst.iso&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="s2">&quot;http://cdimage.debian.org/debian-cd/7.4.0/amd64/iso-cd/debian-7.4.0-amd64-netinst.iso&quot;</span>
</span><span class='line'>    <span class="p">]</span>
</span><span class='line'>  <span class="p">}]</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>まとめ</h2>

<p><code>template.json</code> と <code>http/preseed.cfg</code> を作成して <code>packer build template.json</code> で <code>output-virtualbox-iso/packer-virtualbox-iso-disk1.vmdk</code> と <code>output-virtualbox-iso/packer-virtualbox-iso.ovf</code> が 8 分ぐらいで作成できました。
(iso は packer_cache/ にダウンロード済みの状態)</p>

<p>この ovf ファイルは VirtualBox にインポートして使えます。</p>

<p>最低限の設定しかしていないので、他の template.json を参考にして provisioners の設定を足していくなどのカスタマイズをしていけば良さそうだと思いました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">%</span> packer validate template.json
</span><span class='line'><span class="go">Template validated successfully.</span>
</span><span class='line'><span class="gp">%</span> packer build template.json
</span><span class='line'><span class="go">virtualbox-iso output will be in this color.</span>
</span><span class='line'>
</span><span class='line'><span class="go">==&gt; virtualbox-iso: Downloading or copying Guest additions checksums</span>
</span><span class='line'><span class="go">    virtualbox-iso: Downloading or copying: http://download.virtualbox.org/virtualbox/4.3.6/SHA256SUMS</span>
</span><span class='line'><span class="go">==&gt; virtualbox-iso: Downloading or copying Guest additions</span>
</span><span class='line'><span class="go">    virtualbox-iso: Downloading or copying: http://download.virtualbox.org/virtualbox/4.3.6/VBoxGuestAdditions_4.3.6.iso</span>
</span><span class='line'><span class="go">==&gt; virtualbox-iso: Downloading or copying ISO</span>
</span><span class='line'><span class="go">    virtualbox-iso: Downloading or copying: http://ftp.jaist.ac.jp/debian-cd/7.4.0/amd64/iso-cd/debian-7.4.0-amd64-netinst.iso</span>
</span><span class='line'><span class="go">==&gt; virtualbox-iso: Starting HTTP server on port 8081</span>
</span><span class='line'><span class="go">==&gt; virtualbox-iso: Creating virtual machine...</span>
</span><span class='line'><span class="go">==&gt; virtualbox-iso: Creating hard drive...</span>
</span><span class='line'><span class="go">==&gt; virtualbox-iso: Creating forwarded port mapping for SSH (host port 3213)</span>
</span><span class='line'><span class="go">==&gt; virtualbox-iso: Starting the virtual machine...</span>
</span><span class='line'><span class="go">==&gt; virtualbox-iso: Waiting 10s for boot...</span>
</span><span class='line'><span class="go">==&gt; virtualbox-iso: Typing the boot command...</span>
</span><span class='line'><span class="go">==&gt; virtualbox-iso: Waiting for SSH to become available...</span>
</span><span class='line'><span class="go">==&gt; virtualbox-iso: Connected to SSH!</span>
</span><span class='line'><span class="go">==&gt; virtualbox-iso: Uploading VirtualBox version info (4.3.6)</span>
</span><span class='line'><span class="go">==&gt; virtualbox-iso: Uploading VirtualBox guest additions ISO...</span>
</span><span class='line'><span class="go">==&gt; virtualbox-iso: Gracefully halting virtual machine...</span>
</span><span class='line'><span class="go">    virtualbox-iso:</span>
</span><span class='line'><span class="go">    virtualbox-iso: We trust you have received the usual lecture from the local System</span>
</span><span class='line'><span class="go">    virtualbox-iso: Administrator. It usually boils down to these three things:</span>
</span><span class='line'><span class="go">    virtualbox-iso:</span>
</span><span class='line'><span class="go">    virtualbox-iso: #1) Respect the privacy of others.</span>
</span><span class='line'><span class="go">    virtualbox-iso: #2) Think before you type.</span>
</span><span class='line'><span class="go">    virtualbox-iso: #3) With great power comes great responsibility.</span>
</span><span class='line'><span class="go">    virtualbox-iso:</span>
</span><span class='line'><span class="go">    virtualbox-iso: [sudo] password for vagrant:</span>
</span><span class='line'><span class="go">    virtualbox-iso: The system is going down for system halt NOW!</span>
</span><span class='line'><span class="go">==&gt; virtualbox-iso: Preparing to export machine...</span>
</span><span class='line'><span class="go">    virtualbox-iso: Deleting forwarded port mapping for SSH (host port 3213)</span>
</span><span class='line'><span class="go">==&gt; virtualbox-iso: Exporting virtual machine...</span>
</span><span class='line'><span class="go">==&gt; virtualbox-iso: Unregistering and deleting virtual machine...</span>
</span><span class='line'><span class="go">Build &#39;virtualbox-iso&#39; finished.</span>
</span><span class='line'>
</span><span class='line'><span class="go">==&gt; Builds finished. The artifacts of successful builds are:</span>
</span><span class='line'><span class="go">--&gt; virtualbox-iso: VM files in directory: output-virtualbox-iso</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[pre-commit hookでmasterへのcommitを禁止した]]></title>
    <link href="http://blog.n-z.jp/blog/2014-02-07-pre-commit-hook.html"/>
    <updated>2014-02-07T16:57:54+09:00</updated>
    <id>http://blog.n-z.jp/blog/pre-commit-hook</id>
    <content type="html"><![CDATA[<p>git flow を使っていて、
<code>git flow release finish</code>
後に master ブランチのままなのに気付かずに
develop ブランチのつもりで git commit してしまうということが起きるので、
pre-commit hook で禁止するようにしてみました。</p>

<!--more-->


<h2>参考</h2>

<p>twitter で
<a href="https://github.com/bleis-tift/Git-Hooks/blob/rewrite/hooks/pre-commit">https://github.com/bleis-tift/Git-Hooks/blob/rewrite/hooks/pre-commit</a>
というのを教えてもらって、
Git.pm に依存しているこれをそのまま使うのは面倒そうだったので、
シェルスクリプトで実装してみました。</p>

<h2>pre-commit の引数</h2>

<p>さきほどの pre-commit だと <code>my $gitdir = shift;</code> としていて、
pre-commit の第一引数で git-dir が渡されるのかと思ったのですが、
実際に試してみるとそんなことはなくて、
<code>.git/hooks/pre-commit.sample</code>
をみても <code>--git-dir</code> は付けていなかったので、
付けずに git コマンドを呼び出すことにしました。</p>

<h2>is_master_branch</h2>

<p><code>is_master_branch</code> の実装を GitHub の検索を使って探してみると
<code>git --git-dir="$dir" symbolic-ref HEAD 2&gt;/dev/null</code>
の結果を
<code>s"refs/heads/""</code>
で処理して
<code>'master'</code>
と比較しているだけだったので、</p>

<figure class='code'><figcaption><span>is_master_branch</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="k">if </span><span class="nb">test</span> <span class="s2">&quot;`git symbolic-ref HEAD | sed -e &#39;s:^refs/heads/::&#39;`&quot;</span> <span class="o">=</span> master; <span class="k">then</span>
</span><span class='line'><span class="k">  </span><span class="nb">echo</span> <span class="s2">&quot;cannot commit on master branch.&quot;</span>
</span><span class='line'>  <span class="nb">exit </span>1
</span><span class='line'><span class="k">fi</span>
</span></code></pre></td></tr></table></div></figure>


<p>とすることにしました。</p>

<p>pre-commit.sample を pre-commit にコピーして、
<code>exec 1&gt;&amp;2</code>
の下に追加しました。</p>

<h2>pre-commit 全体</h2>

<p>元の pre-commit.sample からコピーした部分も含めて、
pre-commit hook 全体は以下のようになりました。</p>

<figure class='code'><figcaption><span>.git/hooks/pre-commit</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c">#!/bin/sh</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c"># An example hook script to verify what is about to be committed.</span>
</span><span class='line'><span class="c"># Called by &quot;git commit&quot; with no arguments.  The hook should</span>
</span><span class='line'><span class="c"># exit with non-zero status after issuing an appropriate message if</span>
</span><span class='line'><span class="c"># it wants to stop the commit.</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c"># To enable this hook, rename this file to &quot;pre-commit&quot;.</span>
</span><span class='line'>
</span><span class='line'><span class="k">if </span>git rev-parse --verify HEAD &gt;/dev/null 2&gt;&amp;1
</span><span class='line'><span class="k">then</span>
</span><span class='line'><span class="k">  </span><span class="nv">against</span><span class="o">=</span>HEAD
</span><span class='line'><span class="k">else</span>
</span><span class='line'>  <span class="c"># Initial commit: diff against an empty tree object</span>
</span><span class='line'>  <span class="nv">against</span><span class="o">=</span>4b825dc642cb6eb9a060e54bf8d69288fbee4904
</span><span class='line'><span class="k">fi</span>
</span><span class='line'>
</span><span class='line'><span class="c"># If you want to allow non-ascii filenames set this variable to true.</span>
</span><span class='line'><span class="nv">allownonascii</span><span class="o">=</span><span class="k">$(</span>git config hooks.allownonascii<span class="k">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Redirect output to stderr.</span>
</span><span class='line'><span class="nb">exec </span>1&gt;&amp;2
</span><span class='line'>
</span><span class='line'><span class="k">if </span><span class="nb">test</span> <span class="s2">&quot;`git symbolic-ref HEAD | sed -e &#39;s:^refs/heads/::&#39;`&quot;</span> <span class="o">=</span> master; <span class="k">then</span>
</span><span class='line'><span class="k">  </span><span class="nb">echo</span> <span class="s2">&quot;cannot commit on master branch.&quot;</span>
</span><span class='line'>  <span class="nb">exit </span>1
</span><span class='line'><span class="k">fi</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Cross platform projects tend to avoid non-ascii filenames; prevent</span>
</span><span class='line'><span class="c"># them from being added to the repository. We exploit the fact that the</span>
</span><span class='line'><span class="c"># printable range starts at the space character and ends with tilde.</span>
</span><span class='line'><span class="k">if</span> <span class="o">[</span> <span class="s2">&quot;$allownonascii&quot;</span> !<span class="o">=</span> <span class="s2">&quot;true&quot;</span> <span class="o">]</span> <span class="o">&amp;&amp;</span>
</span><span class='line'>  <span class="c"># Note that the use of brackets around a tr range is ok here, (it&#39;s</span>
</span><span class='line'>  <span class="c"># even required, for portability to Solaris 10&#39;s /usr/bin/tr), since</span>
</span><span class='line'>  <span class="c"># the square bracket bytes happen to fall in the designated range.</span>
</span><span class='line'>  <span class="nb">test</span> <span class="k">$(</span>git diff --cached --name-only --diff-filter<span class="o">=</span>A -z <span class="nv">$against</span> |
</span><span class='line'>    <span class="nv">LC_ALL</span><span class="o">=</span>C tr -d <span class="s1">&#39;[ -~]\0&#39;</span> | wc -c<span class="k">)</span> !<span class="o">=</span> 0
</span><span class='line'><span class="k">then</span>
</span><span class='line'><span class="k">  </span><span class="nb">echo</span> <span class="s2">&quot;Error: Attempt to add a non-ascii file name.&quot;</span>
</span><span class='line'>  <span class="nb">echo</span>
</span><span class='line'><span class="nb"> echo</span> <span class="s2">&quot;This can cause problems if you want to work&quot;</span>
</span><span class='line'>  <span class="nb">echo</span> <span class="s2">&quot;with people on other platforms.&quot;</span>
</span><span class='line'>  <span class="nb">echo</span>
</span><span class='line'><span class="nb"> echo</span> <span class="s2">&quot;To be portable it is advisable to rename the file ...&quot;</span>
</span><span class='line'>  <span class="nb">echo</span>
</span><span class='line'><span class="nb"> echo</span> <span class="s2">&quot;If you know what you are doing you can disable this&quot;</span>
</span><span class='line'>  <span class="nb">echo</span> <span class="s2">&quot;check using:&quot;</span>
</span><span class='line'>  <span class="nb">echo</span>
</span><span class='line'><span class="nb"> echo</span> <span class="s2">&quot;  git config hooks.allownonascii true&quot;</span>
</span><span class='line'>  <span class="nb">echo</span>
</span><span class='line'><span class="nb"> exit </span>1
</span><span class='line'><span class="k">fi</span>
</span><span class='line'>
</span><span class='line'><span class="c"># If there are whitespace errors, print the offending file names and fail.</span>
</span><span class='line'><span class="nb">exec </span>git diff-index --check --cached <span class="nv">$against</span> --
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[bootstrap-sass-railsからbootstrap-sassに移行した]]></title>
    <link href="http://blog.n-z.jp/blog/2014-02-06-bootstrap-sass.html"/>
    <updated>2014-02-06T14:29:27+09:00</updated>
    <id>http://blog.n-z.jp/blog/bootstrap-sass</id>
    <content type="html"><![CDATA[<p>今日の <code>bundle update</code> は bootstrap の sass の gem を bootstrap 公式のものに移行したのが大きな変更点でした。</p>

<!--more-->


<h2>bootstrap-sass-rails から bootstrap-sass 3.1.0.2</h2>

<p><a href="http://blog.getbootstrap.com/2014/01/30/bootstrap-3-1-0-released/">bootstrap 3.1.0 がリリース</a>されて少し時間が経ったので、
bootstrap-sass-rails を確認してみたところ、
<a href="https://github.com/yabawock/bootstrap-sass-rails#deprecation-notice">DEPRECATION NOTICE</a>
に公式サポートされた sass の gem があるので、
そちらに移行を推奨と書かれていたので、移行しました。</p>

<p>bootstrap-sass gem への移行は UPGRADING に書かれているように <code>@import "twitter/bootstrap";</code> を <code>@import "bootstrap";</code> に書き換えるだけでした。</p>

<h2>bootstrap-sass のカスタマイズ</h2>

<p><a href="https://github.com/twbs/bootstrap-sass#usage">Usage</a>
によると、一番単純な使い方としては <code>@import "bootstrap";</code> だけですが、
<a href="http://getbootstrap.com/customize/#less-variables">Less variables</a>
を参考にして以下のようにカスタマイズして使うのが良いようです。</p>

<p>Less では変数の接頭辞は <code>@</code> ですが、 sass では <code>$</code> になることさえわかっていれば、最低限のカスタマイズは出来ると思います。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$navbar-default-bg: #312312;
</span><span class='line'>$light-orange: #ff8c00;
</span><span class='line'>$navbar-default-color: $light-orange;
</span><span class='line'>
</span><span class='line'>@import "bootstrap";</span></code></pre></td></tr></table></div></figure>


<p>bootstrap-sass-rails からの移行だったので、
bootstrap-custom.css.scss の内容は以下のようにしました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$body-bg:               #fff;
</span><span class='line'>$text-color:            lighten(#000, 20%);
</span><span class='line'>
</span><span class='line'>@import "bootstrap";</span></code></pre></td></tr></table></div></figure>


<p>もっと高度なカスタマイズをするなら、
<code>cp $(bundle show bootstrap-sass)/vendor/assets/stylesheets/bootstrap.scss app/assets/stylesheets/bootstrap-custom.scss</code>
でコピーしたファイルを
<code>@import 'bootstrap';</code>
の代わりに
<code>@import 'bootstrap-custom';</code>
で使うことを想定しているようです。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rails_best_practices 1.15.0でtryが壊れた]]></title>
    <link href="http://blog.n-z.jp/blog/2014-02-05-rails-best-practices-1-15-0-broken.html"/>
    <updated>2014-02-05T10:35:06+09:00</updated>
    <id>http://blog.n-z.jp/blog/rails-best-practices-1-15-0-broken</id>
    <content type="html"><![CDATA[<p>今日の <code>bundle update</code> をしてみたところ、開発環境での devise でのログイン時に <code>devise (3.2.2) lib/devise/hooks/csrf_cleaner.rb, line 3</code> で <code>wrong number of arguments (2 for 1)</code> という <code>ArgumentError</code> が発生するようになりました。</p>

<p>その原因調査方法の記録です。</p>

<!--more-->


<p>例外が発生した行は以下の内容で、今まで問題なく動いていたし、特に問題はなさそうだったので、他の gem の影響だということがわかりました。</p>

<figure class='code'><figcaption><span>lib/devise/hooks/csrf_cleaner.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">Warden</span><span class="p">:</span><span class="ss">:Manager</span><span class="o">.</span><span class="n">after_authentication</span> <span class="k">do</span> <span class="o">|</span><span class="n">record</span><span class="p">,</span> <span class="n">warden</span><span class="p">,</span> <span class="n">options</span><span class="o">|</span>
</span><span class='line'>  <span class="k">if</span> <span class="no">Devise</span><span class="o">.</span><span class="n">clean_up_csrf_token_on_authentication</span>
</span><span class='line'>    <span class="n">warden</span><span class="o">.</span><span class="n">request</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">try</span><span class="p">(</span><span class="ss">:delete</span><span class="p">,</span> <span class="ss">:_csrf_token</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>ソースコードを追いかけるのは難しそうだったので、 better_errors の live shell を使って調査しました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">&gt;</span>&gt; env.keys
</span><span class='line'><span class="go">=&gt; 略</span>
</span><span class='line'><span class="gp">&gt;</span>&gt; env<span class="o">[</span><span class="s2">&quot;warden&quot;</span><span class="o">]</span>
</span><span class='line'><span class="go">=&gt; Warden::Proxy:70192217236640 @config={:default_scope=&gt;:user, :scope_defaults=&gt;{}, :default_strategies=&gt;{:user=&gt;[:rememberable, :database_authenticatable]}, :intercept_401=&gt;false, :failure_app=&gt;#&lt;Devise::Delegator:0x007fadcc44d438&gt;}</span>
</span><span class='line'><span class="gp">&gt;</span>&gt; env<span class="o">[</span><span class="s2">&quot;warden&quot;</span><span class="o">]</span>.request
</span><span class='line'><span class="go">=&gt; #&lt;ActionDispatch::Request:0x007fadd10c4dc0 略&gt;</span>
</span><span class='line'><span class="gp">&gt;</span>&gt; env<span class="o">[</span><span class="s2">&quot;warden&quot;</span><span class="o">]</span>.request.session
</span><span class='line'><span class="go">=&gt; {&quot;session_id&quot;=&gt;&quot;略&quot;, &quot;user_return_to&quot;=&gt;&quot;/&quot;, &quot;_csrf_token&quot;=&gt;&quot;略&quot;, &quot;warden.user.user.key&quot;=&gt;[[8], &quot;$2a$10$略&quot;]}</span>
</span><span class='line'><span class="gp">&gt;</span>&gt; env<span class="o">[</span><span class="s2">&quot;warden&quot;</span><span class="o">]</span>.request.session.try<span class="o">(</span>:delete, :_csrf_token<span class="o">)</span>
</span><span class='line'><span class="go">!! #&lt;ArgumentError: wrong number of arguments (2 for 1)&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>env["warden"]</code> 経由で再現しました。</p>

<p>次に原因を探るために <code>arity</code> を調べました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">&gt;</span>&gt; env<span class="o">[</span><span class="s2">&quot;warden&quot;</span><span class="o">]</span>.request.session.methods.grep /delete/
</span><span class='line'><span class="go">=&gt; [:delete, :delete_if]</span>
</span><span class='line'><span class="gp">&gt;</span>&gt; env<span class="o">[</span><span class="s2">&quot;warden&quot;</span><span class="o">]</span>.request.session.method<span class="o">(</span><span class="s2">&quot;delete&quot;</span><span class="o">)</span>
</span><span class='line'><span class="go">=&gt; #&lt;Method: Rack::Session::Abstract::SessionHash#delete&gt;</span>
</span><span class='line'><span class="gp">&gt;</span>&gt; env<span class="o">[</span><span class="s2">&quot;warden&quot;</span><span class="o">]</span>.request.session.method<span class="o">(</span><span class="s2">&quot;delete&quot;</span><span class="o">)</span>.arity
</span><span class='line'><span class="go">=&gt; 1</span>
</span><span class='line'><span class="gp">&gt;</span>&gt; env<span class="o">[</span><span class="s2">&quot;warden&quot;</span><span class="o">]</span>.request.session.method<span class="o">(</span><span class="s2">&quot;try&quot;</span><span class="o">)</span>
</span><span class='line'><span class="go">=&gt; #&lt;Method: Rack::Session::Abstract::SessionHash(Object)#try&gt;</span>
</span><span class='line'><span class="gp">&gt;</span>&gt; env<span class="o">[</span><span class="s2">&quot;warden&quot;</span><span class="o">]</span>.request.session.method<span class="o">(</span><span class="s2">&quot;try&quot;</span><span class="o">)</span>.arity
</span><span class='line'><span class="go">=&gt; 1</span>
</span><span class='line'><span class="gp">&gt;</span>&gt; env<span class="o">[</span><span class="s2">&quot;warden&quot;</span><span class="o">]</span>.request.session.method<span class="o">(</span><span class="s2">&quot;try&quot;</span><span class="o">)</span>.source_location
</span><span class='line'><span class="go">=&gt; [&quot;略/rails_best_practices-1.15.0/lib/rails_best_practices/core_ext/object.rb&quot;, 7]</span>
</span><span class='line'><span class="gp">&gt;</span>&gt;
</span></code></pre></td></tr></table></div></figure>


<p>rails_best_practices 1.15.0 が原因とわかったので issues を確認すると既に同様の現象の報告があったので、<a href="https://github.com/railsbp/rails_best_practices/issues/202#issuecomment-34129010">コメントしておきました</a>。</p>
]]></content>
  </entry>
  
</feed>
