<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[@znz blog]]></title>
  <link href="http://blog.n-z.jp/atom.xml" rel="self"/>
  <link href="http://blog.n-z.jp/"/>
  <updated>2015-07-22T01:42:26+09:00</updated>
  <id>http://blog.n-z.jp/</id>
  <author>
    <name><![CDATA[Kazuhiro NISHIYAMA]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[関西Ruby会議06に参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2015-07-11-kanrk06.html"/>
    <updated>2015-07-11T23:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/kanrk06</id>
    <content type="html"><![CDATA[<p><a href="http://regional.rubykaigi.org/kansai06/" title="関西Ruby会議06">関西Ruby会議06</a>
と前夜祭に参加しました。</p>

<!--more-->


<p>メモはとらずに話を聞くことに集中していたので、この記事は感想がメインです。</p>

<h2>前夜祭</h2>

<p>matz への質問コーナーで <code>.emacs</code> の行数という質問の答えのときに行数だけではなく内容もざっと見せてもらえて、
morq というのがちらっと目に付いたので、
会場からの質問のタイミングでメールリーダーについてきいてみたところ、
morq をまだ使っていて、最初は全文検索に Rast を使っていたという話から
Hyper Estraier? (Estraier と言っていたかも?) に乗り換えて、
さらに今は groonga を使っているということが聞けました。</p>

<h2>基調講演1</h2>

<p>matz の昔話が中心でした。</p>

<p>PC-1211 は前夜祭のときの思い出のコンピューターは何かという質問の答えのときにも使われていた画像だったので、
あの時に出した画像は、この講演の資料の画像だったのかと思いました。</p>

<h2>スポンサーLT</h2>

<p>作っているサービスの宣伝は少なめで、技術的な話が多めでした。</p>

<p><code>wicked_pdf</code> の画像などのメソッドの切り替えは、みんな同じようなラッパーメソッドを作って使っていそうなので、もうちょっと <code>wicked_pdf</code> の方でなんとかできると良さそうなのに、と思いました。</p>

<h2>講演</h2>

<p>Rspec と Minitest の比較の話が一番印象に残りました。
個人的には transpec で Rspec 2 から 3 に問題なく移行できたので、
Rspec を使い続けていますが、
Minitest も機会があれば使ってみようと思いました。</p>

<h2>LT</h2>

<p>Ruby 関西のイベントとしては珍しくちゃんと5分で強制終了になるという形式でした。
時間に収まらずに続きがきになる発表もあったので、後で発表資料を確認したいと思いました。</p>

<h2>基調講演2</h2>

<p>最後は笹田さんの Ruby 2.2 でのキーワード引数の速度改善の話でした。</p>

<p>キーワード引数はまだほとんど使ったことがなかったので、
話に出てきた Proc との組み合わせなどを
<code>irb</code> で試してみると
以下のような挙動でした。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% rbenv exec irb -r irb/completion --simple-prompt
</span><span class='line'>&gt;&gt; def foo(a, b, key1: 1, key2: 2);end
</span><span class='line'>=&gt; :foo
</span><span class='line'>&gt;&gt; foo(1,2, key3: 3)
</span><span class='line'>ArgumentError: unknown keyword: key3
</span><span class='line'>         from (irb):3
</span><span class='line'>         from /Users/kazu/.rbenv/versions/2.1.5/bin/irb:11:in `&lt;main&gt;'
</span><span class='line'>&gt;&gt; lambda{|a,b|p [a, b]}.call(1,2,3)
</span><span class='line'>ArgumentError: wrong number of arguments (3 for 2)
</span><span class='line'>         from (irb):6:in `block in irb_binding'
</span><span class='line'>         from (irb):6:in `call'
</span><span class='line'>         from (irb):6
</span><span class='line'>         from /Users/kazu/.rbenv/versions/2.1.5/bin/irb:11:in `&lt;main&gt;'
</span><span class='line'>&gt;&gt; lambda{|a,b|p [a, b]}.call(1)
</span><span class='line'>ArgumentError: wrong number of arguments (1 for 2)
</span><span class='line'>         from (irb):7:in `block in irb_binding'
</span><span class='line'>         from (irb):7:in `call'
</span><span class='line'>         from (irb):7
</span><span class='line'>         from /Users/kazu/.rbenv/versions/2.1.5/bin/irb:11:in `&lt;main&gt;'
</span><span class='line'>&gt;&gt; proc{|a,b|p [a, b]}.call(1)
</span><span class='line'>[1, nil]
</span><span class='line'>=&gt; [1, nil]
</span><span class='line'>&gt;&gt; proc{|a,b|p [a, b]}.call(1,2,3)
</span><span class='line'>[1, 2]
</span><span class='line'>=&gt; [1, 2]
</span><span class='line'>&gt;&gt; proc{|k1:1,k2:2|p [k1, k2]}.call(k3: 3)
</span><span class='line'>ArgumentError: unknown keyword: k3
</span><span class='line'>         from (irb):10:in `call'
</span><span class='line'>         from (irb):10
</span><span class='line'>         from /Users/kazu/.rbenv/versions/2.1.5/bin/irb:11:in `&lt;main&gt;'
</span><span class='line'>&gt;&gt;</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第7回 コンテナ型仮想化の情報交換会＠大阪に参加しました]]></title>
    <link href="http://blog.n-z.jp/blog/2015-06-20-ct-study-7-osaka.html"/>
    <updated>2015-06-20T14:30:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/ct-study-7-osaka</id>
    <content type="html"><![CDATA[<p><a href="http://ct-study.connpass.com/event/15121/" title="第7回 コンテナ型仮想化の情報交換会＠大阪">第7回 コンテナ型仮想化の情報交換会＠大阪</a>
に参加しました。</p>

<!--more-->


<p>入り口に pepper くんがいました。
懇親会でも人気でした。</p>

<p>以下メモです。</p>

<h2>いまさら聞けない Linux コンテナの基礎</h2>

<ul>
<li><a href="https://speakerdeck.com/tenforward/jin-sarawen-kenai-linux-kontenafalseji-chu-2015-06-20">https://speakerdeck.com/tenforward/jin-sarawen-kenai-linux-kontenafalseji-chu-2015-06-20</a></li>
<li>cgroup などの Linux コンテナの基礎についての話でした。</li>
<li><a href="http://blog.kazuhooku.com/2015/05/jailing-chroot-jail.html" title="jailing - chroot jailを構築・運用するためのスクリプトを書いた">jailing - chroot jailを構築・運用するためのスクリプトを書いた</a></li>
<li><a href="http://criu.org/">http://criu.org/</a></li>
<li>overlayfs</li>
</ul>


<h2>いまさら聞けない Linux コンテナの基礎 (後半)</h2>

<ul>
<li>いろいろと namespace のデモ</li>
<li>kernel のバージョンの他にも unshare コマンドが入っている util-linux のバージョンも重要</li>
<li>最近の systemd だと <code>mount --make-shared /</code> 相当になっている</li>
<li>いろいろなコンテナ関係の紹介</li>
<li><a href="https://github.com/mhiramat/mincs">https://github.com/mhiramat/mincs</a></li>
<li>LXC のデモ (lxc-なんとか コマンド)</li>
<li>LXD のデモ (lxc コマンド)</li>
</ul>


<h2>dokku を本番環境で使ってみた話</h2>

<ul>
<li>自分の発表でした。</li>
<li><a href="http://slide.rabbit-shocker.org/authors/znz/dokku-201506/">http://slide.rabbit-shocker.org/authors/znz/dokku-201506/</a></li>
<li>Heroku を使っていない理由は VPS の方が安い</li>
<li>apache+passenger だと ruby や passenger のバージョンアップが辛かった</li>
</ul>


<h2>VIMAGE を使ってみた話</h2>

<ul>
<li>whois owatan.jp</li>
<li>ConoHa は 17 個の IPv6 アドレスが付いてくる</li>
<li>epair</li>
</ul>


<h2>アンケート</h2>

<ul>
<li><a href="https://goo.gl/g75FNJ">https://goo.gl/g75FNJ</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第67回 Ruby関西 勉強会に参加しました]]></title>
    <link href="http://blog.n-z.jp/blog/2015-06-13-rubykansai67.html"/>
    <updated>2015-06-13T13:23:57+09:00</updated>
    <id>http://blog.n-z.jp/blog/rubykansai67</id>
    <content type="html"><![CDATA[<p><a href="https://rubykansai.doorkeeper.jp/events/23266" title="第67回 Ruby関西 勉強会">第67回 Ruby関西 勉強会</a>
に参加しました。
(<a href="https://github.com/rubykansai/workshops/wiki/Kansaiworkshop067">KansaiWorkshop067</a>)</p>

<p>今回は京都女子大学での開催でした。</p>

<!--more-->


<h2>ドメイン駆動設計とRuby</h2>

<ul>
<li><a href="https://speakerdeck.com/ogom/ddd-infinite">DDD Infinite</a></li>
<li><a href="http://ogom.github.io/python-mcider/">Markdown で書ける自作プレゼンツール</a>を使っている</li>
<li>Sublime Text との関係の都合で Python 製</li>
</ul>


<h2>ある教育系のサービスを開発してきた裏側</h2>

<div style="float:right">
<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=znz-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=4863541686" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>
</div>


<ul>
<li>会場アンケート からあげ好き ほぼ100%</li>
<li>本を書いたらしい: <a href="http://www.amazon.co.jp/gp/product/4863541686/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4863541686&amp;linkCode=as2&amp;tag=znz-22">Webエンジニアの教科書</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4863541686" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li>Classi</li>
<li>Slack のカスタム絵文字を絵文字職人がいつの間にか作っている</li>
<li>Qiita:Team (esa という似たサービスが最近出てきたらしい)</li>
<li>朝会</li>
<li>GitHub でのレビュー</li>
<li><a href="http://www.amazon.co.jp/gp/product/4873116309/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4873116309&amp;linkCode=as2&amp;tag=znz-22">Team Geek ―Googleのギークたちはいかにしてチームを作るのか</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4873116309" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />の「自分の疑問として謙虚に聞く」</li>
<li>チームランチ</li>
</ul>


<h2>Ruby で操る AWS</h2>

<div style="float:right">
<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=znz-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=4797380357" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>
<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=znz-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=B00UWCYRZK" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>
</div>


<ul>
<li><a href="http://www.slideshare.net/takurosasaki/rubyaws-67ruby" title="Rubyで操るAWS 第67回Ruby関西 勉強会">Rubyで操るAWS 第67回Ruby関西 勉強会</a></li>
<li>本をいくつか書いている</li>
<li>会場アンケート どの項目も意外と多い</li>
<li>クラウドファースト</li>
<li>クラウドネイティブ</li>
<li>3-Tier アーキテクチャ</li>
<li>2-Tier アーキテクチャ</li>
<li><a href="http://www.nri-net.com/mobileconf/spec.html">モバイル会議Ⅱ</a></li>
<li>Ruby で AWS</li>
<li>SDK V1 (レガシーバージョン) V2 (現行バージョン)</li>
<li>名前空間が V1 は AWS で V2 は Aws なので AWS になっている情報は古い</li>
<li>認可は IAM</li>
<li>認証は 3 種類</li>
<li>AccessKey と SecretAccessKey による認証</li>
<li>IAM ロール</li>
<li>Cognito</li>
<li>Lambda</li>
</ul>


<h2>正規表現の \z の話</h2>

<p>自分の発表 (LT) でした。</p>

<ul>
<li><a href="http://slide.rabbit-shocker.org/authors/znz/rubykansai67-regexp/">http://slide.rabbit-shocker.org/authors/znz/rubykansai67-regexp/</a></li>
<li>1文字の場合は選択 <code>(ん|ン)</code> ではなく文字クラス <code>[んン]</code> を使おう</li>
<li>文字列末尾は <code>$</code> ではなく <code>\z</code></li>
</ul>


<h2>Ruby初級者向けレッスン 53回───ArrayとHash</h2>

<ul>
<li><code>Array.new(3){|i| i.to_s}</code> のようなブロック付き <code>Array.new</code> って使ったことがなかったけど、テストデータを作るのに便利そう。</li>
<li><code>Array#to_h</code> っていつからあるんだっけ、と思って確認したら 2.1.0 からだった。</li>
<li><a href="https://github.com/higaki/learn_ruby_kansai_67">https://github.com/higaki/learn_ruby_kansai_67</a></li>
</ul>


<h2>クロージング</h2>

<ul>
<li>8/7(金)-8(土) <a href="http://www.ospn.jp/osc2015-kyoto/" title="オープンソースカンファレンス2015 Kansai@Kyoto">オープンソースカンファレンス2015 Kansai@Kyoto</a></li>
<li>関西のたくさんある Ruby 勉強会の紹介</li>
<li>7/9(木) Ruby ビジネスフォーラム</li>
<li>7/10(金) 関西Ruby会議06 前夜祭</li>
<li>7/11(土) <a href="http://regional.rubykaigi.org/kansai06/">関西Ruby会議06</a></li>
<li>8/8(土) <a href="https://rubykansai.doorkeeper.jp/events/25693">第68回 Ruby関西 勉強会</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[5月9日 アンダースタンディング コンピュテーション読書会　第３回(兵庫県)に参加しました]]></title>
    <link href="http://blog.n-z.jp/blog/2015-05-09-amagasakirb.html"/>
    <updated>2015-05-09T13:08:12+09:00</updated>
    <id>http://blog.n-z.jp/blog/amagasakirb</id>
    <content type="html"><![CDATA[<p><a href="http://kokucheese.com/event/index/287707/" title="5月9日 アンダースタンディング コンピュテーション読書会　第３回(兵庫県)">5月9日 アンダースタンディング コンピュテーション読書会　第３回(兵庫県)</a>
に参加しました。
今回はいつもの会場に戻って5章から7章でした。</p>

<!--more-->


<h2>メモ</h2>

<div style="float:right">
<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=znz-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=487311697X" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>
</div>


<p>以下、今回のメモです。</p>

<ul>
<li><a href="https://github.com/tomstuart/computationbook">https://github.com/tomstuart/computationbook</a></li>
<li><a href="https://github.com/ko1/uc_ja">https://github.com/ko1/uc_ja</a></li>
<li>p.135 <code>「コンピュータ」という言葉は「計算する人」(通常は女性)を意味していました。</code></li>
<li>アラン・チューリングの論文名の最後の単語の Entscheidungsproblem の読み方がわからないという話</li>
<li>ドイツ語由来の英単語らしいという話</li>
<li>the Entscheidungsproblem でヒルベルトの決定問題を意味する単語ではないかという話</li>
<li>p.143 の <code>left[0..-2]</code> の <code>[0..-2]</code> がわかりにくい話</li>
<li>頭から削る <code>drop</code> はあるのに逆に末尾から削るメソッドがない話</li>
<li>頭から削るメソッドだけなのは <code>Enumerable</code> 由来のメソッドだからではないかという話</li>
<li>cuzic さんが <code>Enumerator.new</code> を最近よく使うという話</li>
<li>アラン・チューリングはチューリングマシンの実装については考えていなくて計算可能性などの数学的なことを重視していたという話</li>
<li><code>proc#[]</code> と <code>proc#call</code> が同じという話</li>
<li><code>x[]</code> のように引数なしの <code>call</code> でも <code>[]</code> で書けるという話</li>
<li>p.168 ローカル変数名 (引数) に <code>proc</code> という名前を使っているのはグローバル関数の <code>proc</code> と紛らわしいので良くないという話</li>
<li>ラムダ計算の話</li>
<li>最小構成要素を少なくしたかったという話</li>
<li>YコンビネータとかZコンビネータとかIコンビネータとかの話</li>
<li>SKK=I の話 (p.224に出てくる)</li>
<li>p.194 <code>Enumerator::Lazy#force</code> の話</li>
<li><code>take</code> はまだ lazy のままで <code>first</code> は lazy ではなくなるという話</li>
<li>6章には <a href="https://github.com/tomstuart/computationbook/tree/master/programming_with_nothing" title="README.md">README.md</a> から <a href="http://rubymanor.org/3/videos/programming_with_nothing/" title="解説ビデオ">解説ビデオ</a> へのリンクがある</li>
<li>p.238 <code>Array#cycle</code></li>
<li>次回は8月予定で具体的な日程は未定</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LILO ＆ 東海道らぐ・オフラインミーティング（2015/05/03）に参加しました]]></title>
    <link href="http://blog.n-z.jp/blog/2015-05-03-lilo-tokaidolug.html"/>
    <updated>2015-05-03T13:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/lilo-tokaidolug</id>
    <content type="html"><![CDATA[<p><a href="https://lilo.doorkeeper.jp/events/23873" title="LILO ＆ 東海道らぐ・オフラインミーティング（2015/05/03） - LILO | Doorkeeper">LILO ＆ 東海道らぐ・オフラインミーティング（2015/05/03） - LILO | Doorkeeper</a>
に参加しました。</p>

<p>前回と同じくアンカンファレンス形式でした。</p>

<!--more-->


<h2>メモ</h2>

<p>今回のメモです。</p>

<ul>
<li><a href="http://lilo.linux.or.jp/" title="Welcome to LILO">Welcome to LILO</a> では日付が間違っている</li>
<li>ハッシュタグ: <code>#lilo_jp</code> <code>#東海道らぐ</code></li>
<li>自己紹介から</li>
<li>k-of 11/6,7</li>
<li>おーぷん万葉</li>
<li><a href="https://github.com/hashimom/Izumo">https://github.com/hashimom/Izumo</a> Canna のフォーク</li>
<li>GuruPlug Server</li>
<li>4月に ibus-mozc サポート終了</li>
<li>IzumoWebSock プロトコル (JSON + WebSocket)</li>
<li>Canna は K&amp;R なソースコード</li>
<li><a href="https://github.com/hashimom/Izumo/blob/bc04c5efad8fc462fa6730823566126edef36c69/server/comm.h">https://github.com/hashimom/Izumo/blob/bc04c5efad8fc462fa6730823566126edef36c69/server/comm.h</a> などの謎の <code>pro(())</code></li>
<li>M17N</li>
<li>ASUS U38N</li>
<li>Linux Mint</li>
<li>M17N には ibus 推奨</li>
<li>ibus-m17n パッケージ</li>
<li>UTF-8 の環境なら同様にできるはず</li>
<li>Plamo はまだ euc-jp らしい</li>
<li>アラトゥエ・コミュニティの、先生きのこり問題</li>
<li>around twenty</li>
<li>iPhone でプレゼン</li>
<li><a href="http://railsgirls.jp/" title="Rails Girls - Japanese">Rails Girls - Japanese</a></li>
<li>Diversity</li>
<li><a href="http://rubykaigi.org/2014/presentation/S-HarukaIwao" title="RubyKaigi 2014 | RailsGirls: Not Only For Girls">RubyKaigi 2014 | RailsGirls: Not Only For Girls</a></li>
<li>「時代が変わり、常識も変わる」</li>
<li>「楽しいか、楽しくないか」が重要</li>
<li>LILO のインストール大会の話</li>
<li>今時のチープなノートPC HP Stream 11 で Xubuntu を動かす</li>
<li>WIMBoot だとリカバリパーティションっぽいものは消してはいけない</li>
<li>謎PCとのつきあい方</li>
<li>opencocon</li>
<li>HP Thin-Client 2533t</li>
<li>VIA C7 1GHz</li>
<li>Windows XP Embedded</li>
<li>Android Nexus7 で Linux を色々と遊んでみよう</li>
<li>Mikutter</li>
<li>Debian Noroot</li>
<li>LibreOffice</li>
<li>root 化</li>
<li>Debian Kit と Complete Linux</li>
<li>CyanobenMod</li>
<li>Firefox OS</li>
<li>Ubuntu Touch</li>
<li>OSC京都、香港OSC、台湾OSDC</li>
<li>Raspberry PI とつないでみました <a href="http://www.kuzuore.com/misc/documents/lilo_tokaido/20150503/raspi_buzzer.pdf">http://www.kuzuore.com/misc/documents/lilo_tokaido/20150503/raspi_buzzer.pdf</a> <a href="http://www.kuzuore.com/misc/documents/lilo_tokaido/20150503/raspi_buzzer.odp">http://www.kuzuore.com/misc/documents/lilo_tokaido/20150503/raspi_buzzer.odp</a></li>
<li>サウンドジェネレーター6 DNGR-G48 <a href="http://prod.kyohritsu.com/DNGR-G48.html">http://prod.kyohritsu.com/DNGR-G48.html</a></li>
<li><a href="https://github.com/sato-makoto/Raspi_LED/tree/master/wonder_snd">https://github.com/sato-makoto/Raspi_LED/tree/master/wonder_snd</a></li>
<li>LibreOffice の UX と QA のあれこれ</li>
<li>次は 4.5 ではなく 5.0</li>
<li>デザインコンテスト中</li>
<li><a href="https://wiki.documentfoundation.org/BugHunting_Session_5.0.0.0">https://wiki.documentfoundation.org/BugHunting_Session_5.0.0.0</a> 5/22-5/24</li>
<li>何をやるかはおまかせ</li>
<li>LibreOffice Online</li>
<li>Qt + LibreOffice + ibus で問題が起きるらしいという話</li>
<li><a href="http://www.ospn.jp/osc2015-kyoto/" title="オープンソースカンファレンス2015 Kansai@Kyoto - オープンソースの文化祭！">オープンソースカンファレンス2015 Kansai@Kyoto - オープンソースの文化祭！</a> 8/7-8/8</li>
<li>GuruPlug Server のデモ</li>
<li><a href="http://www.jspnet.co.jp/guruplug/tips.html#tips002" title="JTAGを利用しない接続方法">JTAGを利用しない接続方法</a></li>
<li><a href="http://www.jspnet.co.jp/guruplug/tips.html#tips013" title="LEDを操作してみよう">LEDを操作してみよう</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第66回 Ruby関西 勉強会に参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2015-04-25-rubykansai66.html"/>
    <updated>2015-04-25T13:26:49+09:00</updated>
    <id>http://blog.n-z.jp/blog/rubykansai66</id>
    <content type="html"><![CDATA[<p><a href="https://rubykansai.doorkeeper.jp/events/21276" title="第66回 Ruby関西 勉強会">第66回 Ruby関西 勉強会</a>
に参加したので、そのメモです。</p>

<!--more-->


<h2>勉強会自体の URL</h2>

<ul>
<li><a href="https://rubykansai.doorkeeper.jp/events/21276" title="doorkeeper">doorkeeper</a></li>
<li><a href="https://github.com/rubykansai/workshops/wiki/Kansaiworkshop066" title="github">github</a></li>
</ul>


<h2>GitLab Flow</h2>

<ul>
<li><a href="https://speakerdeck.com/ogom/gres">https://speakerdeck.com/ogom/gres</a></li>
<li>1 スクラムマスターに依頼</li>
<li>2 イシュー登録</li>
<li>3 エンジニアにアサイン</li>
<li>4 見に行く</li>
<li>5 コードに反映</li>
<li>6 ブランチにコミット</li>
<li>7 エビデンスを登録</li>
<li>8 リモートブランチにあげる</li>
<li>9 コードレビューのためのマージリクエスト (pull request)</li>
<li>10 レビュアーをアサイン</li>
<li>11 リクエストを見る</li>
<li>12 コードを見る</li>
<li>13 リファクタリング</li>
<li>14 マージリクエストを評価</li>
<li>15 スクラムマスターに知らせる</li>
<li>16 スクラムマスターがイシューのエビデンスを確認する (コードはレビュアーが見ているので見ない)</li>
<li>17 マージとリリース</li>
<li>DDD.rb</li>
<li><a href="http://kanban.leanlabs.io/">http://kanban.leanlabs.io/</a></li>
<li><a href="https://gitlab.com/ogom/gres/blob/master/README.md">https://gitlab.com/ogom/gres/blob/master/README.md</a></li>
</ul>


<h2>ノンプログラマーが6ヶ月でWebサービスを作る課程で感じた事</h2>

<ul>
<li><a href="http://email.nyusureta.com/" title="ニュースレター配信システム Easy Follow E-mail System">ニュースレター配信システム Easy Follow E-mail System</a></li>
<li><a href="http://www.slideshare.net/soheiyagi/ruby20150425" title="ノンプログラマーが6ヶ月でWebサービスを作る課程で感じた事／Ruby関西20150425">ノンプログラマーが6ヶ月でWebサービスを作る課程で感じた事／Ruby関西20150425</a></li>
</ul>


<h2>ハマるRuby</h2>

<ul>
<li>填まる／嵌まる (後者)</li>
<li><code>and</code>/<code>or</code> と <code>&amp;&amp;</code>/<code>||</code> の優先順位が違う話</li>
<li>代入演算子の返り値</li>
<li><code>super</code> で参照される引数を書き換えたときの挙動の話</li>
<li>定数のスコープの話</li>
</ul>


<h2>Ruby初級者向けレッスン</h2>

<ul>
<li>文字列</li>
<li>Emacs で rcodetools</li>
<li><a href="https://gist.github.com/higaki/8147246">https://gist.github.com/higaki/8147246</a></li>
<li><a href="https://github.com/higaki/learn_ruby_kansai_66">https://github.com/higaki/learn_ruby_kansai_66</a></li>
<li><a href="http://docs.ruby-lang.org/ja/">http://docs.ruby-lang.org/ja/</a></li>
<li><a href="http://qa.atmarkit.co.jp/q/2026" title="Rubyのsize/length/countの違いは？">Rubyのsize/length/countの違いは？</a></li>
</ul>


<h3>解答例</h3>

<p>演習問題の 1 と 3 をやってみた例です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#!/usr/bin/env ruby</span>
</span><span class='line'><span class="c1"># coding: utf-8</span>
</span><span class='line'><span class="n">s</span> <span class="o">=</span> <span class="o">&lt;&lt;</span><span class="no">EOF</span>
</span><span class='line'><span class="sh">文 字</span>
</span><span class='line'><span class="sh">文字</span>
</span><span class='line'><span class="no">EOF</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">s</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">)</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">s</span><span class="o">.</span><span class="n">lines</span><span class="o">.</span><span class="n">size</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">s</span><span class="o">.</span><span class="n">scan</span><span class="p">(</span><span class="sr">/(?u)\w+/</span><span class="p">)</span><span class="o">.</span><span class="n">size</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">s</span><span class="o">.</span><span class="n">chars</span><span class="o">.</span><span class="n">size</span>
</span><span class='line'><span class="nb">puts</span> <span class="n">s</span><span class="o">.</span><span class="n">bytes</span><span class="o">.</span><span class="n">size</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># 試行錯誤例</span>
</span><span class='line'><span class="nb">p</span> <span class="n">s</span><span class="o">.</span><span class="n">each_line</span><span class="o">.</span><span class="n">size</span> <span class="c1"># nil ??</span>
</span><span class='line'><span class="nb">p</span> <span class="n">s</span><span class="o">.</span><span class="n">scan</span><span class="p">(</span><span class="sr">/(?u:\w)+/</span><span class="p">)</span><span class="o">.</span><span class="n">size</span>
</span><span class='line'><span class="nb">p</span> <span class="n">s</span><span class="o">.</span><span class="n">scan</span><span class="p">(</span><span class="sr">/[[:graph:]]+/</span><span class="p">)</span><span class="o">.</span><span class="n">size</span>
</span><span class='line'><span class="nb">p</span> <span class="n">s</span><span class="o">.</span><span class="n">each_char</span><span class="o">.</span><span class="n">size</span>
</span><span class='line'><span class="nb">p</span> <span class="n">s</span><span class="o">.</span><span class="n">each_byte</span><span class="o">.</span><span class="n">size</span>
</span></code></pre></td></tr></table></div></figure>


<p>ランダムに入れ替え。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">cambridge</span><span class="o">.</span><span class="n">gsub!</span><span class="p">(</span><span class="sr">/\b([^ ])([^ ]+?)([^ ])\b/</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>  <span class="o">[</span><span class="vg">$1</span><span class="p">,</span> <span class="o">*</span><span class="vg">$2</span><span class="o">.</span><span class="n">chars</span><span class="o">.</span><span class="n">shuffle</span><span class="p">,</span> <span class="vg">$3</span><span class="o">].</span><span class="n">join</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>動作確認用に reverse にしていた時。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">cambridge</span><span class="o">.</span><span class="n">gsub!</span><span class="p">(</span><span class="sr">/\b([^ ])([^ ]+?)([^ ])\b/</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>  <span class="o">[</span><span class="vg">$1</span><span class="p">,</span> <span class="o">*</span><span class="vg">$2</span><span class="o">.</span><span class="n">chars</span><span class="o">.</span><span class="n">reverse</span><span class="p">,</span> <span class="vg">$3</span><span class="o">].</span><span class="n">join</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>告知</h2>

<ul>
<li><a href="https://rubykansai.doorkeeper.jp/events/23266" title="第67回 Ruby関西 勉強会">第67回 Ruby関西 勉強会</a> は 6 月 13 日 (土) に京都女子大学</li>
<li><a href="http://rubykansai.github.io/kansai06/" title="関西Ruby会議06">関西Ruby会議06</a> は 7 月 11 日 (土) に新大阪 MOTEX 2 階ホール</li>
<li>などなど</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[さくらのVPSにdokkuをdebで入れてみた]]></title>
    <link href="http://blog.n-z.jp/blog/2015-04-20-sakura-vps-dokku.html"/>
    <updated>2015-04-20T21:54:51+09:00</updated>
    <id>http://blog.n-z.jp/blog/sakura-vps-dokku</id>
    <content type="html"><![CDATA[<p>さくらの VPS を新しく借りて初期設定をして、
dokku 0.3.17 を Debian パッケージで入れてみたので、そのメモです。</p>

<!--more-->


<h2>Ubuntu 14.04 インストール</h2>

<p><a href="https://help.sakura.ad.jp/app/answers/detail/a_id/2403" title="カスタムOSインストールガイド - Ubuntu 12.04/14.04">カスタムOSインストールガイド - Ubuntu 12.04/14.04</a>
を参考にしてインストールしました。</p>

<h2>etckeeper インストール</h2>

<p>etckeeper だけをインストールすると bzr が一緒に入って使われてしまうので、
git と一緒にインストールすることで bzr が入らないようにします。</p>

<pre><code>sudo aptitude install git etckeeper
</code></pre>

<p>次に etckeeper.conf を編集して <code>VCS="bzr"</code> の代わりに <code>VCS="git"</code> を有効にします。
ついでにコミットするときに差分をみたいので <code>GIT_COMMIT_OPTIONS="-v"</code> を設定しました。</p>

<pre><code>EDITOR=vi sudoedit /etc/etckeeper/etckeeper.conf
</code></pre>

<p>パッケージをインストールしたときに自動で初期コミットされていないので、
手動で初期コミットをしておきます。</p>

<pre><code>sudo etckeeper init
sudo etckeeper commit "Initial commit"
</code></pre>

<p>git なので <code>git gc</code> もしておきます。
<code>etckeeper vcs コマンド</code> で <code>/etc</code> ディレクトリで <code>git コマンド</code> を実行するのと同じ意味になります。</p>

<pre><code>sudo etckeeper vcs gc
</code></pre>

<h2>ufw を有効にする</h2>

<p>firewall 設定のために ufw を有効にします。</p>

<pre><code>sudo ufw enable
sudo etckeeper commit "Enable ufw"
</code></pre>

<h2>ssh を許可</h2>

<p>初期設定のために 22 番ポートを許可します。</p>

<pre><code>sudo ufw allow 22/tcp
</code></pre>

<p>リモートから ssh で入って <code>~/.ssh/authorized_keys</code> の設置などをします。</p>

<p>次にポート番号の変更や
<code>PasswordAuthentication no</code> への設定変更、
<code>PermitRootLogin</code> が <code>yes</code> 以外になっていることの確認、
<code>ChallengeResponseAuthentication no</code> の確認、
<code>AllowUsers</code> の追加をしました。</p>

<pre><code>sudo ufw delete allow 22/tcp
EDITOR=vi sudoedit /etc/ssh/sshd_config
sudo service ssh restart
sudo etckeeper commit "Setup sshd"
</code></pre>

<h2><code>~/.ssh/config</code> 設定</h2>

<p>クライアント側の <code>~/.ssh/config</code> に以下のような設定をして、
ポート番号などの指定を省略できるようにします。</p>

<p>ついでに後で使う dokku 用の設定も追加しました。</p>

<pre><code>Host サーバーのホスト名
    Hostname サーバーのIPアドレス
    User 初期ユーザー名
    Port 変更したポート番号
    IdentityFile ~/.ssh/id_rsa
    IdentitiesOnly yes
Host dokku-vps
    Hostname サーバーのIPアドレス
    User dokku
    Port 変更したポート番号
    IdentityFile ~/.ssh/id_rsa
    IdentitiesOnly yes
    RequestTTY yes
</code></pre>

<h2>nano を purge</h2>

<p>vi に慣れていて、
nano は使いにくいと感じているので、
purge しました。</p>

<pre><code>sudo aptitude purge nano
</code></pre>

<h2>IPv6 設定</h2>

<p>interfaces ファイルに以下の inet6 の設定を追加します。</p>

<pre><code>iface eth0 inet6 static
    address コントロールパネルで確認できるIPv6アドレス
    netmask 64
    gateway fe80::1
    accept_ra 0
    autoconf 0
    privext 0
    dns-nameservers コントロールパネルで確認できるDNS
</code></pre>

<p>編集して設定を反映して疎通確認をしました。</p>

<pre><code>sudoedit /etc/network/interfaces
sudo ifdown eth0 &amp;&amp; sudo ifup eth0
ping6 -c 3 www.kame.net
</code></pre>

<p><code>ifup</code> のときに <code>Waiting for DAD... Done</code> と出ましたが、
IPv6 の Duplicate Address Detection が動いているだけのようなので
問題はなさそうでした。</p>

<h2>dokku の Debian パッケージインストール</h2>

<p>dokku 0.3.18 からは Debian パッケージでのインストールがデフォルトになると
<a href="http://progrium.viewdocs.io/dokku/getting-started/install/debian" title="Debian Package Installation Notes">Debian Package Installation Notes</a>
に書いてあったので、この手順を参考にしてインストールしました。</p>

<pre><code>wget https://get.docker.io/gpg
sudo apt-key add gpg
rm gpg
wget https://packagecloud.io/gpg.key
sudo apt-key add gpg.key
rm gpg.key
echo "deb http://get.docker.io/ubuntu docker main" | sudo tee /etc/apt/sources.list.d/docker.list
echo "deb https://packagecloud.io/dokku/dokku/ubuntu/ trusty main" | sudo tee /etc/apt/sources.list.d/dokku.list
sudo apt-get update
sudo apt-get install dokku
</code></pre>

<p>なぜか
<code>Importing buildstep into docker (around 5 minutes)</code>
で 5 分どころではなく 1 時間ぐらいかかったので、
他のことをしながらのんびり待つ必要がありました。</p>

<h2>初期設定用ポート開放</h2>

<p>いきなり開放してしまうと Dokku Setup を勝手に実行されてしまう可能性があるので、
まず <code>SSH_CLIENT</code> 環境変数でサーバーに接続している自分のグローバル IP アドレスを確認して、
その IP アドレスのみから HTTP を許可しました。</p>

<pre><code>env | grep SSH
sudo ufw allow proto tcp from 接続元IPアドレス to any port 80
</code></pre>

<p>そして <code>http://サーバーのホスト名/</code> を開いて Dokku Setup を表示しました。</p>

<p>空欄になっていた <code>Public Key</code> には自分の <code>~/.ssh/id_rsa.pub</code> を貼付けました。
<code>Hostname</code> には IPv6 アドレスが表示されていたので、
<code>xip.io</code> (IP アドレスのサブドメインで IP アドレスを返してくれるサービス) を使って
<code>サーバーのIPv4アドレス.xip.io</code> (例えば <code>192.0.2.1.xip.io</code> のような感じ) を設定しました。
<code>Use virtualhost naming for apps</code> にチェックを入れて
<code>Finish Setup</code> を押しました。
ブラウザーは <code>http://progrium.viewdocs.io/dokku/application-deployment</code> にリダイレクトされました。</p>

<p>サーバー側では
<code>/home/dokku</code> 以下に設定が保存される他に、
<code>/etc/init/dokku-installer.conf</code> と <code>/etc/nginx/conf.d/dokku-installer.conf</code> が削除されるので、
<code>etckeeper commit</code> しました。</p>

<pre><code>sudo etckeeper commit "Finish Dokku Setup"
</code></pre>

<h2>HTTP ポート開放</h2>

<p>初期設定が終了したので、初期設定用のルールを削除して、
一般に開放するように変更しました。</p>

<pre><code>sudo ufw delete allow proto tcp from 接続元IPアドレス to any port 80
sudo ufw allow 80/tcp
</code></pre>

<h2>dokku の ssh を許可</h2>

<p><code>sshd_config</code> に <code>AllowUsers dokku</code> を追加しました。</p>

<pre><code>sudoedit /etc/ssh/sshd_config
sudo service ssh restart
sudo etckeeper commit "Allow ssh to dokku"
</code></pre>

<h2>ssh の接続確認</h2>

<pre><code>ssh dokku-vps
</code></pre>

<p>で dokku のヘルプが表示されるのを確認しておきます。</p>

<h2>サンプルアプリのデプロイ</h2>

<p>最小限のサンプルとして node-js-sample をデプロイします。</p>

<pre><code>git clone https://github.com/heroku/node-js-sample
cd node-js-sample
git remote add dokku-vps dokku-vps:node-js-app
git push dokku-vps master
</code></pre>

<p><code>http://node-js-app.サーバーのIPアドレス.xip.io/</code> を開いて
<code>Hello World!</code> と表示されたら成功です。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[dokku 0.3.17 に Ruby on Rails アプリをデプロイしてみた]]></title>
    <link href="http://blog.n-z.jp/blog/2015-04-18-dokku.html"/>
    <updated>2015-04-18T21:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/dokku</id>
    <content type="html"><![CDATA[<p>dokku がいつの間にか deis がスポンサーになって開発が活発になって 0.3 系がリリースされていたので、
0.3.17 に Ruby on Rails アプリをデプロイしてみました。</p>

<!--more-->


<h2>対象バージョン</h2>

<ul>
<li>dokku 0.3.17</li>
<li>docker 1.5.0, 1.6.0</li>
</ul>


<h2>前準備</h2>

<p>何度か繰り返す予定ならあらかじめ、
次の初回起動の手順の <code>vagrant up</code> の前に、
Makefile の <code>PREBUILT_STACK_URL</code> を
Vagrantfile の <code>PREBUILT_STACK_URL</code> で
チェックしている場所にダウンロードしておくと
ダウンロード時間を短縮できます。</p>

<pre><code>curl -L -o stack.tgz https://github.com/progrium/buildstep/releases/download/2014-12-16/2014-12-16_42bd9f4aab.tar.gz
</code></pre>

<h2>初回起動</h2>

<p>Vagrant 環境で試しました。</p>

<pre><code>git clone https://github.com/progrium/dokku
cd dokku
vagrant up
</code></pre>

<p>vagrant の中では <code>/vagrant</code> の他に <code>/root/dokku</code> に <code>dokku</code> ディレクトリがマウントされています。</p>

<h2>初期設定</h2>

<p>Vagrant でポートフォワーディングされている <code>http://localhost:8080/</code> か
ホストオンリーアダプタで接続されている <code>http://10.0.0.2/</code> を開きます。
Dokku Setup が表示されるので、そこで初期設定をします。</p>

<p><code>Public Key</code> に自分の <code>~/.ssh/id_rsa.pub</code> が入っているのを確認します。
必要なら他の公開鍵に変更します。</p>

<p>Hostname Configuration の方は Hostname に自分がインターネットに接続しているグローバル IP アドレスが表示されているので、
<code>dokku.me</code> に変更して、
<code>Use virtualhost naming for apps</code> にチェックを入れます。
<code>dokku.me</code> は dokku の作者が運用していると思われる、すべてのサブドメインで 127.0.0.1 を返してくれるサービスです。</p>

<p><code>Finish Setup</code> を押すと初期設定は終了して
<code>http://progrium.viewdocs.io/dokku/application-deployment</code>
に飛ばされます。</p>

<p>ちなみに、初期設定用のサーバーの実体は
<code>contrib/dokku-installer.rb</code>
にあるようです。</p>

<h2>ssh の設定</h2>

<p><code>ssh dokku</code> や <code>ssh dokku.me</code> で接続できるように
<code>~/.ssh/config</code> に以下のような設定を追加しました。
<code>User</code>, <code>Hostname</code>, <code>Port</code>, <code>RequestTTY</code> 以外の設定はお好みで良いと思います。</p>

<pre><code>Host dokku dokku.me
    User dokku
    HostName 10.0.0.2
    Port 22
    UserKnownHostsFile /dev/null
    StrictHostKeyChecking no
    PasswordAuthentication no
    IdentityFile ~/.ssh/id_rsa
    IdentitiesOnly yes
    LogLevel FATAL
    RequestTTY yes
    Ciphers arcfour128,arcfour256
</code></pre>

<h2>サンプルアプリをデプロイ</h2>

<p><a href="http://progrium.viewdocs.io/dokku/application-deployment">http://progrium.viewdocs.io/dokku/application-deployment</a> に書いてある node.js のサンプルアプリをデプロイします。</p>

<pre><code>git clone https://github.com/heroku/node-js-sample
cd node-js-sample
git remote add dokku dokku@dokku.me:node-js-app
git push dokku master
</code></pre>

<p><code>http://node-js-app.dokku.me:8080/</code> を開いて「Hello World!」が見えれば成功です。</p>

<h2>PostgreSQL プラグインをインストール</h2>

<p>今回は
<a href="http://progrium.viewdocs.io/dokku/plugins" title="Plugins">Plugins</a>
で「Compatible with 0.3.16」と書いてある
<a href="https://github.com/Flink/dokku-psql-single-container" title="PostgreSQL (single container)">PostgreSQL (single container)</a>
を使いました。</p>

<p><code>vagrant ssh</code> で入って以下を実行しました。</p>

<pre><code>sudo git clone https://github.com/Flink/dokku-psql-single-container /var/lib/dokku/plugins/psql-sc
sudo dokku plugins-install
</code></pre>

<p><code>postgres:9.3</code> のイメージをダウンロードするので、しばらく時間がかかりました。</p>

<h2>Rails のサンプルをデプロイ</h2>

<p>試行錯誤の結果、シンプルな手順は以下のようになりました。</p>

<pre><code>ssh dokku apps:create ruby-rails-app
ssh dokku psql:create ruby-rails-app
git clone https://github.com/heroku/ruby-rails-sample
cd ruby-rails-sample
git remote add dokku dokku@dokku.me:ruby-rails-app
git push dokku master
</code></pre>

<p><code>http://ruby-rails-app.dokku.me:8080/</code> を開いて <code>Hello World</code> と現在時刻が表示されれば成功です。</p>

<p>今回利用したプラグインでは <code>psql:create</code> だけで、別途 <code>link</code> という手順は不要でした。</p>

<h2>データベースの migration の実行</h2>

<p>このサンプルアプリではデータベースに接続するだけで使っていないので、
必須ではないのですが <code>rake db:migrate</code> も実行しました。</p>

<pre><code>ssh dokku run ruby-rails-app rake db:migrate
</code></pre>

<h2>タイムゾーン設定</h2>

<p>現在時刻が UTC で表示されていたので、
JST に変更しました。</p>

<pre><code>ssh dokku config:set ruby-rails-app TZ=Asia/Tokyo
</code></pre>

<p>設定変更後に自動で再起動されるので、
<code>http://ruby-rails-app.dokku.me:8080/</code> を開いて、
現在時刻が日本時間で表示されれば成功です。</p>

<h2>CHECKS 作成</h2>

<p>デフォルトだと
<a href="http://progrium.viewdocs.io/dokku/application-deployment#user-content-zero-downtime-deploy" title="Zero downtime deploy">Zero downtime deploy</a>
の簡易チェックで 35 秒待つようになっているので、
<code>CHECKS</code> ファイルを作成して待ち時間を短くして、
正常なときだけデプロイできるようにしてみました。</p>

<pre><code>vi CHECKS
git add CHECKS
git commit
git push dokku master
</code></pre>

<p>CHECKS ファイルの内容は以下の通りです。</p>

<pre><code>/   RubyRailsSample
</code></pre>

<p>左側がチェックする URL で右側がその URL を表示したときに含まれる文字列です。
ここではタイトルの文字列を指定してみました。</p>

<h2>アプリケーションの削除</h2>

<p><code>apps:destroy</code> で削除できます。
確認のため、もう一度アプリ名を入力する必要があります。</p>

<pre><code>% ssh dokku apps:destroy node-js-app
 !    WARNING: Potentially Destructive Action
 !    This command will destroy node-js-app (including all add-ons).
 !    To proceed, type "node-js-app"

&gt; node-js-app
Destroying node-js-app (including all add-ons)
No database configured for node-js-app
Connection to 10.0.0.2 closed.
</code></pre>

<p><code>ruby-rails-app</code> の削除も試してみたところ、
データベースも一緒に削除されるので、
別途 <code>psql:delete</code> を実行する必要はありませんでした。</p>

<h2>デプロイ時に ruby のダウンロードでタイムアウトする場合</h2>

<p><a href="http://www.slideshare.net/snumano/20150101-dokku-alt" title="20150101勉強会 dokku alt">20150101勉強会 dokku alt</a>
の16ページの手順5を参考にしてタイムアウトをのばすと良いようです。</p>

<pre><code>ssh dokku config:set ruby-rails-app CURL_TIMEOUT=120
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[4月4日 アンダースタンディング コンピュテーション読書会 第2回 (大阪府)に参加しました]]></title>
    <link href="http://blog.n-z.jp/blog/2015-04-04-amagasakirb.html"/>
    <updated>2015-04-04T12:50:16+09:00</updated>
    <id>http://blog.n-z.jp/blog/amagasakirb</id>
    <content type="html"><![CDATA[<p><a href="http://kokucheese.com/event/index/276001/" title="4月4日 アンダースタンディング コンピュテーション読書会　第2回 (大阪府)">4月4日 アンダースタンディング コンピュテーション読書会　第2回 (大阪府)</a>
に参加しました。
今回はいつもと違う会場でした。</p>

<!--more-->


<h2>メモ</h2>

<div style="float:right">
<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=znz-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=487311697X" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>
</div>


<p>以下、今回のメモです。
個人的なメモと話に出ていたことのメモが混ざっています。</p>

<ul>
<li><a href="https://github.com/cuzic/amagasakirb/wiki/2015.04.04-%E3%82%A2%E3%83%B3%E3%83%80%E3%83%BC%E3%82%B9%E3%82%BF%E3%83%B3%E3%83%87%E3%82%A3%E3%83%B3%E3%82%B0%E3%82%B3%E3%83%B3%E3%83%94%E3%83%A5%E3%83%86%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3-%E8%AA%AD%E6%9B%B8%E4%BC%9A-%E7%AC%AC2%E5%9B%9E" title="2015.04.04 アンダースタンディングコンピュテーション 読書会 第2回 · cuzic/amagasakirb Wiki">2015.04.04 アンダースタンディングコンピュテーション 読書会 第2回 · cuzic/amagasakirb Wiki</a></li>
<li><a href="https://twitter.com/hashtag/amagasakirb" title="#amagasakirbに関するツイート">#amagasakirbに関するツイート</a></li>
<li><a href="https://github.com/tomstuart/computationbook">https://github.com/tomstuart/computationbook</a> にサンプルコードがある</li>
<li>p.41 「いろいろな意味で、これはスモールステップというアプローチよりも自然に感じられますが、」の自然に感じられる理由は? という話。</li>
<li>軽く自己紹介</li>
<li>p.46 「この違いは、それぞれのアプローチの目的を際立たせます。」の目的とは? という話。</li>
<li>Google マップで会場の検索をすると位置がずれているのは申請で修正できるという話。</li>
<li>p.69 <code>string.chars.each</code> は一度配列を作る <code>chars</code> よりも <code>each_char</code> の方が良いのでは。</li>
<li>p.73 <code>flat_map</code> をなぜ使っているのかという話。 <code>follow_rules_for</code> が配列を返すので、入れ子の階層を一段階減らすため。</li>
<li>有限オートマトンの有限とは? という話。
とりうる状態が有限。
状態が無限のものは無限オートマトンとか次の章で出てくるプッシュダウンオートマトンとか。</li>
<li>p.82 <code>precedence</code> とは何かという話。 p.81 の <code>bracket</code> で使われている結合の優先順位。</li>
<li>3 章のサンプルコードは <code>the_simplest_computers</code> にあって最終状態のクラスのコードが入っている。実行結果の例もついているものは <code>irb.txt</code> に書いてある。</li>
<li>p.90 脚注の「ここでは新しい状態を追加する代わりに、元の開始状態を受理状態にするだけで済ませることもできましたが、そのやり方だと複雑な場合に(たとえば、<code>(a*b*)*</code>)、空文字列以外の望まない文字列まで受理する機械ができてしまします。」で受理されてしまう例は?

<ul>
<li><code>Repeat#to_nfa_design</code> の <code>start_state = Object.new</code> を <code>start_state = pattern_nfa_design.start_state</code> に変更して <code>pattern = Repeat.new(Concatenate.new(Repeat.new(Literal.new('a')), Literal.new('b')))</code> (<code>/(a*b)*/</code>) で試してみたら <code>'a'</code> も受理された。(<code>pattern.matches?('a')</code> が true になった。)</li>
</ul>
</li>
<li>p.92 <a href="http://patshaughnessy.net/2012/4/3/exploring-rubys-regular-expression-algorithm">http://patshaughnessy.net/2012/4/3/exploring-rubys-regular-expression-algorithm</a> の URL が長い。</li>
<li>わからないところは飛ばしつつ 3,4,5 章を読んで 3 章に戻った方がわかりやすいかもしれないという話。</li>
<li>具体例が正規表現しかないのがわかりにくいかもしれないという話。</li>
<li>マクドナルドなどで注文した結果、一番安いセットが自動で選ばれるようになっているらしいという話。その実装を有限オートマトンでやっているだろうという話。</li>
<li>オートマトン研究は昔の話なので、テープなど言葉が違う (古い) のは仕方がないという話。</li>
<li>p.107, p.108 で <code>\g</code> で括弧の対応関係などの難しい話が載っているという話。</li>
<li><code>Struct.new</code> を継承する必要はあるのかと思っていたが p.116 の <code>current_configuration</code> の <code>super</code> のようなに上書きができるという利点があるとわかった。</li>
<li><code>tap</code> メソッドがよく出てくるという話。</li>
<li>ブロック引数と外側の変数の名前が重なっていたときにどうなるかが 1.9 で変わった話。</li>
<li><code>Kernel#returning</code> というのが昔の ActiveSupport にあったという話。
<code>returning {} do |hash| ... end</code> は <code>{}.tap do |hash| ... end</code> と同じ意味。</li>
<li>C++ の右辺値参照の話。
<a href="http://qiita.com/go_astrayer/items/5d85565e992487daa618" title="C++11 - シンプルな配列クラスを使って「右辺値参照」と「ムーブセマンティクス」を知る - Qiita">C++11 - シンプルな配列クラスを使って「右辺値参照」と「ムーブセマンティクス」を知る - Qiita</a></li>
<li>C++11 で記号だらけという話。</li>
<li>C++ のラムダ式 (<code>[&amp;]{...}</code> とか) の話。</li>
<li>C# も記号を使った記法が増えているらしいという話。</li>
<li><code>Object.new</code> は普通に使われているのかという話。</li>
<li>p.127 <code>LexicalAnalyzer</code> は文字列の先頭や末尾に空白があるとうまく動かなさそうと思って試してみたら、末尾は <code>lstrip</code> で消えるので大丈夫だった。
先頭は <code>NoMethodError: undefined method `post_match' for nil:NilClass</code> になった。</li>
<li>p.128 <code>/(true|false)(?![a-z])/</code> は <code>/(true|false)\b/</code> でも良さそう。</li>
<li>計算機の歴史の話。</li>
<li>オクテットの話。</li>
<li>等価性と非等価性の話。</li>
<li>DFA=NFA (正規表現), DPDA (括弧の対応), NPDA (回文), チューリングマシン (<code>aaabbbccc</code> など)</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu 14.04 LTS に Zabbix 2.4 を PostgreSQL を使う設定で入れた]]></title>
    <link href="http://blog.n-z.jp/blog/2015-03-13-zabbix-24-pgsql.html"/>
    <updated>2015-03-13T21:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/zabbix-24-pgsql</id>
    <content type="html"><![CDATA[<p><a href="https://www.zabbix.com/documentation/2.4/manual/installation/install_from_packages" title="3 Installation from packages [Zabbix Documentation 2.4]">3 Installation from packages [Zabbix Documentation 2.4]</a>
だと MySQL の例しかなく、
PostgreSQL で入れるとちょっとひっかかったところがあったので、
そのメモです。</p>

<p>Debian や Ubuntu の公式パッケージの zabbix との違いも気づいた範囲で書いておきました。</p>

<!--more-->


<h2>zabbix-release のインストール</h2>

<p><code>zabbix-release</code> をインストールして apt-line を設定して
<code>apt-get update</code> するところまでは公式マニュアルと同じです。</p>

<pre><code>wget http://repo.zabbix.com/zabbix/2.4/ubuntu/pool/main/z/zabbix-release/zabbix-release_2.4-1+trusty_all.deb
sudo dpkg -i zabbix-release_2.4-1+trusty_all.deb
sudo apt-get update
</code></pre>

<h2>zabbix-server のインストール</h2>

<p><code>zabbix-server-mysql</code> の代わりに <code>zabbix-server-pgsql</code> をインストールします。
途中で入力するパスワードは後で必要になるのでメモするか覚えておきます。
(Debian や Ubuntu の公式パッケージの zabbix と違って <code>dbconfig-common</code> を使うようになっています。)</p>

<pre><code>sudo apt-get install zabbix-server-pgsql
</code></pre>

<p>ただし、先に postgresql を入れておかないとデータベースの作成のところでエラーになるようです。</p>

<h2>zabbix-frontend-php のインストール</h2>

<p><code>/usr/share/doc/zabbix-frontend-php/README.Debian</code> に書いてあるのですが、
<code>php5-pgsql</code> を入れておくと初期設定の時のデータベースの選択肢に PostgreSQL が出てきます。</p>

<pre><code>sudo apt-get install zabbix-frontend-php php5-pgsql
</code></pre>

<h2>PHP のタイムゾーンの設定</h2>

<pre><code>sudoedit /etc/zabbix/apache.conf
</code></pre>

<p>で</p>

<pre><code># php_value date.timezone Europe/Riga
</code></pre>

<p>を</p>

<pre><code>php_value date.timezone Asia/Tokyo
</code></pre>

<p>に変更して</p>

<pre><code>sudo service apache2 reload
</code></pre>

<p>で反映します。
(Debian や Ubuntu の公式パッケージの zabbix と違って <code>apache2</code> のみ対応です。
<code>php5-fpm</code>+<code>nginx</code> には対応していないので <code>nginx</code> で使うなら完全に独自設定が必要です。)</p>

<h2>初期設定</h2>

<p><code>http://localhost/zabbix/</code> を開いて初期設定を開始します。
<code>Next</code> ボタンで進んでいってデータベースの設定のところは</p>

<ul>
<li>Database Type : PostgreSQL</li>
<li>Database host : localhost のまま</li>
<li>Database port : 0 のまま</li>
<li>Database name : zabbix のまま</li>
<li>User : root から zabbix に変更</li>
<li>Password : <code>zabbix-server-pgsql</code> をインストールしたときに設定したパスワード</li>
</ul>


<p>と設定します。</p>

<p>そして <code>Next</code> で進んでいって <code>Finish</code> まで行くと初期設定終了です。
(Debian や Ubuntu の公式パッケージの zabbix と違って
<code>/etc/zabbix/web/</code> が <code>www-data</code> から書き込み可能になっていて
ダウンロードして自分で設置しなくても設定完了するようになっています。)</p>

<h2>ログイン</h2>

<ul>
<li>Username : Admin</li>
<li>Password : zabbix</li>
</ul>


<p>でログインします。</p>

<p>右上の Profile から Language を Japanese (ja_JP) に変更して Update すると
日本語で使えるようになります。
パスワードもここで変更できます。</p>

<p>ログイン前の画面は guest ユーザーの言語が反映されているので、
「管理」-「ユーザー」からメンバーの「guest」を開いて言語を変更して更新します。</p>

<h2>zabbix-agent のインストール</h2>

<pre><code>sudo apt-get install zabbix-agent
</code></pre>

<p>でインストールできます。</p>

<h2>Zabbix server の監視</h2>

<p><code>zabbix-agent</code> をインストールした後、
「設定」-「ホスト」でステータスを「無効」から「有効」に切り替えます。</p>

<p>しばらくするとエージェントの状態の「Z」が緑色になって監視できていることがわかります。</p>

<h2>グラフの日本語の文字化け対策</h2>

<p>グラフなどの図の中の日本語が文字化けするときは
適当な日本語フォントを入れて
<code>zabbix-frontend-php</code> の設定をし直せば直ります。</p>

<pre><code>sudo apt-get install fonts-vlgothic
sudo dpkg-reconfigure zabbix-frontend-php
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[アンダースタンディング コンピュテーション読書会　第1回(兵庫県)に参加しました]]></title>
    <link href="http://blog.n-z.jp/blog/2015-02-28-amagasakirb.html"/>
    <updated>2015-02-28T13:00:40+09:00</updated>
    <id>http://blog.n-z.jp/blog/amagasakirb</id>
    <content type="html"><![CDATA[<p><a href="http://kokucheese.com/event/index/258232/" title="2月28日 アンダースタンディング コンピュテーション読書会　第1回(兵庫県)">2月28日 アンダースタンディング コンピュテーション読書会　第1回(兵庫県)</a>
に参加しました。</p>

<!--more-->


<h2>メモ</h2>

<div style="float:right">
<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=znz-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=487311697X" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>
</div>


<p>以下、今回のメモです。</p>

<ul>
<li><a href="https://github.com/cuzic/amagasakirb/wiki/2015.02.28-%E3%82%A2%E3%83%B3%E3%83%80%E3%83%BC%E3%82%B9%E3%82%BF%E3%83%B3%E3%83%87%E3%82%A3%E3%83%B3%E3%82%B0%E3%82%B3%E3%83%B3%E3%83%94%E3%83%A5%E3%83%86%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3-%E8%AA%AD%E6%9B%B8%E4%BC%9A-%E7%AC%AC1%E5%9B%9E" title="2015.02.28 アンダースタンディングコンピュテーション 読書会 第1回 · cuzic/amagasakirb Wiki">2015.02.28 アンダースタンディングコンピュテーション 読書会 第1回 · cuzic/amagasakirb Wiki</a></li>
<li><code>-&gt;</code> が多い</li>
<li><code>-&gt;</code> の後に括弧を書くかどうか (書く方が多数派だった)</li>
<li><code>.call()</code> の <code>call</code> の省略を使うかどうか (省略しない方が多数派だった)</li>
<li>多重代入の右辺の <code>[]</code> でくくって配列にしているのはあってもなくてもこの例だと同じ</li>
<li><code>"#{obj}"</code> は <code>#to_s</code> が呼ばれる</li>
<li><code>"abc" + obj</code> は <code>#to_str</code> が呼ばれる</li>
<li><code>String(obj)</code> も <code>#to_str</code> が呼ばれる</li>
<li>p.9 <code>*演算子</code> の演算子という表現が引っかかる</li>
<li><code>Symbol#to_proc</code> と <code>Object#tap</code> は Rails (ActiveSupport 由来)</li>
<li><code>class Point &lt; Struct.new(:x, :y)</code> の話</li>
<li>名前が決まらなくて入らないメソッドがある話</li>
<li>名前が決まって最近入った例としては <code>itself</code> (ruby 2.2 から)</li>
<li>p.19 「Ruby 1.8.7 には文書としての仕様書が存在しており、ISO標準として受理されています (ISO/IEC 30170)」とあるが更新されることはないのかという話</li>
<li>p.21 の図が難しい</li>
<li>p.23 二重山括弧</li>
<li>Option + Shift + K で入力できる Apple 記号の話</li>
<li>p.51 の <code>DoNothing</code> がほぼ <code>itself</code></li>
<li>簡約可能という言葉の意味が分かっていないとつらいのではないかという話 (簡約可能とはまだ処理することが残っていることで簡約不可能とはもう処理することが残っていない状態という話)</li>
<li>Treetop, Parslet (オススメ), ANTLR</li>
<li>Node.js, io.js, JXcore</li>
<li>p.37 <code>DoNothing.new</code> の <code>.new</code> はあってもなくても良いのではないかという話</li>
<li><a href="https://github.com/ko1/uc_ja" title="『アンダースタンディング コンピュテーション』のサポートリポジトリ">『アンダースタンディング コンピュテーション』のサポートリポジトリ</a></li>
<li>yacc やコンパイラコンパイラの話</li>
<li>ブログの引っ越し先の話</li>
<li>markdown の方言の話</li>
<li>次回は 4/4(土) に小田公民館の会議室が確保できなかったという理由で別の場所で。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第65回 Ruby関西 勉強会に参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2015-02-21-rubykansai65.html"/>
    <updated>2015-02-21T13:48:06+09:00</updated>
    <id>http://blog.n-z.jp/blog/rubykansai65</id>
    <content type="html"><![CDATA[<p><a href="https://rubykansai.doorkeeper.jp/events/18820" title="第65回 Ruby関西 勉強会">第65回 Ruby関西 勉強会</a>
に参加したので、そのメモです。</p>

<!--more-->


<h2>Rails4.2の新機能について</h2>

<ul>
<li>ActiveJob を中心に Rails 4.2 の新機能の話でした。</li>
<li>Delayed Job はあまり使われなくなっていて、今は Sidekiq と Resque がメジャー</li>
</ul>


<h2>Ruby 2.0 以降の変更をふりかえる</h2>

<p>LT なので早足での紹介でした。</p>

<ul>
<li><a href="https://speakerdeck.com/sixeight/siyututohurikaeru-ruby-2-dot-0-yi-jiang" title="シュッとふりかえる Ruby 2.0 以降 // Speaker Deck">シュッとふりかえる Ruby 2.0 以降 // Speaker Deck</a></li>
<li>Ruby 2.0</li>
<li>キーワード引数</li>
<li>Refinements (Experimental)</li>
<li><code>Module#prepend</code></li>
<li>デフォルトエンコーディングが utf-8</li>
<li><code>Enumerable#lazy</code></li>
<li>Ruby 2.1</li>
<li>RGenGC</li>
<li>必須キーワード引数</li>
<li>メソッド定義がシンボルを返すようになった</li>
<li><code>Binding#local_variable_(get|set)</code></li>
<li>Refinements</li>
<li>freeze

<ul>
<li>すべての Symbol がフリーズされるようになった</li>
<li>フリーズされた文字列リテラルが同じ <code>object_id</code> を返すようになった</li>
</ul>
</li>
<li>Ruby 2.2</li>
<li><code>{"symbol-key": "value"}</code></li>
<li>GC (インクリメンタルGC、シンボルGC)</li>
<li>Binding (<code>#local_variables</code>, <code>#receiver</code>)</li>
<li><code>Method#super_method</code></li>
<li><code>Method#curry</code></li>
<li>Enumerable

<ul>
<li><code>#slice_after</code></li>
<li><code>#max</code>, <code>#max_by</code>, <code>#min</code>, <code>#min_by</code> が引数をとれるようになった</li>
</ul>
</li>
<li><code>Object#itself</code></li>
<li><code>Comparable#==</code></li>
</ul>


<h2>休憩</h2>

<p>10分休憩</p>

<h2>BCCWJ を弄ぶ</h2>

<p>BCCWJ (= 現代日本語書き言葉均衡コーパス) を使っていろいろ遊んでみたという話でした。</p>

<h2>Wakayama.rb ボードの紹介</h2>

<ul>
<li>mruby ボード</li>
<li><a href="https://github.com/tarosay/Wakayama-mruby-board">https://github.com/tarosay/Wakayama-mruby-board</a></li>
<li>rx-elf-gcc</li>
</ul>


<h2>Ruby コミュニティｘ企業</h2>

<ul>
<li>hommachi.rb

<ul>
<li><a href="https://hommachirb.doorkeeper.jp/">https://hommachirb.doorkeeper.jp/</a></li>
<li>次回3月7日(土)</li>
</ul>
</li>
<li>Ruby ビジネスセミナー

<ul>
<li>7/9(木)</li>
<li><a href="http://www.ruby-b.com/">http://www.ruby-b.com/</a></li>
</ul>
</li>
<li>コミュニティと企業が歩み寄る話</li>
</ul>


<h2>Medaka.rb 活動概要</h2>

<ul>
<li>西宮、梅田あたり</li>
<li>他の勉強会の足がかり</li>
<li>Ruby関西などで告知があったので最初から人が集まった</li>
<li>次回は3/14(土)</li>
</ul>


<h2>休憩</h2>

<p>15分休憩</p>

<h2>Gemをコードリーディングしてみよう！</h2>

<ul>
<li><a href="http://qiita.com/taiyop/items/050c6749fb693dae8f82" title="SEO嫌いにお送りするSEO策。これでもうSEOについてしばらく考えなくて良いぜ！！ - Qiita">SEO嫌いにお送りするSEO策。これでもうSEOについてしばらく考えなくて良いぜ！！ - Qiita</a></li>
<li><a href="https://github.com/capistrano/capistrano" title="Capistrano">Capistrano</a> のようなコマンド実行型の gem は bin/cap のようなところから読み始めると良い</li>
<li>読みやすい Gem

<ul>
<li><code>paranoia</code></li>
<li><code>settingslogic</code></li>
<li><code>omniauth</code></li>
<li><code>active_support/core_ext</code></li>
</ul>
</li>
<li><a href="http://www.slideshare.net/babatakao/gem-release" title="初めてのGemの読み方">初めてのGemの読み方</a></li>
<li><a href="https://github.com/tpope/gem-ctags">https://github.com/tpope/gem-ctags</a></li>
</ul>


<h2>Railsの見える化 開発（API編）</h2>

<ul>
<li>Cassette Rack Alchemist</li>
<li><a href="http://white-panda-bef5ea6775f68651.znlc.jp/wordpress/" title="カラカルさんラボ | カラカルさんの実験室">カラカルさんラボ | カラカルさんの実験室</a></li>
<li>Railsの見える化 開発（API編）</li>
<li>RSpec で VCR (Video Cassette Recording) を利用した開発</li>
<li><a href="https://speakerdeck.com/ogom/caracal">https://speakerdeck.com/ogom/caracal</a></li>
<li><a href="https://github.com/ogom/cassette-rack">https://github.com/ogom/cassette-rack</a></li>
</ul>


<h2>休憩</h2>

<p>10分休憩</p>

<h2>Treasure Data での Ruby の利用</h2>

<ul>
<li><a href="http://www.slideshare.net/repeatedly/fluentd-rubykansai-65" title="Fluentd - RubyKansai 65">Fluentd - RubyKansai 65</a></li>
<li><a href="http://www.fluentd.org/">http://www.fluentd.org/</a></li>
<li><a href="https://github.com/fluent/fluentd">https://github.com/fluent/fluentd</a></li>
</ul>


<h2>クロージング</h2>

<ul>
<li><a href="http://goo.gl/iSPrca">第65回 Ruby勉強会 アンケート</a></li>
<li>第66回は4月25日(土)に神戸クリエイティブセンター</li>
<li>第67回は6月に京都のどこか</li>
</ul>


<h2>その他</h2>

<p>懇親会のしめの挨拶できいたのですが、今回は初級者レッスンなしにしたり、
広い会場を確保して人数制限をゆるめにしたり、
2ヶ月前から Facebook などで宣伝したりなど
いろいろ挑戦的な試みをした回だったようです。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[owncloud-client が conflict した話]]></title>
    <link href="http://blog.n-z.jp/blog/2015-01-29-owncloud-client.html"/>
    <updated>2015-01-29T09:30:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/owncloud-client</id>
    <content type="html"><![CDATA[<p>Debian 7 に <a href="https://owncloud.org/install/#desktop">ownCloud 公式の Desktop Client</a> を入れていたら、
なぜか <code>owncloud-client</code> の 1.7.1 から 1.7.1 への更新が発生して <code>libqtkeychain0</code> と conflict していたので、
<code>libqtkeychain0</code> をダウングレードして解決しました。</p>

<!--more-->


<h2>現象</h2>

<p>このように競合が検出されました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo aptitude full-upgrade -DV
</span><span class='line'>以下のパッケージが更新されます:
</span><span class='line'>  owncloud-client{b} [1.7.1 -&gt; 1.7.1] (競: libqtkeychain0)
</span><span class='line'>更新: 1 個、新規インストール: 0 個、削除: 0 個、保留: 0 個。
</span><span class='line'>700 k バイトのアーカイブを取得する必要があります。展開後に 0  バイトのディスク領域が新たに消費されます。
</span><span class='line'>以下のパッケージには満たされていない依存関係があります:
</span><span class='line'> owncloud-client : 競合: libqtkeychain0 (= 0.20140128) [0.20140128 が既にインストール済みです]
</span><span class='line'>以下のアクションでこれらの依存関係の問題は解決されます:
</span><span class='line'>
</span><span class='line'>     以下のパッケージを削除する:
</span><span class='line'>1)     libowncloudsync0
</span><span class='line'>2)     libqtkeychain0
</span><span class='line'>3)     owncloud-client
</span><span class='line'>4)     owncloud-client-l10n
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>この解決方法を受け入れますか? [Y/n/q/?]q</span></code></pre></td></tr></table></div></figure>


<h2>状況</h2>

<p><code>apt-cache show</code> でみてみると <code>Conflicts: libqtkeychain0 (= 0.20140128)</code> と明示されていました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ apt-cache show owncloud-client
</span><span class='line'>Package: owncloud-client
</span><span class='line'>Version: 1.7.1
</span><span class='line'>Architecture: amd64
</span><span class='line'>Maintainer: Markus Rex &lt;msrex@owncloud.com&gt;
</span><span class='line'>Installed-Size: 1521
</span><span class='line'>Depends: libc6 (&gt;= 2.4), libgcc1 (&gt;= 1:4.1.1), libneon27, libowncloudsync0 (= 1.7.1), libqt4-dbus (&gt;= 4:4.5.3), libqt4-network (&gt;= 4:4.5.3), libqt4-sql (&gt;= 4:4.5.3), libqt4-xml (&gt;= 4:4.5.3), libqt4-xmlpatterns (&gt;= 4:4.5.3), libqtcore4 (&gt;= 4:4.8.0), libqtgui4 (&gt;= 4:4.7.0~beta1), libqtkeychain0, libqtwebkit4 (&gt;= 2.2.0), libsqlite3-0 (&gt;= 3.5.9), libstdc++6 (&gt;= 4.4.0), owncloud-client-l10n, libqt4-sql-sqlite
</span><span class='line'>Conflicts: libqtkeychain0 (= 0.20140128)
</span><span class='line'>Filename: ./amd64/owncloud-client_1.7.1_amd64.deb
</span><span class='line'>Size: 699596
</span><span class='line'>MD5sum: 23e2bfa2467b45fd9b70f3b946203b4b
</span><span class='line'>SHA1: 422242ad170ad1aa8d75587fe18a0469cc23ad72
</span><span class='line'>SHA256: 319e7253309835d028ec527ee9b3abea014c2db8b7edc5d3d57270ede9dbb5af
</span><span class='line'>Section: devel
</span><span class='line'>Priority: optional
</span><span class='line'>Multi-Arch: same
</span><span class='line'>Description: The ownCloud client is based on Mirall - github.com/owncloud/mirall
</span><span class='line'> .
</span><span class='line'> ownCloud client enables you to connect to your private
</span><span class='line'> ownCloud Server. With it you can create folders in your home
</span><span class='line'> directory, and keep the contents of those folders synced with your
</span><span class='line'> ownCloud server. Simply copy a file into the directory and the
</span><span class='line'> ownCloud client does the rest.
</span><span class='line'> .
</span><span class='line'> ownCloud gives your employees anytime, anywhere access to the files
</span><span class='line'> they need to get the job done, whether through this desktop application,
</span><span class='line'> our mobile apps, the web interface, or other WebDAV clients. With it,
</span><span class='line'> your employees can easily view and share documents and information
</span><span class='line'> critical to the business, in a secure, flexible and controlled
</span><span class='line'> architecture. You can easily extend ownCloud with plug-ins from the
</span><span class='line'> community, or that you build yourself to meet the requirements of
</span><span class='line'> your infrastructure and business.
</span><span class='line'> .
</span><span class='line'> ownCloud - Your Cloud, Your Data, Your Way!  www.owncloud.com
</span><span class='line'> .
</span><span class='line'> Authors
</span><span class='line'> =======
</span><span class='line'> Duncan Mac-Vicar P. &lt;duncan@kde.org&gt;
</span><span class='line'> Klaas Freitag &lt;freitag@owncloud.com&gt;
</span><span class='line'> Daniel Molkentin &lt;danimo@owncloud.com&gt;
</span><span class='line'>
</span><span class='line'>Package: owncloud-client
</span><span class='line'>Status: install ok installed
</span><span class='line'>Priority: optional
</span><span class='line'>Section: devel
</span><span class='line'>Installed-Size: 1521
</span><span class='line'>Maintainer: Markus Rex &lt;msrex@owncloud.com&gt;
</span><span class='line'>Architecture: amd64
</span><span class='line'>Multi-Arch: same
</span><span class='line'>Version: 1.7.1
</span><span class='line'>Depends: libc6 (&gt;= 2.4), libgcc1 (&gt;= 1:4.1.1), libneon27, libowncloudsync0 (= 1.7.1), libqt4-dbus (&gt;= 4:4.5.3), libqt4-network (&gt;= 4:4.5.3), libqt4-sql (&gt;= 4:4.5.3), libqt4-xml (&gt;= 4:4.5.3), libqt4-xmlpatterns (&gt;= 4:4.5.3), libqtcore4 (&gt;= 4:4.8.0), libqtgui4 (&gt;= 4:4.7.0~beta1), libqtkeychain0, libqtwebkit4 (&gt;= 2.2.0), libsqlite3-0 (&gt;= 3.5.9), libstdc++6 (&gt;= 4.4.0), owncloud-client-l10n, libqt4-sql-sqlite
</span><span class='line'>Description: The ownCloud client is based on Mirall - github.com/owncloud/mirall
</span><span class='line'> .
</span><span class='line'> ownCloud client enables you to connect to your private
</span><span class='line'> ownCloud Server. With it you can create folders in your home
</span><span class='line'> directory, and keep the contents of those folders synced with your
</span><span class='line'> ownCloud server. Simply copy a file into the directory and the
</span><span class='line'> ownCloud client does the rest.
</span><span class='line'> .
</span><span class='line'> ownCloud gives your employees anytime, anywhere access to the files
</span><span class='line'> they need to get the job done, whether through this desktop application,
</span><span class='line'> our mobile apps, the web interface, or other WebDAV clients. With it,
</span><span class='line'> your employees can easily view and share documents and information
</span><span class='line'> critical to the business, in a secure, flexible and controlled
</span><span class='line'> architecture. You can easily extend ownCloud with plug-ins from the
</span><span class='line'> community, or that you build yourself to meet the requirements of
</span><span class='line'> your infrastructure and business.
</span><span class='line'> .
</span><span class='line'> ownCloud - Your Cloud, Your Data, Your Way!  www.owncloud.com
</span><span class='line'> .
</span><span class='line'> Authors
</span><span class='line'> =======
</span><span class='line'> Duncan Mac-Vicar P. &lt;duncan@kde.org&gt;
</span><span class='line'> Klaas Freitag &lt;freitag@owncloud.com&gt;
</span><span class='line'> Daniel Molkentin &lt;danimo@owncloud.com&gt;
</span><span class='line'>
</span><span class='line'>Package: owncloud-client
</span><span class='line'>Version: 1.5.0+dfsg-4~bpo70+1
</span><span class='line'>Installed-Size: 1076
</span><span class='line'>Maintainer: ownCloud for Debian maintainers &lt;pkg-owncloud-maintainers@lists.alioth.debian.org&gt;
</span><span class='line'>Architecture: amd64
</span><span class='line'>Depends: libowncloudsync0 (= 1.5.0+dfsg-4~bpo70+1), libqt4-sql-sqlite, owncloud-client-l10n, libc6 (&gt;= 2.2.5), libgcc1 (&gt;= 1:4.1.1), libneon27-gnutls, libocsync0 (&gt;= 0.60.3), libqt4-dbus (&gt;= 4:4.5.3), libqt4-network (&gt;= 4:4.6.1), libqt4-sql (&gt;= 4:4.5.3), libqt4-xml (&gt;= 4:4.5.3), libqt4-xmlpatterns (&gt;= 4:4.5.3), libqtcore4 (&gt;= 4:4.8.0), libqtgui4 (&gt;= 4:4.7.0~beta1), libqtkeychain0 (&gt;= 0.1.0), libqtwebkit4 (&gt;= 2.1.0~2011week13), libstdc++6 (&gt;= 4.1.1)
</span><span class='line'>Description-en: folder synchronization with an ownCloud server - GUI
</span><span class='line'> The ownCloudSync system lets you always have your latest files wherever
</span><span class='line'> you are. Just specify one or more folders on the local machine to and a server
</span><span class='line'> to synchronize to. You can configure more computers to synchronize to the same
</span><span class='line'> server and any change to the files on one computer will silently and reliably
</span><span class='line'> flow across to every other.
</span><span class='line'> .
</span><span class='line'> owncloud-client provides the graphical client specialising in
</span><span class='line'> synchronizing with cloud storage provided by ownCloud.
</span><span class='line'>Homepage: http://owncloud.org/sync-clients/
</span><span class='line'>Description-md5: a754a2b9b06d1c7c880afd05aa24e101
</span><span class='line'>Section: net
</span><span class='line'>Priority: optional
</span><span class='line'>Filename: pool/main/o/owncloud-client/owncloud-client_1.5.0+dfsg-4~bpo70+1_amd64.deb
</span><span class='line'>Size: 417650
</span><span class='line'>MD5sum: 42a3f6355f9d5f5af0fb42141bee9ecf
</span><span class='line'>SHA1: 52102eacc1d81438cb88e639c09269484279dde1
</span><span class='line'>SHA256: d38e11879d6439dad97ff9f59449077193dbc89331bae8d2866b335ce8b41856</span></code></pre></td></tr></table></div></figure>


<p>さらに <code>apt-cache policy</code> でどこからきたパッケージなのかみてみるとどちらも ownCloud 公式のパッケージだったように見えました。
bpo (backports) のパッケージならバージョンが下がることはないはずなので、そう判断しました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ apt-cache policy owncloud-client
</span><span class='line'>owncloud-client:
</span><span class='line'>  インストールされているバージョン: 1.7.1
</span><span class='line'>  候補:               1.7.1
</span><span class='line'>  バージョンテーブル:
</span><span class='line'>     1.7.1 0
</span><span class='line'>        500 http://download.opensuse.org/repositories/isv:/ownCloud:/desktop/Debian_7.0/  Packages
</span><span class='line'> *** 1.7.1 0
</span><span class='line'>        100 /var/lib/dpkg/status
</span><span class='line'>     1.5.0+dfsg-4~bpo70+1 0
</span><span class='line'>        100 http://ftp.jp.debian.org/debian/ wheezy-backports/main amd64 Packages
</span><span class='line'>$ apt-cache policy libqtkeychain0
</span><span class='line'>libqtkeychain0:
</span><span class='line'>  インストールされているバージョン: 0.20140128
</span><span class='line'>  候補:               0.20140128
</span><span class='line'>  バージョンテーブル:
</span><span class='line'> *** 0.20140128 0
</span><span class='line'>        100 /var/lib/dpkg/status
</span><span class='line'>     0.4 0
</span><span class='line'>        500 http://download.opensuse.org/repositories/isv:/ownCloud:/desktop/Debian_7.0/  Packages
</span><span class='line'>     0.1.0-2~bpo70+1 0
</span><span class='line'>        100 http://ftp.jp.debian.org/debian/ wheezy-backports/main amd64 Packages</span></code></pre></td></tr></table></div></figure>


<h2>対処</h2>

<p><code>libqtkeychain0</code> を ownCloud 公式の 0.4.0 にダウングレードすることで解決しました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo aptitude full-upgrade -DV
</span><span class='line'>以下のパッケージが更新されます:
</span><span class='line'>  owncloud-client{b} [1.7.1 -&gt; 1.7.1] (競: libqtkeychain0)
</span><span class='line'>更新: 1 個、新規インストール: 0 個、削除: 0 個、保留: 0 個。
</span><span class='line'>700 k バイトのアーカイブを取得する必要があります。展開後に 0  バイトのディスク領域が新たに消費されます。
</span><span class='line'>以下のパッケージには満たされていない依存関係があります:
</span><span class='line'> owncloud-client : 競合: libqtkeychain0 (= 0.20140128) [0.20140128 が既にインストール済みです]
</span><span class='line'>以下のアクションでこれらの依存関係の問題は解決されます:
</span><span class='line'>
</span><span class='line'>     以下のパッケージを削除する:
</span><span class='line'>1)     libowncloudsync0
</span><span class='line'>2)     libqtkeychain0
</span><span class='line'>3)     owncloud-client
</span><span class='line'>4)     owncloud-client-l10n
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>この解決方法を受け入れますか? [Y/n/q/?]n
</span><span class='line'>以下のアクションでこれらの依存関係の問題は解決されます:
</span><span class='line'>
</span><span class='line'>     以下のパッケージを削除する:
</span><span class='line'>1)     owncloud-client
</span><span class='line'>2)     owncloud-client-l10n
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>この解決方法を受け入れますか? [Y/n/q/?]n
</span><span class='line'>以下のアクションでこれらの依存関係の問題は解決されます:
</span><span class='line'>
</span><span class='line'>     以下のパッケージを現在のバージョンに一時固定する:
</span><span class='line'>1)     owncloud-client [1.7.1 (now)]
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>この解決方法を受け入れますか? [Y/n/q/?]n
</span><span class='line'>以下のアクションでこれらの依存関係の問題は解決されます:
</span><span class='line'>
</span><span class='line'>     以下のパッケージをダウングレードする:
</span><span class='line'>1)     libqtkeychain0 [0.20140128 (now) -&gt; 0.4 (&lt;NULL&gt;)]
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>この解決方法を受け入れますか? [Y/n/q/?]y
</span><span class='line'>以下のパッケージがダウングレードされます:
</span><span class='line'>  libqtkeychain0 [0.20140128 -&gt; 0.4]
</span><span class='line'>以下のパッケージが更新されます:
</span><span class='line'>  owncloud-client [1.7.1 -&gt; 1.7.1]
</span><span class='line'>更新: 1 個、新規インストール: 0 個、ダウングレード: 1 個、削除: 0 個、保留: 0 個。
</span><span class='line'>753 k バイトのアーカイブを取得する必要があります。展開後に 0  バイトのディスク領域が新たに消費されます。
</span><span class='line'>先に進みますか? [Y/n/?]
</span><span class='line'>取得: 1 http://download.opensuse.org/repositories/isv:/ownCloud:/desktop/Debian_7.0/  libqtkeychain0 0.4 [53.4 kB]
</span><span class='line'>取得: 2 http://download.opensuse.org/repositories/isv:/ownCloud:/desktop/Debian_7.0/  owncloud-client 1.7.1 [700 kB]
</span><span class='line'>Fetched 753 kB in 4秒 (156 kB/s)
</span><span class='line'>changelog を読んでいます... 完了
</span><span class='line'>dpkg: 警告: libqtkeychain0 を 0.20140128 から 0.4 にダウングレードしています
</span><span class='line'>(データベースを読み込んでいます ... 現在 124701 個のファイルとディレクトリがインストールされています。)
</span><span class='line'>libqtkeychain0 0.20140128 を (.../libqtkeychain0_0.4_amd64.deb で) 置換するための準備をしています ...
</span><span class='line'>libqtkeychain0 を展開し、置換しています...
</span><span class='line'>owncloud-client:amd64 1.7.1 を (.../owncloud-client_1.7.1_amd64.deb で) 置換するための準備をしています ...
</span><span class='line'>owncloud-client:amd64 を展開し、置換しています...
</span><span class='line'>man-db のトリガを処理しています ...
</span><span class='line'>libqtkeychain0 (0.4) を設定しています ...
</span><span class='line'>owncloud-client:amd64 (1.7.1) を設定しています ...
</span><span class='line'>
</span><span class='line'>現在の状態: 更新が 0 個 [-1]。</span></code></pre></td></tr></table></div></figure>


<h2>対処後の状況</h2>

<p><code>owncloud-client</code> パッケージも <code>libqtkeychain0</code> パッケージもどちらも ownCloud 公式のバージョンになって解決しました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ apt-cache policy owncloud-client
</span><span class='line'>owncloud-client:
</span><span class='line'>  インストールされているバージョン: 1.7.1
</span><span class='line'>  候補:               1.7.1
</span><span class='line'>  バージョンテーブル:
</span><span class='line'> *** 1.7.1 0
</span><span class='line'>        500 http://download.opensuse.org/repositories/isv:/ownCloud:/desktop/Debian_7.0/  Packages
</span><span class='line'>        100 /var/lib/dpkg/status
</span><span class='line'>     1.5.0+dfsg-4~bpo70+1 0
</span><span class='line'>        100 http://ftp.jp.debian.org/debian/ wheezy-backports/main amd64 Packages
</span><span class='line'>$ apt-cache policy libqtkeychain0
</span><span class='line'>libqtkeychain0:
</span><span class='line'>  インストールされているバージョン: 0.4
</span><span class='line'>  候補:               0.4
</span><span class='line'>  バージョンテーブル:
</span><span class='line'> *** 0.4 0
</span><span class='line'>        500 http://download.opensuse.org/repositories/isv:/ownCloud:/desktop/Debian_7.0/  Packages
</span><span class='line'>        100 /var/lib/dpkg/status
</span><span class='line'>     0.1.0-2~bpo70+1 0
</span><span class='line'>        100 http://ftp.jp.debian.org/debian/ wheezy-backports/main amd64 Packages</span></code></pre></td></tr></table></div></figure>


<h2>考察</h2>

<p>Debian 公式パッケージならこういうときは
<a href="https://www.debian.org/doc/debian-policy/ch-controlfields.html#s-f-Version">Version</a> に
epoch をつけて解決しますが、
ownCloud 公式は Debian からみると非公式パッケージになるので、
将来の Debian のアップグレードの邪魔にならないように epoch を使わなかったため、
こういう問題が起きたのでないかと推測しました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第 19 回 RubyMotion もくもく会 in Osaka に参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2015-01-21-rubymotion-mokumoku-osaka.html"/>
    <updated>2015-01-21T19:43:02+09:00</updated>
    <id>http://blog.n-z.jp/blog/rubymotion-mokumoku-osaka</id>
    <content type="html"><![CDATA[<p>RubyMotion もくもく会 in Osaka の
<a href="http://rubymotionjp.connpass.com/event/10675/" title="第 19 回 RubyMotion もくもく会 in Osaka - connpass">第 19 回 RubyMotion もくもく会 in Osaka - connpass</a>
に参加してきました。</p>

<p>次回の
<a href="http://rubymotionjp.connpass.com/event/11407/" title="第 20 回 RubyMotion もくもく会 in Osaka - connpass">第 20 回 RubyMotion もくもく会 in Osaka - connpass</a>
2015/02/25(水) になりました。</p>

<!--more-->


<h2>メモ</h2>

<p>今回は Swift のチュートリアルをやっていました。</p>

<p>以下メモです。</p>

<ul>
<li><a href="http://www.bose.co.jp/jp_jp?url=/consumer_audio/headphones/quiet_comfort/index.jsp" title="ノイズキャンセリング・ヘッドホン | ヘッドホン | Bose ボーズ">ノイズキャンセリング・ヘッドホン | ヘッドホン | Bose ボーズ</a></li>
<li><a href="https://www.bloc.io/tutorials/swiftris-build-your-first-ios-game-with-swift" title="Swiftris: Build Your First iOS Game with Swift | Bloc">Swiftris: Build Your First iOS Game with Swift | Bloc</a></li>
<li>ActiveRecord の Callback の呼ばれるタイミング <a href="http://api.rubyonrails.org/classes/ActiveRecord/Callbacks.html">http://api.rubyonrails.org/classes/ActiveRecord/Callbacks.html</a></li>
<li><a href="http://marked2app.com/" title="Marked 2 - Smarter tools for smarter writers">Marked 2 - Smarter tools for smarter writers</a></li>
<li><a href="https://github.com/jessesquires/JSQMessagesViewController">https://github.com/jessesquires/JSQMessagesViewController</a></li>
<li><a href="http://www.okono.me/" title="大阪・淡路 お好み焼 ゆき">大阪・淡路 お好み焼 ゆき</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LILO ＆ 東海道らぐのイベントに参加しました]]></title>
    <link href="http://blog.n-z.jp/blog/2015-01-10-lilo-tokaidolug.html"/>
    <updated>2015-01-10T13:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/lilo-tokaidolug</id>
    <content type="html"><![CDATA[<p><a href="http://lilo.doorkeeper.jp/events/18987" title="LILO ＆ 東海道らぐ・オフラインミーティング（2015/01/10） - LILO | Doorkeeper">LILO ＆ 東海道らぐ・オフラインミーティング（2015/01/10） - LILO | Doorkeeper</a>
に参加しました。</p>

<p>前回と同じくアンカンファレンス形式でした。</p>

<!--more-->


<h2>メモ</h2>

<p>今回のメモです。</p>

<ul>
<li>LILO と東海道らぐの紹介</li>
<li>自己紹介から</li>
<li>広島の Open Street Map の話</li>
<li>F4map</li>
<li>Raspberry Pi で Scratch</li>
<li>ARM Chromebook で Linux

<ul>
<li>Chrouton</li>
<li>ChrUbuntu</li>
<li>続きは OSC 東京で。</li>
</ul>
</li>
<li>opencocon</li>
<li>UEFI

<ul>
<li>ESP パーティション (FAT32、大抵は512MB)</li>
<li>32bit UEFI アプリを 64bit UEFI で使うことはできない</li>
</ul>
</li>
<li>Linux 人口を増やしたい

<ul>
<li><a href="http://knowledge.sakura.ad.jp/" title="さくらのナレッジ">さくらのナレッジ</a></li>
<li><a href="http://knowledge.sakura.ad.jp/beginner/2691/" title="「サーバーってなに？」～初心者でもよくわかる！VPSによるWebサーバー構築講座(1) - さくらのナレッジ">「サーバーってなに？」～初心者でもよくわかる！VPSによるWebサーバー構築講座(1) - さくらのナレッジ</a></li>
<li><a href="http://vps.sakura.ad.jp/" title="さくらの VPS">さくらの VPS</a> が最近リニューアル</li>
</ul>
</li>
<li>LibreOffice の話

<ul>
<li>CloudOn</li>
<li><a href="http://ask.libreoffice.org/ja/questions/">http://ask.libreoffice.org/ja/questions/</a></li>
</ul>
</li>
<li>日本語アナウンスをリリースする時に気をつけていること

<ul>
<li>Linux Mint Japan</li>
</ul>
</li>
<li>etckeeper を openSUSE の公式リポジトリに入れたいぞ! Ver.2

<ul>
<li><a href="https://joeyh.name/code/etckeeper/">https://joeyh.name/code/etckeeper/</a> → <a href="http://etckeeper.branchable.com/">http://etckeeper.branchable.com/</a></li>
<li><a href="https://ikiwiki.info/">https://ikiwiki.info/</a></li>
<li><a href="https://build.opensuse.org/" title="openSUSE Build Service">openSUSE Build Service</a></li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[heroku本を読んだ]]></title>
    <link href="http://blog.n-z.jp/blog/2015-01-03-heroku-book.html"/>
    <updated>2015-01-03T16:58:56+09:00</updated>
    <id>http://blog.n-z.jp/blog/heroku-book</id>
    <content type="html"><![CDATA[<p><a href="http://www.amazon.co.jp/gp/product/4048915134/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4048915134&amp;linkCode=as2&amp;tag=znz-22">プロフェッショナルのための 実践Heroku入門 プラットフォーム・クラウドを活用したアプリケーション開発と運用 (書籍)</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4048915134" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />
を読んだので、そのメモです。</p>

<!--more-->


<p>内容としては heroku をまだ使ったことない人には特におすすめで、使ったことがある人にもどういう思想で作られているのかなど参考になるのでおすすめだと思いました。
特に最後の The Twelve Factor App の翻訳は heroku に限らず参考になると思いました。</p>

<h2>メモ</h2>

<div style="float:right">
<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=znz-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=4048915134" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>
</div>


<ul>
<li>ceder → cedar (全般的に)</li>
<li>p.47 rubyforge はもう終了しているのでダウンロードできなさそう。</li>
<li>p.49 <code>brew --prefix readline</code> と <code>brew --prefix openssl</code> の周りに <code>$( )</code> が抜けている?</li>
<li>p.55 gem install するのは bundle よりも bundler の方が良さそう。</li>
<li>p.60 下から4行目 Frameowk → Framework</li>
<li>p.69 下から2行目 PostgresSQL → PostgreSQL</li>
<li>p.70 <code>(後述)</code> とあるが既に説明済み?</li>
<li>p.79 webtype → web type</li>
<li>p.79 <code>jobs:worK</code> → <code>jobs:work</code> ? (2カ所)</li>
<li>p.91 newrelick → newrelic</li>
<li>p.92 MG → MB ? (3カ所)</li>
<li>p.101 sandobox → sandbox ?</li>
<li>p.135 ctext 型をの → citext 型を</li>
<li>p.159 注7 の URL がパスしかない</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rubyによるクローラー開発技法を読んだ]]></title>
    <link href="http://blog.n-z.jp/blog/2014-12-30-ruby-crawler.html"/>
    <updated>2014-12-30T18:21:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/ruby-crawler</id>
    <content type="html"><![CDATA[<p>次回の
<a href="http://kokucheese.com/event/index/247692/" title="1月10日 Rubyによるクローラー開発技法　読書会　第3回(兵庫県)">1月10日 Rubyによるクローラー開発技法　読書会　第3回(兵庫県)</a>
は
<a href="http://lilo.doorkeeper.jp/events/18987" title="LILO ＆ 東海道らぐ・オフラインミーティング（2015/01/10） - LILO | Doorkeeper">LILO ＆ 東海道らぐ・オフラインミーティング（2015/01/10） - LILO | Doorkeeper</a>
と重なっていて参加できないということで、Rubyによるクローラー開発技法を読んでしまったので、そのメモです。</p>

<!--more-->


<h2>メモ</h2>

<div style="float:right">
<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=znz-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=4797380357" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>
</div>


<ul>
<li>p.62 <code>robotex.rb</code> の 4 行目は 3 行目の引数にならずに意味がないのでは。</li>
<li>p.67 <code>anemone-skip_links_like.rb</code> で「adminを含むURLは除外」と書いてあるのに <code>/\/r\//</code> になっている。</li>
<li>p.69 <code>http://example.com</code> と <code>http://example.com/</code> は同じ意味で 301 リダイレクトは発生しないのでは。</li>
<li>p.143 「スクリーンショットはページごとに上書きされていって、」とあるが、ここは上書きされないのでは。</li>
<li>p.173 <code>Nokogiri#parse</code> などは <code>Nokogiri.parse</code> (インスタンスメソッドではなくクラスメソッド) なのでは。</li>
<li>p.215 <code>initialize</code> の <code>#{}</code> は不要なのでは。</li>
<li>p.239 <code>page.code = 500</code> は <code>page.code == 500</code> の間違い?</li>
<li>p.258 <code>base_url</code> への代入が連続しているのが不要</li>
<li>p.359 プスクリプト → スクリプト</li>
<li>p.420 varidation → validation</li>
<li>p.420 gsub の結果は Integer にならないのでは?</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[doorkeeper gem を 1.4 系から 2.0 系にアップデートした]]></title>
    <link href="http://blog.n-z.jp/blog/2014-12-18-doorkeeper-gem-1-to-2.html"/>
    <updated>2014-12-18T16:18:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/doorkeeper-gem-1-to-2</id>
    <content type="html"><![CDATA[<p>doorkeeper gem がメジャーバージョンアップして非互換があったので、
対応したときのメモです。</p>

<!--more-->


<h2>対象バージョン</h2>

<ul>
<li>rails 4.1.8</li>
<li>doorkeeper 1.4.0 から 2.0.1</li>
</ul>


<h2>変更点確認</h2>

<p><a href="https://github.com/doorkeeper-gem/doorkeeper/blob/master/CHANGELOG.md">CHANGELOG.md</a>
にまとまっていたので、参考にしました。</p>

<p>セキュリティアップデートも含まれるようなので、
2.0 系にあげられないときは 1.4.1 にあげておくのが良さそうです。</p>

<h2><code>doorkeeper_for</code> の書き換え</h2>

<p><code>doorkeeper_for :all</code> は <code>before_action :doorkeeper_authorize!</code> に書き換えました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'><span class="gd">-    doorkeeper_for :all</span>
</span><span class='line'><span class="gd">-    respond_to     :json</span>
</span><span class='line'><span class="gi">+    before_action :doorkeeper_authorize!</span>
</span><span class='line'><span class="gi">+    respond_to    :json</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'><span class="gd">-    doorkeeper_for :index,  :show,   scopes: %w&quot;public&quot;</span>
</span><span class='line'><span class="gd">-    doorkeeper_for :create, :update, scopes: %w&quot;admin write&quot;</span>
</span><span class='line'><span class="gi">+    before_action -&gt; { doorkeeper_authorize! :public }, only: [:index, :show]</span>
</span><span class='line'><span class="gi">+    before_action only: [:create, :update] do</span>
</span><span class='line'><span class="gi">+      doorkeeper_authorize! :admin, :write</span>
</span><span class='line'><span class="gi">+    end</span>
</span></code></pre></td></tr></table></div></figure>


<h2><code>config/initializers/doorkeeper.rb</code> の更新</h2>

<p><code>rails g doorkeeper:install</code> で生成し直して変更していた部分を再適用しました。</p>

<ul>
<li><code>resource_owner_authenticator</code> で <code>devise</code> との連携</li>
<li>scope 関連</li>
<li>認可の画面のスキップ</li>
<li>動的な query parameter の許可</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="n">resource_owner_authenticator</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">current_user</span> <span class="o">||</span> <span class="n">warden</span><span class="o">.</span><span class="n">authenticate!</span><span class="p">(</span><span class="ss">scope</span><span class="p">:</span> <span class="ss">:user</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">default_scopes</span>  <span class="ss">:public</span>
</span><span class='line'>  <span class="n">optional_scopes</span> <span class="ss">:admin</span><span class="p">,</span> <span class="ss">:write</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">skip_authorization</span> <span class="k">do</span> <span class="o">|</span><span class="n">resource_owner</span><span class="p">,</span> <span class="n">client</span><span class="o">|</span>
</span><span class='line'>    <span class="kp">true</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">wildcard_redirect_uri</span> <span class="kp">true</span>
</span></code></pre></td></tr></table></div></figure>


<h2><code>config/locales/doorkeeper.en.yml</code> の更新</h2>

<p><code>rails g doorkeeper:install</code> で <code>config/initializers/doorkeeper.rb</code> と一緒に更新されていました。</p>

<p>認可の画面をスキップしている関係で、翻訳はせずに en を ja に置き換えただけで
そのまま使っていたので、同様に置き換えてそのまま使いました。</p>

<h2><code>redirect urimust be an HTTPS/SSL URI.</code> 対策</h2>

<p>テストの中で
<code>let!(:application) { Doorkeeper::Application.create!(name: 'MyApp', redirect_uri: 'http://api.test') }</code>
のようにしていると
<code>redirect urimust be an HTTPS/SSL URI.</code>
で失敗していたので、
<code>https</code> の URL に変更するか、
<code>config/initializers/doorkeeper.rb</code> で
<code>force_ssl_in_redirect_uri false</code>
にする必要がありました。</p>

<h2>Missing column: <code>applications.scopes</code></h2>

<p>テストを実行したときに</p>

<pre><code>[doorkeeper] Missing column: `applications.scopes`. If you are using ActiveRecord run `rails generate doorkeeper:application_scopes &amp;&amp; rake db:migrate` to add it.
</code></pre>

<p>というメッセージが出るので、メッセージ通り
<code>rails generate doorkeeper:application_scopes &amp;&amp; rake db:migrate</code>
で追加しました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第 18 回 RubyMotion もくもく会 in Osaka に参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2014-12-17-rubymotion-mokumoku-osaka.html"/>
    <updated>2014-12-17T19:32:35+09:00</updated>
    <id>http://blog.n-z.jp/blog/rubymotion-mokumoku-osaka</id>
    <content type="html"><![CDATA[<p>RubyMotion もくもく会 in Osaka の
<a href="http://rubymotionjp.connpass.com/event/10195/" title="第 18 回 RubyMotion もくもく会 in Osaka - connpass">第 18 回 RubyMotion もくもく会 in Osaka - connpass</a>
に参加してきました。</p>

<p>次回の
<a href="http://rubymotionjp.connpass.com/event/10675/" title="第 19 回 RubyMotion もくもく会 in Osaka - connpass">第 19 回 RubyMotion もくもく会 in Osaka - connpass</a>
2015/01/21(水) になりました。</p>

<!--more-->


<h2>メモ</h2>

<p>今日は <a href="http://d.hatena.ne.jp/nagachika/">ruby trunk changes</a> を読んでいました。
以下自分のメモです。</p>

<ul>
<li><code>Time.now.to_f</code> の代わりに <code>Process.clock_gettime(Process::CLOCK_REALTIME)</code></li>
<li><code>{ 'symbol-key': value }</code> という書き方ができるのは ruby 2.2 から</li>
<li><code>String#chomp</code> に空文字列を渡すと特殊な処理がある <a href="https://github.com/ruby/ruby/pull/780">https://github.com/ruby/ruby/pull/780</a></li>
</ul>


<h2>他の人の話のメモ</h2>

<ul>
<li><a href="http://qiita.com/shu223/items/bce33f6ab448c90e4d2b" title="Xcode - 【iOS7】ばねっぽいアニメーションを実現するUIViewの新メソッド - Qiita">Xcode - 【iOS7】ばねっぽいアニメーションを実現するUIViewの新メソッド - Qiita</a></li>
<li>スポともアプリ</li>
<li><a href="https://github.com/fastred/SloppySwiper">https://github.com/fastred/SloppySwiper</a></li>
<li><a href="https://www.meteor.com/">meteor</a></li>
<li><a href="http://ionicframework.com/">ionic</a></li>
<li><a href="http://devlove-kansai.doorkeeper.jp/events/17726" title="Dockerを現場に取り入れてみよう！ - DevLOVE関西 | Doorkeeper">Dockerを現場に取り入れてみよう！ - DevLOVE関西 | Doorkeeper</a></li>
<li><a href="https://www.bloc.io/tutorials/swiftris-build-your-first-ios-game-with-swift">https://www.bloc.io/tutorials/swiftris-build-your-first-ios-game-with-swift</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第64回 Ruby関西 勉強会に参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2014-12-13-rubykansai64.html"/>
    <updated>2014-12-13T13:13:04+09:00</updated>
    <id>http://blog.n-z.jp/blog/rubykansai64</id>
    <content type="html"><![CDATA[<p><a href="http://rubykansai.doorkeeper.jp/events/17347" title="第64回 Ruby関西 勉強会">第64回 Ruby関西 勉強会</a>
に参加したので、そのメモです。</p>

<!--more-->


<h2>オープニング</h2>

<ul>
<li>勉強会の名前がちょっと変わった。</li>
</ul>


<h2>名付け親システム</h2>

<ul>
<li>子供の名前付けの補助をするプログラムを作った話</li>
<li>要件定義が一番時間がかかった</li>
</ul>


<h2>史上最安易／できるだけ速く数を数えたい</h2>

<ul>
<li>那由他まで挑戦したい</li>
<li>enzi</li>
<li>RuJit</li>
<li>IO が遅いのではという話</li>
</ul>


<h2>Ruby/SDL2 のはなし</h2>

<ul>
<li><a href="https://github.com/ohai/ruby-sdl2">https://github.com/ohai/ruby-sdl2</a></li>
<li><a href="http://www.kmc.gr.jp/~ohai/rubysdl2/doc-en/">http://www.kmc.gr.jp/~ohai/rubysdl2/doc-en/</a></li>
<li>SDL 2.x 自体は Android などにも対応しているらしい (Ruby/SDL2 は無理)</li>
<li>2000年頃(?)から 2D 描画にも 3D 機能を利用するようになってきていた</li>
<li>初期化に失敗したときのエラーメッセージ表示とかできるようになった</li>
<li>yard の i18n 機能は英語を書いておかないと日本語が書けないので日本語は後になっている</li>
<li>加算ブレンディングは光っぽいものに使う</li>
<li>アルファブレンディングは透明っぽいものに使う</li>
<li>デモ: <a href="https://gist.github.com/ohai/fb18f6c313ce669911a3">https://gist.github.com/ohai/fb18f6c313ce669911a3</a></li>
<li>Smalruby で Ruby/SDL (1の方) が使われているらしい</li>
<li>SDL と SDL2 が非互換なので</li>
</ul>


<h2>DDD with Rails</h2>

<ul>
<li><a href="https://speakerdeck.com/ogom/ddd-with-rails">https://speakerdeck.com/ogom/ddd-with-rails</a></li>
<li><a href="https://github.com/hommachirb/rails-ddd">https://github.com/hommachirb/rails-ddd</a></li>
<li>ActiveState が middleware なのはデータベースに接続できないと ActiveRecord の middleware でエラーになって、そもそも任意の view が使えないため</li>
<li>state machine gem は開発が止まっている</li>
<li>aasm gem は活発</li>
<li><a href="http://qiita.com/ogomr/items/0b5c4de7f38fd1482a48" title="PlantUML Cheat Sheet">PlantUML Cheat Sheet</a></li>
</ul>


<h2>Ruby初級者向けレッスン 51回 例外</h2>

<p>内容の他に、デモのときのシェルや Emacs の操作などが気になりました (参考になりました)。</p>

<h2>クロージング</h2>

<ul>
<li>次回は 2015 年 2 月 21 日</li>
</ul>

]]></content>
  </entry>
  
</feed>
