<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[ZnZ Blog]]></title>
  <link href="http://blog.n-z.jp/atom.xml" rel="self"/>
  <link href="http://blog.n-z.jp/"/>
  <updated>2013-10-08T22:48:53+09:00</updated>
  <id>http://blog.n-z.jp/</id>
  <author>
    <name><![CDATA[Kazuhiro NISHIYAMA]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[doorkeeper gem の API のクライアント]]></title>
    <link href="http://blog.n-z.jp/blog/2013-10-08-doorkeeper-api-client.html"/>
    <updated>2013-10-08T21:06:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/doorkeeper-api-client</id>
    <content type="html"><![CDATA[<p><a href="http://rubygems.org/gems/doorkeeper">doorkeeper gem</a>
で API を作る方は
<a href="https://github.com/applicake/doorkeeper-provider-app">doorkeeper-provider-app</a>
というサンプルの
<code>app/controllers/api/</code>
以下などをみればすぐにわかったのですが、
API を呼び出す方は
<a href="https://github.com/applicake/doorkeeper/wiki/Create-a-OmniAuth-strategy-for-your-provider">OmniAuth の中でユーザーの情報を取り出す</a>
だけならすぐに出来たのですが、
コントローラーの中など呼び出す方法は
<a href="https://github.com/applicake/doorkeeper-devise-client">doorkeeper-devise-client</a>
を見てもよくわからなかったので、まとめてみました。</p>

<!--more-->


<h2>動作確認バージョン</h2>

<ul>
<li>provider 側

<ul>
<li>rails 3.2.14</li>
<li>doorkeeper 0.7.3</li>
</ul>
</li>
<li>client 側

<ul>
<li>rails 4.0.0</li>
<li>devise 3.1.1</li>
<li>omniauth 1.1.4</li>
<li>omniauth-oauth2 1.1.1</li>
<li>oauth2 0.8.1</li>
</ul>
</li>
</ul>


<h2>準備</h2>

<p>まず
<a href="https://github.com/applicake/doorkeeper/wiki/Create-a-OmniAuth-strategy-for-your-provider">Create a OmniAuth strategy for your provider</a>
を参考にして、
OmniAuth の中で
<code>access_token.get('/api/v1/me.json').parsed</code>
は出来るところまでは準備しておきます。</p>

<p>目的としては、
この
<code>access_token</code>
が認証より後で呼ばれる他のコントローラーの中で取得できれば良いということになります。</p>

<p>余談ですが、
doorkeeper の wiki は
<a href="https://github.com/applicake/doorkeeper/wiki/Supported-Ruby-&amp;-Rails-versions">Supported Ruby &amp; Rails versions</a>
のように情報が古いまま放置されているページもあるようなので、
<a href="https://github.com/applicake/doorkeeper">README</a>
などのソースコード側のドキュメントも参照した方が良さそうです。</p>

<h2>必要なもの</h2>

<p><code>access_token</code>
は
<code>OAuth2::AccessToken</code>
クラスのオブジェクトです。</p>

<p>生成するには</p>

<ul>
<li><code>OAuth2::Client</code> のオブジェクト</li>
<li>認証で取得した <code>token</code></li>
</ul>


<p>が必要になります。</p>

<p><code>OAuth2::Client</code>
の生成には</p>

<ul>
<li><code>client_id</code></li>
<li><code>client_secret</code></li>
<li>URL</li>
</ul>


<p>が必要になります。</p>

<h2>token の保存</h2>

<p>まず
<code>OAuth2</code>
の認証で取得した
<code>token</code>
を保存しておく必要があります。</p>

<p><code>Users::OmniauthCallbacksController#doorkeeper</code>
で
<code>session[:doorkeeper_token] = request.env["omniauth.auth"]["credentials"]["token"]</code>
のようにしてセッションなどの後で使える場所に保存しておきます。</p>

<p>後で調べてわかったのですが、
<a href="https://github.com/applicake/doorkeeper-devise-client/blob/master/app/controllers/users/omniauth_callbacks_controller.rb">doorkeeper-devise-client の Users::OmniauthCallbacksController</a>
では
<code>request.env["omniauth.auth"].credentials.token</code>
を
<code>user.doorkeeper_access_token</code>
でデータベースに保存していました。</p>

<h2>OAuth2::Client の作成</h2>

<p><a href="https://github.com/applicake/doorkeeper-devise-client/blob/master/app/controllers/application_controller.rb">doorkeeper-devise-client の ApplicationController</a>
では必要な情報は定数経由で受け取るようになっていました。</p>

<p>今回は
<code>devise</code>
と
<code>omniauth-oauth2</code>
を使っているので、
その情報を使って生成するようにしました。
要点だけまとめると以下のコードになります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">config</span> <span class="o">=</span> <span class="no">Devise</span><span class="o">.</span><span class="n">omniauth_configs</span><span class="o">[</span><span class="ss">:doorkeeper</span><span class="o">]</span>
</span><span class='line'><span class="n">strategy</span> <span class="o">=</span> <span class="n">config</span><span class="o">.</span><span class="n">strategy_class</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="o">*</span><span class="n">config</span><span class="o">.</span><span class="n">args</span><span class="p">)</span>
</span><span class='line'><span class="n">client</span> <span class="o">=</span> <span class="n">strategy</span><span class="o">.</span><span class="n">client</span>
</span></code></pre></td></tr></table></div></figure>


<h2>OAuth2::AccessToken の生成</h2>

<p>ここまで準備ができれば後は
<code>OAuth2::AccessToken.new</code>
するだけです。</p>

<p>まとめると以下のコードになります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="k">def</span> <span class="nf">access_token</span>
</span><span class='line'>    <span class="k">return</span> <span class="vi">@access_token</span> <span class="k">if</span> <span class="n">defined?</span><span class="p">(</span><span class="vi">@access_token</span><span class="p">)</span>
</span><span class='line'>    <span class="n">config</span> <span class="o">=</span> <span class="no">Devise</span><span class="o">.</span><span class="n">omniauth_configs</span><span class="o">[</span><span class="ss">:doorkeeper</span><span class="o">]</span>
</span><span class='line'>    <span class="n">strategy</span> <span class="o">=</span> <span class="n">config</span><span class="o">.</span><span class="n">strategy_class</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="o">*</span><span class="n">config</span><span class="o">.</span><span class="n">args</span><span class="p">)</span>
</span><span class='line'>    <span class="n">token</span> <span class="o">=</span> <span class="n">session</span><span class="o">[</span><span class="ss">:doorkeeper_token</span><span class="o">]</span>
</span><span class='line'>    <span class="vi">@access_token</span> <span class="o">=</span> <span class="ss">OAuth2</span><span class="p">:</span><span class="ss">:AccessToken</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">strategy</span><span class="o">.</span><span class="n">client</span><span class="p">,</span> <span class="n">token</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>API 呼び出し</h2>

<p><code>access_token</code>
が出来たら後は呼び出しに使うだけです。</p>

<p>単純な情報取得は
<code>get</code>
して
JSON
なら
<code>parsed</code>
を呼び出すだけです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="n">access_token</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s2">&quot;/api/v1/me.json&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">parsed</span>
</span><span class='line'>  <span class="n">access_token</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s2">&quot;/api/v1/posts.json&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">parsed</span>
</span></code></pre></td></tr></table></div></figure>


<p>今回は連携して書き込みたいというのが目的だったため、
<code>post</code>
も使いました。</p>

<p>モデルの例としては
<code>rails g scaffold post title body:text</code>
で API の提供側では以下の実装とします。</p>

<figure class='code'><figcaption><span>app/controllers/api/v1/posts_controller.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">Api::V1</span>
</span><span class='line'>  <span class="k">class</span> <span class="nc">PostsController</span> <span class="o">&lt;</span> <span class="no">ApiController</span>
</span><span class='line'>    <span class="n">doorkeeper_for</span> <span class="ss">:index</span>
</span><span class='line'>    <span class="n">doorkeeper_for</span> <span class="ss">:create</span>
</span><span class='line'>    <span class="n">respond_to</span>     <span class="ss">:json</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">index</span>
</span><span class='line'>      <span class="n">respond_with</span> <span class="no">Post</span><span class="o">.</span><span class="n">all</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">create</span>
</span><span class='line'>      <span class="n">post</span> <span class="o">=</span> <span class="no">Post</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:post</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>      <span class="n">post</span><span class="o">.</span><span class="n">user</span> <span class="o">=</span> <span class="n">current_resource_owner</span>
</span><span class='line'>      <span class="n">post</span><span class="o">.</span><span class="n">save!</span>
</span><span class='line'>      <span class="n">respond_with</span> <span class="n">post</span>
</span><span class='line'>    <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>呼び出し側は以下のようになります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">access_token</span><span class="o">.</span><span class="n">post</span><span class="p">(</span><span class="s2">&quot;/api/v1/posts&quot;</span><span class="p">,</span> <span class="ss">params</span><span class="p">:</span> <span class="p">{</span> <span class="ss">post</span><span class="p">:</span> <span class="p">{</span> <span class="ss">title</span><span class="p">:</span> <span class="n">title</span><span class="p">,</span> <span class="ss">body</span><span class="p">:</span> <span class="n">body</span> <span class="p">}</span> <span class="p">})</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>params</code>
による指定は
<a href="https://github.com/intridea/oauth2/blob/master/lib/oauth2/access_token.rb">OAuth2::AccessToken</a>
のソースをみて推測しました。</p>

<h2>scope 付き API 提供</h2>

<p>書き込みも許可すると
<code>scope</code>
を分けたくなります。</p>

<p>doorkeeper 側では
<a href="https://github.com/applicake/doorkeeper/wiki/Using-Scopes">Using Scopes</a>
を参考にして</p>

<ul>
<li>initializers に scopes 追加</li>
<li>翻訳追加</li>
<li>API に scopes 追加</li>
</ul>


<p>をしておきます。</p>

<figure class='code'><figcaption><span>config/initializers/doorkeeper.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="n">default_scopes</span>  <span class="ss">:public</span>
</span><span class='line'>  <span class="n">optional_scopes</span> <span class="ss">:admin</span><span class="p">,</span> <span class="ss">:write</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>app/controllers/api/v1/posts_controller.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">doorkeeper_for</span> <span class="ss">:index</span><span class="p">,</span>  <span class="ss">:show</span><span class="p">,</span>   <span class="ss">scopes</span><span class="p">:</span> <span class="o">[</span><span class="ss">:public</span><span class="o">]</span>
</span><span class='line'><span class="n">doorkeeper_for</span> <span class="ss">:create</span><span class="p">,</span> <span class="ss">:update</span><span class="p">,</span> <span class="ss">scopes</span><span class="p">:</span> <span class="o">[</span><span class="ss">:admin</span><span class="p">,</span> <span class="ss">:write</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>参考のため、この API の rspec も載せておきます。
複数の <code>scopes</code> を設定する時に <code>,</code> 区切りだとうまくいかないところがあったので、
スペース区切りにしています。</p>

<figure class='code'><figcaption><span>spec/controllers/api/v1/posts_controller_spec.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;spec_helper&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">describe</span> <span class="ss">Api</span><span class="p">:</span><span class="ss">:V1</span><span class="o">::</span><span class="no">PostsController</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">describe</span> <span class="s2">&quot;GET &#39;index&#39;&quot;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">let!</span><span class="p">(</span><span class="ss">:application</span><span class="p">)</span> <span class="p">{</span> <span class="ss">Doorkeeper</span><span class="p">:</span><span class="ss">:Application</span><span class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s2">&quot;MyApp&quot;</span><span class="p">,</span> <span class="n">redirect_uri</span><span class="p">:</span> <span class="s2">&quot;http://app.com&quot;</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>    <span class="n">let!</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">{</span> <span class="no">FactoryGirl</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="ss">:normal_user</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>    <span class="n">let!</span><span class="p">(</span><span class="ss">:token</span><span class="p">)</span> <span class="p">{</span> <span class="ss">Doorkeeper</span><span class="p">:</span><span class="ss">:AccessToken</span><span class="o">.</span><span class="n">create!</span> <span class="n">application_id</span><span class="p">:</span> <span class="n">application</span><span class="o">.</span><span class="n">id</span><span class="p">,</span> <span class="n">resource_owner_id</span><span class="p">:</span> <span class="n">user</span><span class="o">.</span><span class="n">id</span><span class="p">,</span> <span class="ss">scopes</span><span class="p">:</span> <span class="s2">&quot;public&quot;</span> <span class="p">}</span>
</span><span class='line'>    <span class="n">subject</span> <span class="p">{</span> <span class="n">response</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">context</span> <span class="s2">&quot;valid token&quot;</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">before</span> <span class="k">do</span>
</span><span class='line'>        <span class="n">get</span> <span class="s1">&#39;index&#39;</span><span class="p">,</span> <span class="nb">format</span><span class="p">:</span> <span class="ss">:json</span><span class="p">,</span> <span class="n">access_token</span><span class="p">:</span> <span class="n">token</span><span class="o">.</span><span class="n">token</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">be_success</span> <span class="p">}</span>
</span><span class='line'>      <span class="n">its</span><span class="p">(</span><span class="ss">:status</span><span class="p">)</span> <span class="p">{</span> <span class="n">should</span> <span class="n">eq</span><span class="p">(</span><span class="mi">200</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>      <span class="n">its</span><span class="p">(</span><span class="ss">:body</span><span class="p">)</span> <span class="p">{</span> <span class="n">should</span> <span class="o">==</span> <span class="no">Post</span><span class="o">.</span><span class="n">all</span><span class="o">.</span><span class="n">to_a</span><span class="o">.</span><span class="n">to_json</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">context</span> <span class="s2">&quot;invalid token&quot;</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">before</span> <span class="k">do</span>
</span><span class='line'>        <span class="n">get</span> <span class="s1">&#39;index&#39;</span><span class="p">,</span> <span class="nb">format</span><span class="p">:</span> <span class="ss">:json</span><span class="p">,</span> <span class="n">access_token</span><span class="p">:</span> <span class="n">token</span><span class="o">.</span><span class="n">token</span><span class="o">.</span><span class="n">succ</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="n">it</span> <span class="p">{</span> <span class="n">should_not</span> <span class="n">be_success</span> <span class="p">}</span>
</span><span class='line'>      <span class="n">its</span><span class="p">(</span><span class="ss">:status</span><span class="p">)</span> <span class="p">{</span> <span class="n">should</span> <span class="n">eq</span><span class="p">(</span><span class="mi">401</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">describe</span> <span class="s2">&quot;GET &#39;index&#39; without scopes&quot;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">let!</span><span class="p">(</span><span class="ss">:application</span><span class="p">)</span> <span class="p">{</span> <span class="ss">Doorkeeper</span><span class="p">:</span><span class="ss">:Application</span><span class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s2">&quot;MyApp&quot;</span><span class="p">,</span> <span class="n">redirect_uri</span><span class="p">:</span> <span class="s2">&quot;http://app.com&quot;</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>    <span class="n">let!</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">{</span> <span class="no">FactoryGirl</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="ss">:normal_user</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>    <span class="n">let!</span><span class="p">(</span><span class="ss">:token</span><span class="p">)</span> <span class="p">{</span> <span class="ss">Doorkeeper</span><span class="p">:</span><span class="ss">:AccessToken</span><span class="o">.</span><span class="n">create!</span> <span class="n">application_id</span><span class="p">:</span> <span class="n">application</span><span class="o">.</span><span class="n">id</span><span class="p">,</span> <span class="n">resource_owner_id</span><span class="p">:</span> <span class="n">user</span><span class="o">.</span><span class="n">id</span><span class="p">,</span> <span class="ss">scopes</span><span class="p">:</span> <span class="s2">&quot;write&quot;</span> <span class="p">}</span>
</span><span class='line'>    <span class="n">subject</span> <span class="p">{</span> <span class="n">response</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">context</span> <span class="s2">&quot;valid token&quot;</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">before</span> <span class="k">do</span>
</span><span class='line'>        <span class="n">get</span> <span class="s1">&#39;index&#39;</span><span class="p">,</span> <span class="nb">format</span><span class="p">:</span> <span class="ss">:json</span><span class="p">,</span> <span class="n">access_token</span><span class="p">:</span> <span class="n">token</span><span class="o">.</span><span class="n">token</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="n">it</span> <span class="p">{</span> <span class="n">should_not</span> <span class="n">be_success</span> <span class="p">}</span>
</span><span class='line'>      <span class="n">its</span><span class="p">(</span><span class="ss">:status</span><span class="p">)</span> <span class="p">{</span> <span class="n">should</span> <span class="n">eq</span><span class="p">(</span><span class="mi">401</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>      <span class="n">its</span><span class="p">(</span><span class="ss">:body</span><span class="p">)</span> <span class="p">{</span> <span class="n">should</span> <span class="o">==</span> <span class="s2">&quot; &quot;</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">describe</span> <span class="s2">&quot;POST &#39;create&#39;&quot;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">let!</span><span class="p">(</span><span class="ss">:application</span><span class="p">)</span> <span class="p">{</span> <span class="ss">Doorkeeper</span><span class="p">:</span><span class="ss">:Application</span><span class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s2">&quot;MyApp&quot;</span><span class="p">,</span> <span class="n">redirect_uri</span><span class="p">:</span> <span class="s2">&quot;http://app.com&quot;</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>    <span class="n">let!</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">{</span> <span class="no">FactoryGirl</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="ss">:normal_user</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>    <span class="n">let!</span><span class="p">(</span><span class="ss">:token</span><span class="p">)</span> <span class="p">{</span> <span class="ss">Doorkeeper</span><span class="p">:</span><span class="ss">:AccessToken</span><span class="o">.</span><span class="n">create!</span> <span class="n">application_id</span><span class="p">:</span> <span class="n">application</span><span class="o">.</span><span class="n">id</span><span class="p">,</span> <span class="n">resource_owner_id</span><span class="p">:</span> <span class="n">user</span><span class="o">.</span><span class="n">id</span><span class="p">,</span> <span class="ss">scopes</span><span class="p">:</span> <span class="s2">&quot;public write&quot;</span> <span class="p">}</span>
</span><span class='line'>    <span class="n">subject</span> <span class="p">{</span> <span class="n">response</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">context</span> <span class="s2">&quot;valid token&quot;</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">before</span> <span class="k">do</span>
</span><span class='line'>        <span class="n">post</span> <span class="s1">&#39;create&#39;</span><span class="p">,</span> <span class="nb">format</span><span class="p">:</span> <span class="ss">:json</span><span class="p">,</span> <span class="n">access_token</span><span class="p">:</span> <span class="n">token</span><span class="o">.</span><span class="n">token</span><span class="p">,</span> <span class="ss">post</span><span class="p">:</span> <span class="p">{</span> <span class="ss">title</span><span class="p">:</span> <span class="s2">&quot;title&quot;</span><span class="p">,</span> <span class="ss">body</span><span class="p">:</span> <span class="s2">&quot;some content&quot;</span> <span class="p">}</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">be_success</span> <span class="p">}</span>
</span><span class='line'>      <span class="n">its</span><span class="p">(</span><span class="ss">:status</span><span class="p">)</span> <span class="p">{</span> <span class="n">should</span> <span class="n">eq</span><span class="p">(</span><span class="mi">201</span><span class="p">)</span> <span class="p">}</span> <span class="c1"># 201 Created</span>
</span><span class='line'>      <span class="n">its</span><span class="p">(</span><span class="ss">:body</span><span class="p">)</span> <span class="p">{</span> <span class="n">should</span> <span class="o">==</span> <span class="no">Post</span><span class="o">.</span><span class="n">last</span><span class="o">.</span><span class="n">to_json</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">context</span> <span class="s2">&quot;invalid token&quot;</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">before</span> <span class="k">do</span>
</span><span class='line'>        <span class="n">post</span> <span class="s1">&#39;create&#39;</span><span class="p">,</span> <span class="nb">format</span><span class="p">:</span> <span class="ss">:json</span><span class="p">,</span> <span class="n">access_token</span><span class="p">:</span> <span class="n">token</span><span class="o">.</span><span class="n">token</span><span class="o">.</span><span class="n">succ</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="n">it</span> <span class="p">{</span> <span class="n">should_not</span> <span class="n">be_success</span> <span class="p">}</span>
</span><span class='line'>      <span class="n">its</span><span class="p">(</span><span class="ss">:status</span><span class="p">)</span> <span class="p">{</span> <span class="n">should</span> <span class="n">eq</span><span class="p">(</span><span class="mi">401</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>scope 付き呼び出し</h2>

<p><code>devise</code>
の設定で
<code>omniauth</code>
の設定に
<code>scope</code>
を追加するだけです。</p>

<figure class='code'><figcaption><span>config/initializers/devise.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">omniauth</span> <span class="ss">:doorkeeper</span><span class="p">,</span> <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;DOORKEEPER_APP_ID&#39;</span><span class="o">]</span><span class="p">,</span> <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;DOORKEEPER_APP_SECRET&#39;</span><span class="o">]</span><span class="p">,</span> <span class="p">{</span> <span class="ss">scope</span><span class="p">:</span> <span class="s1">&#39;public write&#39;</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>rspec のところでもちょっと書きましたが、
区切りが <code>,</code> だとうまくいかないことがあったので、
スペース区切りにしています。</p>

<p>原因は
<a href="https://github.com/applicake/doorkeeper/blob/master/lib/doorkeeper/oauth/scopes.rb">lib/doorkeeper/oauth/scopes.rb</a>
で
<code>string.split</code>
のように無引数の
<code>String#split</code>
を使っているからではないかと推測していますが、確認はしていません。</p>

<h2>まとめ</h2>

<p><code>client_id</code> と <code>client_secret</code> と provider の URL はあらかじめ用意しておいて、
client 側の rails アプリに設定しておきます。</p>

<p><code>token</code>
は OAuth2 で取得したものを
<code>session</code>
やデータベースなどに保存しておいて使います。</p>

<p>必要なら
<code>scopes</code>
も設定できます。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rails で assets を gem に入れる時の配置]]></title>
    <link href="http://blog.n-z.jp/blog/2013-10-03-rails-assets-in-gem.html"/>
    <updated>2013-10-03T10:30:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/rails-assets-in-gem</id>
    <content type="html"><![CDATA[<p>昨日の記事で
<a href="https://rubygems.org/gems/jquery_mobile_rails">jquery_mobile_rails</a> 1.3.2
で画像ファイルが
<code>rake assets:precompile</code>
で処理されないという話を書きましたが、
<a href="http://rubygems.org/gems/jquery-ui-rails">jquery-ui-rails</a>
gem
などは Gemfile に足すだけで特に require などをしなくても
画像が処理されていたので違いを調べてみました。</p>

<!--more-->


<p>結論を先に書くと、
<code>jquery-ui-rails</code>
は
<code>app/assets/images/</code>
に画像ファイルを置いていたから処理されていて、
<code>jquery_mobile_rails</code>
は
<code>vendor/assets/images/</code>
に画像ファイルを置いていたから、
というのが原因でした。</p>

<p>自作の gem で
<code>app/assets/images/</code>
と
<code>vendor/assets/images/</code>
に画像を置いて rails 4.0.0 の
<code>rake assets:precompile</code>
で違いがあることを確認しています。</p>

<p><code>jquery_mobile_rails</code> の issues を確認すると
<a href="https://github.com/tscolari/jquery-mobile-rails/issues/16">In production, path to images is wrong</a>
という同じ問題に困っている話があったので、
コメントを付けておきました。</p>

<p>ちなみに
いくつか存在する jQuery Mobile の assets の中から
<code>jquery_mobile_rails</code>
を選んだ理由は新しいバージョンへの対応が一番早そうにみえたからです。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[jquery_mobile_rails と production 環境と画像ファイル]]></title>
    <link href="http://blog.n-z.jp/blog/2013-10-02-jquery-mobile-rails.html"/>
    <updated>2013-10-02T15:58:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/jquery-mobile-rails</id>
    <content type="html"><![CDATA[<p>rails 4.0.0
と
<a href="https://rubygems.org/gems/jquery_mobile_rails">jquery_mobile_rails</a> 1.3.2
で production 環境だと画像が表示されないという現象が起きていました。</p>

<p>2013-10-03 追記:
<code>jquery_mobile_rails</code> gem のファイル配置の問題もあるのかもしれません。
詳細は次の記事を参照してください。</p>

<!--more-->


<p><code>RAILS_ENV=production rake assets:precompile</code>
で調べてみると <code>public/assets/</code> 以下には
<code>jquery_mobile_rails</code> の画像は入っていませんでした。</p>

<p>いろいろ調べた結果、
<code>config.assets.precompile</code>
に
<code>*.gif</code>
と
<code>*.png</code>
を足せば良いとわかったので、
<code>jquery_mobile_rails</code>
用に
<code>application.css</code>
や
<code>application.js</code>
とは別に作成した
<code>mobile.css</code>
や
<code>mobile.js</code>
と合わせて、以下のように追加して解決しました。
<code>jquery_mobile_rails</code> 1.3.2
には
<code>*.jpg</code>
は入っていないのですが、
念のため追加しておきました。</p>

<figure class='code'><figcaption><span>config/environments/production.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>   <span class="n">config</span><span class="o">.</span><span class="n">assets</span><span class="o">.</span><span class="n">precompile</span> <span class="o">+=</span> <span class="sx">%w( mobile.js mobile.css *.gif *.png *.jpg )</span>
</span></code></pre></td></tr></table></div></figure>


<p>この状態で再度
<code>RAILS_ENV=production rake assets:precompile</code>
で調べてみると <code>public/assets/</code>
は以下のようになっていました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">%</span> ls public/assets/jquery-mobile
</span><span class='line'><span class="go">ajax-loader-5c6592c3263e7de88985668db733b08f.gif</span>
</span><span class='line'><span class="go">icons-18-black-dbc49700bc8bd5a9d3e0120cb111ea62.png</span>
</span><span class='line'><span class="go">icons-18-white-f8f5999f3ea0d9ebea6a4ec193442c1f.png</span>
</span><span class='line'><span class="go">icons-36-black-76b4944fda10128b365344f06377dad5.png</span>
</span><span class='line'><span class="go">icons-36-white-178cc38be265514b341e111ed7d38712.png</span>
</span></code></pre></td></tr></table></div></figure>


<p>rails 4 になって、ハッシュなしの
<code>ajax-loader.gif</code>
のようなファイルは作成されなくなっているので、
ちゃんと view の中では
<code>image_path</code>
を使ったり、
スタイルシートの中では
<code>image-url</code>
を使ったりしていないと
production
環境だけ問題がおきることがあるようです。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[jQuery Mobile 1.3.2 の日本語化]]></title>
    <link href="http://blog.n-z.jp/blog/2013-10-01-jquery-mobile-l10n.html"/>
    <updated>2013-10-01T15:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/jquery-mobile-l10n</id>
    <content type="html"><![CDATA[<p>jQuery Mobile の l10n についてちゃんと調べたのでまとめておきます。
今回は日本語化だけですが、
翻訳対象は網羅できていると思います。</p>

<p>ちゃんと他の言語にも対応させるためには
<code>mobileinit</code>
の中で設定する文字列を別途 i18n 用の仕組みを用意して
翻訳し分けることになると思います。</p>

<!--more-->


<h2>mobileinit</h2>

<p>まず最初に注意すべき点として
<a href="http://api.jquerymobile.com/global-config/">Configuring Defaults | jQuery Mobile API Documentation</a>
にも書いてありますが、
 <code>mobileinit</code>
のイベントハンドラは
<code>jquery.mobile.js</code>
の読み込み前に設定しておく必要があります。
(<code>$</code> や <code>on</code> を使うので <code>jquery.js</code> よりは後にします。)</p>

<p>これを知らないと設定が反映されなくて悩むことになります。</p>

<p>rails 3.1 以降との組み合わせなら、例えば
<code>app/assets/javascripts/mobile.js</code>
に以下のように書いておいて、
<code>app/assets/javascripts/mobile/jqm_ja.js</code>
などにローカライズ用の
<code>mobileinit</code>
を書くということになります。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>//= require jquery
</span><span class='line'>//= require jquery_ujs
</span><span class='line'>//= require_tree ./mobile
</span><span class='line'>//= require jquery.mobile</span></code></pre></td></tr></table></div></figure>


<p>例えば以下のような感じになります。</p>

<figure class='code'><figcaption><span>app/assets/javascripts/mobile/jqm_ja.js.coffee</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">on</span> <span class="s">&quot;mobileinit&quot;</span><span class="p">,</span> <span class="nf">-&gt;</span>
</span><span class='line'>  <span class="c1">#$.mobile.loadingMessageTextVisible = true</span>
</span><span class='line'>  <span class="c1">#$.mobile.loadingMessage = &quot;読み込み中...&quot;</span>
</span><span class='line'>  <span class="nv">$.mobile.loader.prototype.options.text = </span><span class="s">&quot;読み込み中です...&quot;</span>
</span><span class='line'>  <span class="nv">$.mobile.loader.prototype.options.textVisible = </span><span class="kc">false</span>
</span><span class='line'>  <span class="nv">$.mobile.pageLoadErrorMessage = </span><span class="s">&quot;読み込みに失敗しました。&quot;</span>
</span><span class='line'>  <span class="nv">$.mobile.page.prototype.options.backBtnText = </span><span class="s">&quot;戻る&quot;</span>
</span><span class='line'>  <span class="nv">$.mobile.listview.prototype.options.filterPlaceholder = </span><span class="s">&quot;検索...&quot;</span>
</span><span class='line'>  <span class="nv">$.mobile.table.prototype.options.columnBtnText = </span><span class="s">&quot;列の増減...&quot;</span>
</span><span class='line'>  <span class="nv">$.mobile.dialog.prototype.options.closeBtnText =</span>
</span><span class='line'>    <span class="nv">$.mobile.selectmenu.prototype.options.closeText = </span><span class="s">&quot;閉じる&quot;</span>
</span><span class='line'>  <span class="nv">$.mobile.collapsible.prototype.options.expandCueText = </span><span class="s">&quot;クリックで開く&quot;</span>
</span><span class='line'>  <span class="nv">$.mobile.collapsible.prototype.options.collapseCueText = </span><span class="s">&quot;クリックで閉じる&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Error Loading Page</h2>

<p>読み込みエラーの時のメッセージは
<code>$.mobile.pageLoadErrorMessage</code>
で設定できます。</p>

<p>いろいろな理由で表示されることが多いので、
真っ先に変更したくなるメッセージだと思います。</p>

<p>見た目は
<code>$.mobile.pageLoadErrorMessageTheme</code>
で変更できます。</p>

<h2>loading</h2>

<p>1.3.2 でしか確認していませんが、
jQuery Mobile 1.2 からは
<a href="http://api.jquerymobile.com/loader/">Loader Widget</a>
に変わっていて、
<code>$.mobile.loader.prototype.options.text</code>
で設定するようになっています。
ドキュメントによると、
メッセージの変更やテーマの変更以外にも
独自の HTML を表示するなど
いろいろとカスタマイズ出来るようです。</p>

<p><code>$.mobile.loader.prototype.options.textVisible</code>
で有効にした時だけ表示されるようなので、
不要なら無視しても良いかもしれません。</p>

<p>deprecated になっていますが、互換性のため、
<code>$.mobile.loadingMessage</code>
や
<code>$.mobile.loadingMessageTextVisible</code>
もまだ使えるようです。
(
<code>$.mobile.loader.prototype.options.text</code>
や
<code>$.mobile.loader.prototype.options.textVisible</code>
より優先されるようです。)</p>

<h2>pageloadfailed</h2>

<p>ローカライズとはちょっと離れて、
読み込みエラーのときに別処理をする方法を書いておきます。</p>

<p>devise の timeoutable を使っていると
普通の画面遷移をしようとしたときに
401 Unauthorized になることがあります。
そのときに読み込みエラーメッセージだけ出されても困るので、
<a href="http://api.jquerymobile.com/pageloadfailed/">pageloadfailed</a>
で認証画面に飛ぶためのリダイレクト処理を入れてみました。</p>

<p><code>event.preventDefault()</code>
を呼んでいないので、
<code>data.deferred</code>
の
<code>resolve()</code>
か
<code>reject()</code>
も呼ばず、
リダイレクト前のページの処理はデフォルトのままにしています。</p>

<figure class='code'><figcaption><span>app/assets/javascripts/mobile/pageloadfailed.js.coffee</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">on</span> <span class="s">&quot;pageloadfailed&quot;</span><span class="p">,</span> <span class="nf">(event, data) -&gt;</span>
</span><span class='line'>  <span class="k">if</span> <span class="nx">data</span><span class="p">.</span><span class="nx">xhr</span><span class="p">.</span><span class="nx">status</span> <span class="o">==</span> <span class="mi">401</span>
</span><span class='line'>    <span class="nb">window</span><span class="p">.</span><span class="nv">location.href = </span><span class="nx">data</span><span class="p">.</span><span class="nx">absUrl</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Back</h2>

<p><code>data-role="page"</code>
の要素に
<code>data-add-back-btn="true"</code>
を追加したときに
<a href="http://api.jquerymobile.com/header/">Header Widget</a>
に出てくる戻るボタンのテキストです。</p>

<p><code>$.mobile.page.prototype.options.backBtnText</code>
で設定できます。</p>

<h2>Filter items&hellip;</h2>

<p>ここからはページ全体ではなく
Widget ごとの翻訳の話になります。</p>

<p>まず
<a href="http://api.jquerymobile.com/listview/">Listview Widget</a>
で
<code>data-filter="true"</code>
の時に出てくる検索入力欄の placeholder のテキストです。</p>

<p>まとめてデフォルトを変更するには
今までのものと同様に
<code>mobileinit</code>
で
<code>$.mobile.listview.prototype.options.filterPlaceholder</code>
に設定します。</p>

<p>個別に変更するには
listview
に
<code>data-filter-placeholder</code>
属性を設定します。</p>

<p>この後のものも同様に全体のデフォルト設定を
<code>mobileinit</code>
で設定したり、
属性で個別に設定したりできます。</p>

<h2>Columns&hellip;</h2>

<p><a href="http://api.jquerymobile.com/table-columntoggle/">Column-Toggle Table Widget</a>
の列を増減させるポップアップを表示させるボタンのテキストです。</p>

<p><code>mobileinit</code>
で
<code>$.mobile.table.prototype.options.columnBtnText</code>
を設定するか、
<code>data-column-btn-text</code>
属性で設定します。</p>

<h2>Close</h2>

<p><a href="http://api.jquerymobile.com/dialog/">Dialog Widget</a>
の閉じるボタンのテキストは
<code>mobileinit</code>
で
<code>$.mobile.dialog.prototype.options.closeBtnText</code>
を設定するか、
<code>data-close-btn-text</code>
属性で設定します。</p>

<p>ダイアログの閉じるボタンはデフォルトではアイコンのみでテキストは表示されないのですが、
スクリーンリーダーで読み上げられるので、
アクセシビリティ的には重要と jQuery Mobile のドキュメントには書いてありました。</p>

<p>ドキュメントには書いてありませんが、
jQuery Mobile 1.3.2 のソースをみると
<a href="http://api.jquerymobile.com/selectmenu/">Selectmenu Widget</a>
の
Multiple selects
の閉じるボタンのテキストとして
<code>$.mobile.selectmenu.prototype.options.closeText</code>
も設定しておくと良さそうです。</p>

<h2>clear text</h2>

<p>検索入力はデフォルトで、
その他のテキスト入力では
<code>data-clear-btn=true</code>
の時に、
何かテキストを入力すると右に出てくるクリアボタンのオプションとして、
<code>data-clear-btn-text</code> があります。</p>

<p>これもデフォルトでは表示されず、スクリーンリーダーなどのアクセシビリティ用です。</p>

<p><code>$.mobile.textinput.prototype.options.clearBtnText</code>
でまとめて設定すれば良いと思います。</p>

<p><code>$.mobile.textinput.prototype.options.clearSearchButtonText</code>
という設定も残っていますが、
<code>deprecating for 1.3...</code>
とコメントに書いてあるので、
1.3 以降なら
<code>clearBtnText</code>
だけ設定しておけば良いと思います。</p>

<h2>click to expand contents, click to collapse contents</h2>

<p>最後に
<a href="http://api.jquerymobile.com/collapsible/">Collapsible Widget</a>
の翻訳です。</p>

<p>これもデフォルトでは表示されず、スクリーンリーダーなどのアクセシビリティ用です。</p>

<p>デフォルトが
<code>" click to expand contents"</code>
の方が
<code>$.mobile.collapsible.prototype.options.expandCueText</code>
や
<code>data-expand-cue-text</code>
で変更できて、
デフォルトが
<code>" click to collapse contents"</code>
の方が
<code>$.mobile.collapsible.prototype.options.collapseCueText</code>
や
<code>data-collapse-cue-text</code>
で変更できます。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[www.ruby-lang.org への pull request の出し方]]></title>
    <link href="http://blog.n-z.jp/blog/2013-09-30-how-to-pull-request.html"/>
    <updated>2013-09-30T22:43:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/how-to-pull-request</id>
    <content type="html"><![CDATA[<p><a href="https://www.ruby-lang.org/en/news/2013/09/23/ruby-2-1-0-preview1-is-released/">Ruby 2.1.0-preview1 is released</a>
というアナウンスが一週間経ってもまだ日本語訳が出来ていなかったので、
ちょっとの暇を見つけて pull request を出してみたので、
その手順をまとめておきます。</p>

<!--more-->


<p>まず github のアカウントは持っているというのは前提として話を進めます。</p>

<p>初回は
<a href="https://github.com/ruby/www.ruby-lang.org">https://github.com/ruby/www.ruby-lang.org</a>
の右上から自分のアカウントに Fork します。</p>

<p>すでに Fork していて二回目以降は upstream の変更を merge する必要があります。
<a href="https://help.github.com/articles/syncing-a-fork">Syncing a fork</a>
を参考にして merge します。</p>

<p>実行したコマンドだけまとめておきます。
詳細は github のヘルプを参照してください。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">%</span> git clone git@github.com:znz/www.ruby-lang.org.git
</span><span class='line'><span class="gp">%</span> <span class="nb">cd </span>www.ruby-lang.org
</span><span class='line'><span class="gp">%</span> git remote add upstream https://github.com/ruby/www.ruby-lang.org.git
</span><span class='line'><span class="gp">%</span> git remote -v
</span><span class='line'><span class="gp">%</span> git fetch upstream
</span><span class='line'><span class="gp">%</span> git branch -va
</span><span class='line'><span class="gp">%</span> git checkout master
</span><span class='line'><span class="gp">%</span> git merge upstream/master
</span><span class='line'><span class="gp">%</span> git push
</span></code></pre></td></tr></table></div></figure>


<p>英語版を元にして日本語版を作成します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">%</span> cp <span class="o">{</span>en,ja<span class="o">}</span>/news/_posts/2013-09-23-ruby-2-1-0-preview1-is-released.md
</span><span class='line'><span class="gp">%</span> git add ja/news/_posts/2013-09-23-ruby-2-1-0-preview1-is-released.md
</span><span class='line'><span class="gp">%</span> vi ja/news/_posts/2013-09-23-ruby-2-1-0-preview1-is-released.md
</span></code></pre></td></tr></table></div></figure>


<p>プレビュー用に <code>bundle install</code> します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">%</span> bundle install
</span><span class='line'><span class="gp">%</span> rake -T
</span><span class='line'><span class="gp">%</span> rake preview
</span></code></pre></td></tr></table></div></figure>


<p><code>rake preview</code>
でサーバーが起動しているので、
ブラウザで
<code>http://localhost:4000/</code>
を開いて表示を確認します。</p>

<p>github に push して、
ブラウザから pull request を出します。</p>

<p>ブランチを切り忘れていたので、
ここで作りました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">%</span> git checkout -b ruby210preview1
</span><span class='line'><span class="gp">%</span> git commit -av
</span><span class='line'><span class="gp">%</span> git push --set-upstream origin ruby210preview1
</span></code></pre></td></tr></table></div></figure>


<p>最後に
<code>git checkout master</code>
で master ブランチに戻るなり、
消してしまって、
また作業する時に clone し直すなりします。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[aasm gem の初期状態設定]]></title>
    <link href="http://blog.n-z.jp/blog/2013-09-30-aasm.html"/>
    <updated>2013-09-30T15:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/aasm</id>
    <content type="html"><![CDATA[<p><code>aasm</code> gem の使い方が悪くて、初期状態の値としてデータベースに nil が保存されてしまっていたという話です。</p>

<!--more-->


<p>確認したバージョンは ruby 2.0.0 + rails 3.2.14 + aasm 3.0.22 です。</p>

<p>例として以下のような感じの使い方をしてしまっていて、
<code>status</code> メソッドで <code>nil</code> を返さないようにしていたら
データベースには <code>nil</code> が保存されるようになってしまって、
<code>aasm</code> 以外 (<code>ransack</code> とか) からデータベースにアクセスした時に
問題になりました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="k">def</span> <span class="nf">status</span>
</span><span class='line'>    <span class="c1"># このメソッドがダメ</span>
</span><span class='line'>    <span class="n">read_attribute</span><span class="p">(</span><span class="ss">:status</span><span class="p">)</span> <span class="o">||</span> <span class="ss">:starting</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">include</span> <span class="no">AASM</span>
</span><span class='line'>  <span class="n">aasm</span> <span class="ss">column</span><span class="p">:</span> <span class="s2">&quot;status&quot;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">state</span> <span class="ss">:starting</span><span class="p">,</span> <span class="ss">initial</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'>    <span class="n">state</span> <span class="ss">:running</span>
</span><span class='line'>    <span class="n">state</span> <span class="ss">:stopped</span>
</span><span class='line'>    <span class="n">state</span> <span class="ss">:finished</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">event</span> <span class="ss">:run</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">transitions</span> <span class="ss">from</span><span class="p">:</span> <span class="o">[</span><span class="ss">:starting</span><span class="p">,</span> <span class="ss">:stopped</span><span class="o">]</span><span class="p">,</span> <span class="ss">to</span><span class="p">:</span> <span class="ss">:running</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">event</span> <span class="ss">:stop</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">transitions</span> <span class="ss">from</span><span class="p">:</span> <span class="o">[</span><span class="ss">:starting</span><span class="p">,</span> <span class="ss">:running</span><span class="o">]</span><span class="p">,</span> <span class="ss">to</span><span class="p">:</span> <span class="ss">:stopped</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">event</span> <span class="ss">:finish</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">transitions</span> <span class="ss">from</span><span class="p">:</span> <span class="o">[</span><span class="ss">:running</span><span class="o">]</span><span class="p">,</span> <span class="ss">to</span><span class="p">:</span> <span class="ss">:finished</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>aasm</code> としては
<a href="https://github.com/aasm/aasm/blob/master/lib/aasm/persistence/active_record_persistence.rb">AASM::Persistence::ActiveRecordPersistence</a>
で
<code>before_validation :aasm_ensure_initial_state, :on =&gt; :create</code>
相当のフックを追加していて、
<code>model.valid?</code>
を実行すれば
<code>model.status</code>
が設定されるようになっていました。</p>

<p>たぶん使い始めた時に
<code>rails console</code>
で
<code>model = Model.new</code>
した直後の
<code>model.status</code>
が
<code>nil</code>
だったので、
どうにかしようと思って
getter メソッドを定義してしまったのだと思います。</p>

<p>このせいで以下のような
<code>ransack</code>
を使った検索フォームで初期状態のチェックを入れても
うまく検索出来ないという問題が起きていました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='haml'><span class='line'><span class="p">=</span> <span class="n">search_form_for</span> <span class="vi">@q</span><span class="p">,</span> <span class="ss">html</span><span class="p">:</span> <span class="p">{</span> <span class="ss">class</span><span class="p">:</span> <span class="s2">&quot;form-search&quot;</span> <span class="p">}</span> <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span>
</span><span class='line'>  <span class="nt">%table</span>
</span><span class='line'>    <span class="cp">-# ...</span>
</span><span class='line'>    <span class="nt">%tr</span>
</span><span class='line'>      <span class="nt">%td</span><span class="p">=</span> <span class="n">f</span><span class="o">.</span><span class="n">label</span> <span class="ss">:status_in</span>
</span><span class='line'>      <span class="nt">%td</span>
</span><span class='line'>        <span class="p">-</span> <span class="no">Model</span><span class="o">.</span><span class="n">aasm</span><span class="o">.</span><span class="n">states</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">status</span><span class="o">|</span>
</span><span class='line'>          <span class="nt">%label</span>
</span><span class='line'>            <span class="p">=</span> <span class="n">check_box_tag</span> <span class="s2">&quot;q[status_in][]&quot;</span><span class="p">,</span> <span class="n">status</span><span class="o">.</span><span class="n">to_s</span><span class="p">,</span> <span class="n">params</span><span class="o">.</span><span class="n">try</span><span class="p">(</span><span class="ss">:[]</span><span class="p">,</span> <span class="ss">:q</span><span class="p">)</span><span class="o">.</span><span class="n">try</span><span class="p">(</span><span class="ss">:[]</span><span class="p">,</span> <span class="ss">:status_in</span><span class="p">)</span><span class="o">.</span><span class="n">try</span><span class="p">(</span><span class="ss">:include?</span><span class="p">,</span> <span class="n">status</span><span class="o">.</span><span class="n">to_s</span><span class="p">),</span> <span class="nb">id</span><span class="p">:</span> <span class="s2">&quot;q_status_in_</span><span class="si">#{</span><span class="n">status</span><span class="o">.</span><span class="n">to_s</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>            <span class="p">=</span> <span class="n">status</span><span class="o">.</span><span class="n">localized_name</span>
</span><span class='line'>    <span class="cp">-# ...</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第 3 回 RubyMotion もくもく会 in Osaka に参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2013-09-25-rubymotion-mokumoku-osaka.html"/>
    <updated>2013-09-25T20:43:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/rubymotion-mokumoku-osaka</id>
    <content type="html"><![CDATA[<p>第 1 回と第 2 回にも参加した RubyMotion もくもく会 in Osaka の
<a href="http://connpass.com/event/3450/">第 3 回 RubyMotion もくもく会 in Osaka</a>
に参加してきました。</p>

<!--more-->


<p>OS X アプリの勉強をしようと思って、
とりあえず
<code>motion create --template=osx Hello</code>
で生成されたファイルを読んでいたら、
<code>app/menu.rb</code>
の
<code>Italic</code>
の
<code>keyEquivalent:</code>
が
<code>Bold</code>
と同じ
<code>'b'</code>
になっていたのを見つけて、
他もテキストエディットと見比べていたら
違う部分を見つけたので、
<code>motion support</code>
で報告してみました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'><span class="gh">diff --git a/app/menu.rb b/app/menu.rb</span>
</span><span class='line'><span class="gh">index 58b48f8..0da85e1 100644</span>
</span><span class='line'><span class="gd">--- a/app/menu.rb</span>
</span><span class='line'><span class="gi">+++ b/app/menu.rb</span>
</span><span class='line'><span class="gu">@@ -47,7 +47,7 @@ class AppDelegate</span>
</span><span class='line'>     fontMenu = createMenu(&#39;Font&#39;) do
</span><span class='line'>       addItemWithTitle(&#39;Show Fonts&#39;, action: &#39;orderFrontFontPanel:&#39;, keyEquivalent: &#39;t&#39;)
</span><span class='line'>       addItemWithTitle(&#39;Bold&#39;, action: &#39;addFontTrait:&#39;, keyEquivalent: &#39;b&#39;)
</span><span class='line'><span class="gd">-      addItemWithTitle(&#39;Italic&#39;, action: &#39;addFontTrait:&#39;, keyEquivalent: &#39;b&#39;)</span>
</span><span class='line'><span class="gi">+      addItemWithTitle(&#39;Italic&#39;, action: &#39;addFontTrait:&#39;, keyEquivalent: &#39;i&#39;)</span>
</span><span class='line'>       addItemWithTitle(&#39;Underline&#39;, action: &#39;underline:&#39;, keyEquivalent: &#39;u&#39;)
</span><span class='line'>       addItem(NSMenuItem.separatorItem)
</span><span class='line'>       addItemWithTitle(&#39;Bigger&#39;, action: &#39;modifyFont:&#39;, keyEquivalent: &#39;+&#39;)
</span><span class='line'><span class="gu">@@ -60,9 +60,11 @@ class AppDelegate</span>
</span><span class='line'>       addItemWithTitle(&#39;Justify&#39;, action: &#39;alignJustified:&#39;, keyEquivalent: &#39;&#39;)
</span><span class='line'>       addItemWithTitle(&#39;Align Right&#39;, action: &#39;alignRight:&#39;, keyEquivalent: &#39;}&#39;)
</span><span class='line'>       addItem(NSMenuItem.separatorItem)
</span><span class='line'><span class="gd">-      addItemWithTitle(&#39;Show Ruler&#39;, action: &#39;toggleRuler:&#39;, keyEquivalent: &#39;&#39;)</span>
</span><span class='line'><span class="gd">-      addItemWithTitle(&#39;Copy Ruler&#39;, action: &#39;copyRuler:&#39;, keyEquivalent: &#39;c&#39;)</span>
</span><span class='line'><span class="gd">-      addItemWithTitle(&#39;Paste Ruler&#39;, action: &#39;pasteRuler:&#39;, keyEquivalent: &#39;v&#39;)</span>
</span><span class='line'><span class="gi">+      addItemWithTitle(&#39;Show Ruler&#39;, action: &#39;toggleRuler:&#39;, keyEquivalent: &#39;r&#39;)</span>
</span><span class='line'><span class="gi">+      item = addItemWithTitle(&#39;Copy Ruler&#39;, action: &#39;copyRuler:&#39;, keyEquivalent: &#39;c&#39;)</span>
</span><span class='line'><span class="gi">+      item.keyEquivalentModifierMask = NSCommandKeyMask|NSControlKeyMask</span>
</span><span class='line'><span class="gi">+      item = addItemWithTitle(&#39;Paste Ruler&#39;, action: &#39;pasteRuler:&#39;, keyEquivalent: &#39;v&#39;)</span>
</span><span class='line'><span class="gi">+      item.keyEquivalentModifierMask = NSCommandKeyMask|NSControlKeyMask</span>
</span><span class='line'>     end
</span><span class='line'>
</span><span class='line'>     addMenu(&#39;Format&#39;) do
</span></code></pre></td></tr></table></div></figure>


<p>他にはサンプルとして
<a href="https://github.com/satococoa/rubymotion-osx-browser">https://github.com/satococoa/rubymotion-osx-browser</a>
とか
<a href="https://github.com/HipByte/RubyMotionSamples">https://github.com/HipByte/RubyMotionSamples</a>
とかをちょっと動かして見たりしていました。</p>

<p>他の人の話としては、
<code>UICreateCGImageFromIOSurface</code>
というシンボルで問題が起きて、
最初は
<a href="https://github.com/ZBar/ZBar">ZBar</a>
というライブラリが疑われていたけど違ったとかいう話とか、
<a href="http://support.revealapp.com/discussions/suggestions/8-reference-to-uicreatecgimagefromiosurface-should-be-removed-for-release-scheme">Reveal.framework が原因で Release ビルドで外せば良い</a>
という話とか、
東京と Google ハングアウトでつないでみてたとか、
<a href="http://mobiletou.ch/2013/09/002-create-application">(&frac12;) &ndash; 第二回 RubyMotion でアプリケーションを作ろう (1) &ndash; 実践！RubyMotion &ndash; Mobile Touch &ndash; モバイル/タブレット開発者およびデザイナー向け情報ポータル</a>
で開発中のアプリをみせてもらったりとかがありました。</p>

<p>東京とのハングアウトが終わった後は
<a href="https://gihyo.jp/dp/ebook/2013/978-4-7741-6024-5">Vagrant入門ガイド</a>
の話とか、
<a href="http://jfk2013.jaws-ug.jp/">JAWS FESTA Kansai 2013</a>
の話とかもしていました。</p>

<p>最後に次回も東京と日程を合わせるということで
<a href="http://connpass.com/event/3557/">第 4 回 RubyMotion もくもく会 in Osaka</a>
は 10/23 (水) 19:30 からということになりました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[elscreen で Symbol's value as variable is void: last-command-char]]></title>
    <link href="http://blog.n-z.jp/blog/2013-09-24-elscreen-last-command-char.html"/>
    <updated>2013-09-24T13:50:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/elscreen-last-command-char</id>
    <content type="html"><![CDATA[<p>elscreen で
<code>Symbol's value as variable is void: last-command-char</code>
というエラーになったので、
<a href="http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=705436">elscreen: From Emacs 24.3: Symbol&rsquo;s value as variable is void: last-command-char</a>
のパッチを参考にして解決しました。</p>

<!--more-->


<p><code>Symbol's value as variable is void: last-command-char</code>
で検索すると
<a href="http://oku.edu.mie-u.ac.jp/~okumura/texwiki/?YaTeX">Emacs 24.3 は last-input-char, last-command-char が削除されています</a>
という話が一番目に見つかって、
<code>last-command-char elscreen</code>
で検索すると
<a href="http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=705436">elscreen: From Emacs 24.3: Symbol&rsquo;s value as variable is void: last-command-char</a>
が一番目に見つかって解決方法がわかりました。</p>

<p>パッチを見てみると、
<code>xemacs</code>
の時は
<code>(event-to-character last-command-event)</code>
で、それ以外は
<code>last-command-event</code>
となっていて、
手元では GNU Emacs だけ対応出来れば良いので、
<a href="https://github.com/znz/dot-emacs/commit/12599e870f9b1a5b4411ef875c3cb647ef3096dd">defadvice で last-command-event を last-command-char に設定</a>
することにしました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='scheme'><span class='line'>  <span class="p">(</span><span class="nf">defadvice</span> <span class="nv">elscreen-jump</span> <span class="p">(</span><span class="nf">around</span> <span class="nv">elscreen-last-command-char-event</span> <span class="nv">activate</span><span class="p">)</span>
</span><span class='line'>    <span class="p">(</span><span class="k">let </span><span class="p">((</span><span class="nf">last-command-char</span> <span class="nv">last-command-event</span><span class="p">))</span>
</span><span class='line'>      <span class="nv">ad-do-it</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第 76 回 関西 Debian 勉強会に参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2013-09-22-kansai-debian-meeting.html"/>
    <updated>2013-09-22T13:40:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/kansai-debian-meeting</id>
    <content type="html"><![CDATA[<p><a href="https://wiki.debian.org/KansaiDebianMeeting/20130922">第 76 回 関西 Debian 勉強会</a>
に参加してきました。</p>

<p>「Linuxとサウンドシステム」
という主に ALSA の話と
「dgit でソースパッケージを触ってみる」
という話でした。</p>

<!--more-->


<h2>事前課題</h2>

<p>「libasound2-data」が wheezy には無いという無理難題だったので、
<a href="http://mla.n-z.jp/?debian-users:56906">debian-usersで質問してみた</a>
ところ、
<a href="http://mla.n-z.jp/?debian-users:56907">wheezyではlibasound2がインストールされていれば大丈夫</a>
という話でした。</p>

<h2>Linuxとサウンドシステム</h2>

<p>主に ALSA の話で、
サウンドシステム周りはいろいろ関連するものが多くて大変そうな印象を受けました。</p>

<p>説明以外の実際にコマンドを試す部分では、</p>

<ul>
<li><code>/dev/snd/</code></li>
<li><code>/proc/asound/</code></li>
<li><code>/proc/asound/cards</code>
(ALSA が認識しているカードの一覧)</li>
<li><code>/usr/include/sound/asound.h</code>
(<code>linux-libc-dev</code> パッケージに入っていた)</li>
<li><code>/proc/asound/card0/pcm0p/sub0/status</code>
(再生出来ないときのトラブルシューティングに有用、入力側は pcm0c)</li>
<li><code>/sys/class/sound/</code></li>
<li><code>/usr/share/alsa/</code>
(<code>libasound2</code> の設定ファイルとか)</li>
</ul>


<p>あたりの話がありました。</p>

<p>最終的には時間が足りなくて、続きは次回ということになりました。</p>

<p>VirtualBox に Wheezy を入れた環境を用意していたのですが、
なぜか音が鳴らなくて、
最終的に懇親会の時に調べてもらったら、
結局ボリュームがミュートになっていたというのが
原因でした。</p>

<h2>dgit でソースパッケージを触ってみる</h2>

<p>いきなり現状は DD (Debian Developer) じゃないと使えないツールという話でした。
そのうち一般ユーザーでも使えるようになるかも、ということで、
主に調べた内容の発表でした。</p>

<p><code>dgit</code> を使っているパッケージは
<a href="http://anonscm.debian.org/gitweb/">http://anonscm.debian.org/gitweb/</a>
の <code>dgit-repos/</code> でわかるようです。</p>

<p>最後は
Debian Developer
の矢吹さんに実際に使えるところを
デモしてもらえて終わりました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Land of Lisp 読書会 第２回(兵庫県)に参加してきた]]></title>
    <link href="http://blog.n-z.jp/blog/2013-09-21-reading-land-of-lisp-2.html"/>
    <updated>2013-09-21T23:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/reading-land-of-lisp-2</id>
    <content type="html"><![CDATA[<p><a href="http://kokucheese.com/main/tag/amagasakirb">amagasakirb</a>
の
<a href="http://kokucheese.com/event/index/105390/">9月21日 Land of Lisp 読書会 第２回(兵庫県)</a>
に参加してきました。
今回は6.5章から9章まででした。</p>

<!--more-->


<p>以下は単なるメモです。</p>

<ul>
<li>p.97 訳注 の 保守的な言語 とは何か?</li>
<li>太い数字は脚注ではなく行番号というのがわかりにくい。
どこかに説明はあった?</li>
<li>p.115 ダイナミック変数とは?

<ul>
<li>別の本によると <code>defなんとか</code> で定義されるのがダイナミック変数らしい。</li>
<li><code>defun</code> もダイナミックスコープっぽい。
変数の <code>let</code> のように <code>labels</code> で関数も置き換えられる。</li>
</ul>
</li>
<li>なぜか Ruby の <code>$_</code> の話</li>
<li>話がそれていって開発環境の話から <code>VisualAge</code> とかの話もあった。</li>
<li>p.109 に not で終わっているLisp関数は非推奨と書いてあるのに、
p.130 以降のプログラムでは <code>remove-if-not</code> を使いまくっている。</li>
<li>p.130 の <code>islands</code> はどういうデータが入っているのか?</li>
<li>p.134 <code>コンス</code> とは? <code>コンスセル</code> のこと。</li>
<li>カヌレ</li>
<li>9章を読み終わっていない人は宿題 (次回までに読んでくる)</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby Association Certified Ruby Programmer Gold を受けた]]></title>
    <link href="http://blog.n-z.jp/blog/2013-09-21-certified-ruby.html"/>
    <updated>2013-09-21T22:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/certified-ruby</id>
    <content type="html"><![CDATA[<p>少し前に
Ruby技術者認定試験制度
の
Ruby Association Certified Ruby Programmer Gold
を受けてきました。</p>

<!--more-->


<p>コンピュータ試験 (CBT) で
結果はその場でわかるようになっていて、
ちゃんと合格出来ました。
Silver
は最初の CBT になっていなかった頃に受けて合格しているので、
これで
Ruby Association Certified Ruby Programmer Gold認定要件
をみたしたことになります。</p>

<p>スレッドを開始するメソッドが複数選択で選ぶようになってる問題とか、
クラス変数とか <code>private</code> とかと継承の関係とか、
普段そんな機能は使わないようなものについての仕様が再確認出来たのは
良かったです。</p>

<p>標準添付ライブラリの問題は、
あまり使わないライブラリについての問題があると困りそうだったのですが、
問題数も少なくて、
知っている範囲だったので大丈夫でした。</p>

<p>選択肢の <code>Marshal</code> の引数の説明に「ファイル」としか書いてなくて、
ファイルパスなのか、ファイルオブジェクト (IO オブジェクト) なのか
わからないとか、問題が悪くて Ruby の知識だけだと解けなくて、
この問題での言葉遣いもわからないと無理そうなのがあったのは
困りました。</p>

<p><a href="https://www.ruby-lang.org/ja/news/2013/06/30/we-retire-1-8-7/">ruby 1.8.7 は終わった</a>
ので、
対象バージョン
が
Ruby 1.8.7
の試験が終わってしまう前に受けてみておこうと言うことで受けてきましたが、
今後対象バージョンがどう変わっていくのか気になるところです。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntuでの対応が悪いと感じた話]]></title>
    <link href="http://blog.n-z.jp/blog/2013-09-20-ubuntu-bugs-related-me.html"/>
    <updated>2013-09-20T19:43:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/ubuntu-bugs-related-me</id>
    <content type="html"><![CDATA[<p>このエントリは愚痴が含まれます。
そういうのが嫌な人は読まない方が良いですよ。
警告しましたからね。</p>

<!--more-->


<p>結論としては、こういういろいろなことが積み重なって、
最近は ubuntu にはあまり積極的には貢献をしないようになった
という話です。</p>

<p>コミュニティ運営のアンチパターンの例として使えるのかもしれません。</p>

<p>最初の4項目は Ubuntu の Launchpad での話で、
後の2項目は ubuntu-jp での話です。</p>

<p>もちろん、対応が悪かったものだけ集めているので、
他の多数のバグの対応は良かったことが多いです。
全体的に Ubuntu のバグ対応は
Debian に比べると遅いという気はしますが。</p>

<h2>最近の例 (bind9)</h2>

<p>最初は Ubuntu 12.04 LTS の <code>bind9</code> の
<code>/etc/bind/db.root</code> が更新されない話です。</p>

<p>どういう話かというと
D-ROOT-SERVERS.NET に IPv6 アドレスが追加されて、
その後 IPv4 アドレスの変更があったのに <code>db.root</code> が
更新されないという話です。</p>

<p>ちょっと探して見つかっただけでも4個見つかります。
4個目のは3個目の重複という印がついてます。</p>

<ul>
<li><a href="https://launchpad.net/ubuntu/+source/bind9/+bug/1023600">db.root file outdated</a></li>
<li><a href="https://bugs.launchpad.net/ubuntu/+source/bind9/+bug/1160464">Bind db.root outdated, backport only the db.root file, for LTS important to keep db.root updated</a></li>
<li><a href="https://bugs.launchpad.net/ubuntu/+source/bind9/+bug/1090593">D.ROOT-SERVERS.NET changing January 3rd 2013</a></li>
<li><a href="https://bugs.launchpad.net/ubuntu/+source/bind9/+bug/1097050">d-root ipv4 has changed. Update db.root to show this</a></li>
</ul>


<p>IPv6 アドレスが追加された時点では重要ではないということで、
次の更新があれば一緒に更新するという反応だったようですが、
2013年1月3日に IPv4 アドレスが変更されて、
その後、移行期間として6ヶ月あったのですが、
それが終わった後も更新されないままです。</p>

<p>事前に見つけていた上2個のbugは移行期間中につつてみたりしたのですが、
全く反応がありませんでした。</p>

<p>そして未だに更新されていません。
これはひどいと思います。</p>

<h2>quick-fix?</h2>

<p><a href="https://bugs.launchpad.net/ubuntu-website-content/+bug/619920">Version mismatch of link in Code of Conduct</a>
で CoC の説明のバージョンが間違っていると指摘した時の話です。</p>

<p>一度 Confirmed になったのに Invalid になったというのが
嫌な印象を受けました。</p>

<h2>dbskkd-cdb を rebuild するだけの簡単なお仕事</h2>

<p><a href="https://bugs.launchpad.net/ubuntu/+source/dbskkd-cdb/+bug/58355">wrong reply via netkit-inetd</a>
で dbskkd-cdb を rebuild するだけで直るという報告をしたつもりだったのですが、
今見直してみると、こちらの反応がなかったのが悪かったようにも見えました。
追加情報を求められた時にはもう使ってなかったとはいえ、ちょっと反省。</p>

<h2>気付くのが遅すぎた</h2>

<p><a href="https://bugs.launchpad.net/ubuntu/+source/inspircd/+bug/978206">FreezeException request&mdash; Sync with Debian unstable</a>
で inspircd が古すぎて upstream の
セキュリティアップデートも出ないようなバージョンなので、
まずいんじゃないかと伝えてみたつもりだったんですが、
結局古いまま入ってしまいました。</p>

<p>古いまま入るぐらいなら消せば良かったのに、と思いましたが、
英語で書けなかった
(そもそも最初の説明も書けなかったのでリンクですませた)
ので、
自分で使うのは inspircd を止めて ngircd に乗り換えました。</p>

<h2>何もやってない (ように見える) 話</h2>

<p>「#ubuntu-jp IRCミーティングの議事録」というのが
ubuntu-jp の ML に流れるのですが、
アクションアイテムの冒頭が毎回同じで、
そこだけみると
(というかいつも最初の数行しかみてないのですが)
いつも何もしていないように見えるので、
順番を変えた方が良いんじゃないか、
というようなことを IRC とかで言ってみたことが
あるのですが、何も変わりませんでした。</p>

<h2>査読とは?</h2>

<p>アクションアイテムをもうちょっと下まで見た時に
<code>* [ ] 誰か査読して！</code>
と書いてあったので、
読んでみて返信してみたのですが、
次の週もそのままだったので、
あれは査読に含まれないのかと思ってがっかりしました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Macでirbなどでの文字化けを直した]]></title>
    <link href="http://blog.n-z.jp/blog/2013-09-20-mojibake-irb-on-mac.html"/>
    <updated>2013-09-20T18:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/mojibake-irb-on-mac</id>
    <content type="html"><![CDATA[<p>基本的には
<a href="http://qiita.com/irohiroki/items/c82657b5cb4bdb2aaac4">rails cで日本語が通らないときの直し方</a>
のやり方そのままで、
one liner としてまとめただけです。</p>

<p>先に結論を書いておくと
<code>install_name_tool -change /usr/lib/libedit.3.dylib $(brew list readline | grep libreadline.dylib) $(ruby -r readline -e 'puts $".grep /readline/')</code>
になりました。</p>

<!--more-->


<h2><code>readline.bundle</code> の探し方</h2>

<p>まず <code>readline.bundle</code> の探し方です。</p>

<p>実際に <code>require 'readline'</code> した時の
<code>$LOADED_FEATURES</code> から
探すのが確実ということで、
<code>ruby -r readline -e 'puts $".grep /readline/'</code>
としました。
試したところ、
<code>Array#grep</code>
で見つかるのが1個だけだったので、
そのまま <code>puts</code> しています。
複数見つかるようならもう少し調整が必要だと思います。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% ruby -r readline -e 'puts $".grep /readline/'
</span><span class='line'>/Users/kazu/.rbenv/versions/2.0.0-p247/lib/ruby/2.0.0/x86_64-darwin12.4.1/readline.bundle
</span><span class='line'>% otool -L $(ruby -r readline -e 'puts $".grep /readline/')</span></code></pre></td></tr></table></div></figure>


<h2>readline のインストール</h2>

<p>homebrew を使っているので、
<code>brew install readline</code>
でインストールしました。</p>

<p>インストールされた
<code>libreadline</code>
の場所は
<code>brew list readline | grep libreadline.dylib</code>
で調べました。</p>

<p><code>libedit</code>
が
<code>/usr/lib/libedit.3.dylib</code>
という名前でリンクされているので、
<code>libreadline.6.dylib</code>
という名前を使った方が良いのかもしれませんが、
homebrew でインストールされているパスに
バージョンが含まれていて、
ファイル名にバージョンを含めても意味がないと思って、
バージョンなしにしました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% brew list readline | grep libreadline.dylib
</span><span class='line'>/usr/local/Cellar/readline/6.2.4/lib/libreadline.dylib</span></code></pre></td></tr></table></div></figure>


<h2><code>install_name_tool</code></h2>

<p>Qiita の記事にあったように
<code>install_name_tool -change /usr/lib/libedit.3.dylib $(brew list readline | grep libreadline.dylib) $(ruby -r readline -e 'puts $".grep /readline/')</code>
でリンクを変更しました。
念のため、実行前に
<code>ruby -rpp -e 'pp ARGV' --</code>
で実行内容を確認してから実行しました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% ruby -rpp -e 'pp ARGV' -- install_name_tool -change /usr/lib/libedit.3.dylib $(brew list readline | grep libreadline.dylib) $(ruby -r readline -e 'puts $".grep /readline/')
</span><span class='line'>["install_name_tool",
</span><span class='line'> "-change",
</span><span class='line'> "/usr/lib/libedit.3.dylib",
</span><span class='line'> "/usr/local/Cellar/readline/6.2.4/lib/libreadline.dylib",
</span><span class='line'> "/Users/kazu/.rbenv/versions/2.0.0-p247/lib/ruby/2.0.0/x86_64-darwin12.4.1/readline.bundle"]
</span><span class='line'>% install_name_tool -change /usr/lib/libedit.3.dylib $(brew list readline | grep libreadline.dylib) $(ruby -r readline -e 'puts $".grep /readline/')</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[jQuery UI Autocomplete を自動で開く]]></title>
    <link href="http://blog.n-z.jp/blog/2013-09-18-auto-open-autocomplete.html"/>
    <updated>2013-09-18T15:43:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/auto-open-autocomplete</id>
    <content type="html"><![CDATA[<p>Google カレンダーの時刻入力のように combobox 的な入力欄で、
デフォルトは選択肢から選んで、
選択肢にないときは直接入力も出来るようにしたいと思いました。</p>

<p>いくつかの方法を試した結果、
jQuery UI の Autocomplete に少しコードを足したら
希望通りの挙動に出来ました。</p>

<!--more-->


<h2>HTML5 の datalist と autocomplete</h2>

<p>最初は HTML5 の datalist 要素を試しました。
<code>simple_form</code> gem を使っているので、
以下のように書きました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='haml'><span class='line'><span class="p">=</span> <span class="n">f</span><span class="o">.</span><span class="n">input</span> <span class="ss">:drink</span><span class="p">,</span> <span class="n">input_html</span><span class="p">:</span> <span class="p">{</span> <span class="ss">autocomplete</span><span class="p">:</span> <span class="s2">&quot;on&quot;</span><span class="p">,</span> <span class="ss">list</span><span class="p">:</span> <span class="s2">&quot;drink_list&quot;</span> <span class="p">}</span>
</span><span class='line'><span class="nt">%datalist</span><span class="nf">#drink_list</span>
</span><span class='line'>  <span class="nt">%options</span>(<span class="na">value=</span><span class="s">&quot;不要&quot;</span>)
</span><span class='line'>  <span class="nt">%options</span>(<span class="na">value=</span><span class="s">&quot;水&quot;</span>)
</span><span class='line'>  <span class="nt">%options</span>(<span class="na">value=</span><span class="s">&quot;お茶&quot;</span>)
</span><span class='line'>  <span class="nt">%options</span>(<span class="na">value=</span><span class="s">&quot;コーヒー&quot;</span>)
</span></code></pre></td></tr></table></div></figure>


<p>この方法の問題点としては、
IE は IE10 (以降?) しか対応していなかったり、
Mobile Safari も対応してなさそうだったりして
対応環境が微妙だったのと、
入力欄にフォーカスだけで自動で開くという挙動が出来なくて、
矢印の上下で開く必要があったので、
諦めました。</p>

<h2>Bootstrap Typeahead</h2>

<p>挙動としては
HTML5 の datalist の方法や
jQuery UI Autocomplete と似ていたのですが、
Bootstrap 3 では外されているという話があったり、
別途新しい typeahead.js が開発されているという話があったりして、
先にある程度 jQuery UI Autocomplete を試していたこともあり、
別途新しいライブラリを入れるなどの深追いはせずに
jQuery UI Autocomplete を使うことにしました。</p>

<h2>jQuery UI Autocomplete</h2>

<p><code>jquery-ui-rails</code> gem を使っていて、
必要なものだけ CSS や JS を require していたので、
まず <code>app/assets/stylesheets/application.css</code> に</p>

<figure class='code'><figcaption><span>application.css</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'> *= require jquery.ui.autocomplete
</span></code></pre></td></tr></table></div></figure>


<p>を追加しました。</p>

<p>次に <code>app/assets/javascripts/autocomplete.js.coffee</code> として
以下のような内容で作成しました。</p>

<figure class='code'><figcaption><span>autocomplete.js.coffee</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="c1">#= require jquery.ui.autocomplete</span>
</span><span class='line'><span class="nx">jQuery</span> <span class="nf">-&gt;</span>
</span><span class='line'>  <span class="nv">drink_list = </span><span class="p">[</span>
</span><span class='line'>    <span class="s">&quot;不要&quot;</span>
</span><span class='line'>    <span class="s">&quot;水&quot;</span>
</span><span class='line'>    <span class="s">&quot;お茶&quot;</span>
</span><span class='line'>    <span class="s">&quot;コーヒー&quot;</span>
</span><span class='line'>  <span class="p">]</span>
</span><span class='line'>  <span class="nx">$</span><span class="p">(</span><span class="s">&quot;</span><span class="err">#</span><span class="s">somemodel_drink&quot;</span><span class="p">).</span><span class="nx">autocomplete</span>
</span><span class='line'>    <span class="nv">source: </span><span class="nx">drink_list</span>
</span><span class='line'>    <span class="nv">autoFocus: </span><span class="kc">true</span>
</span><span class='line'>    <span class="nv">delay: </span><span class="mi">0</span>
</span><span class='line'>    <span class="nv">minLength: </span><span class="mi">0</span>
</span><span class='line'>  <span class="p">.</span><span class="nx">on</span> <span class="s">&quot;focus&quot;</span><span class="p">,</span> <span class="nf">-&gt;</span>
</span><span class='line'>    <span class="nx">$</span><span class="p">(</span><span class="s">&quot;</span><span class="err">#</span><span class="s">somemodel_drink&quot;</span><span class="p">).</span><span class="nx">autocomplete</span><span class="p">(</span><span class="s">&quot;search&quot;</span><span class="p">,</span> <span class="s">&quot;&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>余談</h2>

<p>今回の話とは直接は関係ないのですが、
ファイルを細かく分割すると管理しやすくなるのは良いのですが、
他のライブラリの中のファイル名と重ならないようにしないと
<code>bootstrap.js.coffee</code> の中で <code>#= require bootstrap</code> しても
自分自身を <code>require</code> してしまって空っぽになって悩むことに
なるので注意が必要でした。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[devise 3.0.3 と devise 3.1.0 で自動生成されるファイルの違い]]></title>
    <link href="http://blog.n-z.jp/blog/2013-09-18-devise30-devise31.html"/>
    <updated>2013-09-18T15:09:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/devise30-devise31</id>
    <content type="html"><![CDATA[<p><a href="https://gist.github.com/znz/6603471">devise 3.0.3 と devise 3.1.0 で自動生成されるファイルの差分</a>
をとって、バージョンアップした時に対応が必要な場所を調べました。</p>

<!--more-->


<h2>対応が必要な場所</h2>

<p>最初に結論をまとめておきます。</p>

<ul>
<li><code>config/initializers/devise.rb</code> に <code>config.secret_key</code> を追加。

<ul>
<li>これは <code>rails</code> コマンドを実行しようとした時などにエラーとどういう内容を追加すれば良いのかが出るのですぐに気付きます。</li>
</ul>
</li>
<li><code>rails generate devise:views</code> をしていたのなら

<ul>
<li><code>app/views/devise/mailer</code> の <code>token</code> 周り</li>
<li><code>app/views/devise/shared/_links.erb</code> の <code>devise_mapping.recoverable?</code> の行
の修正が必要です。</li>
</ul>
</li>
<li><code>app/models/user.rb</code> の <code>:token_authenticatable</code> の削除の検討

<ul>
<li>削除しなくても動いているので、すぐに削除する必要はなさそうですが、
<code>rails generate devise User</code> で生成される例からなくなっているので
削除を検討した方が良さそうです。</li>
</ul>
</li>
<li>データベースのテーブルの変更に追従するなら
<code>migration</code> を作って対応すれば良さそうです。</li>
</ul>


<h2>対象バージョン</h2>

<p>rails 3.2.14 との組み合わせで devise 3.0.3 と devise 3.1.0 で比較しました。
細かいバージョンは
<a href="https://gist.github.com/znz/6603471#file-bundle-list-in-devise30-txt">devise 3.0.3 の時の bundle list</a>
と
<a href="https://gist.github.com/znz/6603471#file-bundle-list-in-devise31-txt">devise 3.1.0 の時の bundle list</a>
を参照してください。</p>

<h2><code>rails generate devise:install</code> の差分</h2>

<p><code>rails generate devise:install</code> の差分のうち、
<a href="https://gist.github.com/znz/6603471#file-initializer-diff">config/initializers/devise.rb の差分</a>
は <code>"</code> から <code>'</code> への変更などもあって本質的ではない部分も多かったので、
<a href="https://gist.github.com/znz/6603471#file-initializer-tr-diff">tr で処理した差分</a>
を作ってみたところ、本質的には
<code>config.secret_key =</code>
の行の追加だけでした。</p>

<p><a href="https://gist.github.com/znz/6603471#file-locale-diff">config/locales/devise.en.yml の差分</a>
もあるので、
<code>locales</code>
のファイルも更新しておくと良さそうです。</p>

<h2><code>rails generate devise User</code> の差分</h2>

<p><code>rails generate devise User</code> の差分として、
<a href="https://gist.github.com/znz/6603471#file-devise_create_users-diff">migration の差分</a>
は
<code>sign_in_count</code> と <code>failed_attempts</code> への <code>NOT NULL</code> 制約の追加と
Token authenticatable 用の <code>authentication_token</code> の削除なので、
対応する変更をする <code>migration</code> を作って対応するか、
気にせず古いまま使えば良さそうです。</p>

<p><code>app/models/user.rb</code> からもコメントの中のモジュール例にあった
<code>token_authenticatable</code> が削除されています。</p>

<p><code>config/routes.rb</code> に追加される <code>devise_for :users</code> は同じでした。</p>

<h2><code>rails generate devise:views</code> の差分</h2>

<p><a href="https://gist.github.com/znz/6603471#file-views-diff">app/views の差分</a>
は
<code>@resource.なんとか_token</code>
だったものが
<code>@token</code>
に変わっているのと、
<code>app/views/devise/shared/_links.erb</code>
の
<code>if devise_mapping.recoverable? &amp;&amp; controller_name != 'passwords'</code>
が
<code>if devise_mapping.recoverable? &amp;&amp; controller_name != 'passwords' &amp;&amp; controller_name != 'registrations'</code>
に変わっているのが
主な変更でした。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu Server 12.04.3 LTS をインストールした]]></title>
    <link href="http://blog.n-z.jp/blog/2013-09-15-ubuntu-server-installed.html"/>
    <updated>2013-09-15T20:02:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/ubuntu-server-installed</id>
    <content type="html"><![CDATA[<p>自宅サーバーのシステムディスク (sda) が壊れたので、 HDD を入れ替えて、せっかくなのでシステムをきれいな状態にするために <code>ubuntu-12.04.3-server-amd64.iso</code> からインストールし直しました。
その初期設定の話です。</p>

<!--more-->


<h2>インストール準備</h2>

<h3>ISO イメージダウンロード</h3>

<p>まずインストール用の ISO ファイルをダウンロードしました。
<a href="http://www.ubuntu.com/download">Get Ubuntu</a>
からだと海外ミラーでダウンロードが遅かったので、
国内のミラーを探してみたところ、
<code>ftp://ftp.riken.go.jp/Linux/ubuntu-iso/CDs/precise/</code>
だと torrent ファイルや metalink のファイルしか見えなくて、
<code>ftp</code> ではなく <code>http</code> の
<code>http://ftp.riken.go.jp/Linux/ubuntu-iso/CDs/precise/</code>
からだとダウンロード出来ました。</p>

<h3>起動用 USB メモリ準備</h3>

<p>ダウンロードした ISO を <code>dd</code> で USB メモリに書き込んで、そこからインストールしました。
categories につけた Mac を使っている部分はここだけです。</p>

<p>ネットで調べればいろいろ情報がみつかるように
<code>diskutil list</code>
でディスクの番号を確認して、
<code>dd</code> で読み書きします。
<code>rdisk</code> の方が速いらしいので、
実際の書き込みには <code>rdisk</code> を使ったのですが、
パーティションを <code>unmount</code> しておかないと
<code>Resource busy</code> で書き込ませんでした。
eject してしまって <code>diskutil list</code> にも
出てこない状態にしてしまうと読み書き出来ないので、
Finder から取り出したり <code>diskutil unmountDisk</code> だと
ダメでした。</p>

<p>読み込みの例として MBR の部分をバックアップしてダンプしてみました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% diskutil list
</span><span class='line'>/dev/disk0
</span><span class='line'>   #:                       TYPE NAME                    SIZE       IDENTIFIER
</span><span class='line'>   0:      GUID_partition_scheme                        *251.0 GB   disk0
</span><span class='line'>   1:                        EFI                         209.7 MB   disk0s1
</span><span class='line'>   2:          Apple_CoreStorage                         250.1 GB   disk0s2
</span><span class='line'>   3:                 Apple_Boot Recovery HD             650.0 MB   disk0s3
</span><span class='line'>/dev/disk1
</span><span class='line'>   #:                       TYPE NAME                    SIZE       IDENTIFIER
</span><span class='line'>   0:                  Apple_HFS Macintosh HD           *249.8 GB   disk1
</span><span class='line'>/dev/disk2
</span><span class='line'>   #:                       TYPE NAME                    SIZE       IDENTIFIER
</span><span class='line'>   0:     FDisk_partition_scheme                        *16.1 GB    disk2
</span><span class='line'>   1:             Windows_FAT_32 NO NAME                 16.1 GB    disk2s1
</span><span class='line'>% sudo dd if=/dev/disk2 of=MF-AU316GBS.mbr bs=512 count=1
</span><span class='line'>% hexdump -C MF-AU316GBS.mbr
</span><span class='line'>00000000  33 c0 8e d0 bc 00 7c fb  50 07 50 1f fc be 1b 7c  |3.....|.P.P....||
</span><span class='line'>00000010  bf 1b 06 50 57 b9 e5 01  f3 a4 cb bd be 07 b1 04  |...PW...........|
</span><span class='line'>00000020  38 6e 00 7c 09 75 13 83  c5 10 e2 f4 cd 18 8b f5  |8n.|.u..........|
</span><span class='line'>00000030  83 c6 10 49 74 19 38 2c  74 f6 a0 b5 07 b4 07 8b  |...It.8,t.......|
</span><span class='line'>00000040  f0 ac 3c 00 74 fc bb 07  00 b4 0e cd 10 eb f2 88  |..&lt;.t...........|
</span><span class='line'>00000050  4e 10 e8 46 00 73 2a fe  46 10 80 7e 04 0b 74 0b  |N..F.s*.F..~..t.|
</span><span class='line'>00000060  80 7e 04 0c 74 05 a0 b6  07 75 d2 80 46 02 06 83  |.~..t....u..F...|
</span><span class='line'>00000070  46 08 06 83 56 0a 00 e8  21 00 73 05 a0 b6 07 eb  |F...V...!.s.....|
</span><span class='line'>00000080  bc 81 3e fe 7d 55 aa 74  0b 80 7e 10 00 74 c8 a0  |..&gt;.}U.t..~..t..|
</span><span class='line'>00000090  b7 07 eb a9 8b fc 1e 57  8b f5 cb bf 05 00 8a 56  |.......W.......V|
</span><span class='line'>000000a0  00 b4 08 cd 13 72 23 8a  c1 24 3f 98 8a de 8a fc  |.....r#..$?.....|
</span><span class='line'>000000b0  43 f7 e3 8b d1 86 d6 b1  06 d2 ee 42 f7 e2 39 56  |C..........B..9V|
</span><span class='line'>000000c0  0a 77 23 72 05 39 46 08  73 1c b8 01 02 bb 00 7c  |.w#r.9F.s......||
</span><span class='line'>000000d0  8b 4e 02 8b 56 00 cd 13  73 51 4f 74 4e 32 e4 8a  |.N..V...sQOtN2..|
</span><span class='line'>000000e0  56 00 cd 13 eb e4 8a 56  00 60 bb aa 55 b4 41 cd  |V......V.`..U.A.|
</span><span class='line'>000000f0  13 72 36 81 fb 55 aa 75  30 f6 c1 01 74 2b 61 60  |.r6..U.u0...t+a`|
</span><span class='line'>00000100  6a 00 6a 00 ff 76 0a ff  76 08 6a 00 68 00 7c 6a  |j.j..v..v.j.h.|j|
</span><span class='line'>00000110  01 6a 10 b4 42 8b f4 cd  13 61 61 73 0e 4f 74 0b  |.j..B....aas.Ot.|
</span><span class='line'>00000120  32 e4 8a 56 00 cd 13 eb  d6 61 f9 c3 49 6e 76 61  |2..V.....a..Inva|
</span><span class='line'>00000130  6c 69 64 20 70 61 72 74  69 74 69 6f 6e 20 74 61  |lid partition ta|
</span><span class='line'>00000140  62 6c 65 00 45 72 72 6f  72 20 6c 6f 61 64 69 6e  |ble.Error loadin|
</span><span class='line'>00000150  67 20 6f 70 65 72 61 74  69 6e 67 20 73 79 73 74  |g operating syst|
</span><span class='line'>00000160  65 6d 00 4d 69 73 73 69  6e 67 20 6f 70 65 72 61  |em.Missing opera|
</span><span class='line'>00000170  74 69 6e 67 20 73 79 73  74 65 6d 00 00 00 00 00  |ting system.....|
</span><span class='line'>00000180  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
</span><span class='line'>*
</span><span class='line'>000001b0  00 00 00 00 00 2c 44 63  18 2e 07 c3 00 00 00 00  |.....,Dc........|
</span><span class='line'>000001c0  31 00 0c fe ff ff 30 00  00 00 50 f6 de 01 00 00  |1.....0...P.....|
</span><span class='line'>000001d0  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
</span><span class='line'>*
</span><span class='line'>000001f0  00 00 00 00 00 00 00 00  00 00 00 00 00 00 55 aa  |..............U.|
</span><span class='line'>00000200
</span><span class='line'>%  sudo dd if=Downloads/ubuntu-12.04.3-server-amd64.iso of=/dev/rdisk2 bs=1m
</span><span class='line'>Password:
</span><span class='line'>dd: /dev/rdisk2: Resource busy
</span><span class='line'>%  diskutil unmount disk2s1
</span><span class='line'>Volume NO NAME on disk2s1 unmounted
</span><span class='line'>%  diskutil list
</span><span class='line'>/dev/disk0
</span><span class='line'>   #:                       TYPE NAME                    SIZE       IDENTIFIER
</span><span class='line'>   0:      GUID_partition_scheme                        *251.0 GB   disk0
</span><span class='line'>   1:                        EFI                         209.7 MB   disk0s1
</span><span class='line'>   2:          Apple_CoreStorage                         250.1 GB   disk0s2
</span><span class='line'>   3:                 Apple_Boot Recovery HD             650.0 MB   disk0s3
</span><span class='line'>/dev/disk1
</span><span class='line'>   #:                       TYPE NAME                    SIZE       IDENTIFIER
</span><span class='line'>   0:                  Apple_HFS Macintosh HD           *249.8 GB   disk1
</span><span class='line'>/dev/disk2
</span><span class='line'>   #:                       TYPE NAME                    SIZE       IDENTIFIER
</span><span class='line'>   0:     FDisk_partition_scheme                        *16.1 GB    disk2
</span><span class='line'>   1:             Windows_FAT_32 NO NAME                 16.1 GB    disk2s1
</span><span class='line'>%  sudo dd if=Downloads/ubuntu-12.04.3-server-amd64.iso of=/dev/rdisk2 bs=1m
</span><span class='line'>665+0 records in
</span><span class='line'>665+0 records out
</span><span class='line'>697303040 bytes transferred in 41.551843 secs (16781519 bytes/sec)
</span><span class='line'>%</span></code></pre></td></tr></table></div></figure>


<p>この USB メモリを自作マシンにさして起動してインストールすることになります。</p>

<h2>インストール</h2>

<p>インストール作業は暗号化する以外はあまり特殊なことをせずに最小インストールにしました。</p>

<ul>
<li>Del キーで EFI BOIS Menu を開いて、起動メニューを開いて USB メモリからを選んで起動しました。</li>
<li>タスク (tasksel) は何も選択せずにインストールしました。</li>
<li>1TB の HDD (sda) を暗号化 LVM で初期化しました。</li>
</ul>


<h2>初期設定</h2>

<h3>etckeeper</h3>

<ul>
<li><code>sudo aptitude install git</code></li>
<li><code>sudo aptitude install etckeeper</code></li>
<li><code>sudoedit /etc/etckeeper/etckeeper.conf</code> で <code>VCS="git"</code> と <code>GIT_COMMIT_OPTIONS="-v"</code> を設定</li>
<li><code>sudo etckeeper init</code></li>
<li><code>sudo etckeeper commit "Initial commit"</code></li>
</ul>


<h3>ssh</h3>

<p>まず <code>ufw</code> で接続制限をしました。
多段防御の一つ目としてここではポート番号だけの制限にしています。</p>

<ul>
<li><code>sudo ufw enable</code></li>
<li><code>sudo ufw allow 22/tcp</code></li>
<li><code>sudo ufw limit 22/tcp</code>

<ul>
<li><code>サポートされていない IPv6 'limit' ルールを飛ばします</code> と出るので、
IPv6 用に allow と limit の両方を実行しています。</li>
</ul>
</li>
<li><code>sudo ufw allow 3843/tcp</code>

<ul>
<li>22 以外のポートでも待ち受けるなら、それも許可します。</li>
<li>ここでは例として 3843 番ポートにしています。
(実際に使っているポート番号は違います。)</li>
<li>アタックは少なそうなので、<code>limit</code> は付けていません。</li>
</ul>
</li>
</ul>


<p>次に tcp wrapper で接続制限をしました。
ここでは接続元の制限をしています。
接続元として使っていて、逆引きが <code>.jp</code> でないところなどは
別途 <code>sshd: 10.1.2.3</code> のように許可していきます。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ egrep '^[^#]' /etc/hosts.deny
</span><span class='line'>ALL: ALL
</span><span class='line'>$ egrep '^[^#]' /etc/hosts.allow
</span><span class='line'>sshd: 127.0.0.1 [::1]
</span><span class='line'>sshd: 192.168.0.0/16
</span><span class='line'>sshd: .jp</span></code></pre></td></tr></table></div></figure>


<p>最後に <code>/etc/sshd/sshd_config</code> の設定例です。
<code>ssh_config</code> とは別物なので注意が必要です。</p>

<ul>
<li><code>Port 3843</code> を追加します。

<ul>
<li>複数ポートで待ち受けるには <code>Port</code> 設定の行を複数書けば良いです。</li>
</ul>
</li>
<li><code>PermitRootLogin no</code> にします。
<code>root</code> ログインが必要なら
<code>PermitRootLogin forced-commands-only</code> か
<code>PermitRootLogin without-password</code> にすればよく、
公開サーバーで <code>PermitRootLogin yes</code> にする必要はないはずです。</li>
<li><code>AllowUsers firstuser</code> で最初のユーザーのログインを許可します。</li>
<li>ログインするユーザーの <code>.ssh/authorized_keys</code> の設定をしてから
<code>PasswordAuthentication no</code> の設定をします。
<code>ChallengeResponseAuthentication no</code> になっていることを
確認しておかないと
<code>UsePAM yes</code> との組み合わせで <code>keyboard-interactive</code> 認証が
発生してパスワードで入れてしまうことがあるので注意が必要です。
昔はこれが原因で公開鍵認証のみに制限出来ていないという話が多かった気がします。</li>
</ul>


<h3>quota 設定</h3>

<p>ユーザー ID ごとのディスク使用量の把握のために、 <code>quota</code> を設定します。</p>

<p><code>/etc/fstab</code> の
<code>errors=remount-ro</code> を
<code>errors=remount-ro,noatime,usrquota,grpquota,user_xattr</code>
に書き換えます。</p>

<p><code>quota</code> パッケージを入れておけば、次回起動時に自動で
<code>quotacheck</code> が動いて <code>repquota</code> が使えるようになります。
ファイルが多いと <code>quotacheck</code> に時間がかかるので、
出来るだけ最小インストールでファイルが少ないうちに
有効にした方が時間の節約になります。</p>

<h3>IP アドレス設定</h3>

<p><code>bridge-utils</code> パッケージを入れて、
<code>sudoedit /etc/network/interfaces</code> で
<code>br0</code> ありの固定 IP アドレスの設定に変更しました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># The primary network interface
</span><span class='line'>auto eth0
</span><span class='line'>iface eth0 inet manual
</span><span class='line'>auto br0
</span><span class='line'>iface br0 inet static
</span><span class='line'>  address 192.168.xx.yy
</span><span class='line'>  netmask 255.255.255.0
</span><span class='line'>  gateway 192.168.253.1
</span><span class='line'>  dns-nameservers 192.168.xx.yy
</span><span class='line'>  dns-search home.example.jp
</span><span class='line'>  bridge_ports eth0
</span><span class='line'>  bridge_stp off
</span><span class='line'>  bridge_fd 0
</span><span class='line'>  bridge_maxwait 0</span></code></pre></td></tr></table></div></figure>


<h3>パスフレーズなし起動設定</h3>

<p>リモートから再起動した時などに止まってしまうことを防ぐ設定をします。</p>

<p>これは鍵を暗号化の外に平文で置いておくということで、
セキュリティ的には弱くなってしまうので、
そのトレードオフを許容出来るかどうかを
考えておく必要があります。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo dd if=/dev/random of=/root/sda5_crypt.key bs=512 count=4
</span><span class='line'>dd: warning: partial read (128 bytes); suggest iflag=fullblock
</span><span class='line'>0+4 レコード入力
</span><span class='line'>0+4 レコード出力
</span><span class='line'>447 バイト (447 B) コピーされました、 0.000294833 秒、 1.5 MB/秒
</span><span class='line'>$ sudo chmod 400 /root/sda5_crypt.key
</span><span class='line'>$ sudo cryptsetup luksAddKey /dev/sda5 /root/sda5_crypt.key
</span><span class='line'>パスフレーズを入力:
</span><span class='line'>$ sudo mv /root/sda5_crypt.key /boot/sda5_crypt.key
</span><span class='line'>$ sudoedit /etc/crypttab
</span><span class='line'>$ sudo update-initramfs -u
</span><span class='line'>update-initramfs: Generating /boot/initrd.img-3.8.0-30-generic</span></code></pre></td></tr></table></div></figure>


<p>Ubuntu 12.04 では、
<code>crypttab</code> は
<code>sda5_crypt UUID=(/dev/sda5のUUID) none luks</code>
を
<code>sda5_crypt UUID=(/dev/sda5のUUID) /dev/disk/by-uuid/(/bootのUUID):sda5_crypt.key luks,keyscript=/lib/cryptsetup/scripts/passdev</code>
のように書き換えます。
<code>/bootのUUID</code> は <code>/etc/fstab</code> を参照するのがわかりやすいと思います。
<code>by-uuid</code> だけではなく <code>by-label</code> などのパスも使えると思いますが、
一番誤動作が少なそうな <code>by-uuid</code> を使っています。</p>

<p>その後、
<code>update-initramfs</code>
で
<code>/boot/initrd.img-*</code>
に変更を反映させておく必要があります。</p>

<h3>GRUB で止まるのを防ぐ</h3>

<p><code>/etc/default/grub</code> に
<code>GRUB_RECORDFAIL_TIMEOUT=5</code>
のような設定を追加しておくと
起動時の GRUB で止まることがなくなります。</p>

<p>なぜか前回起動失敗扱いになってしまって、
GRUB で止まってしまう環境があったのですが、
この設定を入れてからは止まらなくなりました。</p>

<p><code>/etc/default/grub</code> の変更は
<code>update-grub</code> で
<code>/boot/grub/grub.cfg</code> に
反映させる必要があります。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudoedit /etc/default/grub
</span><span class='line'>$ sudo update-grub
</span><span class='line'>Generating grub.cfg ...
</span><span class='line'>Found linux image: /boot/vmlinuz-3.8.0-30-generic
</span><span class='line'>Found initrd image: /boot/initrd.img-3.8.0-30-generic
</span><span class='line'>Found linux image: /boot/vmlinuz-3.8.0-29-generic
</span><span class='line'>Found initrd image: /boot/initrd.img-3.8.0-29-generic
</span><span class='line'>Found memtest86+ image: /memtest86+.bin
</span><span class='line'>done</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[独自ビルドした ruby を rbenv で使う]]></title>
    <link href="http://blog.n-z.jp/blog/2013-09-14-use-custom-ruby-with-rbenv.html"/>
    <updated>2013-09-14T23:22:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/use-custom-ruby-with-rbenv</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/sstephenson/rbenv">rbenv</a>
を使っているなら、
<a href="https://github.com/sstephenson/ruby-build">ruby-build</a>
でインストールしたもの以外にも
自分でビルドした ruby も rbenv で切り替えたくなることがありますが、
これは簡単に出来ます。</p>

<!--more-->


<p>元々 <code>rbenv</code> に <code>ruby-build</code> が必須というわけではないので、
<code>configure</code> の <code>--prefix</code> に
<code>~/.rbenv/versions/some-name</code>
を指定してインストールすれば良いだけです。</p>

<p>名前にはシェルで特別な意味を持つ文字を避ければ
何でも良さそうですが、
<code>rbenv install</code> で上書きされてしまう危険があるのと
単純に紛らわしいので、
<code>ruby-build</code> でインストール出来る名前は避けた方が無難だと思います。</p>

<p>例えば以下のように <code>configure</code> してインストールすれば <code>rbenv shell trunk</code> などで <code>ruby-build</code> でインストールしたものと同様に使えます。</p>

<ul>
<li><code>./configure --prefix=$HOME/.rbenv/versions/trunk --enable-shared --enable-debug-env CPPFLAGS=-DRUBY_DEBUG_ENV</code></li>
<li><code>./configure --prefix=$HOME/.rbenv/versions/git --enable-shared --enable-debug-env CPPFLAGS='-DRUBY_DEBUG_ENV -DARRAY_DEBUG'</code></li>
<li><code>./configure --prefix=$HOME/.rbenv/versions/git-debug --enable-shared --enable-debug-env CPPFLAGS='-DRUBY_DEBUG_ENV -DARRAY_DEBUG -DBIGDECIMAL_DEBUG'</code></li>
</ul>


<p><code>$HOME</code> を使っている理由は
<code>--prefix=~/path/to/somewhere</code>
だと <code>configure</code> の実行前には展開されず、
<code>autoconf</code> の <code>configure</code> ではなかったと思いますが、
<code>./~/path/to/somewhere</code>
にインストールされてしまうという問題が起きたことがあったので、
それ以来
<code>$HOME</code>
を使って目の前でフルパスに展開されるようにしています。</p>

<p><code>-DRUBY_DEBUG_ENV</code> などを渡すのに <code>CPPFLAGS</code> を使うのは
<a href="https://github.com/akr/chkbuild">chkbuild</a>
のやり方を
<a href="http://rubyci.org/">Ruby CI</a>
のログをみて参考にしました。</p>

<p>安定したビルドを使いたいのなら、
Ruby CI
で使われているのと同じような引数を使うのが良いと思います。</p>

<p>普段私が使っているのは
<code>CPPFLAGS='-DRUBY_DEBUG_ENV -DARRAY_DEBUG</code>
です。</p>

<p><code>-DBIGDECIMAL_DEBUG</code>
まで付けると、デバッグ出力が多すぎたり、
<code>make test-all</code>
が途中で止まってしまったりして
問題が起きそうなので、
おすすめしません。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[homebrew の reinstall で使われるオプションの保存場所]]></title>
    <link href="http://blog.n-z.jp/blog/2013-09-13-homebrew-used-options.html"/>
    <updated>2013-09-13T21:58:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/homebrew-used-options</id>
    <content type="html"><![CDATA[<p><a href="http://blog.n-z.jp/blog/2013-09-08-rabbiter-on-mac.html">rabbiter の記事</a>
で、
「一度 <code>--with-curl-ca-bundle</code> 付きでインストールした後だと、以下のようにオプションなしの reinstall でもオプションが付くようです。」
と書きましたが、そのオプションがどこに保存されているのかを調べました。</p>

<!--more-->


<p>実際に調べるのはソースをたどったりして結構大変だったのですが、
最終的に
<code>/usr/local/Cellar/glib-networking/2.36.2/INSTALL_RECEIPT.json</code>
に <code>used_options</code> というキーで保存されているということがわかりました。</p>

<p><code>Cellar</code> はインストールしたファイルの実体が入るところなので、
あらかじめダミーの <code>INSTALL_RECEIPT.json</code> を用意しておいて
オプションなしの <code>brew reinstall</code> の時に使われるオプションを
埋め込んでおくという用途に使うのには向いていないということが
わかりました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[td2planet を rubyforge から github に移行してリリース]]></title>
    <link href="http://blog.n-z.jp/blog/2013-09-12-td2planet.html"/>
    <updated>2013-09-12T22:43:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/td2planet</id>
    <content type="html"><![CDATA[<p>tDiary の日付ごとのまとまりを意識したフィードアグリゲータの td2planet を rubyforge から github に移行して、 ruby 2.0.0 対応を確認して、 0.3.0 としてリリースしました。</p>

<!--more-->


<h2>rubyforge から github への移行</h2>

<p>rubyforge は
<a href="http://rubyforge.org/scm/?group_id=3122">RubyForge: TD2Planet: SCM Repository</a>
に書いてあるように http か svn か svn+ssh でアクセス出来ますが、
今回は svn から取得したものを github に移行しました。</p>

<p>小さいレポジトリだったこともあり、手順としては以下のように単純に移行出来ました。</p>

<ol>
<li><code>git svn clone -s svn://rubyforge.org/var/svn/td2planet</code></li>
<li>github 上でレポジトリ作成</li>
<li><code>git remote add origin git@github.com:znz/td2planet.git</code></li>
<li><code>git push -u origin master</code></li>
</ol>


<h2>ruby 2.0.0 対応確認</h2>

<p>単純に README に書いてある <code>ruby -I lib bin/td2planet.rb config.yaml</code> で問題なく動きました。</p>

<p><a href="https://gist.github.com/unak/3038095">The History of Ruby</a>
によると作り始めた 2007 年はまだ 1.9.0 の開発中だったので、
その頃でも magic comment をちゃんと書いたり、
内部エンコーディングは UTF-8 に統一したりなどを
気をつけていれば、
ruby 自体の互換性は高いと言うことがわかります。</p>

<p>他には以下のような変更をしました。</p>

<ul>
<li><code>setup.rb</code> と関連する LGPL 削除など</li>
<li>README と README.ja に拡張子の <code>.rdoc</code> を追加</li>
<li>gemspec 更新

<ul>
<li>homepage を rubyforge から github に変更</li>
<li>README のファイル名変更対応</li>
<li>license 追加</li>
</ul>
</li>
<li>バージョン変更</li>
<li><code>-Ku</code> から ruby が 1.9 未満のときだけ <code>$KCODE</code> を設定に変更</li>
</ul>


<p><code>setup.rb</code> は ruby 1.9 以降に対応しているのかわからなかったのと、
ライセンスを MIT に統一するために削除しました。</p>

<h2>リリース</h2>

<p>別のリリース作業をした時に <code>~/.gem/credentials</code> は作成済みだったので、
リリースは以下の手順だけで出来ました。
<code>~/.gem/credentials</code> がまだないときは <code>gem push</code> の時に <code>rubygems.org</code> のアカウントか <code>rubyforge.org</code> のアカウントが必要になります。</p>

<ul>
<li><code>gem build *.gemspec</code></li>
<li><code>gem push *.gem</code></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>% gem build *.gemspec
</span><span class='line'>  Successfully built RubyGem
</span><span class='line'>  Name: td2planet
</span><span class='line'>  Version: 0.3.0
</span><span class='line'>  File: td2planet-0.3.0.gem
</span><span class='line'>% gem push td2planet-0.3.0.gem
</span><span class='line'>Pushing gem to https://rubygems.org...
</span><span class='line'>Successfully registered gem: td2planet (0.3.0)</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[タグクラウドプラグインを入れた]]></title>
    <link href="http://blog.n-z.jp/blog/2013-09-11-tagcloud.html"/>
    <updated>2013-09-11T00:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/tagcloud</id>
    <content type="html"><![CDATA[<p>探してみて見つけた中で今もちゃんとメンテナンスされてそうだった
<a href="https://github.com/tokkonopapa/octopress-tagcloud">Tag cloud plugin for Octopress</a>
を入れてタグクラウドが出るようにしてみました。</p>
]]></content>
  </entry>
  
</feed>
