<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: amagasakirb | @znz blog]]></title>
  <link href="http://blog.n-z.jp/blog/categories/amagasakirb/atom.xml" rel="self"/>
  <link href="http://blog.n-z.jp/"/>
  <updated>2015-12-27T22:27:20+09:00</updated>
  <id>http://blog.n-z.jp/</id>
  <author>
    <name><![CDATA[Kazuhiro NISHIYAMA]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[12月27日 型システム入門読書会　第2回(兵庫県)に参加しました]]></title>
    <link href="http://blog.n-z.jp/blog/2015-12-27-amagasakirb.html"/>
    <updated>2015-12-27T13:06:28+09:00</updated>
    <id>http://blog.n-z.jp/blog/amagasakirb</id>
    <content type="html"><![CDATA[<p><a href="http://kokucheese.com/event/index/362134/" title="12月27日 型システム入門読書会　第2回(兵庫県)">12月27日 型システム入門読書会　第2回(兵庫県)</a>
に参加しました。
今回は第 8 章から第 14 章でした。</p>

<!--more-->




<div style="float:right">
<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=znz-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=4274069117" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>
</div>


<p>以下、今回のメモです。</p>

<ul>
<li>(前回参加していない) 初参加の人の方が多かった</li>
<li>8.3 安全性よりも健全性という方がよく使うという話</li>
<li>p.83 の下の方から p.84 にかけてがわかりにくい話</li>
<li>λ の右下に → という表記が珍しいという話</li>
<li><a href="https://ja.wikipedia.org/wiki/2018%E5%B9%B4%E5%95%8F%E9%A1%8C" title="2018年問題">2018年問題</a>の話</li>
<li>OCaml の let rec と F# の話</li>
<li>p.92 脱糖衣 という用語が珍しいという話</li>
<li>p.93 (例えば Java では、設計により、すべての型が短縮名で表される。第 19 章参照)</li>
<li>p.113 正しく型付けされたプログラムの評価は有限ステップで停止することが保証されている</li>
<li>関数の型の話らしい</li>
<li>13?15?章を読んでから12章を読んだ方が良いかもしれないという話</li>
<li>ノート PC で Linux を使った時の消費電力の話</li>
<li><a href="http://science.srad.jp/story/15/12/08/0552206/">バナナの病気</a>の話</li>
<li>代入の返り値が unit の利点欠点の話</li>
<li>swift は unit らしい</li>
<li>機械学習の話</li>
<li>swift は型推論に時間がかかるとコンパイルエラーになるという話</li>
<li>swift は言語としては良い言語という話 (クラスライブラリが負の遺産という話)</li>
<li>swift の Optional の話</li>
<li>教育に使う言語の話</li>
<li><a href="https://ja.wikipedia.org/wiki/LabVIEW" title="LabVIEW">LabVIEW</a> の話</li>
<li>レゴ マインドストーム の話</li>
<li>演習問題の答えが付いている話</li>
<li>訳語集など付録が充実している話</li>
<li>次回は 2/7(日) 予定</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[10月25日 型システム入門読書会　第１回(大阪府)に参加しました]]></title>
    <link href="http://blog.n-z.jp/blog/2015-10-25-amagasakirb.html"/>
    <updated>2015-10-25T12:53:29+09:00</updated>
    <id>http://blog.n-z.jp/blog/amagasakirb</id>
    <content type="html"><![CDATA[<p><a href="http://kokucheese.com/event/index/345134/" title="10月25日 型システム入門読書会　第１回(大阪府)">10月25日 型システム入門読書会　第１回(大阪府)</a>
に参加しました。
今回は第 1 章から 7 章でした。</p>

<!--more-->




<div style="float:right">
<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=znz-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=4274069117" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>
</div>


<p>以下、今回のメモです。</p>

<ul>
<li>序文に章の依存関係のグラフがある</li>
<li>まず 3 章まで読む</li>
<li>紙の書籍を持っている人がいない (重いから)</li>
<li><a href="http://lotusrb.org/" title="Lotus - A complete web framework for Ruby">Lotus - A complete web framework for Ruby</a></li>
<li>この本に関するブログ記事は意外と多い</li>
<li><a href="http://www.cis.upenn.edu/~bcpierce/tapl">http://www.cis.upenn.edu/~bcpierce/tapl</a></li>
<li>of info の info はエラーの時用のファイル情報</li>
<li>ラムダ計算のところはアンダースタンディングコンピュテーションでやったこととほぼ同じ</li>
<li><a href="http://ocaml.jp/">http://ocaml.jp/</a></li>
<li>F# は OCaml ベース</li>
<li>OCaml で実装されているもの : Haxe, Coq</li>
<li>XMonad の話</li>
<li>Emacs の話</li>
<li>Phoenix Framework の話</li>
<li>次回は 12/27 に第 8 章からの予定</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[8月9日 アンダースタンディングコンピュテーション読書会 第4回(兵庫県)に参加しました]]></title>
    <link href="http://blog.n-z.jp/blog/2015-08-09-amagasakirb.html"/>
    <updated>2015-08-09T13:02:58+09:00</updated>
    <id>http://blog.n-z.jp/blog/amagasakirb</id>
    <content type="html"><![CDATA[<p><a href="http://kokucheese.com/event/index/322444/" title="8月9日 アンダースタンディングコンピュテーション読書会 第4回(兵庫県)">8月9日 アンダースタンディングコンピュテーション読書会 第4回(兵庫県)</a>
に参加しました。
今回は8章から9章でした。</p>

<!--more-->


<h2>メモ</h2>

<div style="float:right">
<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=znz-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=487311697X" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>
</div>


<p>以下、今回のメモです。</p>

<ul>
<li><a href="https://github.com/tomstuart/computationbook">https://github.com/tomstuart/computationbook</a></li>
<li><a href="https://github.com/ko1/uc_ja">https://github.com/ko1/uc_ja</a></li>
<li>p.259 <code>to_s(2).scan(/.+?(?=.{8}*\z)/)</code> の書き換えの話</li>
<li><code>reserve</code> して <code>each_slice(8)</code> はどうかという話</li>
<li><code>Kernel#Integer</code> を使うかどうかという話</li>
<li>正規表現の先読みの話 <code>gsub(/(?=(.{3})+\z)/, ',')</code> など</li>
<li><code>does_it_say_no.rb</code> の話</li>
<li>p.264 監訳注の <code>"no"</code> と言って停止というのは環境 (スタックの深さ) に依存して <code>"yes"</code> になることもある <a href="https://github.com/ko1/uc_ja/issues/7">https://github.com/ko1/uc_ja/issues/7</a></li>
<li>Quine から <code>HQ9+</code> の話 <a href="https://ja.wikipedia.org/wiki/HQ9%2B">https://ja.wikipedia.org/wiki/HQ9%2B</a></li>
<li>p.276 <code>Prime.each(n - 1)</code> の話</li>
<li>p.296 <code>Array#product</code> の話 <a href="http://docs.ruby-lang.org/ja/2.2.0/method/Array/i/product.html">http://docs.ruby-lang.org/ja/2.2.0/method/Array/i/product.html</a></li>
<li>p.299 <code>T``Type::BOOLEAN</code> の <code>T</code> が余分? <a href="https://github.com/ko1/uc_ja/issues/8">https://github.com/ko1/uc_ja/issues/8</a></li>
<li>8章は時間がかかったが9章はすんなり読めた話</li>
<li>多重代入と <code>to_ary</code> と <code>to_a</code> などの話</li>
<li>SlideShare と SpeakerDeck の違いの話</li>
<li><code>-Float::INFINITY</code> の話</li>
</ul>


<h2>次回の本の候補</h2>

<ul>
<li><a href="http://www.amazon.co.jp/gp/product/4274050653/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4274050653&amp;linkCode=as2&amp;tag=znz-22">Rubyのしくみ -Ruby Under a Microscope-</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4274050653" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.co.jp/gp/product/4798139823/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4798139823&amp;linkCode=as2&amp;tag=znz-22">Effective Ruby</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4798139823" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.co.jp/gp/product/4797376279/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4797376279&amp;linkCode=as2&amp;tag=znz-22">10年戦えるデータ分析入門 SQLを武器にデータ活用時代を生き抜く (Informatics &amp;IDEA)</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4797376279" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.co.jp/gp/product/4873117321/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4873117321&amp;linkCode=as2&amp;tag=znz-22">ユーザーストーリーマッピング</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4873117321" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.co.jp/gp/product/4627817711/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4627817711&amp;linkCode=as2&amp;tag=znz-22">データ解析の実務プロセス入門</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4627817711" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="https://progit-ja.github.io/" title="Pro Git 日本語版電子書籍公開サイト">Pro Git 日本語版電子書籍公開サイト</a></li>
<li><a href="http://railsguides.jp/index.html" title="Ruby on Rails ガイド (4.2 対応)">Ruby on Rails ガイド (4.2 対応)</a></li>
<li><a href="http://www.amazon.co.jp/gp/product/4873116988/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4873116988&amp;linkCode=as2&amp;tag=znz-22">実践 機械学習システム</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4873116988" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.co.jp/gp/product/4797376724/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4797376724&amp;linkCode=as2&amp;tag=znz-22">ソフトウェアシステムアーキテクチャ構築の原理 第2版 ITアーキテクトの決断を支えるアーキテクチャ思考法</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4797376724" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.co.jp/gp/product/4798139211/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4798139211&amp;linkCode=as2&amp;tag=znz-22">システムテスト自動化 標準ガイド (CodeZine BOOKS)</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4798139211" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.co.jp/gp/product/4274069117/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4274069117&amp;linkCode=as2&amp;tag=znz-22">型システム入門 −プログラミング言語と型の理論−</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4274069117" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>


<h2>次回予定</h2>

<div style="float:right">
<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=znz-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=4274069117" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>
</div>


<p>次回の本は<a href="http://www.amazon.co.jp/gp/product/4274069117/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4274069117&amp;linkCode=as2&amp;tag=znz-22">型システム入門 −プログラミング言語と型の理論−</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4274069117" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />に決定しました。
次回は10月の予定で詳細は未定です。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[5月9日 アンダースタンディング コンピュテーション読書会　第３回(兵庫県)に参加しました]]></title>
    <link href="http://blog.n-z.jp/blog/2015-05-09-amagasakirb.html"/>
    <updated>2015-05-09T13:08:12+09:00</updated>
    <id>http://blog.n-z.jp/blog/amagasakirb</id>
    <content type="html"><![CDATA[<p><a href="http://kokucheese.com/event/index/287707/" title="5月9日 アンダースタンディング コンピュテーション読書会　第３回(兵庫県)">5月9日 アンダースタンディング コンピュテーション読書会　第３回(兵庫県)</a>
に参加しました。
今回はいつもの会場に戻って5章から7章でした。</p>

<!--more-->


<h2>メモ</h2>

<div style="float:right">
<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=znz-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=487311697X" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>
</div>


<p>以下、今回のメモです。</p>

<ul>
<li><a href="https://github.com/tomstuart/computationbook">https://github.com/tomstuart/computationbook</a></li>
<li><a href="https://github.com/ko1/uc_ja">https://github.com/ko1/uc_ja</a></li>
<li>p.135 <code>「コンピュータ」という言葉は「計算する人」(通常は女性)を意味していました。</code></li>
<li>アラン・チューリングの論文名の最後の単語の Entscheidungsproblem の読み方がわからないという話</li>
<li>ドイツ語由来の英単語らしいという話</li>
<li>the Entscheidungsproblem でヒルベルトの決定問題を意味する単語ではないかという話</li>
<li>p.143 の <code>left[0..-2]</code> の <code>[0..-2]</code> がわかりにくい話</li>
<li>頭から削る <code>drop</code> はあるのに逆に末尾から削るメソッドがない話</li>
<li>頭から削るメソッドだけなのは <code>Enumerable</code> 由来のメソッドだからではないかという話</li>
<li>cuzic さんが <code>Enumerator.new</code> を最近よく使うという話</li>
<li>アラン・チューリングはチューリングマシンの実装については考えていなくて計算可能性などの数学的なことを重視していたという話</li>
<li><code>proc#[]</code> と <code>proc#call</code> が同じという話</li>
<li><code>x[]</code> のように引数なしの <code>call</code> でも <code>[]</code> で書けるという話</li>
<li>p.168 ローカル変数名 (引数) に <code>proc</code> という名前を使っているのはグローバル関数の <code>proc</code> と紛らわしいので良くないという話</li>
<li>ラムダ計算の話</li>
<li>最小構成要素を少なくしたかったという話</li>
<li>YコンビネータとかZコンビネータとかIコンビネータとかの話</li>
<li>SKK=I の話 (p.224に出てくる)</li>
<li>p.194 <code>Enumerator::Lazy#force</code> の話</li>
<li><code>take</code> はまだ lazy のままで <code>first</code> は lazy ではなくなるという話</li>
<li>6章には <a href="https://github.com/tomstuart/computationbook/tree/master/programming_with_nothing" title="README.md">README.md</a> から <a href="http://rubymanor.org/3/videos/programming_with_nothing/" title="解説ビデオ">解説ビデオ</a> へのリンクがある</li>
<li>p.238 <code>Array#cycle</code></li>
<li>次回は8月予定で具体的な日程は未定</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[4月4日 アンダースタンディング コンピュテーション読書会 第2回 (大阪府)に参加しました]]></title>
    <link href="http://blog.n-z.jp/blog/2015-04-04-amagasakirb.html"/>
    <updated>2015-04-04T12:50:16+09:00</updated>
    <id>http://blog.n-z.jp/blog/amagasakirb</id>
    <content type="html"><![CDATA[<p><a href="http://kokucheese.com/event/index/276001/" title="4月4日 アンダースタンディング コンピュテーション読書会　第2回 (大阪府)">4月4日 アンダースタンディング コンピュテーション読書会　第2回 (大阪府)</a>
に参加しました。
今回はいつもと違う会場でした。</p>

<!--more-->


<h2>メモ</h2>

<div style="float:right">
<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=znz-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=487311697X" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>
</div>


<p>以下、今回のメモです。
個人的なメモと話に出ていたことのメモが混ざっています。</p>

<ul>
<li><a href="https://github.com/cuzic/amagasakirb/wiki/2015.04.04-%E3%82%A2%E3%83%B3%E3%83%80%E3%83%BC%E3%82%B9%E3%82%BF%E3%83%B3%E3%83%87%E3%82%A3%E3%83%B3%E3%82%B0%E3%82%B3%E3%83%B3%E3%83%94%E3%83%A5%E3%83%86%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3-%E8%AA%AD%E6%9B%B8%E4%BC%9A-%E7%AC%AC2%E5%9B%9E" title="2015.04.04 アンダースタンディングコンピュテーション 読書会 第2回 · cuzic/amagasakirb Wiki">2015.04.04 アンダースタンディングコンピュテーション 読書会 第2回 · cuzic/amagasakirb Wiki</a></li>
<li><a href="https://twitter.com/hashtag/amagasakirb" title="#amagasakirbに関するツイート">#amagasakirbに関するツイート</a></li>
<li><a href="https://github.com/tomstuart/computationbook">https://github.com/tomstuart/computationbook</a> にサンプルコードがある</li>
<li>p.41 「いろいろな意味で、これはスモールステップというアプローチよりも自然に感じられますが、」の自然に感じられる理由は? という話。</li>
<li>軽く自己紹介</li>
<li>p.46 「この違いは、それぞれのアプローチの目的を際立たせます。」の目的とは? という話。</li>
<li>Google マップで会場の検索をすると位置がずれているのは申請で修正できるという話。</li>
<li>p.69 <code>string.chars.each</code> は一度配列を作る <code>chars</code> よりも <code>each_char</code> の方が良いのでは。</li>
<li>p.73 <code>flat_map</code> をなぜ使っているのかという話。 <code>follow_rules_for</code> が配列を返すので、入れ子の階層を一段階減らすため。</li>
<li>有限オートマトンの有限とは? という話。
とりうる状態が有限。
状態が無限のものは無限オートマトンとか次の章で出てくるプッシュダウンオートマトンとか。</li>
<li>p.82 <code>precedence</code> とは何かという話。 p.81 の <code>bracket</code> で使われている結合の優先順位。</li>
<li>3 章のサンプルコードは <code>the_simplest_computers</code> にあって最終状態のクラスのコードが入っている。実行結果の例もついているものは <code>irb.txt</code> に書いてある。</li>
<li>p.90 脚注の「ここでは新しい状態を追加する代わりに、元の開始状態を受理状態にするだけで済ませることもできましたが、そのやり方だと複雑な場合に(たとえば、<code>(a*b*)*</code>)、空文字列以外の望まない文字列まで受理する機械ができてしまします。」で受理されてしまう例は?

<ul>
<li><code>Repeat#to_nfa_design</code> の <code>start_state = Object.new</code> を <code>start_state = pattern_nfa_design.start_state</code> に変更して <code>pattern = Repeat.new(Concatenate.new(Repeat.new(Literal.new('a')), Literal.new('b')))</code> (<code>/(a*b)*/</code>) で試してみたら <code>'a'</code> も受理された。(<code>pattern.matches?('a')</code> が true になった。)</li>
</ul>
</li>
<li>p.92 <a href="http://patshaughnessy.net/2012/4/3/exploring-rubys-regular-expression-algorithm">http://patshaughnessy.net/2012/4/3/exploring-rubys-regular-expression-algorithm</a> の URL が長い。</li>
<li>わからないところは飛ばしつつ 3,4,5 章を読んで 3 章に戻った方がわかりやすいかもしれないという話。</li>
<li>具体例が正規表現しかないのがわかりにくいかもしれないという話。</li>
<li>マクドナルドなどで注文した結果、一番安いセットが自動で選ばれるようになっているらしいという話。その実装を有限オートマトンでやっているだろうという話。</li>
<li>オートマトン研究は昔の話なので、テープなど言葉が違う (古い) のは仕方がないという話。</li>
<li>p.107, p.108 で <code>\g</code> で括弧の対応関係などの難しい話が載っているという話。</li>
<li><code>Struct.new</code> を継承する必要はあるのかと思っていたが p.116 の <code>current_configuration</code> の <code>super</code> のようなに上書きができるという利点があるとわかった。</li>
<li><code>tap</code> メソッドがよく出てくるという話。</li>
<li>ブロック引数と外側の変数の名前が重なっていたときにどうなるかが 1.9 で変わった話。</li>
<li><code>Kernel#returning</code> というのが昔の ActiveSupport にあったという話。
<code>returning {} do |hash| ... end</code> は <code>{}.tap do |hash| ... end</code> と同じ意味。</li>
<li>C++ の右辺値参照の話。
<a href="http://qiita.com/go_astrayer/items/5d85565e992487daa618" title="C++11 - シンプルな配列クラスを使って「右辺値参照」と「ムーブセマンティクス」を知る - Qiita">C++11 - シンプルな配列クラスを使って「右辺値参照」と「ムーブセマンティクス」を知る - Qiita</a></li>
<li>C++11 で記号だらけという話。</li>
<li>C++ のラムダ式 (<code>[&amp;]{...}</code> とか) の話。</li>
<li>C# も記号を使った記法が増えているらしいという話。</li>
<li><code>Object.new</code> は普通に使われているのかという話。</li>
<li>p.127 <code>LexicalAnalyzer</code> は文字列の先頭や末尾に空白があるとうまく動かなさそうと思って試してみたら、末尾は <code>lstrip</code> で消えるので大丈夫だった。
先頭は <code>NoMethodError: undefined method `post_match' for nil:NilClass</code> になった。</li>
<li>p.128 <code>/(true|false)(?![a-z])/</code> は <code>/(true|false)\b/</code> でも良さそう。</li>
<li>計算機の歴史の話。</li>
<li>オクテットの話。</li>
<li>等価性と非等価性の話。</li>
<li>DFA=NFA (正規表現), DPDA (括弧の対応), NPDA (回文), チューリングマシン (<code>aaabbbccc</code> など)</li>
</ul>

]]></content>
  </entry>
  
</feed>
