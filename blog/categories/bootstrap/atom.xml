<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: bootstrap | @znz blog]]></title>
  <link href="http://blog.n-z.jp/blog/categories/bootstrap/atom.xml" rel="self"/>
  <link href="http://blog.n-z.jp/"/>
  <updated>2017-03-25T14:59:57+09:00</updated>
  <id>http://blog.n-z.jp/</id>
  <author>
    <name><![CDATA[Kazuhiro NISHIYAMA]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[bootstrap 2.3.2 から bootstrap 3.1.1 への移行]]></title>
    <link href="http://blog.n-z.jp/blog/2014-03-14-bootstrap-2-to-3.html"/>
    <updated>2014-03-14T23:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/bootstrap-2-to-3</id>
    <content type="html"><![CDATA[<p>Rails 3.2.17 を使っている rails アプリで
bootstrap 2.3.2 から bootstrap 3.1.1 に移行している途中なのですが、
どういうところに対処が必要だったのか、
メモをまとめてみました。</p>

<!--more-->


<h2>Gemfile 変更</h2>

<p>bootstrap 2 系のときは twitter-bootstrap-rails gem を使っていたのですが、
bootstrap 3 系対応がリリースされていないこともあって、
bootstrap 側から公式にリリースされている bootstrap-sass gem に移行しました。</p>

<p>bootstrap-sass は rails_admin gem で使われていて、
バージョンが rails_admin によって制限されてしまうので、
公式の less の gem があれば良かったのですが、
見つけられなかったので、
自分しか使っていない rails_admin を rails 4 に上げるまでの間、
一時的に rails_admin を外して、
新しい bootstrap-sass を rails 3.2.17 と一緒に使いました。</p>

<pre><code class="ruby Gemfile">gem 'less-rails'
gem 'twitter-bootstrap-rails'
</code></pre>

<p>を <a href="https://github.com/twbs/bootstrap-sass">https://github.com/twbs/bootstrap-sass</a> に書いてあるバージョン指定付きで</p>

<pre><code class="ruby Gemfile">gem 'sass-rails', '&gt;= 3.2'
gem 'bootstrap-sass', '~&gt; 3.1.1'
</code></pre>

<p>に書き換えて、 <code>bundle update</code> で反映しました。</p>

<h2>twitter-bootstrap-rails のヘルパーメソッド削除</h2>

<p>twitter-bootstrap-rails で定義されているヘルパーメソッドを使っていたら、
削除するなり代替メソッドを定義して置き換えるなり、
一時的にコメントアウトするなりしてエラーにならないようにしておきます。</p>

<p>今回は <code>glyph</code> と <code>add_breadcrumb</code> がひっかかりました。</p>

<h2>bootstrap_and_overrides.css.less 削除</h2>

<p>app/assets/stylesheets/bootstrap_and_overrides.css.less を削除して、
app/assets/stylesheets/app.css.scss のようなファイルに移行しました。</p>

<pre><code class="css app.css.scss">@import "bootstrap";

// その他の bootstrap_and_overrides.css.less から移行した内容
</code></pre>

<h2>キャッシュ削除</h2>

<p>less を消したはずなのにエラーにならなくておかしいと思っていたら、
キャッシュの影響だったので、
development 環境でもキャッシュを有効にしている場合は削除します。</p>

<p><code>bundle exec rake tmp:clear</code> で消したり、
<code>rake</code> 経由だと遅いと思ったら
<code>rm -rf tmp/cache</code> のようにばっさり削除したりすると良いと思います。</p>

<h2>.navbar</h2>

<p>bootstrap 2 を使っていた頃は
<code>.navbar</code> と <code>.nav</code> の違いがよくわかっていなかったのですが、
<code>.navbar</code> は上 (または下) のバーのことで、
<code>.nav</code> はその中にある <code>ul</code> のリンクのことでした。</p>

<p><code>.nav</code> は他にも <code>.nav-tabs</code> のような使い方もするというのを先に知っていれば
迷わなかったと思います。</p>

<p><a href="http://getbootstrap.com/components/#nav">http://getbootstrap.com/components/#nav</a>
(古い方: <a href="http://getbootstrap.com/2.3.2/components.html#navs">http://getbootstrap.com/2.3.2/components.html#navs</a> )
の説明では navbar の上なのですが、
サイトの作成順として画面の上から作っていっていたので、
迷ってしまっていたようです。</p>

<p><code>.navbar</code> の中の <code>.nav</code> は <code>.navbar-nav</code> に変わっている、
<code>.navbar-inner</code> は <code>.container</code> か <code>.container-fluid</code> に置き換えなど、
変更点が多いので、
<code>.navbar</code> の中身は全面的に見直すのが良さそうです。</p>

<h2>.brand から .navbar-brand</h2>

<p><code>.brand</code> から <code>.navbar-brand</code> に変わっていました。</p>

<p>中に画像を入れているとずれてしまうので、
scss に以下のように書いて調整しました。</p>

<pre><code class="css">.navbar-brand {
  padding-top: 8px;
  img {
    height: 34px;
    width: 34px;
  }
}
</code></pre>

<p>8 + 34 + 8 ということで高さ 50px の <code>.navbar</code> の真ん中になることを期待しています。</p>

<h2>.container (固定幅) か .container-fluid (横幅いっぱい)</h2>

<p>grid system の配置を使うなら <code>.row</code> は <code>.container</code> か <code>.container-fluid</code> の中に置く必要があります。</p>

<p>違いは実際に window の横幅を変えてみればわかるのですが、
<code>.container</code> だと
<a href="http://getbootstrap.com/css/#grid">http://getbootstrap.com/css/#grid</a>
のように 768px 992px 1200px のところで急に配置が変わって、
その間は左右の余白が増減するだけのようです。</p>

<p><code>.container-fluid</code> だと普通のサイトと同じように出来るだけ横幅いっぱいになるように中身の横幅が変わります。</p>

<p>bootstrap 2 ではレスポンシブにしたいときは <code>.container-fluid</code> で固定幅の時は <code>.container</code> だったので、
<code>.container-fluid</code> しか使っていなかったのですが、
今はレスポンシブな中で使い分けが出来るようになっているようです。</p>

<p><a href="http://getbootstrap.com/examples/navbar-fixed-top/">http://getbootstrap.com/examples/navbar-fixed-top/</a>
の例で <code>Project name</code> が左端によっていないのも <code>.container</code> を使っているからです。
ブラウザーのデベロッパーツールで <code>.container-fluid</code> に変えて横幅を変えてみれば
違いがわかると思います。</p>

<h2><code>.row-fluid .span*</code> から <code>.row .col-xs-*</code></h2>

<p><code>.row</code> と <code>.row-fluid</code> の区別はなくなって、
<code>.row</code> に統一されています。</p>

<p><code>.span*</code> の置き換えは <code>.col-md-*</code> と説明されていることが多いようですが、
<code>.col-md-</code> が <code>@media (min-width: 992px)</code> になっているなど、
小さい画面サイズ用のスタイルを大きい画面用のスタイルで上書きするようになっているので、
画面サイズに関わらず同じ分割をしたいのなら <code>.col-xs-</code> だけ指定すれば良さそうです。</p>

<h2>btn</h2>

<p><code>btn</code> だけでは色や枠 (border) が変わらなくなったので、
<code>btn-default</code> を足す必要がありました。</p>

<p>サイズ変更の <code>btn-mini</code> などがなくなって <code>btn-xs</code> などに変更する必要がありました。</p>

<h2>list-unstyled</h2>

<p><code>ul.unstyled</code> は <code>ul.list-unstyled</code> に変更する必要がありました。</p>

<h2>font-awesome-sass</h2>

<p>アイコンは glyphicons ではなく font-awesome を使っていたので、
<a href="https://github.com/FortAwesome/font-awesome-sass">font-awesome-sass</a>
に乗り換えました。</p>

<p>mixin や variables などがなければ関係なさそうですが、
<a href="https://github.com/twbs/bootstrap-sass#usage">bootstrap-sass の Usage</a>
では <code>//= require</code> より <code>@import</code> が推奨されていたので、</p>

<pre><code class="css">@import "bootstrap";
@import "font-awesome";
</code></pre>

<p>のように <code>@import</code> にしてみました。</p>

<p><code>&lt;i class="icon-sort"&gt;&lt;/i&gt;</code> が
<code>&lt;i class="fa fa-sort"&gt;&lt;/i&gt;</code> に変わるような感じで、
<code>icon-</code> を <code>fa-</code> に置き換えるだけではなく、
<code>fa</code> の追加が必要でした。</p>

<p><code>glyph</code> ヘルパーメソッドを使っていた場合は、
<code>icon</code> ヘルパーメソッドに書き換えると良いのですが、
複数引数の扱いが違うのと、
<code>_</code> を <code>-</code> に置き換える処理がなくなっているのに注意が必要です。</p>

<p>たとえば <code>glyph(:sort_up)</code> は <code>icon('sort-up')</code> のように書き換えました。</p>

<p><code>glyph(:lock, :white)</code> のような複数指定には対応していないようなので、</p>

<pre><code class="haml">    = icon('spinner fa-spin'.freeze)
    -# or
    = icon(:spinner, nil, class: 'fa-spin')
</code></pre>

<p>のように 2 個目以降は無理矢理埋め込むしかなさそうです。</p>

<p>それぞれのヘルパーメソッドのソースは以下のようになっています。</p>

<ul>
<li><a href="https://github.com/seyhunak/twitter-bootstrap-rails/blob/40afc477f6a3813ef82cf5821602c9cf2422efc2/app/helpers/glyph_helper.rb">glyph</a></li>
<li><a href="https://github.com/FortAwesome/font-awesome-sass/blob/23ca05e75e85ec84afecca9f62e7f01d1fb9628b/lib/font_awesome/sass/rails/helpers.rb">icon</a></li>
</ul>


<p><code>icon</code> は第2引数に文字列を指定すると間にスペースを入れてくれるので、
今までは</p>

<pre><code class="css">i[class^="icon-"]:after {
  content: " "
}
</code></pre>

<p>のようにスタイルシートで空白を足していたのですが、</p>

<pre><code class="ruby">icon(:pencil, t('.edit', default: :'helpers.links.edit'))
</code></pre>

<p>のように使うのも良さそうです。</p>

<p>今回は書き換えの手間を減らすため、以下のように今までと同じようにスタイルシートで空白を入れるようにしました。
何のスタイルが影響しているのか調べていないのですが、半角スペースだとうまくいかなかったので、 NBSP を直接埋め込みました。</p>

<pre><code class="css">i.fa:after {
  content: " "; // nbsp
}
</code></pre>

<p>いくつかのアイコンの名前は変更が必要でした。
使っていて影響があったのは以下のアイコンでした。</p>

<ul>
<li>変更前 変更後</li>
<li>comment-alt comment-o</li>
<li>folder_close folder</li>
<li>picture picture-o</li>
<li>remove times</li>
<li>signin sign-in</li>
<li>signout sign-out</li>
<li>star-empty star-o</li>
<li>trash trash-o</li>
</ul>


<h2>pagination</h2>

<p>kaminari を使っているので、
<code>app/views/kaminari/_paginator.html.*</code>
の
<code>nav.pagination ul</code>
という構造になっている部分を
<code>ul.pagination</code>
に書き換えるだけでした。</p>

<h2>label</h2>

<p><code>btn</code> と同様に <code>label</code> 単独ではなく <code>label-default</code> と組み合わせるようになりました。</p>

<p>選択されているものに <code>label-inverse</code> を使っていたのになくなってしまったので、
<code>label-primary</code> に変えました。</p>

<p>意味的には <code>.nav</code> に変えた方が良さそうなので、
一通り一時的な対処をした後にちゃんと変更しようと思っています。</p>

<h2>muted</h2>

<p><code>.muted</code> は <code>.text-muted</code> に変更しました。</p>

<h2>参考サイト: Bootstrap3移行ガイド</h2>

<p>基本的に本家のドキュメントを参照していたのですが、
ここまで変更してから 2 から 3 への移行のドキュメントを探して、
<a href="http://bootstrap.s1.adexd.net/">Bootstrap3移行ガイド</a>
をみつけて見てみたのですが、全体としては非常に参考になるのですが、
所々気になる点がありました。
連絡先が見つけられなかったので、ここにメモしておきます。</p>

<p><a href="http://bootstrap.s1.adexd.net/css.php#grid">グリッドシステム（Grid system）</a>
の【Bootstrap2.xとの変更箇所】の説明で <code>.row</code> と使い分けると書いているのは
間違いだと思います。</p>

<p>スクリーンリーダー用のクラスを
<a href="http://bootstrap.s1.adexd.net/css.php#screen-reader">すべての要素の表示を隠す</a>
と説明しているなど、たまに間違いがあるようです。</p>

<h2>現状まとめ</h2>

<p>layouts といくつかのコントローラーに対応する views を変更すれば
ある程度自分のアプリで使っているものは網羅できるので、
そこからは移行に必要な変更点はわかってきて速くなっていく感じでした。</p>

<p>先日書いた haml から slim への移行も同時にやっていて、
views 全体を見直す良い機会になっています。</p>

<p>一部で jquery-ui を使っていて、
機能的には問題ないのですが、
見た目が bootstrap 3 となじまないので、
後で対処が必要そうでした。</p>
]]></content>
  </entry>
  
</feed>
