<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: community | @znz blog]]></title>
  <link href="http://blog.n-z.jp/blog/categories/community/atom.xml" rel="self"/>
  <link href="http://blog.n-z.jp/"/>
  <updated>2013-11-23T19:17:05+09:00</updated>
  <id>http://blog.n-z.jp/</id>
  <author>
    <name><![CDATA[Kazuhiro NISHIYAMA]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[www.ruby-lang.org への pull request の出し方]]></title>
    <link href="http://blog.n-z.jp/blog/2013-09-30-how-to-pull-request.html"/>
    <updated>2013-09-30T22:43:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/how-to-pull-request</id>
    <content type="html"><![CDATA[<p><a href="https://www.ruby-lang.org/en/news/2013/09/23/ruby-2-1-0-preview1-is-released/">Ruby 2.1.0-preview1 is released</a>
というアナウンスが一週間経ってもまだ日本語訳が出来ていなかったので、
ちょっとの暇を見つけて pull request を出してみたので、
その手順をまとめておきます。</p>

<!--more-->


<p>まず github のアカウントは持っているというのは前提として話を進めます。</p>

<p>初回は
<a href="https://github.com/ruby/www.ruby-lang.org">https://github.com/ruby/www.ruby-lang.org</a>
の右上から自分のアカウントに Fork します。</p>

<p>すでに Fork していて二回目以降は upstream の変更を merge する必要があります。
<a href="https://help.github.com/articles/syncing-a-fork">Syncing a fork</a>
を参考にして merge します。</p>

<p>実行したコマンドだけまとめておきます。
詳細は github のヘルプを参照してください。</p>

<p><code>console
% git clone git@github.com:znz/www.ruby-lang.org.git
% cd www.ruby-lang.org
% git remote add upstream https://github.com/ruby/www.ruby-lang.org.git
% git remote -v
% git fetch upstream
% git branch -va
% git checkout master
% git merge upstream/master
% git push
</code></p>

<p>英語版を元にして日本語版を作成します。</p>

<p><code>console
% cp {en,ja}/news/_posts/2013-09-23-ruby-2-1-0-preview1-is-released.md
% git add ja/news/_posts/2013-09-23-ruby-2-1-0-preview1-is-released.md
% vi ja/news/_posts/2013-09-23-ruby-2-1-0-preview1-is-released.md
</code></p>

<p>プレビュー用に <code>bundle install</code> します。</p>

<p><code>console
% bundle install
% rake -T
% rake preview
</code></p>

<p><code>rake preview</code>
でサーバーが起動しているので、
ブラウザで
<code>http://localhost:4000/</code>
を開いて表示を確認します。</p>

<p>github に push して、
ブラウザから pull request を出します。</p>

<p>ブランチを切り忘れていたので、
ここで作りました。</p>

<p><code>console
% git checkout -b ruby210preview1
% git commit -av
% git push --set-upstream origin ruby210preview1
</code></p>

<p>最後に
<code>git checkout master</code>
で master ブランチに戻るなり、
消してしまって、
また作業する時に clone し直すなりします。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntuでの対応が悪いと感じた話]]></title>
    <link href="http://blog.n-z.jp/blog/2013-09-20-ubuntu-bugs-related-me.html"/>
    <updated>2013-09-20T19:43:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/ubuntu-bugs-related-me</id>
    <content type="html"><![CDATA[<p>このエントリは愚痴が含まれます。
そういうのが嫌な人は読まない方が良いですよ。
警告しましたからね。</p>

<!--more-->


<p>結論としては、こういういろいろなことが積み重なって、
最近は ubuntu にはあまり積極的には貢献をしないようになった
という話です。</p>

<p>コミュニティ運営のアンチパターンの例として使えるのかもしれません。</p>

<p>最初の4項目は Ubuntu の Launchpad での話で、
後の2項目は ubuntu-jp での話です。</p>

<p>もちろん、対応が悪かったものだけ集めているので、
他の多数のバグの対応は良かったことが多いです。
全体的に Ubuntu のバグ対応は
Debian に比べると遅いという気はしますが。</p>

<h2>最近の例 (bind9)</h2>

<p>最初は Ubuntu 12.04 LTS の <code>bind9</code> の
<code>/etc/bind/db.root</code> が更新されない話です。</p>

<p>どういう話かというと
D-ROOT-SERVERS.NET に IPv6 アドレスが追加されて、
その後 IPv4 アドレスの変更があったのに <code>db.root</code> が
更新されないという話です。</p>

<p>ちょっと探して見つかっただけでも4個見つかります。
4個目のは3個目の重複という印がついてます。</p>

<ul>
<li><a href="https://launchpad.net/ubuntu/+source/bind9/+bug/1023600">db.root file outdated</a></li>
<li><a href="https://bugs.launchpad.net/ubuntu/+source/bind9/+bug/1160464">Bind db.root outdated, backport only the db.root file, for LTS important to keep db.root updated</a></li>
<li><a href="https://bugs.launchpad.net/ubuntu/+source/bind9/+bug/1090593">D.ROOT-SERVERS.NET changing January 3rd 2013</a></li>
<li><a href="https://bugs.launchpad.net/ubuntu/+source/bind9/+bug/1097050">d-root ipv4 has changed. Update db.root to show this</a></li>
</ul>


<p>IPv6 アドレスが追加された時点では重要ではないということで、
次の更新があれば一緒に更新するという反応だったようですが、
2013年1月3日に IPv4 アドレスが変更されて、
その後、移行期間として6ヶ月あったのですが、
それが終わった後も更新されないままです。</p>

<p>事前に見つけていた上2個のbugは移行期間中につつてみたりしたのですが、
全く反応がありませんでした。</p>

<p>そして未だに更新されていません。
これはひどいと思います。</p>

<h2>quick-fix?</h2>

<p><a href="https://bugs.launchpad.net/ubuntu-website-content/+bug/619920">Version mismatch of link in Code of Conduct</a>
で CoC の説明のバージョンが間違っていると指摘した時の話です。</p>

<p>一度 Confirmed になったのに Invalid になったというのが
嫌な印象を受けました。</p>

<h2>dbskkd-cdb を rebuild するだけの簡単なお仕事</h2>

<p><a href="https://bugs.launchpad.net/ubuntu/+source/dbskkd-cdb/+bug/58355">wrong reply via netkit-inetd</a>
で dbskkd-cdb を rebuild するだけで直るという報告をしたつもりだったのですが、
今見直してみると、こちらの反応がなかったのが悪かったようにも見えました。
追加情報を求められた時にはもう使ってなかったとはいえ、ちょっと反省。</p>

<h2>気付くのが遅すぎた</h2>

<p><a href="https://bugs.launchpad.net/ubuntu/+source/inspircd/+bug/978206">FreezeException request&mdash; Sync with Debian unstable</a>
で inspircd が古すぎて upstream の
セキュリティアップデートも出ないようなバージョンなので、
まずいんじゃないかと伝えてみたつもりだったんですが、
結局古いまま入ってしまいました。</p>

<p>古いまま入るぐらいなら消せば良かったのに、と思いましたが、
英語で書けなかった
(そもそも最初の説明も書けなかったのでリンクですませた)
ので、
自分で使うのは inspircd を止めて ngircd に乗り換えました。</p>

<h2>何もやってない (ように見える) 話</h2>

<p>「#ubuntu-jp IRCミーティングの議事録」というのが
ubuntu-jp の ML に流れるのですが、
アクションアイテムの冒頭が毎回同じで、
そこだけみると
(というかいつも最初の数行しかみてないのですが)
いつも何もしていないように見えるので、
順番を変えた方が良いんじゃないか、
というようなことを IRC とかで言ってみたことが
あるのですが、何も変わりませんでした。</p>

<h2>査読とは?</h2>

<p>アクションアイテムをもうちょっと下まで見た時に
<code>* [ ] 誰か査読して！</code>
と書いてあったので、
読んでみて返信してみたのですが、
次の週もそのままだったので、
あれは査読に含まれないのかと思ってがっかりしました。</p>
]]></content>
  </entry>
  
</feed>
