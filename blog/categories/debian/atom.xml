<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: debian | @znz blog]]></title>
  <link href="http://blog.n-z.jp/blog/categories/debian/atom.xml" rel="self"/>
  <link href="http://blog.n-z.jp/"/>
  <updated>2016-04-02T10:40:34+09:00</updated>
  <id>http://blog.n-z.jp/</id>
  <author>
    <name><![CDATA[Kazuhiro NISHIYAMA]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[jessie で inspircd を設定した]]></title>
    <link href="http://blog.n-z.jp/blog/2016-03-29-inspircd.html"/>
    <updated>2016-03-29T21:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/inspircd</id>
    <content type="html"><![CDATA[<p><a href="/blog/2016-03-22-wheezy-to-jessie.html">先日 wheezy から jessie にあげた</a>マシンでサーバー管理にも使っている ircd として inspircd の設定をしたので、そのメモです。</p>

<!--more-->


<h2>確認バージョン</h2>

<ul>
<li>Debian GNU/Linux 8.3 (jessie)</li>
<li>inspircd 2.0.17-1+deb8u1</li>
</ul>


<h2>インストールと起動確認</h2>

<p><code>sudo aptitude install inspircd</code> でインストールしました。</p>

<p>systemd 管理になって <code>/etc/default/inspircd</code> の <code>INSPIRCD_ENABLED=0</code> に関係なく起動するようになっていました。</p>

<pre><code>% systemctl status inspircd
● inspircd.service - IRC server
   Loaded: loaded (/lib/systemd/system/inspircd.service; enabled)
   Active: active (running) since 火 2016-03-29 17:37:37 JST; 3min 34s ago
 Main PID: 11613 (inspircd)
   CGroup: /system.slice/inspircd.service
           └─11613 /usr/sbin/inspircd --logfile /var/log/inspircd.log --config /etc/inspircd/insp...

 3月 29 17:37:37 ns8 inspircd[11613]: Inspire Internet Relay Chat Server, compiled on Mar 23...1:24
 3月 29 17:37:37 ns8 inspircd[11613]: (C) InspIRCd Development Team.
 3月 29 17:37:37 ns8 inspircd[11613]: Developers:
 3月 29 17:37:37 ns8 inspircd[11613]:         Brain, FrostyCoolSlug, w00t, Om, Special, peavey
 3月 29 17:37:37 ns8 inspircd[11613]: aquanight, psychon, dz, danieldg, jackmcbarn
 3月 29 17:37:37 ns8 inspircd[11613]: Attila
 3月 29 17:37:37 ns8 inspircd[11613]: Others:                        See /INFO Output
 3月 29 17:37:37 ns8 inspircd[11613]: Loading core commands........................................
 3月 29 17:37:37 ns8 inspircd[11613]: InspIRCd is now running as 'irc.local'[811] with 1024 ...kets
Hint: Some lines were ellipsized, use -l to show in full.
</code></pre>

<p><code>systemd-journal</code> グループに所属しているので、ログも出ています。</p>

<h2>設定変更</h2>

<p><code>sudoedit /etc/inspircd/inspircd.conf</code> で設定変更して、 <code>sudo service inspircd reload</code> で反映しました。</p>

<pre><code>&lt;server name="irc.example.org"
        description="Example.org IRC Server"
        network="example.org"&gt;

&lt;admin name="Kazuhiro Nishiyama"
       nick="znz"
       email="zn@mbf.nifty.com"&gt;
</code></pre>

<p>に変更しました。</p>

<p>NAT の中のサーバー群からも接続するので connect の localmax と globalmax を 3 から 9 に変更しました。</p>

<h3>tls 設定</h3>

<p>推奨設定の gnutls を使って設定をしました。
証明書は <a href="https://www.startssl.com/">https://www.startssl.com/</a> で無料で発行してもらったものを使いました。</p>

<pre><code>&lt;bind address="" port="6697" ssl="gnutls"&gt;
&lt;module name="m_ssl_gnutls.so"&gt;
&lt;gnutls cafile="" crlfile="" certfile="/etc/ssl/certs/irc.example.org.2016.crt" keyfile="/etc/ssl/private/irc.example.org.2016.key" dh_bits="1024"&gt;
</code></pre>

<h3>auto join 設定</h3>

<p>slack に似せて <code>#general</code> と <code>#random</code> に自動で join するように</p>

<pre><code>&lt;module name="m_conn_join.so"&gt;
&lt;autojoin channel="#general,#random"&gt;
</code></pre>

<p>を追加しました。</p>

<h3>server password 設定</h3>

<p>connect タグに password 属性を追加しました。</p>

<h3>permchannels 設定</h3>

<p><code>#general</code> と <code>#random</code> はトピックを自動設定、 <code>#servers</code> についてはパスワードを設定するために permchannels 設定を使いました。</p>

<pre><code>&lt;module name="m_permchannels.so"&gt;
&lt;permchannels channel="#general" modes="n" topic="General Talk"&gt;
&lt;permchannels channel="#random" modes="n" topic="Random Talk"&gt;
&lt;permchannels channel="#servers" modes="stnk PASSWORD" topic="Servers Status"&gt;
</code></pre>

<p>を追加しました。</p>

<h2>ufw</h2>

<pre><code>sudo ufw allow 6697/tcp
</code></pre>

<p>で 6697 番ポートへの接続を許可しました。</p>

<h2>tls 関係ファイル設置</h2>

<p>inspircd は irc ユーザー権限で動くので、そのユーザーが読めるように秘密鍵を設置しました。
<code>/etc/ssl/private</code> ディレクトリを読めるようにするために <code>ssl-cert</code> グループへの追加も行いました。</p>

<pre><code>%  sudoedit /etc/ssl/irc.example.org.2016.csr
%  sudoedit /etc/ssl/certs/irc.example.org.2016.crt
%  sudoedit /etc/ssl/private/irc.example.org.2016.key
%  sudo chmod 640 /etc/ssl/private/irc.example.org.2016.key
%  sudo chgrp irc /etc/ssl/private/irc.example.org.2016.key
%  sudo adduser irc ssl-cert
ユーザ `irc' をグループ `ssl-cert' に追加しています...
ユーザ irc をグループ ssl-cert に追加
完了。
</code></pre>

<h2>DNS 設定</h2>

<p>今まで別のサーバーで動かしていたので、 DNS の A レコードを変更して、変更が反映されるのを待ち、新しいサーバーにクライアントが接続されるのを確認しました。</p>

<h2>まとめ</h2>

<p><code>systemd</code> になって <code>/etc/default/inspircd</code> がきかなくなるなど、 Debian 的にまだ過渡期な部分があるようですが、 inspircd としては問題なく動かすことができました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第 108 回 関西 Debian 勉強会に参加しました]]></title>
    <link href="http://blog.n-z.jp/blog/2016-03-27-kansai-debian-meeting.html"/>
    <updated>2016-03-27T14:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/kansai-debian-meeting</id>
    <content type="html"><![CDATA[<p><a href="https://wiki.debian.org/KansaiDebianMeeting/20160327" title="第 108 回 関西 Debian 勉強会">第 108 回 関西 Debian 勉強会</a>に参加しました。</p>

<!--more-->


<p>以下メモです。</p>

<h2>オープニングなど</h2>

<ul>
<li><a href="https://twitter.com/search?q=%23kansaidebian&amp;src=typd">ハッシュタグは #kansaidebian</a></li>
<li><a href="https://wiki.debian.org/KansaiDebianMeeting/20160228">前回</a> の事前配布資料がまだアップロードされていなかった。</li>
<li><a href="http://mozilla.debian.net/">http://mozilla.debian.net/</a> から jessie にも firefox がインストールできる。</li>
<li><a href="http://abi-laboratory.pro/tracker/">Application Binary Interface (ABI) Tracker</a></li>
<li>その他の話題</li>
<li><a href="http://badlock.org/" title="Badlock Bug">Badlock Bug</a></li>
<li><a href="http://security.srad.jp/story/16/03/25/2045223/" title="WindowsおよびSambaの重大なバグ「Badlock」、4月12日のパッチリリースが告知される">WindowsおよびSambaの重大なバグ「Badlock」、4月12日のパッチリリースが告知される</a></li>
<li>Wheezy LTS</li>
<li><a href="https://debian-handbook.info/browse/ja-JP/stable/" title="Debian 管理者ハンドブック">Debian 管理者ハンドブック</a> のペーパーバック版が発売されているという話</li>
<li>jessie で tdiary が消えた理由などを聞いた。</li>
<li><a href="https://packages.qa.debian.org/t/tdiary/news/20140624T163916Z.html" title="tdiary REMOVED from testing">tdiary REMOVED from testing</a> にあるように ruby-imagesize が壊れたのが原因で upstream で ruby-fastimage に依存が変わっていたので、新規パッケージで入れて tdiary の更新をしようとしたら freeze されて jessie に入らなかったという感じの話だった。</li>
<li>doorkeeper の申し込みで事前課題の入力必須だったのがわかりにくいという話</li>
<li>doorkeeper で管理者側でアンケート結果の一覧が表示できないので不便という話</li>
<li>doorkeeper の方は事前課題として「systemd で起動する Jessie 環境を御用意下さい．幾つか設定を変更することがありますので，VM 環境の方が無難かもしれません．」というのが出ていたのに debian wiki の方には書いていなかった話</li>
</ul>


<h2>休憩</h2>

<ul>
<li>tdiary で org-mode</li>
</ul>


<h2>systemd に浸ってみた</h2>

<ul>
<li><code>systemctl</code></li>
<li><code>systemctl status</code></li>
<li><code>systemd-analyze</code></li>
<li><code>systemd-analyze blame</code></li>
<li><code>systemd-cgls</code></li>
<li><code>timedatectl</code></li>
<li><code>systemctl status systemd-timesyncd</code></li>
<li><code>sudo timedatectl set-ntp true</code></li>
<li><code>systemctl status -l systemd-timesyncd</code></li>
<li><code>/etc/systemd/timesyncd.conf</code></li>
<li><code>timesyncd.conf(5)</code> の man がない (jessie だと)</li>
<li>sid だと設定が変わっているが jessie と同じ設定でも動いている</li>
<li><code>/usr/lib/systemd/ntp-units.d/</code></li>
<li><code>/usr/share/doc/systemd/changelog.Debian.gz</code> に <code>* Run timesyncd in virtual machines. (Closes: #762343)</code> という行があって仮想環境では upstream の timesyncd は動かないようになっている</li>
<li><code>dmesg</code> と <code>dmesg -T</code></li>
<li><a href="https://0xstubs.org/systemd-timesyncd-and-leap-seconds/" title="How systemd-timesyncd handles leap seconds">How systemd-timesyncd handles leap seconds</a></li>
<li><code>systemctl status systemd-resolved</code></li>
<li>使うには有効にした後、 <code>/etc/nsswitch.conf</code> の <code>dns</code> を <code>resolve</code> に変更、または <code>/run/systemd/resolve/resolv.conf</code> を <code>/etc/resolv.conf</code> にシンボリックリンク</li>
<li><code>/etc/systemd/resolved.conf</code> に設定</li>
<li><code>systemctl status systemd-networkd</code></li>
<li><code>/etc/systemd/network/</code> 以下で設定</li>
<li>debian では udev に設定が入っていて eth0 とかになる</li>
<li><code>systemd.network(5)</code> の man を見る</li>
<li><code>Driver=</code> が有効になるのは systemd 216 で jessie では使えない</li>
<li><code>[DHCP]</code> セクションに <code>UseDNS=</code> という設定がある</li>
<li><code>systemd.link(5)</code> や <code>systemd.netdev(5)</code> も参照</li>
<li><code>ConditionHost=</code> などを使えば単一の設定ファイルを複数ホストで共有できる</li>
<li>無線を使う場合には向かない</li>
<li>NetworkManager とは排他</li>
<li><code>sudo apt-get install systemd-cron</code></li>
<li>cron, anacron とは conflict していて入れ替わる</li>
<li><code>systemctl list-unit-files | grep cron</code></li>
<li><code>cat /lib/systemd/system/cron-hourly.timer</code></li>
<li><code>crontab -e</code> は動かなくなる</li>
<li><code>~/.config/systemd/user/</code> 以下にユーザーごとの設定を置ける</li>
<li><code>systemctl --user list-unit-files</code></li>
<li>GNOME や KDE だと systemd を使うしかなさそう</li>
<li>Xfce だと systemd はハイバネーションで失敗するのでやめた方が良い</li>
<li>systemd の情報を見る時はバージョン番号を確認しましょう</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[さくらの VPS の Debian wheezy を jessie にあげた]]></title>
    <link href="http://blog.n-z.jp/blog/2016-03-22-wheezy-to-jessie.html"/>
    <updated>2016-03-22T12:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/wheezy-to-jessie</id>
    <content type="html"><![CDATA[<p>Debian 6 &ldquo;Squeeze&rdquo; の <a href="https://wiki.debian.org/LTS/Using">LTS</a> が終わって Debian 7 &ldquo;Wheezy&rdquo; もそろそろ Debian 8 &ldquo;Jessie&rdquo; にあげた方が良さそうな気がしてきたので、
<a href="http://vps.sakura.ad.jp/">さくらの VPS</a> で使っている Debian 環境を Debian 7.9 から Debian 8.3 にあげてみました。</p>

<!--more-->


<h2>事前準備</h2>

<p><a href="https://www.debian.org/releases/jessie/amd64/release-notes/ch-upgrading.ja.html" title="第4章 Debian 7 (wheezy) からのアップグレード">第4章 Debian 7 (wheezy) からのアップグレード</a> などを読んで事前に注意点を確認しておきました。</p>

<h3>古いパッケージの削除</h3>

<p>Squeeze から残っているパッケージを確認するため</p>

<pre><code>aptitude search '~i!~Odebian'
</code></pre>

<p>で現在インストールできないパッケージを調べました。</p>

<p><code>pg_upgradecluster</code> コマンドで移行したのに残したままだった postgresql-8.4 と postgresql-client-8.4 を purge しました。</p>

<h3>scponly</h3>

<p>scponly を設定しているユーザーがいたのですが、 wheezy で既にパッケージがなくなっていたことに気づいたので、
「scponly wheezy」で検索して出てきた
<a href="http://chxor.chxo.com/post/74647790171/how-to-restrict-linux-users-to-only-sftp-without">http://chxor.chxo.com/post/74647790171/how-to-restrict-linux-users-to-only-sftp-without</a>
を参考にして設定を移行しました。</p>

<p>まず <code>/home/hoge/</code> 以下の bin dev etc usr を削除しました。</p>

<p>次に <code>sftponly</code> グループを追加して、そのグループに該当ユーザーを追加しました。</p>

<pre><code>% sudo usermod -a -G sftponly hoge
usermod: グループ 'sftponly' は存在しません
zsh: exit 6     sudo usermod -a -G sftponly hoge
% sudo addgroup sftponly
グループ `sftponly' (グループ ID 1001) を追加しています...
完了。
% sudo usermod -a -G sftponly hoge
</code></pre>

<p><code>/etc/ssh/sshd_config</code> の設定を変更しました。
関連するところだけ抜き出すと以下のような変更をしました。</p>

<pre><code>-Subsystem sftp /usr/lib/openssh/sftp-server
+#Subsystem sftp /usr/lib/openssh/sftp-server
+Subsystem sftp internal-sftp

+# sftponly users, chrooted
+Match group sftponly
+ChrootDirectory /home/%u
+AllowTcpForwarding no
+X11Forwarding no
+ForceCommand internal-sftp
</code></pre>

<p><code>sudo service sshd restart</code> で設定を反映して、 sftp コマンドで接続して put や rm ができるのを確認しました。</p>

<h3>その他古いパッケージの削除</h3>

<p><code>sudo aptitude purge '~i!~Odebian'</code> で古いパッケージを削除しました。</p>

<pre><code>%  sudo aptitude purge '~i!~Odebian'
以下のパッケージが削除されます:
  doc-linux-text{p} libbind9-60{p} libboost-iostreams1.42.0{p} libdb4.6{p} libdb4.7{p}
  libdb4.8{p} libdns69{p} libevent-1.4-2{p} libisc62{p} libisccc60{p} libisccfg62{p}
  libkadm5clnt-mit7{p} libkadm5srv-mit7{p} libkdb5-4{p} liblwres60{p} liblzma2{p}
  libssl0.9.8{p} libtokyocabinet8{p}
更新: 0 個、新規インストール: 0 個、削除: 18 個、保留: 0 個。
0  バイトのアーカイブを取得する必要があります。展開後に 20.4 M バイトのディスク領域が解放されます。
先に進みますか? [Y/n/?]
</code></pre>

<p><code>/etc/init.d</code> に余計なファイルが残っていると問題がおきるかもしれないので <code>sudo aptitude purge '~c'</code> で設定だけ残っているパッケージも purge しておきました。</p>

<pre><code>%  sudo aptitude purge '~c'
[sudo] password for adminuser:
以下のパッケージが削除されます:
  defoma{p} libept1{p} libexiv2-9{p} libgmp3c2{p} libgs8{p} libgsf-1-114{p} libgtk2.0-0{p}
  libgtk2.0-common{p} libmagickcore3{p} libmagickwand3{p} libmysqlclient16{p} libnl1{p}
  libopenipmi0{p} libpango1.0-common{p} libprotobuf6{p} libserf-0-0{p} libxcb-render-util0{p}
  libxcomposite1{p} libxcursor1{p} libxdamage1{p} libxfixes3{p} libxi6{p} libxinerama1{p}
  libxrandr2{p} mysql-server-5.1{p} odbcinst{p} odbcinst1debian2{p} php5-suhosin{p}
  update-inetd{p} x-ttcidfont-conf{p}
更新: 0 個、新規インストール: 0 個、削除: 30 個、保留: 0 個。
0  バイトのアーカイブを取得する必要があります。展開後に 0  バイトのディスク領域が新たに消費されます
。
先に進みますか? [Y/n/?]
</code></pre>

<h3>sudo find /etc -name &lsquo;<em>.dpkg-</em>&rsquo;</h3>

<p>移行時の設定マージ作業が途中で残っていたファイルがあったので、 <code>sudo find /etc -name '*.dpkg-*'</code> で探して必要に応じて設定をマージして <code>*.dpkg-old</code> や <code>*.dpkg-dist</code> は削除しておきました。</p>

<h3>プロセス一覧の確認</h3>

<p>pstree などでプロセス一覧をみて、アップグレード時に問題が起きそうなコマンドに目星をつけておきました。
一番の大物は apache 2.2 系から apache 2.4 系だと思いました。
slapd は 2.4.31-2+deb7u1 から 2.4.40+dfsg-1+deb8u2 でバージョン番号の変更も少なく互換性も高そうなので、問題はおきなさそうだと思いました。(実際大丈夫でした。)</p>

<h2>apt-line の変更</h2>

<p>コメントアウトされていない部分の wheezy を jessie に置き換えました。</p>

<pre><code>--- a/apt/sources.list
+++ b/apt/sources.list
@@ -4,18 +4,18 @@

 #deb cdrom:[Debian GNU/Linux 6.0.1a _Squeeze_ - Official amd64 NETINST Binary-1 20110320-15:00]/ wheezy main

-deb http://ftp.jp.debian.org/debian wheezy main non-free contrib
-deb-src http://ftp.jp.debian.org/debian wheezy main non-free contrib
+deb http://ftp.jp.debian.org/debian jessie main non-free contrib
+deb-src http://ftp.jp.debian.org/debian jessie main non-free contrib

-deb http://security.debian.org/ wheezy/updates main contrib non-free
-deb-src http://security.debian.org/ wheezy/updates main contrib non-free
+deb http://security.debian.org/ jessie/updates main contrib non-free
+deb-src http://security.debian.org/ jessie/updates main contrib non-free

 # wheezy-updates, previously known as 'volatile'
-deb http://ftp.jp.debian.org/debian wheezy-updates main contrib non-free
-deb-src http://ftp.jp.debian.org/debian wheezy-updates main contrib non-free
+deb http://ftp.jp.debian.org/debian jessie-updates main contrib non-free
+deb-src http://ftp.jp.debian.org/debian jessie-updates main contrib non-free

-deb http://ftp.jp.debian.org/debian wheezy-backports main contrib non-free
-deb-src http://ftp.jp.debian.org/debian wheezy-backports main contrib non-free
+deb http://ftp.jp.debian.org/debian jessie-backports main contrib non-free
+deb-src http://ftp.jp.debian.org/debian jessie-backports main contrib non-free

 #deb http://ftp.jp.debian.org/debian wheezy-lts main non-free contrib
 #deb-src http://ftp.jp.debian.org/debian wheezy-lts main non-free contrib
</code></pre>

<h2>upgrade, dist-upgrade</h2>

<p><a href="https://www.debian.org/releases/jessie/amd64/release-notes/ch-upgrading.ja.html#upgradingpackages" title="4.4. パッケージのアップグレード">4.4. パッケージのアップグレード</a> に以前は <code>aptitude</code> が推奨されていたこともあったが、今は <code>apt-get</code> がおすすめというようなことが書いてあったので、 <code>apt-get</code> で upgrade しました。</p>

<p>postgresql はまた /usr/share/doc/postgresql-common/README.Debian.gz をみて <code>pg_upgradecluster</code> が必要だと思いました。</p>

<p><code>Configuring libc6:amd64</code> のときに apache2 の restart に失敗しましたが、認証周りなどの設定の書き方が変わった影響だろうと思って、後で直せばいいということで気にせず進みました。</p>

<p>その他は特に問題なく dist-upgrade 自体は終わりました。</p>

<h2>apache2 の設定調整</h2>

<p><code>/etc/apache2/sites-available/*</code>, <code>/etc/apache2/sites-enabled/*</code> の <code>.conf</code> 化などは upgrade 前に作業しておけば停止時間が短くて済ませられたのに、と後から気付きました。</p>

<h3>認証・認可設定の変更</h3>

<p><code>/</code> はアクセス不可で <code>DocumentRoot</code> を個別にアクセス許可していたので、</p>

<pre><code>Order allow,deny
Allow from all
</code></pre>

<p>を</p>

<pre><code>Require all granted
</code></pre>

<p>に変更して回りました。</p>

<h3>mod_python</h3>

<p>apache の error.log を見ると</p>

<pre><code>The mod_python module can not be used on conjunction with mod_wsgi 4.0+. Remove the mod_python module from the Apache configuration.
</code></pre>

<p>というエラーが出ていたので、 <code>libapache2-mod-python</code> を purge したら apache2 が起動しました。
しかし後で <code>trac</code> で使っていたのに気付いたので、入れ直して代わりに <code>libapache2-mod-wsgi</code> の方を purge しました。</p>

<h3>.conf 化</h3>

<p>設定ファイルに <code>.conf</code> が必須化されていたので、 <code>site-available</code> のファイルを <code>hoge.example.com</code> から <code>hoge.example.com.conf</code> のようにに改名して <code>a2ensite</code> しなおしました。</p>

<p><code>conf.d</code> も available と enabled に仕組みが変わっていたので、
<code>/etc/apache2/conf.d/passenger.conf</code> も <code>conf-available</code> に移動して <code>a2enconf</code> しました。</p>

<h3>passenger-install-apache2-module</h3>

<p><code>sudo apache2ctl configtest</code> で起動しない原因を調べてみると、エラーメッセージを記録し忘れたのですが、<code>passenger</code> がリンクエラーで起動しないということになっていたので、 <code>passenger-install-apache2-module</code> を実行し直しました。</p>

<p>初回は開発用パッケージが足りないということで出てきたメッセージに従い <code>sudo apt-get install apache2-threaded-dev</code> でインストールして再実行して解決しました。 <code>apache2-dev</code> パッケージが入りました。</p>

<p>wheezy のときは <code>apache2-prefork-dev</code> パッケージを入れていたのですが、自動移行はされなかったようです。</p>

<h3>SSL 関連</h3>

<p><code>SSLCertificateChainFile</code> を指定していたところがあったので、 <code>SSLCertificateFile</code> に結合した証明書を指定するように移行しました。</p>

<h3>NameVirtualHost</h3>

<p><code>NameVirtualHost</code> を指定していたところを削除しました。</p>

<h2>trac</h2>

<p>trac のプロジェクトごとのページを開くと</p>

<pre><code>Error

TracError: The Trac Environment needs to be upgraded.

Run "trac-admin /srv/trac/fprog.org/testproject upgrade"
</code></pre>

<p>というメッセージが出ていたので、その通りに実行しました。</p>

<pre><code>% sudo trac-admin /srv/trac/fprog.org/testproject upgrade
Warning: Detected setuptools version 5.5.1. The environment variable 'PKG_RESOURCES_CACHE_ZIP_MANIFE
STS' must be set to avoid significant performance degradation.
アップグレードが終了しました。

次のコマンドを実行すると Trac のドキュメントをアップグレードできます:

  trac-admin /srv/trac/fprog.org/testproject wiki upgrade
</code></pre>

<p>wiki upgrade も促されたので、実行しました。</p>

<p>すると <a href="http://www.fprog.org/projects/testproject">http://www.fprog.org/projects/testproject</a> が</p>

<pre><code>設定エラー
None という名前の IRequestFilter インターフェイスの実装を見つけられません。コンポーネントが有効になっているかチェックするか、trac.ini の [trac] request_filters オプションを更新してください。
</code></pre>

<p>に変わったので、 <code>/srv/trac/fprog.org/testproject/conf/trac.ini</code> の</p>

<pre><code>request_filters = None
</code></pre>

<p>を</p>

<pre><code>request_filters =
</code></pre>

<p>に変更しました。
キーワードが一般的すぎて検索しきれなかったので、バグ報告などはしていません。</p>

<p><a href="http://www.fprog.org/projects">http://www.fprog.org/projects</a> の Available Projects を見て、他のプロジェクトも同様に upgrade と <code>request_filters</code> の修正をしました。</p>

<h2>nadoka さん</h2>

<p>iconv を使っていたところを kconv を使うように<a href="https://github.com/nadoka/nadoka/commit/328e01a5a2ae731ddc09f435dc4089eead3ba4ed">変更</a>しました。</p>

<h2>w3ml</h2>

<p>apache のエラーログに</p>

<pre><code>AH01215: ./w3ml:8:in `load'
AH01215: : /home/w3ml/etc/w3ml.conf:10: invalid multibyte char (UTF-8) (SyntaxError)
AH01215: /home/w3ml/etc/w3ml.conf:10: invalid multibyte char (UTF-8)
AH01215: \tfrom ./w3ml:8:in `&lt;main&gt;'
End of script output before headers: w3ml.cgi
</code></pre>

<p>と出ていたので、 <code>/home/w3ml/etc/w3ml.conf</code> の先頭に</p>

<pre><code># -*- coding: euc-jp -*-
</code></pre>

<p>を追加しました。
これで表示は問題なく見えるようになりましたが、メールの取り込みなどがちゃんと動くかどうかはまだ様子見です。</p>

<h2>tdiary</h2>

<p>ホスティングしている tdiary を確認してみると</p>

<pre><code>no such file to load -- redcarpet.so (LoadError)
/usr/lib/ruby/vendor_ruby/redcarpet.rb:1:in `require'
</code></pre>

<p>とうエラーが出ていて、 <code>dpkg -L ruby-redcarpet</code> を確認してみると <code>redcarpet.so</code> は 2.1 用しかなかったので、
wheezy にあげたときに <code>public_html/diary/index.rb</code> を <code>#!/usr/bin/ruby1.8</code> に変更していたのを
<code>#!/usr/bin/ruby</code> に変更しました。</p>

<p>すると次は <code>500 Internal Server Error</code> とだけ出るようになったので、 apache のエラーログを確認してみると</p>

<pre><code>AH01215: /usr/lib/ruby/2.1.0/cgi/util.rb:37:in `gsub': invalid byte sequence in UTF-8 (ArgumentError)
AH01215: \tfrom /usr/lib/ruby/2.1.0/cgi/util.rb:37:in `escapeHTML'
AH01215: \tfrom /usr/share/tdiary/index.rb:50:in `rescue in &lt;top (required)&gt;'
AH01215: \tfrom /usr/share/tdiary/index.rb:16:in `&lt;top (required)&gt;'
AH01215: \tfrom /usr/lib/ruby/2.1.0/rubygems/core_ext/kernel_require.rb:55:in `require'
AH01215: \tfrom /usr/lib/ruby/2.1.0/rubygems/core_ext/kernel_require.rb:55:in `require'
AH01215: \tfrom index.rb:2:in `&lt;main&gt;'
</code></pre>

<p>というエラーが出ていました。
そこで <code>/usr/share/tdiary/index.rb</code> を <code>coding: utf-8</code> から <code>coding: ascii-8bit</code> に変更したところ、
<code>public_html/diary/filter/antirefspam.rb:240: invalid multibyte char (UTF-8)</code> というエラーが確認できたので、
コメントが euc-jp で書かれていたのが確認できたので <code>antirefspam.rb</code> に <code>coding: euc-jp</code> を追加しました。
<code>public_html/diary/filter/default.rb</code> でも同様のエラーが出たので <code>coding: ascii-8bit</code> を追加したところ、
正常に表示できるようになりました。</p>

<p>最初の <code>500 Internal Server Error</code> については <a href="https://github.com/tdiary/tdiary-core/issues/555">tdiary-core に報告</a>したところ、<a href="https://github.com/tdiary/tdiary-core/commit/59557302e2dfd0cfa86b04b5d05e74dfe917900e">直った</a> ようです。</p>

<p>修正コミットでは update.rb も同様の修正がされていたので、 <code>/usr/share/tdiary/update.rb</code> も同様に <code>coding: ascii-8bit</code> にしておきました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RubyLive ISO イメージを更新した]]></title>
    <link href="http://blog.n-z.jp/blog/2015-10-26-rubylive-builder.html"/>
    <updated>2015-10-26T21:44:33+09:00</updated>
    <id>http://blog.n-z.jp/blog/rubylive-builder</id>
    <content type="html"><![CDATA[<p><a href="http://blog.n-z.jp/blog/2014-07-13-build-rubylive-on-vm.html" title="RubyLiveを仮想環境で作成">RubyLiveを仮想環境で作成</a>したものを更新しました。</p>

<!--more-->


<h2>動作確認環境</h2>

<ul>
<li>VirtualBox 5.0.6</li>
<li>Vagrant 1.7.4</li>
</ul>


<h2>ビルド環境の更新</h2>

<p><code>git clone https://github.com/znz/rubylive-builder</code> で取得していた <code>rubylive-builder</code> 環境の <code>Vagrantfile</code> の <code>config.vm.box</code> を <code>"ffuenf/debian-7.6.0-amd64"</code> から <code>"ffuenf/debian-8.2.0-amd64"</code> に<a href="https://github.com/znz/rubylive-builder/commit/289f2079dad86bde424aa810f0e6b28302607ccb">更新しました</a>。</p>

<h2>ビルド内容の更新</h2>

<h3>ruby のバージョンの更新</h3>

<p><code>config/hooks/10-ruby-rails.chroot</code> でインストールしている ruby を 2.1.4 から 2.2.3 に<a href="https://github.com/znz/rubylive/commit/475e077f9bdb066628415ad602fefdde2608c57e">更新しました</a>。</p>

<h3>壁紙の変更</h3>

<p>壁紙を RubyKaigi 2014 のロゴから関西 Ruby 会議 06 のロゴに<a href="https://github.com/znz/rubylive/commit/f7f4136a39fd1ac4da8121204b941b12eac3e65e">変更しました</a>。</p>

<p>変更しても <code>config/includes.chroot/usr/share/images/desktop-base/rubykaigi2014-mark.svg</code> にダウンロードしたファイルは残ったままで、そのまま ISO イメージを作成しなおすと古い画像も ISO イメージの中に入ってしまうので、手動で削除しておく必要があります。
(<code>rake distclean</code> でも消えません。)</p>

<p>試行錯誤した後には特に <code>config/includes.chroot</code> 以下に不要なファイルが残っていないか注意する必要があります。</p>

<h3>jessie への更新 (失敗)</h3>

<p>ビルド環境を jessie にあげても作成される ISO は wheezy のままだったので、以下の変更で jessie にしようとしたのですが、失敗したので結局 wheezy のままにしました。</p>

<p>変更点は以下の通りです。</p>

<pre><code>diff --git a/auto/config b/auto/config
index d44fc2d..3dc3665 100755
--- a/auto/config
+++ b/auto/config
@@ -2,6 +2,7 @@

 lb config noauto \
        --architectures "amd64" \
+       --distribution "jessie" \
        --bootloader "grub2" \
        --templates "templates" \
        --bootappend-live "quiet locales=ja_JP.UTF-8 timezone=Asia/Tokyo utc=no keyboard-layouts=jp
diff --git a/config/package-lists/30-japanese.list.chroot b/config/package-lists/30-japanese.list.ch
index 602270e..304d5f7 100644
--- a/config/package-lists/30-japanese.list.chroot
+++ b/config/package-lists/30-japanese.list.chroot
@@ -3,8 +3,8 @@ fbterm
 lv
 manpages-ja
 nkf
-ttf-mona
-ttf-monapo
+fonts-mona
+fonts-monapo
 fonts-ipafont-gothic
 fonts-ipafont-mincho
 fonts-vlgothic
diff --git a/config/package-lists/50-editors.list.chroot b/config/package-lists/50-editors.list.chro
index 8468dec..cb2197a 100644
--- a/config/package-lists/50-editors.list.chroot
+++ b/config/package-lists/50-editors.list.chroot
@@ -1,4 +1,4 @@
-emacs23
+emacs24
 vim
 vim-gtk
 gedit
</code></pre>

<p>失敗した部分は以下の通りです。</p>

<pre><code>[2015-10-26 13:27:55] lb chroot_live-packages
dpkg: dependency problems prevent removal of systemd:
 libpam-systemd:amd64 depends on systemd (= 215-17+deb8u2).

dpkg: error processing package systemd (--purge):
 dependency problems - not removing
dpkg: dependency problems prevent removal of systemd-sysv:
 init depends on systemd-sysv | sysvinit-core | upstart; however:
  Package systemd-sysv is to be removed.
  Package sysvinit-core is not installed.
  Package upstart is not installed.
 libpam-systemd:amd64 depends on systemd-shim (&gt;= 8-2) | systemd-sysv; however:
  Package systemd-shim is not installed.
  Package systemd-sysv is to be removed.

dpkg: error processing package systemd-sysv (--purge):
 dependency problems - not removing
Errors were encountered while processing:
 systemd
 systemd-sysv
P: Begin unmounting filesystems...
P: Saving caches...
Reading package lists...
Building dependency tree...
Reading state information...
rake aborted!
Command failed with status (1): [sudo lb build...]
</code></pre>

<h2>ISO のビルド</h2>

<p><code>vagrant up</code> して <code>vagrant ssh</code> で入った後、<code>/vagrant/rubylive.sh</code> で作成できます。
2 回目以降は <code>~/rubylive</code> で <code>time rake APT_HTTP_PROXY=http://localhost:3142</code> を直接実行しても良いと思います。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu 14.04 LTS に Zabbix 2.4 を PostgreSQL を使う設定で入れた]]></title>
    <link href="http://blog.n-z.jp/blog/2015-03-13-zabbix-24-pgsql.html"/>
    <updated>2015-03-13T21:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/zabbix-24-pgsql</id>
    <content type="html"><![CDATA[<p><a href="https://www.zabbix.com/documentation/2.4/manual/installation/install_from_packages" title="3 Installation from packages [Zabbix Documentation 2.4]">3 Installation from packages [Zabbix Documentation 2.4]</a>
だと MySQL の例しかなく、
PostgreSQL で入れるとちょっとひっかかったところがあったので、
そのメモです。</p>

<p>Debian や Ubuntu の公式パッケージの zabbix との違いも気づいた範囲で書いておきました。</p>

<!--more-->


<h2>zabbix-release のインストール</h2>

<p><code>zabbix-release</code> をインストールして apt-line を設定して
<code>apt-get update</code> するところまでは公式マニュアルと同じです。</p>

<pre><code>wget http://repo.zabbix.com/zabbix/2.4/ubuntu/pool/main/z/zabbix-release/zabbix-release_2.4-1+trusty_all.deb
sudo dpkg -i zabbix-release_2.4-1+trusty_all.deb
sudo apt-get update
</code></pre>

<h2>zabbix-server のインストール</h2>

<p><code>zabbix-server-mysql</code> の代わりに <code>zabbix-server-pgsql</code> をインストールします。
途中で入力するパスワードは後で必要になるのでメモするか覚えておきます。
(Debian や Ubuntu の公式パッケージの zabbix と違って <code>dbconfig-common</code> を使うようになっています。)</p>

<pre><code>sudo apt-get install zabbix-server-pgsql
</code></pre>

<p>ただし、先に postgresql を入れておかないとデータベースの作成のところでエラーになるようです。</p>

<h2>zabbix-frontend-php のインストール</h2>

<p><code>/usr/share/doc/zabbix-frontend-php/README.Debian</code> に書いてあるのですが、
<code>php5-pgsql</code> を入れておくと初期設定の時のデータベースの選択肢に PostgreSQL が出てきます。</p>

<pre><code>sudo apt-get install zabbix-frontend-php php5-pgsql
</code></pre>

<h2>PHP のタイムゾーンの設定</h2>

<pre><code>sudoedit /etc/zabbix/apache.conf
</code></pre>

<p>で</p>

<pre><code># php_value date.timezone Europe/Riga
</code></pre>

<p>を</p>

<pre><code>php_value date.timezone Asia/Tokyo
</code></pre>

<p>に変更して</p>

<pre><code>sudo service apache2 reload
</code></pre>

<p>で反映します。
(Debian や Ubuntu の公式パッケージの zabbix と違って <code>apache2</code> のみ対応です。
<code>php5-fpm</code>+<code>nginx</code> には対応していないので <code>nginx</code> で使うなら完全に独自設定が必要です。)</p>

<h2>初期設定</h2>

<p><code>http://localhost/zabbix/</code> を開いて初期設定を開始します。
<code>Next</code> ボタンで進んでいってデータベースの設定のところは</p>

<ul>
<li>Database Type : PostgreSQL</li>
<li>Database host : localhost のまま</li>
<li>Database port : 0 のまま</li>
<li>Database name : zabbix のまま</li>
<li>User : root から zabbix に変更</li>
<li>Password : <code>zabbix-server-pgsql</code> をインストールしたときに設定したパスワード</li>
</ul>


<p>と設定します。</p>

<p>そして <code>Next</code> で進んでいって <code>Finish</code> まで行くと初期設定終了です。
(Debian や Ubuntu の公式パッケージの zabbix と違って
<code>/etc/zabbix/web/</code> が <code>www-data</code> から書き込み可能になっていて
ダウンロードして自分で設置しなくても設定完了するようになっています。)</p>

<h2>ログイン</h2>

<ul>
<li>Username : Admin</li>
<li>Password : zabbix</li>
</ul>


<p>でログインします。</p>

<p>右上の Profile から Language を Japanese (ja_JP) に変更して Update すると
日本語で使えるようになります。
パスワードもここで変更できます。</p>

<p>ログイン前の画面は guest ユーザーの言語が反映されているので、
「管理」-「ユーザー」からメンバーの「guest」を開いて言語を変更して更新します。</p>

<h2>zabbix-agent のインストール</h2>

<pre><code>sudo apt-get install zabbix-agent
</code></pre>

<p>でインストールできます。</p>

<h2>Zabbix server の監視</h2>

<p><code>zabbix-agent</code> をインストールした後、
「設定」-「ホスト」でステータスを「無効」から「有効」に切り替えます。</p>

<p>しばらくするとエージェントの状態の「Z」が緑色になって監視できていることがわかります。</p>

<h2>グラフの日本語の文字化け対策</h2>

<p>グラフなどの図の中の日本語が文字化けするときは
適当な日本語フォントを入れて
<code>zabbix-frontend-php</code> の設定をし直せば直ります。</p>

<pre><code>sudo apt-get install fonts-vlgothic
sudo dpkg-reconfigure zabbix-frontend-php
</code></pre>
]]></content>
  </entry>
  
</feed>
