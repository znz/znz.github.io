<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: event | @znz blog]]></title>
  <link href="http://blog.n-z.jp/blog/categories/event/atom.xml" rel="self"/>
  <link href="http://blog.n-z.jp/"/>
  <updated>2017-05-20T15:03:18+09:00</updated>
  <id>http://blog.n-z.jp/</id>
  <author>
    <name><![CDATA[Kazuhiro NISHIYAMA]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[DDD.rb #11 (Rails with React) (Mastodon のコードリーディング) に参加しました]]></title>
    <link href="http://blog.n-z.jp/blog/2017-05-10-mastodon.html"/>
    <updated>2017-05-10T23:59:59+09:00</updated>
    <id>http://blog.n-z.jp/blog/mastodon</id>
    <content type="html"><![CDATA[<p><a href="https://dddrb.doorkeeper.jp/events/60099" title="DDD.rb #11 (Rails with React)">DDD.rb #11 (Rails with React)</a> という Mastodon のコードリーディングに参加したので、そのメモです。</p>

<p>インストールがほとんどでコードリーディングはほとんどできなかったので、大まかな読み方の話だけで、あまり突っ込んだ話はありませんでした。</p>

<!--more-->


<h2>メモ</h2>

<ul>
<li>次回は <a href="https://dddrb.doorkeeper.jp/events/60238" title="DDD.rb #12 RDRA for DDD ワークショップ！ - DDD.rb | Doorkeeper">DDD.rb #12 RDRA for DDD ワークショップ！ - DDD.rb | Doorkeeper</a> (RDRA はラドラと読むらしい)</li>
<li><a href="http://motokase.com/mastodon-matome/" title="マストドン評判とは！SNS初心者が安全にMastodonを楽しむ方法">マストドン評判とは！SNS初心者が安全にMastodonを楽しむ方法</a>の最初の方が参考になる</li>
<li>ローカルで起動するには <a href="https://github.com/tootsuite/mastodon/blob/e2491680e696d2c285a798ec4c66b26d2748df66/docs/Running-Mastodon/Development-guide.md">docs/Running-Mastodon/Development-guide.md</a> のリンク先の <a href="https://github.com/tootsuite/documentation/blob/master/Running-Mastodon/Development-guide.md">Development guide</a> を参照</li>
<li>vagrant も手軽</li>
<li>開発環境のメールは <a href="https://github.com/ryanb/letter_opener">https://github.com/ryanb/letter_opener</a> を使っている</li>
<li>master だと jquery-rails が消えている</li>
<li>master だと .foreman と Procfile.dev で streaming のサーバーなども起動する</li>
<li>今の master は cld3 でエラーになりやすい</li>
<li>基本的に v1.3.3 のタグで試そうという話に</li>
<li>react のルーティングは <code>./app/assets/javascripts/components/containers/mastodon.jsx</code> をみる</li>
<li><code>&lt;Route path='getting-started' component={GettingStarted} /&gt;</code> とか</li>
<li>翻訳が難しい話 (連合とか未収載とか)</li>
<li>docker を使うなら docker-compose.yml を直接書き換える代わりに docker-compose.override.yml が使える</li>
</ul>


<h3>getElementById</h3>

<ul>
<li>HTML ソースに <code>&lt;script id='initial-state' type='application/json'&gt;</code> がある</li>
<li><code>getElementById</code> で検索</li>
<li><code>app/assets/javascripts/components/containers/mastodon.jsx</code> に <code>const initialState = JSON.parse(document.getElementById("initial-state").textContent);</code> とある</li>
</ul>


<h3>react のソースの読み方</h3>

<ul>
<li>react のページのざっくりとした見分け方は HTML ソースがやけに少ないときは react (登録ページなど devise 由来のページは react を使っていない)</li>
<li><code>data-react-class</code> がついてるところに差し込まれている</li>
<li>react のルーティングは <code>./app/assets/javascripts/components/containers/mastodon.jsx</code> をみる</li>
<li><code>&lt;Route path='getting-started' component={GettingStarted} /&gt;</code> とか</li>
<li><code>localhost:3000/web/</code> は残して <code>localhost:3000/web/getting-started</code> を開くと出てくる</li>
<li><code>&lt;Route path='blocks' component={Blocks} /&gt;</code> は <code>import Blocks from '../features/blocks';</code> なので <code>app/assets/javascripts/components/features/blocks/index.jsx</code> にある</li>
</ul>


<h3>ストリーミングは?</h3>

<ul>
<li><code>app/assets/javascripts/components/api.jsx</code> にクライアントがある</li>
<li><code>axios</code> (アクシオス) を使っている</li>
<li><p><code>Authorization</code> で <code>Bearer</code> トークンを渡している</p></li>
<li><p>サーバー側は <code>streaming/index.js</code> にある (トップ直下)</p></li>
<li><code>import WebSocket from 'ws'</code></li>
<li>nginx などで受けて rails と振り分けられてここにくるので <code>wss</code> ではなく <code>ws</code> のみ</li>
</ul>


<h3>storybook とは?</h3>

<ul>
<li>直下に storybook ディレクトリがあるのでその話題</li>
<li>動くスタイルガイド?</li>
</ul>


<h3>その他</h3>

<ul>
<li><code>app/controllers/auth</code> に <code>devise</code> 関連</li>
<li><code>User</code> と <code>Account</code> が別にある</li>
<li><code>app/controllers/api</code> に API 関連</li>
</ul>


<h3><code>package.json</code></h3>

<ul>
<li><code>chai</code> はいろいろなものを入れる必要がある</li>
<li>rails を使う人はよく使っているらしい</li>
<li><code>sinon</code> もテストのライブラリでスタブを使いたいからではないか</li>
</ul>


<h3>ActionCable</h3>

<ul>
<li>actioncable という node (npm) のモジュールがある</li>
<li>開発元は <a href="https://github.com/rails/rails/blob/master/actioncable/package.json">https://github.com/rails/rails/blob/master/actioncable/package.json</a> らしい</li>
<li>サーバー側とクライアント側で同じ名前なので紛らわしい</li>
<li>npm の方の actioncable はあまり情報がない</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ LILO&東海道らぐオフラインミーティング 2017/05/06]]></title>
    <link href="http://blog.n-z.jp/blog/2017-05-06-lilo-tokaidolug.html"/>
    <updated>2017-05-06T13:17:50+09:00</updated>
    <id>http://blog.n-z.jp/blog/lilo-tokaidolug</id>
    <content type="html"><![CDATA[<p><a href="https://lilo.connpass.com/event/55003/" title="LILO&amp;東海道らぐオフラインミーティング 2017/05/06">LILO&amp;東海道らぐオフラインミーティング 2017/05/06</a> に参加しました。</p>

<p>今回もアンカンファレンス形式でした。</p>

<!--more-->


<h2>メモ</h2>

<p>今回のメモです。</p>

<ul>
<li>会場はいつもの 4 階でした。</li>
<li>ハッシュタグ: <code>#lilo_jp</code> <code>#東海道らぐ</code></li>
<li>登録参加者数 16名</li>
<li>自己紹介から</li>
</ul>


<h2>自分の発表</h2>

<ul>
<li>資料にある話</li>
<li>資料にないけど DNS CAA の話</li>
<li>CAA レコードに書いて spam が増えなかったかという話</li>
<li>公開しているアドレスなので変化はわからず</li>
<li>.travis.yml に書いた時には明らかに増えた</li>
<li>質問があったので、ちょっと etckeeper の話 (etckeeper vcs とか)</li>
</ul>


<h2>こんどうさん</h2>

<ul>
<li>ESP パーティションの話</li>
<li>ESP 内の grub データを消せば Windows のみになる</li>
<li>BIOS/MBR から UEFI の過渡期の話</li>
<li>openSUSE の話</li>
<li>openSUSE Asia Summit 招聘中</li>
<li>LibO もほぼ併催確定</li>
<li>Cinnamon を入れた</li>
<li>Linux Mint 17.3 with NVIDIA Driver は GPU 切り替えがログアウトだけで可能</li>
<li>18.1 では切り替え NG (プロプラドライバとの相性も悪い)</li>
<li>M17N: ibus の設定</li>
<li>SUSE のデフォルトは <code>/</code> が btrfs で <code>/home</code> が XFS</li>
</ul>


<h2>5分休憩</h2>

<h2>としひささん</h2>

<ul>
<li>スマートウォッチ</li>
<li>WSD-F20 と Pebble</li>
<li>必要な理由とか要件とか</li>
<li>特徴とか比較とか</li>
<li>個人的には Pebble の方が良い</li>
<li>WSD-F20 は GPS ロガーにはならない</li>
<li><p>Android Wear 2.0 はアプリが少ない</p></li>
<li><p>LILO の歴史 <a href="https://lilo.linux.or.jp/history/">https://lilo.linux.or.jp/history/</a></p></li>
<li>今年で 20 年</li>
<li>インストールからサポートする場、九州でやっているから関西でも、というのが発足理由</li>
<li>Samba の話で 150 人ぐらいきたことがあるのがピーク</li>
<li>普通は多くて50人ぐらい</li>
<li>普通は10から20人ぐらい</li>
<li>タコを育てようという文化</li>
<li>JF がすばらしい</li>
<li>Linux は初心者を大切にするのが良い</li>
<li><a href="https://twitter.com/xoxyuxu/status/860737579657732098">https://twitter.com/xoxyuxu/status/860737579657732098</a> JFは素晴らしい(ドキュメントがあることは素晴らしい) タコを育てよ(判らないことがある環境が悪い,という考え方)</li>
<li>みんないろんなものを持ってきていた</li>
<li>NAIST でやっていた奈良時代</li>
<li>場所が先端</li>
<li>デスクトップマシンを持ってくるのが普通</li>
<li>Doom をやりたくて Linux を入れた人もいる</li>
<li>Enlightment は昔からかっこいい</li>
<li>昔は重かったが時代が変わって今は軽い</li>
<li>Tizen にのっているので今も開発は活発</li>
<li>第3回のアンケート結果</li>
<li>2002年より後の歴史は分散していてまとまっていない</li>
<li>Wiki にある <a href="https://lilo.linux.or.jp/wiki/history">https://lilo.linux.or.jp/wiki/history</a></li>
<li>トップから辿れる一覧ページもある <a href="https://lilo.linux.or.jp/event/">https://lilo.linux.or.jp/event/</a></li>
<li>LMS だけ別ページ <a href="https://lilo.linux.or.jp/event/lms/">https://lilo.linux.or.jp/event/lms/</a></li>
</ul>


<h2>さかのしたさん</h2>

<ul>
<li>「Google map 印刷 制約」で検索</li>
<li><a href="https://www.google.co.jp/intl/ja/permissions/geoguidelines.html">https://www.google.co.jp/intl/ja/permissions/geoguidelines.html</a></li>
<li>Google Map は使用に制限がある</li>
<li>Open Street Map</li>
<li>facebook のチェックインなどに使われている</li>
<li>overpass turbo</li>
<li>f4map - 延暦寺</li>
<li><a href="https://www.netfort.gr.jp/~saka/accessmap/">OSM Access Map</a> というのを作った</li>
<li>道路のみの画像を保存できる</li>
<li>道路の区別は実データを元にご意見募集中</li>
<li>ゼンリンが地図グッズを売っている <a href="http://www.zenrin.co.jp/goods/matimati/item/">http://www.zenrin.co.jp/goods/matimati/item/</a></li>
<li>SUZURI でグッズを売る?</li>
<li>5月20日(土) 【西国街道#04】摂津富田の街並みと寺社巡り <a href="https://countries-romantic.connpass.com/event/56126/">https://countries-romantic.connpass.com/event/56126/</a></li>
</ul>


<h2>やまうちさん</h2>

<ul>
<li>実践IOTハウス 古いPCで</li>
<li>Tocos 無線モジュール</li>
<li>Raspberry Pi が遅いので古い PC に置き換え</li>
<li>Linux Beans</li>
<li>TOCOS TWE-Lite と ToCoStick で簡易照度センサー(100均電卓)</li>
<li>太陽電池部分の電圧をとっている</li>
<li>デモはうまく動かず</li>
</ul>


<h2>休憩</h2>

<ul>
<li>懇親会参加予定は 10 名</li>
<li>会場費は 100 円</li>
</ul>


<h2>もりわかさん</h2>

<ul>
<li><a href="https://developers.redhat.com/">https://developers.redhat.com/</a></li>
<li>登録すると 1 年間無料で開発用途に使える</li>
<li>1 年後に更新すればずっと使える</li>
<li>シェルスクリプト10行ぐらい書くよねという話</li>
<li>JBoss などもある</li>
<li>ナレッジベースやドキュメントにもアクセスできる</li>
<li>質の高いドキュメント</li>
<li>実マシン1台という制限があるが、VM の制限はないのですごいマシンを用意して 100 VM とかでも OK</li>
<li>会社で開発者がそれぞれ登録して手元のマシンはそれで動かすと言うのもあり</li>
<li>バグかどうか困ったらサポートを買うのが良い</li>
</ul>


<h2>のがたさん</h2>

<ul>
<li><a href="http://gihyo.jp/admin/serial/01/ubuntu-recipe/0462">第462回　韓国開催，Korea Community Day参加レポート 〜Ubuntu KRのみなさんと交流してきました：Ubuntu Weekly Recipe｜gihyo.jp … 技術評論社</a></li>
<li>記事とは違う話を</li>
<li><a href="http://cogniti.github.io/nimf/ja/">http://cogniti.github.io/nimf/ja/</a> (ibus などの層のもの) の開発者の人と Google 翻訳を使って話をした</li>
<li>Google 翻訳は韓国語と日本語の翻訳はスラングなどを使わずきれいに話せば精度良く翻訳できるので、突っ込んだ話もできた</li>
<li>Samsung と Tizen</li>
<li>言語が違うだけでやっていることは同じだと思った話</li>
</ul>


<h2>ぉゅぅさん</h2>

<ul>
<li>Ext4 filesystem ではまった話</li>
<li>32 bit OS だと 16TiB まで</li>
<li>ブロックアロケータまで調べた</li>
<li><code>posix_fallocate</code></li>
<li><a href="http://www.ujiya.net/linux/">http://www.ujiya.net/linux/</a></li>
</ul>


<h2>今後の予定</h2>

<ul>
<li>次回はたぶん 8 月</li>
</ul>


<h2>発表した内容</h2>

<p>スライドはいつも通り <a href="http://slide.rabbit-shocker.org/authors/znz/lilo-20170506/">Rabbit Slide Show</a> (<a href="https://rubygems.org/gems/rabbit-slide-znz-lilo-20170506">RubyGems</a>), <a href="https://slideshare.net/znzjp/lilolinuxorjp-20175">SlideShare</a>, <a href="https://speakerdeck.com/u/znz/p/lilo-dot-linux-dot-or-dot-jp-falsehua-2017nian-5yue">Speaker Deck</a> にあげています。(ソースは <a href="https://github.com/znz/lilo-20170506">github</a> にあげています。)</p>

<iframe src="https://slide.rabbit-shocker.org/authors/znz/lilo-20170506/viewer.html"
        width="640" height="524"
        frameborder="0"
        marginwidth="0"
        marginheight="0"
        scrolling="no"
        style="border: 1px solid #ccc; border-width: 1px 1px 0; margin-bottom: 5px"
        allowfullscreen> </iframe>


<div style="margin-bottom: 5px">
  <a href="https://slide.rabbit-shocker.org/authors/znz/lilo-20170506/" title="lilo.linux.or.jp の話 (2017年5月)">lilo.linux.or.jp の話 (2017年5月)</a>
</div>


<h2>Togetter まとめ</h2>

<p><a href="https://togetter.com/li/1107707">LILO&amp;東海道らぐオフラインミーティング 2017/05/06の記録 - Togetterまとめ</a>にまとめられているようです。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第14回関西LibreOffice勉強会に参加しました]]></title>
    <link href="http://blog.n-z.jp/blog/2017-04-29-libokansai.html"/>
    <updated>2017-04-29T13:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/libokansai</id>
    <content type="html"><![CDATA[<p><a href="https://connpass.com/event/53960/" title="第14回関西LibreOffice勉強会">第14回関西LibreOffice勉強会</a>に参加しました。</p>

<!--more-->


<p>以下、メモです。</p>

<h2>会場など</h2>

<ul>
<li>地図ソフトで三国駅から歩くルートも表示されたので、早めに出発して時間もあったので、歩いてみました。(帰りは懇親会には参加しなかったので、十三駅まで歩いてちょっと梅田に出てから帰りました。)</li>
<li>セキュリティがかかって閉まっていてオフィスフロアに入れなくて、しばらく待っていました。</li>
<li>普通の土曜日なら開いているのに、祝日だから閉まっていたようです。</li>
<li>電源やネットワークはなし</li>
<li>飲食は可能</li>
</ul>


<h2>自己紹介</h2>

<p>自分はたぶん初参加でした。</p>

<p>久しぶりに参加という人も何人かいて、長く続いている勉強会という感じを受けました。</p>

<h2>書式の自由が社会を変える―LibreOfficeとPandocができること</h2>

<ul>
<li>発表資料: <a href="https://github.com/sky-y/libreoffice-kansai-14-pandoc">https://github.com/sky-y/libreoffice-kansai-14-pandoc</a></li>
<li><p>Pandoc の日本語ドキュメントは古くなってしまっているので、英語が読めるなら本家の英語を推奨</p></li>
<li><p>この発表の概要</p></li>
<li>Pandoc の概要</li>
<li>Pandoc をインストールする</li>
<li>Pandoc でドキュメントを変換する (LibreOffice Writer 文書を中心に)</li>
<li><p>「書式の自由」について</p></li>
<li><p>対応フォーマットが多い</p></li>
<li>ODT などは入力にも対応</li>
<li><p>Markdown とは</p></li>
<li><p>Pandoc でできないこと</p></li>
<li>スプレッドシートは扱えない</li>
<li>簡単な表は対応している</li>
<li>LibreOffice Impress には対応してない</li>
<li><p>LaTeX Beamer/HTML プレゼンには変換可能</p></li>
<li><p>Pandoc を使う心得</p></li>
<li>過剰な期待をし過ぎないこと</li>
<li>Pandoc は万能でないし、文書仕様の全てを満たしているわけではない</li>
<li><p>補助的に使うのがベスト</p></li>
<li><p>Pandoc の実装は Haskell</p></li>
<li><p>補足: Markdownと標準仕様</p></li>
<li>RFC で Media Typeにて「Markdownであること」と「方言の名前」を明示する方法を定めた</li>
<li><p>(RFC でうまくいかなかったというと Cookie を思い出した)</p></li>
<li><p>質疑応答</p></li>
<li><p>文字コードは UTF-8 で</p></li>
<li><p>Pandoc をインストールする</p></li>
<li>wkhtmltopdf の wk は WebKit らしい</li>
<li>動作確認</li>
<li><code>echo "http://localhost" | pandoc -f markdown_github -t html</code> のように <code>markdown_github</code> だと自動リンクがある</li>
<li><p><code>echo "**Hello**" | pandoc -f markdown -t html5 -o hello.pdf</code></p></li>
<li><p>おまけ: Pandocで作れるスライド</p></li>
<li>今回は「reveal.js」形式に変換</li>
<li><p>LaTeX Beamer など他のプレゼン形式にも変換できる</p></li>
<li><p>Pandoc でドキュメントを変換する</p></li>
<li><a href="https://github.com/sky-y/libreoffice-kansai-14-pandoc">https://github.com/sky-y/libreoffice-kansai-14-pandoc</a> の sample で変換を試す</li>
<li><p>Windows の start コマンド、GNOME の gnome-open や macOS の open に相当</p></li>
<li><p>テンプレート</p></li>
<li><code>pandoc --print-default-data-file reference.odt &gt; reference.odt</code></li>
<li>左の <code>reference.odt</code> は pandoc 内部のテンプレートディレクトリの中のファイル名を指定している</li>
<li>右は出力ファイル名なので紛らわしいが別物</li>
<li><p>スタイルで 源ノ角ゴシック (げんの かくごしっく) に変えるとか</p></li>
<li><p>画像に関するノウハウ</p></li>
<li><p>96dpi よりも 300dpi の方が良いという指摘あり <a href="https://twitter.com/nogajun/status/858193042309861377">https://twitter.com/nogajun/status/858193042309861377</a></p></li>
<li><p>「書式の自由」について</p></li>
<li><p>質疑応答</p></li>
</ul>


<h2>休憩</h2>

<p>10分間休憩</p>

<h2>Office文書を手打ちハックする ～FlatODF活用のすすめ～</h2>

<ul>
<li>JO3EMC さん</li>
<li>文書の自動生成をやりたい</li>
<li>文書を細部まで思い通りにコントロールしたい</li>
<li>アプローチ例1: LibreOffice 以外のツール・言語を利用する</li>
<li>アプローチ例2: LibreOffice 関連のツールを利用する</li>
<li>FlatODF</li>
<li>単一の圧縮されていない XML ファイル</li>
<li>弱点</li>
<li>ファイルサイズが大きくなる</li>
<li>圧縮されていないので</li>
<li>あとで ODF に変換すれば良い</li>
<li>画像やオブジェクトの埋め込みは少し面倒</li>
<li>Base64</li>
<li>fodt で保存してテキストエディタで書き換えて開き直すデモ</li>
<li>UTF-8 以外には対応していないらしい</li>
<li>LibreOffice を使って他フォーマットへ変換・印刷</li>
<li><code>soffice --headless --convert-to pdf *.fodt</code></li>
<li><code>soffice -p *.fodt</code></li>
<li>活用例</li>
<li>FlatODF の構造の概略</li>
<li>質疑応答</li>
<li>zip された中の content.xml をいじる方法も FlatODF をいじる方法もそれぞれ長所や短所があるのでいろんな方法があるのは良いんじゃないかという話</li>
</ul>


<h2>休憩</h2>

<ul>
<li>時間がおしているので5分間休憩</li>
<li>休憩前に懇親会参加者確認</li>
</ul>


<h2>LibreOffice Online環境の構築</h2>

<ul>
<li>LibreOffice Online (LOOL)</li>
<li>LOOL (ろーる)</li>
<li>CentOS 7.3.1611 で環境構築</li>
<li>LibreOffice の make に時間がかかる (一晩?)</li>
<li>依存をいろいろ入れる</li>
<li>日本語フォントも別途入れる必要あり</li>
<li>LibreOffice Online のコンパイル (5〜10分ぐらい?)</li>
<li>LOOL はファイルのインプットの GUI がない</li>
<li>Nextcloud と連携</li>
<li>サーバー側でレンダリングして画面を転送しているので、サーバー側にフォントが必要</li>
<li><a href="https://librepc.jp/">https://librepc.jp/</a></li>
</ul>


<h2>LT</h2>

<ul>
<li>矢吹さんの話</li>
<li>会場アンケート</li>
<li>スプレッドシートを使ったことがある人</li>
<li>SQL を使ったことがある人</li>
<li>領収書を集計するのが面倒だった話</li>
<li>バベルの塔</li>
<li>ピボットテーブル = GROUP BY を知るのに時間がかかった話</li>
<li>相手の文化を知る必要がある</li>
<li>用語集の必要性</li>
<li>抽象度の上げ下げ</li>
</ul>


<h2>ディスカッション</h2>

<ul>
<li>来年 LibreOffice 6 になる</li>
<li>デザインを一新するのでデザイナーを募集している</li>
<li><a href="https://design.blog.documentfoundation.org/2017/04/21/new-branding-libreoffice-6-0/">New branding for LibreOffice 6.0 - LibreOffice Design Team</a></li>
<li><p><a href="http://opensourcedesign.net/jobs/jobs/2017-04-20-branding-for-libreoffice-60">BRANDING FOR LIBREOFFICE 6.0</a></p></li>
<li><p><a href="https://design.blog.documentfoundation.org/2017/04/27/table-styles-survey/">Please participate in a survey about table styles - LibreOffice Design Team</a></p></li>
<li>表スタイルというのが追加された</li>
<li><p>デザインのアンケートを実施中</p></li>
<li><p><a href="http://www.clear-code.com/blog/2017/4/24.html" title="LibreOffice Calcのスプレッドシートの変更点をgit diffで見られるようにする - ククログ(2017-04-24)">LibreOffice Calcのスプレッドシートの変更点をgit diffで見られるようにする - ククログ(2017-04-24)</a></p></li>
<li><p>本?</p></li>
<li><p>HackFest</p></li>
<li><p>バグハンティング・セッション</p></li>
<li><p>源ノ明朝</p></li>
<li>IPA フォントはデザインなどが古い</li>
<li>源ノ角ゴシック 源ノ明朝 と Noto はパッケージの違い</li>
<li>CJK にも対応しているのが良い</li>
<li>デザインも今風</li>
<li><p>LibreOffice 5.2 だと縦書きが変? 5.3 だと太字しか出ない?</p></li>
<li><p>テストの話</p></li>
<li>普通のテスターが簡単に使える Selenium のような自動化がないのがつらい</li>
<li><p>xautomation ?</p></li>
<li><p>デザインチームなどの話</p></li>
<li><p>ドキュメントの翻訳の話</p></li>
<li>OmegaT は odt に直接対応している</li>
</ul>


<h2>ふりかえり</h2>

<ul>
<li>抽象度の話がよかった</li>
<li>LibreOffice を直接触る話はなかった</li>
<li>前処理は好き勝手にできるというのは良い</li>
<li>表現とデータをわけると嬉しいと思ってくれる人が増えると嬉しい</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第 122 回関西 Debian 勉強会に参加しました]]></title>
    <link href="http://blog.n-z.jp/blog/2017-04-23-kansai-debian-meeting.html"/>
    <updated>2017-04-23T13:30:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/kansai-debian-meeting</id>
    <content type="html"><![CDATA[<p><a href="https://debianjp.connpass.com/event/54424/" title="第 122 回関西 Debian 勉強会">第 122 回関西 Debian 勉強会</a>に参加しました。</p>

<!--more-->


<p>以下メモです。</p>

<h2>会場など</h2>

<p>早めに出発したら時間があったので、駅前ビルの金券屋で切符を買って、少し安く移動できました。</p>

<p>しばらく前に阪急三番街の KIDDY LAND で stretch のぬいぐるみが 2,3 個あったのを見かけて、次にみたときには最後の 1 個になったいたので、買っておいたのを持って行きました。</p>

<h2>オープニング</h2>

<ul>
<li>前回の話から会場候補地の話とか</li>
<li><a href="https://wiki.debian.org/KansaiDebianMeeting/DraftMemo">https://wiki.debian.org/KansaiDebianMeeting/DraftMemo</a> に古いメモがある</li>
<li><a href="http://events.linuxfoundation.jp/events/open-source-summit-japan" title="Open Source Summit Japan 2017">Open Source Summit Japan 2017</a> というのがあるらしい</li>
<li><a href="https://lists.debian.org/debian-devel-announce/2017/04/msg00008.html" title="Status on the stretch release">Status on the stretch release</a></li>
<li><a href="https://www.debian.org/News/2017/20170417" title="Statement concerning the arrest of Dmitry Bogatov">Statement concerning the arrest of Dmitry Bogatov</a></li>
<li><a href="https://blog.torproject.org/blog/statement-regarding-dmitry-bogatov" title="Statement regarding Dmitry Bogatov | The Tor Blog">Statement regarding Dmitry Bogatov | The Tor Blog</a></li>
<li>事前課題</li>
<li>maven とか make とか</li>
</ul>


<h2>休憩</h2>

<h2>CMake でビルド</h2>

<ul>
<li>Windows 版と Linux 版の両対応が動機</li>
<li>Visual Studio や Eclipse のプロジェクト出力も可能</li>
<li><a href="https://github.com/yosukesan/kansai_debian">https://github.com/yosukesan/kansai_debian</a> に今回のサンプルを用意</li>
<li><code>distclean</code> 相当がないので build ディレクトリを作る方が良い</li>
<li><code>cd 000.hello; mkdir build; cmake ../ -DCMAKE_INSTALL_PREFIX=.; make; make install</code></li>
<li><code>CMakeCache.txt</code> が <code>configure.log</code> 相当</li>
<li><code>CMakeCache.txt</code> を編集することも可能</li>
<li><code>cmake ..</code> ではなく <code>cmake ../CMakeLists.txt</code> としてしまうと build ディレクトリではなくソースディレクトリにファイルが作られてしまうので注意</li>
<li>ライブラリをリンクする例: 失敗する例が <code>001_NG.link_library</code> で成功する例が <code>001_OK.link_library</code></li>
<li>自作ライブラリのビルドとリンク</li>
<li><code>CMakeCache.txt</code> に入る変数と入らない変数がある</li>
<li>設定するのに <code>FORCE</code> オプションが必要なものとなくても良いものがあってハマった</li>
<li>echo しても空なのに、内部的には変数がある</li>
<li>変数の上書きに癖があってハマった</li>
<li>Windows でマルチスレッドかどうか、デバッグかリリースかなどでリンクするライブラリが違うのが自動でできなかった</li>
<li>Visual Studio でもリンクするライブラリの組み合わせ問題ははまることがあるらしい</li>
<li>Dependency Walker</li>
<li>デバッグビルドの DLL が混ざっていてバグっていた話</li>
<li><a href="https://ninja-build.org/manual.html">https://ninja-build.org/manual.html</a></li>
</ul>


<h2>その後</h2>

<p>時間が余ったので、次回の予定などの話をしていました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OSS Gate大阪ワークショップ2017-04-22に参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2017-04-22-oss-gate-workshop.html"/>
    <updated>2017-04-22T23:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/oss-gate-workshop</id>
    <content type="html"><![CDATA[<p><a href="https://oss-gate.doorkeeper.jp/events/58579" title="OSS Gate大阪ワークショップ2017-04-22 - OSS Gate | Doorkeeper">OSS Gate大阪ワークショップ2017-04-22 - OSS Gate | Doorkeeper</a>にサポーター (旧称: メンター) として参加しました。</p>

<!--more-->


<h2>全体の感想</h2>

<p>最後のアンケートにも書きましたが、前回はデモである程度メモをどの程度とるのかなどの方向性が示されていたのと、やる内容がインストールから初めて、ひっかかったところのドキュメントの改善をフィードバックする、というのが多かったのに対して、今回はデモがほぼなくて、サポーター (旧称: メンター) として応募したけど、人数の都合でビギナーになった人が多かったからか、いろんなことに挑戦していて、難しい感じでした。</p>

<p>作業メモの粒度としては、<a href="https://github.com/oss-gate/workshop/issues?q=is%3Aissue+is%3Aclosed">過去のビギナーの作業ログ</a>から特にコメント数が多いものを参考にしてみると、こういう細かい思考過程までメモすると良いのか、というのが、 oss-gate に限らず普段の作業メモのとり方としても、参考になるかと思います。</p>

<h2>メモ</h2>

<p>以下、今回の雑多なメモです。</p>

<h3>フォント</h3>

<p>途中のふりかえりのときのビギナーの人がブラウザーで変わったフォントを使っていたのできいてみたところ、「スマートフォントUI」というのを使っていると教えてもらいました。</p>

<h3>Chef DK のアンインストール</h3>

<p>参考のため、自分の環境にも Chef DK を入れてみていたのですが、 <a href="https://docs.chef.io/install_dk.html">https://docs.chef.io/install_dk.html</a> にアンインストールの手順があったので、それに従ってアンインストールしました。</p>

<p>symlink は削除前に確認してみたら、たくさんありました。</p>

<pre><code>%  sudo rm -rf /opt/chefdk
Password:
%  sudo pkgutil --forget com.getchef.pkg.chefdk
Forgot package 'com.getchef.pkg.chefdk' on '/'.
%  find /usr/local/bin -lname '/opt/chefdk/*'
/usr/local/bin/berks
/usr/local/bin/chef
/usr/local/bin/chef-apply
/usr/local/bin/chef-client
/usr/local/bin/chef-shell
/usr/local/bin/chef-solo
/usr/local/bin/chef-vault
/usr/local/bin/cookstyle
/usr/local/bin/dco
/usr/local/bin/delivery
/usr/local/bin/foodcritic
/usr/local/bin/inspec
/usr/local/bin/kitchen
/usr/local/bin/knife
/usr/local/bin/ohai
/usr/local/bin/push-apply
/usr/local/bin/pushy-client
/usr/local/bin/pushy-service-manager
/usr/local/bin/rubocop
%  sudo find /usr/local/bin -lname '/opt/chefdk/*' -delete
%  find /usr/bin -lname '/opt/chefdk/*'
</code></pre>

<h3>辞書</h3>

<p>macOS の辞書ではなく、Logophile という辞書ソフトを使っているのをみました。
COBUILD のシソーラスが便利だそうです。</p>

<p>たぶん <a href="http://dicwizard.jp/logophile/" title="Logophile">Logophile</a> で、シェアウェアのようです。</p>

<h3>fish shell</h3>

<p>検索しにくい名前ですが、<a href="http://fish.rubikitch.com/" title="全訳！fishシェル普及計画【コマンドラインは怖くない】">全訳！fishシェル普及計画【コマンドラインは怖くない】</a> に翻訳されたドキュメントがあるので、使い始めやすそうです。</p>

<p>個人的には rvm を入れたら環境を壊された (<code>zsh</code> なら <code>chpwd_function</code> を使えばいいのに使っていなかったらしく <code>cd</code> のカスタマイズが壊れた) ぐらいシェルはカスタマイズをしているので、乗り換える可能性は低いですが、ちょっと試してみたところ、 <code>echo</code> のオートサジェスチョンで <code>$BASH_VERSION</code> がでてきたので、<code>.bash_history</code> をみているようです。
ちょっと試した後は、 <code>rm -rf ~/.local/share/fish</code> でクリーンな状態に戻して、また最初から試せるようにしておきました。</p>
]]></content>
  </entry>
  
</feed>
