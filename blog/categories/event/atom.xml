<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: event | @znz blog]]></title>
  <link href="http://blog.n-z.jp/blog/categories/event/atom.xml" rel="self"/>
  <link href="http://blog.n-z.jp/"/>
  <updated>2014-07-16T23:56:24+09:00</updated>
  <id>http://blog.n-z.jp/</id>
  <author>
    <name><![CDATA[Kazuhiro NISHIYAMA]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[第 13 回 RubyMotion もくもく会 in Osaka に参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2014-07-16-rubymotion-mokumoku-osaka.html"/>
    <updated>2014-07-16T19:33:35+09:00</updated>
    <id>http://blog.n-z.jp/blog/rubymotion-mokumoku-osaka</id>
    <content type="html"><![CDATA[<p>第 1 回から第 12 回にも参加した RubyMotion もくもく会 in Osaka の
<a href="http://rubymotionjp.connpass.com/event/7079/">第 13 回 RubyMotion もくもく会 in Osaka</a>
に参加してきました。
今日はほぼ途中の会話はなくて、みんなでもくもくしていました。
その代わり、最後の成果発表の時は盛り上がっていました。</p>

<p>次回の
<a href="http://rubymotionjp.connpass.com/event/7583/" title="第 14 回 RubyMotion もくもく会 in Osaka">第 14 回 RubyMotion もくもく会 in Osaka</a>
は 08/20(水) になりました。</p>

<!--more-->


<h2>メモ</h2>

<ul>
<li>AppCode</li>
<li>TapTheCircle</li>
<li>motion-osx-cli</li>
<li><a href="https://speakerdeck.com/iwazer/rubymotionfalseqi-chi-tiiitokoro" title="RubyMotionの気持ちいいところ // Speaker Deck">RubyMotionの気持ちいいところ // Speaker Deck</a></li>
<li>RubyMotion + IB で参考にしたもの

<ul>
<li><a href="http://tama.hatenablog.jp/entry/2014/05/02/231633" title="RubyMotion(MacOS)でIBの作成方法 - たまたんのぶろぐ">RubyMotion(MacOS)でIBの作成方法 &ndash; たまたんのぶろぐ</a></li>
<li><a href="http://d.hatena.ne.jp/laiso+iphone/20130510/1368201914" title="RubyMotionアプリでStoryboardとIBのアウトレット+アクションを使う話 - laiso+iphone">RubyMotionアプリでStoryboardとIBのアウトレット+アクションを使う話 &ndash; laiso+iphone</a></li>
</ul>
</li>
<li><a href="https://github.com/omoon/rm-test-test">https://github.com/omoon/rm-test-test</a>

<ul>
<li>travis-ci で RubyMotion のテストも動かせるという話</li>
<li><code>bundle exec rake spec osx=true</code> にすれば OSX も動く。</li>
<li>参考: <a href="https://github.com/rubymotion/BubbleWrap/blob/master/.travis.yml">https://github.com/rubymotion/BubbleWrap/blob/master/.travis.yml</a></li>
</ul>
</li>
<li><a href="https://github.com/mattsears/nyan-cat-formatter">https://github.com/mattsears/nyan-cat-formatter</a></li>
</ul>


<h2>今日の成果</h2>

<p>情報を探してみたら <code>rake ib</code> で Interface Builder を起動すれば stub を自動生成してくれて、
ボタンクリックとアクションのひも付けができるとわかったので、
ボタンをクリックした時にメソッド呼び出しはできるようになりました。</p>

<p>しかし、 <code>ib_outlet</code> で宣言したプロパティに outlet でひも付けしたインスタンス変数が <code>nil</code> のままで悩んでいたところ、
最後に <code>outlet</code> に変えると動くようになりました。
<code>ib_outlet</code> のままでも Interface Builder で出てくるので使えるのかと勘違いしていました。</p>

<p>家に帰ってから
<code>$(find /System/Library/Frameworks -name lsregister) -kill -r -domain local -domain user</code>
で既存の起動の関連付けを削除して、
ib 版で <code>Set Default Browser</code> をやり直したところ、
まだ問題があったので、それも直して以前のものと同様に使えるところまでは出来ました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JAWS-UG三都物語2014に参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2014-07-05-jawsug-santo.html"/>
    <updated>2014-07-05T13:07:03+09:00</updated>
    <id>http://blog.n-z.jp/blog/jawsug-santo</id>
    <content type="html"><![CDATA[<p><a href="http://santo2014.jaws-ug.jp/" title="夏のJAWS-UG 三都物語 2014">夏のJAWS-UG 三都物語 2014</a>
に午後から参加して、
主に Vagrant の話を聞いたのと、
CDP道場（初中級）に参加していました。</p>

<!--more-->


<h2>開発現場で活用する Vagrant</h2>

<div style="float:right">
<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=znz-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=B00F418SQ8" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>
</div>


<p>まず最初に Vagrant の話をきいてきました。</p>

<p><a href="http://www.amazon.co.jp/gp/product/B00F418SQ8/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=B00F418SQ8&amp;linkCode=as2&amp;tag=znz-22">Vagrant入門ガイド</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=B00F418SQ8" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />
がなぜか今200円になっていると言っていました。</p>

<p><a href="https://github.com/shin1x1/vagrant-demo-20140705">https://github.com/shin1x1/vagrant-demo-20140705</a> にデモの内容が公開されていますが、後で聞いてみたらスライドの番号では 4 が vagrant share だけだったので、番号がずれていると言っていました。</p>

<p>vagrant up だけで開発環境が構築できるようにしておくというのはマネしてみようと思いました。</p>

<p>ansible をゲスト OS 側に入れるのは vagrant up だけで済む (ホスト側に ansible を入れる必要がない) という他にホスト側の ansible のバージョンが上がって provisioning に影響が出るのを避けられるという利点もあると思いました。</p>

<h2>オンプレから AWS への劇的ビフォーアフター</h2>

<p>オンプレという言葉がさしているものが期待していたものと違ったので、あまり聞いていなくて他のことをしていました。</p>

<h2>AWS と mackerel で実践する Immutable Infrastructure</h2>

<p>他の作業がはかどっていたので、作業しながら聞いていました。</p>

<p>とりあえず、まだ流動的な部分もありそうで、
しばらく様子見な部分も多そうだと思いました。</p>

<h2>CDP 道場（初中級）</h2>

<p>CDP というのはクラウドデザインパターンという意味だったらしく、
クラウドを実際にどういう構成で使うのかというのが勉強になりました。</p>

<h2>その後</h2>

<p>懇親会が無料というのを知らなかったこともあり、
そのまま帰りました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Amagasakirb特別編 須藤さん関連プロダクツ勉強会に参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2014-06-28-amagasakirb.html"/>
    <updated>2014-06-28T13:16:24+09:00</updated>
    <id>http://blog.n-z.jp/blog/amagasakirb</id>
    <content type="html"><![CDATA[<p><a href="http://kokucheese.com/event/index/186111/" title="6月28日 Amagasakirb特別編 須藤さん関連プロダクツ勉強会(兵庫県)">6月28日 Amagasakirb特別編 須藤さん関連プロダクツ勉強会(兵庫県)</a>
に参加しました。</p>

<!--more-->


<h2>自己紹介</h2>

<p>まず最初に、使っている須藤さん関連プロダクツの話を中心に自己紹介していました。
イベントのページには書いていませんでしたが、
<a href="http://docs.ruby-lang.org/ja/search/" title="るりまサーチ">るりまサーチ</a>
も須藤さん関連プロダクツでした。</p>

<h2>メモ</h2>

<p>その後は須藤さん関連プロダクツの話をいろいろしていたので、
その中からのメモです。
話としては groonga 関連と ActiveLdap 関連が多かったです。</p>

<h3>groonga 関連</h3>

<ul>
<li><a href="http://ongaeshi.hatenablog.com/entry/honyomi-init" title="数万の電子書籍から目的のページを一瞬で見つけ出す、Honyomi - ブログのおんがえし">数万の電子書籍から目的のページを一瞬で見つけ出す、Honyomi &ndash; ブログのおんがえし</a></li>
<li><a href="http://milkode.ongaeshi.me/" title="Milkode - 行指向のソースコード検索エンジン">Milkode &ndash; 行指向のソースコード検索エンジン</a></li>
<li><a href="http://patentfield.com/%E3%83%A1%E3%82%A4%E3%83%B3%E3%83%9A%E3%83%BC%E3%82%B8" title="PatentField | 無料特許検索">PatentField | 無料特許検索</a></li>
</ul>


<h3>ActiveLdap 関連</h3>

<ul>
<li>値が1個しかなくても常に配列を返す使い方も出来る</li>
<li>使い方が Net-LDAP より直感的</li>
</ul>


<h3>groonga と競合する?プロダクト</h3>

<ul>
<li>solr</li>
<li>lucene</li>
<li>xapian</li>
</ul>


<h3>mroonga 関連メモ</h3>

<p>他の話はメモしきれなかったので、
テーブルの情報取得に</p>

<ul>
<li><code>show create table test;</code></li>
<li><code>desc test;</code></li>
</ul>


<p>の2種類の方法を使っていたことぐらいはメモしておきたいと思いました。</p>

<h3>ChupaText</h3>

<ul>
<li>チュパカブラが名前の由来</li>
<li>groonga と組み合わせれば Hyper Estraier のようなものが作れるかも</li>
</ul>


<h3>Jekyll のコンテンツの翻訳の話</h3>

<ul>
<li><a href="http://www.clear-code.com/blog/2014/4/23.html" title="Jekyllで複数言語のコンテンツを継続してメンテナンスする方法 - ククログ(2014-04-23)">Jekyllで複数言語のコンテンツを継続してメンテナンスする方法 &ndash; ククログ(2014-04-23)</a></li>
<li><a href="https://www.ruby-lang.org/admin/translation-status/" title="www.ruby-lang.org - News Post Translation Status">www.ruby-lang.org &ndash; News Post Translation Status</a></li>
</ul>


<h3>須藤さん関連</h3>

<ul>
<li><a href="http://slide.rabbit-shocker.org/authors/kou/">http://slide.rabbit-shocker.org/authors/kou/</a></li>
<li><a href="https://github.com/kou">https://github.com/kou</a></li>
<li><a href="https://github.com/clear-code/sezemi-2014-readable-code">https://github.com/clear-code/sezemi-2014-readable-code</a></li>
</ul>


<h3>最後に須藤さんの過去のプレゼンから</h3>

<ul>
<li><a href="http://slide.rabbit-shocker.org/authors/kou/devmi-2013/">http://slide.rabbit-shocker.org/authors/kou/devmi-2013/</a></li>
</ul>


<h2>rabbiter 問題</h2>

<p>自己紹介の時に rabbit を使ったので、せっかくなので、
rabbiter を使おうとしたのですが、今回も事前に動かせる状態までは
もっていけませんでした。</p>

<p>しかし、
Homebrew で rabbiter がインストールできなかったり、動かなかったりしたのが、
須藤さんの助言で解決しました。</p>

<p>まず <code>libffi</code> は <code>PKG_CONFIG_PATH</code> で <code>libffi.pc</code> の場所を指定すれば通りました。</p>

<p>```</p>

<pre><code>export PKG_CONFIG_PATH=/usr/local/Cellar/libffi/3.0.13/lib/pkgconfig
gem install rabbiter
</code></pre>

<p>```</p>

<p>この件は <code>/usr/local/lib/pkgconfig</code> に symlink がないのが問題なので、
<a href="https://github.com/Homebrew/homebrew/pull/30516">Homebrew 側の問題の修正</a>
を pull request してみました。</p>

<p>次に <code>rabbiter --filter twitter</code> のように起動しても
<code>(rabbiter:99703): GLib-GIO-ERROR **: No GSettings schemas are installed on the system</code>
ですぐに落ちてしまうという問題が起きました。</p>

<p>これは須藤さんに調べてもらって、環境変数 <code>GSETTINGS_SCHEMA_DIR</code> で <code>schemas</code> のディレクトリを指定すれば良いということで、</p>

<p>```</p>

<pre><code>export GSETTINGS_SCHEMA_DIR=/usr/local/Cellar/gsettings-desktop-schemas/3.12.2/share/glib-2.0/schemas
rabbiter --filter 'twitter'
</code></pre>

<p>```</p>

<p>のように起動して解決しました。</p>

<p>こちらは対処方法がわからなかったので、
<a href="https://github.com/Homebrew/homebrew/issues/26455">gsettings-desktop-schemas crashes under current configure options</a>
という同様の現象が報告されている issue に回避策をコメントしておきました。</p>

<p>その後も以下のエラーで動いていませんでしたが、これは
<code>~/.rabbit/twitter-oauth.yaml</code>
が古いままで、アプリ連携の許可を取り消してしまっていたためで、
ファイルを削除して許可し直せば直りました。</p>

<p>```</p>

<pre><code>% rabbiter --filter 'twitter'
[エラー]
[twitter] invalid status code: 401.
</code></pre>

<p>```</p>

<h2>自分のスライド</h2>

<p>最後に自分の自己紹介の時に使ったスライドを載せておきます。
<code>ActiveLdap</code> と書いていますが、
<code>ActiveSambaLdap</code> の間違いでした。</p>

<iframe src="http://slide.rabbit-shocker.org/authors/znz/amagasakirb-201406/viewer.html"
        width="640" height="524"
        frameborder="0"
        marginwidth="0"
        marginheight="0"
        scrolling="no"
        style="border: 1px solid #ccc; border-width: 1px 1px 0; margin-bottom: 5px"
        allowfullscreen> </iframe>


<div style="margin-bottom: 5px">
  <a href="http://slide.rabbit-shocker.org/authors/znz/amagasakirb-201406/" title="普段使っている須藤さん関連プロダクツ">普段使っている須藤さん関連プロダクツ</a>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[caffでキーサインした]]></title>
    <link href="http://blog.n-z.jp/blog/2014-06-22-key-sign-caff.html"/>
    <updated>2014-06-22T19:07:19+09:00</updated>
    <id>http://blog.n-z.jp/blog/key-sign-caff</id>
    <content type="html"><![CDATA[<p><a href="https://wiki.debian.org/KansaiDebianMeeting/20140622" title="第 85 回 関西 Debian 勉強会">第 85 回 関西 Debian 勉強会</a>
で
<a href="https://launchpad.net/~mocchi">坂本さん</a>とキーサインをしたので、そのメモです。</p>

<!--more-->


<h2>対象バージョン</h2>

<ul>
<li>Ubuntu 12.04.4 LTS</li>
<li>gnupg 1.4.11-3ubuntu2.5</li>
<li>signing-party 1.1.4-1</li>
</ul>


<h2>事前準備</h2>

<p>事前にキーサインをするとわかっていれば <code>gpg-key2ps</code> コマンドで fingerprint の紙を用意しておくと良いと思います。
今回は少人数だったので、
fingerprint は画面上で見せて確認してもらいました。</p>

<h2>本人確認</h2>

<p>対面で運転免許証などの写真付きの身分証明書で名前を確認して、
それと署名対象の鍵の uid に入っている名前が一致するのを確認しておきます。
また、後で署名するために fingerprint の情報も入手しておきます。</p>

<h2>caff の設定</h2>

<p>基本的には
<a href="http://tokyodebian.alioth.debian.org/pdf/debianmeetingresume200910-presentation.pdf">Why GPG Key sign? 東京エリア Debian 勉強会 in OSC 2009 Tokyo/Fall</a>
の PDF の内容のままです。</p>

<h3>.caffrc</h3>

<p>自分の鍵 ID を <code>gpg --list-secret-keys</code> で確認すると、
<code>4096R/B4222F7A</code> とわかるので、
<code>gpg --fingerprint B4222F7A</code>
で fingerprint 全体を確認しておきます。
(fingerprint の末尾が鍵 ID です。)</p>

<p>spam よけのために email のところはちょっと改変していますが、
<code>~/.caffrc</code> は以下のように設定しています。
<code>keyid</code> は fingerprint の末尾のうち、
設定例と同じ長さだけ普通の鍵 ID よりちょっと長めに取り出して設定しています。
<code>owner</code> と <code>email</code> はメール送信の時に使われます。</p>

<p>```perl ~/.caffrc</p>

<pre><code># .caffrc -- vim:ft=perl:
# This file is in perl(1) format - see caff(1) for details.

$CONFIG{'owner'} = 'Kazuhiro NISHIYAMA';
$CONFIG{'email'} = 'zn mbf.nifty.com';
#$CONFIG{'reply-to'} = 'foo@bla.org';

# You can get your long keyid from
#   gpg --with-colons --list-key &lt;yourkeyid|name|emailaddress..&gt;
#
# If you have a v4 key, it will simply be the last 16 digits of
# your fingerprint.
#
# Example:
#   $CONFIG{'keyid'} = [ qw{FEDCBA9876543210} ];
#  or, if you have more than one key:
#   $CONFIG{'keyid'} = [ qw{0123456789ABCDEF 89ABCDEF76543210} ];
$CONFIG{'keyid'} = [ qw{262ED8DBB4222F7A} ];

# Select this/these keys to sign with
#$CONFIG{'local-user'} = [ qw{EE739B28C657086C 9B585538ED7E1B73 262ED8DBB4222F7A C9429DABCB28285B} ];

# Additionally encrypt messages for these keyids
#$CONFIG{'also-encrypt-to'} = [ qw{EE739B28C657086C 9B585538ED7E1B73 262ED8DBB4222F7A C9429DABCB28285B} ];

# Mail template to use for the encrypted part
#$CONFIG{'mail-template'} = &lt;&lt; 'EOM';
#Hi,
#
#please find attached the user id{(scalar @uids &gt;= 2 ? 's' : '')}
#{foreach $uid (@uids) {
#    $OUT .= "\t".$uid."\n";
#};}of your key {$key} signed by me.
#
#If you have multiple user ids, I sent the signature for each user id
#separately to that user id's associated email address. You can import
#the signatures by running each through `gpg --import`.
#
#Note that I did not upload your key to any keyservers. If you want this
#new signature to be available to others, please upload it yourself.
#With GnuPG this can be done using
#       gpg --keyserver pool.sks-keyservers.net --send-key {$key}
#
#If you have any questions, don't hesitate to ask.
#
#Regards,
#{$owner}
#EOM
</code></pre>

<p>```</p>

<h3>~/.caff/gnupghome/gpg.conf の設定</h3>

<p>以前参考にした設定のまま</p>

<p><code>text ~/.caff/gnupghome/gpg.conf
keyserver pgp.mit.edu
cert-digest-algo SHA256
personal-digest-preferences SHA256
</code></p>

<p>となっていました。
PDF では SHA512 になっていたので、
SHA256 から SHA512 に変更しました。
今日の caff での署名した時点では SHA256 のままだったので、
次回から変わる予定です。</p>

<p><code>text ~/.caff/gnupghome/gpg.conf
keyserver pgp.mit.edu
cert-digest-algo SHA512
personal-digest-preferences SHA512
</code></p>

<h2>caff -u で署名</h2>

<p>spam よけのためメールアドレスの所は改変した状態のログは以下の通りです。
「本当に署名しますか? (y/N)」のところで身分証明書と一緒に確認した fingerprint と合っているか確認します。</p>

<p>最後にメールを送信して終了です。
相手の鍵で暗号化されたメールが localhost の SMTP サーバー送信されます。</p>

<p>```console</p>

<pre><code>% caff -u B4222F7A D66FD341
[INFO] Importing key 262ED8DBB4222F7A from your normal GnuPGHome.
[INFO] fetching keys, this will take a while...
[INFO] Sign the following keys according to your policy, then exit gpg with 'save' after signing each key
gpg --local-user B4222F7A --homedir=/home/kazu/.caff/gnupghome --secret-keyring /home/kazu/.gnupg/secring.gpg --no-auto-check-trustdb --trust-model=always --edit 25DA5B9699F132DB74BD2270B5A586C7D66FD341 sign
gpg (GnuPG) 1.4.11; Copyright (C) 2010 Free Software Foundation, Inc.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.


pub  4096R/D66FD341  作成: 2014-06-22  満了: 無期限       利用法: SC
sub  4096R/5D3BA622  作成: 2014-06-22  満了: 無期限       利用法: E
[ unknown] (1). Takashi Sakamoto &lt;o-takashi sakamocchi.jp&gt;


pub  4096R/D66FD341  作成: 2014-06-22  満了: 無期限       利用法: SC
 主鍵の指紋: 25DA 5B96 99F1 32DB 74BD  2270 B5A5 86C7 D66F D341

     Takashi Sakamoto &lt;o-takashi sakamocchi.jp&gt;

本当にこの鍵にあなたの鍵“Kazuhiro NISHIYAMA &lt;zn mbf.nifty.com&gt;”で署名してよいですか
(B4222F7A)

本当に署名しますか? (y/N) y

次のユーザーの秘密鍵のロックを解除するには
パスフレーズがいります:“Kazuhiro NISHIYAMA &lt;zn mbf.nifty.com&gt;”
4096ビットRSA鍵, ID B4222F7A作成日付は2010-06-27


gpg&gt; save
[INFO] B5A586C7D66FD341 1 Takashi Sakamoto &lt;o-takashi sakamocchi.jp&gt; done.
[INFO] key 25DA5B9699F132DB74BD2270B5A586C7D66FD341 done.
Mail signature for Takashi Sakamoto &lt;o-takashi sakamocchi.jp&gt; to 'o-takashi sakamocchi.jp'? [Y/n]
%
</code></pre>

<p>```</p>

<h2>caff からのメールを受け取った相手のすべきこと</h2>

<p>暗号化されたメールが届くので、
対応する秘密鍵を使って復号してメールを確認します。
さらにその中にある署名を自分の鍵束にインポートしてキーサーバーに送信します。</p>

<p>caff のやり方はここでメールアドレスの到達性もチェックしているようなので、
署名した側はキーサーバーに送信する必要はなさそうです。
むしろそういうことをしないようにするために
<code>~/.caff/gnupghome</code> に独自の鍵束を用意しているように思いました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第 85 回 関西 Debian 勉強会に参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2014-06-22-kansai-debian-meeting.html"/>
    <updated>2014-06-22T13:43:06+09:00</updated>
    <id>http://blog.n-z.jp/blog/kansai-debian-meeting</id>
    <content type="html"><![CDATA[<p><a href="https://wiki.debian.org/KansaiDebianMeeting/20140622" title="第 85 回 関西 Debian 勉強会">第 85 回 関西 Debian 勉強会</a>
に参加してきました。</p>

<p>そのときのメモです。
詳細は勉強会のページからリンクされている資料を参照してください。</p>

<!--more-->


<h2>Intro</h2>

<ul>
<li>MATE 1.8 が Debian に入ったという話

<ul>
<li><a href="https://www.debian.org/News/weekly/2014/10/" title="Debian Project News - June 9th, 2014">Debian Project News &ndash; June 9th, 2014</a></li>
</ul>
</li>
<li>Debian 6 の LTS (long term support) の話

<ul>
<li>全パッケージが対象というわけではない</li>
<li>たとえば rails とか chromium とかは対象外</li>
</ul>
</li>
<li>Berkeley DB を post jessie で外す予定

<ul>
<li>AGPL に変わったから</li>
</ul>
</li>
<li>事前課題発表と自己紹介

<ul>
<li>おすすめの IM</li>
<li>webwml-git の運用</li>
<li>web-mode.el (melpa にはある)</li>
</ul>
</li>
</ul>


<h2>「Linuxのドライバメンテナになった体験記」(担当：坂本)</h2>

<ul>
<li>質問から派生して残った疑問点

<ul>
<li>character device とは何か (block device との違いは何か)</li>
</ul>
</li>
</ul>


<h2>「Debian での systemd とのつきあい方」(担当：佐々木)</h2>

<p>状況確認コマンドいろいろのメモです。
一部のコマンドは自動で <code>$PAGER</code> を通してくれるようですが、
<code>PAGER=lv</code> の場合は <code>LV=-c</code> がないとエスケープシーケンスが解釈されなくて読みにくくなります。</p>

<ul>
<li><code>systemd-analyze</code></li>
<li><code>systemd-analyze blame</code></li>
<li><code>systemd-analyze plot &gt; systemd-analyze_plot.svg</code></li>
<li><code>systemctl list-dependencies</code></li>
<li><code>systemctl status</code></li>
<li><code>systemctl list-unit-files</code></li>
<li><code>systemctl list-units</code></li>
<li><code>sudo LV=-c journalctl</code></li>
<li><code>systemd-cgls</code></li>
</ul>

]]></content>
  </entry>
  
</feed>
