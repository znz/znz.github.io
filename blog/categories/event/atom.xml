<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: event | @znz blog]]></title>
  <link href="http://blog.n-z.jp/blog/categories/event/atom.xml" rel="self"/>
  <link href="http://blog.n-z.jp/"/>
  <updated>2017-03-23T21:39:39+09:00</updated>
  <id>http://blog.n-z.jp/</id>
  <author>
    <name><![CDATA[Kazuhiro NISHIYAMA]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[第77回 Ruby関西 勉強会に参加しました]]></title>
    <link href="http://blog.n-z.jp/blog/2017-03-04-rubykansai77.html"/>
    <updated>2017-03-04T13:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/rubykansai77</id>
    <content type="html"><![CDATA[<p><a href="https://rubykansai.doorkeeper.jp/events/58025" title="第77回 Ruby関西 勉強会">第77回 Ruby関西 勉強会</a>
に参加しました。</p>

<!--more-->


<p>以下、そのメモです。</p>

<h2>会場</h2>

<ul>
<li>地図が最初はグランフロントをさしていた。(昨晩直しました。) (doorkeeper のシステムで住所を変えただけど、地図の方は変わらないらしい。)</li>
<li>会場はヒルトンプラザウエストで、ヒルトンプラザイーストとどちらなのかわかりにくい。</li>
<li>工事中が多くて場所がわかっていてもたどり着きにくかったらしい。</li>
</ul>


<h2>最適化のやり方</h2>

<ul>
<li><a href="http://oke-ya.com/devil.html">あくまのおしごと</a>の宣伝</li>
<li>KEN_ALL.CSV を読み込んで東西南北を含む行をカウントするプログラムを例に</li>
<li>最初に全部読んでメモリ上にのせて <code>each_line</code> (メモリ効率を気にするなら元の <code>open</code> 中に <code>f.gets</code> の方が良さそう)</li>
<li>配列を find せずに Hash を使う</li>
<li>配列に対象行をためていって length をとるのではなく数値でカウント</li>
<li>同じメソッド呼び出しをローカル変数に代入して減らす</li>
<li><code>sort</code> から <code>sort_by</code></li>
<li>早すぎる最適化はするべきではない</li>
<li>気をつけるポイント</li>
<li>IO はなるべく短く</li>
<li>データ構造(もたせ方)を工夫する</li>
<li>ループの中でオブジェクトをなるべく作らない</li>
<li>文字列、配列、ハッシュは数値やシンボルとくらべてメモリ消費量が多い点を心得ておく</li>
<li>質疑応答</li>
<li>データが大きい時や大きさがわからないときは一気に読まない方が良さそう</li>
<li>SQL にあるような何行かごとに処理というのは専用のメソッドはなさそう</li>
<li><code>/北|南|東|西/</code> は <code>/[北南東西]/</code> の方が良いのではないかというツッコミ</li>
<li>西東京みたいなのは西と東でカウントされるのかという話 - 片方しかカウントされない実装になっていた。</li>
<li>カウント対象は限定されているので、ループの中で <code>||=</code> で初期化するのではなく <code>{"北" =&gt; 0}'</code> のように初期値をもつのもあり。 <code>Hash.new { 0 }</code> のような方法もあり。</li>
<li>最後にもう一度、<a href="http://oke-ya.com/devil.html">あくまのおしごと</a>の宣伝</li>
<li><a href="https://www.slideshare.net/yalab/ruby-72795596">Rubyコードの最適化</a></li>
</ul>


<h2>Rails 5.1.0.beta1はどのようにモダンなJavaScript開発を実現しているのか？</h2>

<ul>
<li>webpacker gem を使ったデモ</li>
<li><code>bundle exec rails webpacker:install:react</code></li>
<li>config/webpack/shared.js でビルドする対象を指定</li>
<li>bin/webpack-dev-server は localhost:8080 で待ち受ける express のサーバー</li>
<li>bin/webpack は public 以下に出力</li>
<li><code>javascript_pack_tag</code> の実装確認</li>
<li><code>dev_server_host</code> が設定されていればそこから、なければ digest もしくは直接</li>
<li>質疑応答</li>
<li>フロントエンドを知らない人は sprockets で良いのではないか</li>
<li>sprockets と webpacker の違い</li>
<li>deploy するときは? webpacker-dev-server ではなく、 webpack で public 以下に生成する</li>
<li>情報源は? rails guide などにはまだ。 master でもまだ変化が続いている。</li>
<li>スタイルシートはコンパイルしてくれないのか? 現状デフォルトで生成される config では対象ではない。 webpack の知識があって設定すれば可能。</li>
<li><a href="https://speakerdeck.com/chimame/rails-5-dot-1-0-dot-beta1hadofalseyounimodannajavascriptkai-fa-woshi-xian-siteirufalseka">Rails 5.1.0.beta1はどのようにモダンなJavaScript開発を実現しているのか？ // Speaker Deck</a></li>
</ul>


<h2>休憩</h2>

<ul>
<li>14:20 まで</li>
</ul>


<h2>Welcome to tebukuro</h2>

<ul>
<li>tebukuro とは</li>
<li>イベント、チケット管理サービス</li>
<li>Shinosaka.rb のプロダクト</li>
<li>なぜ tebukuro</li>
<li>既存サービスへの不満</li>
<li>使っているもの</li>
<li>rails</li>
<li>postgresql</li>
<li>node.js など</li>
<li>CI: Wercker から Jenkins に移行中</li>
<li>開発環境は docker compose</li>
<li>本番環境も docker</li>
<li>Dcoker を使う理由</li>
<li>コンテナ指向でシンプルに保てる</li>
<li>どの環境でも動作する</li>
<li>スケーラブル: コンテナ単位で可能</li>
<li>GCP</li>
<li>なぜOSSなのか</li>
<li>開発方法も他のOSSと同じ</li>
<li>OSS開発の敷居をさげるための素振りもできる</li>
<li>英語の勉強もできちゃう</li>
<li>もう一つのねらい</li>
<li>betaやalphaのライブラリを積極的に採用</li>
<li>バグを踏んでライブラリへのPRチャンスを作る</li>
<li>PRとはいかずともissue報告はできる</li>
<li>目指すコミュニティ</li>
<li><a href="https://github.com/shinosakarb/tebukuro">https://github.com/shinosakarb/tebukuro</a></li>
</ul>


<h2>Create React App ではじめる Rails の SPA</h2>

<ul>
<li>ライブコーディング</li>
<li>実装を見ると <code>.html</code> が <code>index.html</code> より優先されるっぽい</li>
<li>RFC とかは単語が一般的すぎて見つけられなかったというコネタ</li>
<li>(後で <a href="https://www.rfc-editor.org/retrieve/bulk/">https://www.rfc-editor.org/retrieve/bulk/</a> からダウンロードして txt ファイルを index.html で検索してみたけど、書いてなさそうだった。調べていた時に思い出したけど IIS は index ではなかった (確認したら default だった) ので RFC に書かれている可能性は低そう)</li>
<li>yarn は yarnpkg コマンドの方が主流になるかもしれないらしい</li>
<li>react-router-dom</li>
<li>公式サイトは v4 系のドキュメントになっている</li>
<li>webpack も公式サイトは 2 系のドキュメントになっていて 1 系はではないらしい</li>
<li>react-router-dom が beta7 になっていて、公式サイトのデモが beta6 では動かなかった。</li>
<li>時間がなかったので、 OAuth との組み合わせは完成版でデモ</li>
</ul>


<h2>Rubyのオススメの機能７選</h2>

<ul>
<li><a href="http://qiita.com/cuzic/items/a265f140fdff289d5c07">Ruby のオススメの機能７選</a></li>
<li><code>Enumerator.new</code></li>
<li><code>Object#tap</code></li>
<li><code>Float::INFINITY</code></li>
<li><code>Enumerable#each_slice</code></li>
<li><code>Array#shelljoin</code></li>
<li>(単純に実行するだけなら複数引数の <code>system</code> などを使った方が良さそうと思っていたけど、多段 ssh とかの時には確かに良さそう。)</li>
<li><code>SecureRandom.hex</code></li>
<li>Flip Flop 演算子</li>
<li>質疑応答</li>
<li>配列に <code>with_index(1)</code> は使えないので、<code>each.with_index(1)</code> にする必要がある</li>
<li><code>each_with_index</code> だと初期値を指定できないので、この場合は使えない</li>
</ul>


<h2>Ruby初級者向けレッスン &mdash; ブロック</h2>

<p>初心者の人は少なかった。
告知タイミングなどの問題で、スタッフの人が多かった。</p>

<p>追加して <code>self</code> が欲しい時は <code>Array#&lt;&lt;</code> とか <code>Hash#update</code> とか。</p>

<h2>クロージング</h2>

<ul>
<li><a href="https://rails-follow-up-osaka.doorkeeper.jp/events/58097">Rails Follow-up Osaka #7</a></li>
<li><a href="https://rubykansai.doorkeeper.jp/events/57723">関西Ruby会議2017 CFP</a>募集中</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OSS Gate大阪ワークショップ2017-02-25に参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2017-02-25-oss-gate-workshop.html"/>
    <updated>2017-02-25T23:59:59+09:00</updated>
    <id>http://blog.n-z.jp/blog/oss-gate-workshop</id>
    <content type="html"><![CDATA[<p><a href="https://oss-gate.doorkeeper.jp/events/56141" title="OSS Gate大阪ワークショップ2017-02-25">OSS Gate大阪ワークショップ2017-02-25</a>にメンターとして参加しました。</p>

<!--more-->


<h2>事前準備</h2>

<p>ざっと見て大丈夫そうだったので、細かくチェックしていなかったのですが、
<a href="https://oss-gate.doorkeeper.jp/events/56141" title="イベントページ">イベントページ</a>
に書いてある説明や、
そこからリンクされている
<a href="https://github.com/oss-gate/workshop/blob/master/tutorial/scenario.md#%E3%82%B7%E3%83%8A%E3%83%AA%E3%82%AA" title="シナリオ">シナリオ</a>
などは事前に見ておくと流れがわかって良さそうだと
後から思いました。</p>

<h2>移動</h2>

<p>最寄駅をちゃんとチェックしていなくて、
本町駅に行ってしまって、
ちょっと歩きました。
時間に余裕を持って出発していたので、
開始には間に合いました。</p>

<h2>準備</h2>

<p>ビギナーの横に少なくとも一人はメンターがいるようになるように席がある程度決まっていて、
無線LANの設定をしたりしながら開始を待っていました。</p>

<p>最初、無線LANに繋がるのにIPアドレスが割り振られないという状況になっていて、
ちゃんと繋がるまで少し時間がかかりましたが、問題なく始まりました。</p>

<h2>アイスブレイク</h2>

<p>ある程度、説明があった後、アイスブレイクとして4,5人のグループで軽く話をしました。
このグループ分けはこの時だけのものだったらしく、
後は個別にわかれていました。</p>

<h2>対象OSSの決定</h2>

<p>対象とする OSS をビギナーの人が決めるというのが最初にありました。</p>

<p>デモとして、隣にいたビギナーの人が呼ばれて、
前で決めていました。</p>

<p>席に戻ってきて、一緒に確認してみると、
前に出てひっかかることがあるといっていた OSS は環境依存の問題っぽい感じで、
結局他の OSS を選び直していました。</p>

<h2>対象OSSを動かす</h2>

<p>これは最初のデモで決まった OSS を例に進行役の人が
実際に細かくメモを取りつつ動かしてみるというデモをした後、
各自動かしてみるということをしていました。</p>

<p>その手順の中にライセンスが OSS かどうかを確認するというのが入っていました。
ライセンスの話はちゃんとするとそれだけで時間がかかってしまうので、
難しいところだと思いました。</p>

<p>担当していたビギナーの人は、
その時々の心情も含めて記録していて、
ちゃんとできていてすごいなと思って見ていました。</p>

<p>答えを先に言ってしまうのはよくないということだったはずなので、
知っていることでもほとんど口を挟まずに見ていました。
この辺りの加減は何度か参加して見ないとわからなそうな気がしました。</p>

<h2>休憩</h2>

<p>おやつ休憩が入りました。</p>

<h2>ミニふりかえり</h2>

<p>進行役の人が順番を間違えていたらしく、
休憩の後にミニふりかえりが入りました。</p>

<p>3列あったテーブルごとにほぼ同じペア数だったので、
ぐるっと回転するようにメンターが入れ替わって説明を聞く、
ということをしました。</p>

<p>担当しているビギナー以外の他のビギナーの人が何をやっているかというのは、
基本的にはふりかえりのタイミングしか聞く機会がないようなので、
興味深く聞きました。
ここがフィードバックできるポイントかも、という点も見つけられました。</p>

<h2>プロジェクトにフィードバックする</h2>

<p>時間配分のミスがあったらしく、2時間の予定が1時間になってしまっていたそうです。</p>

<p>担当していたビギナーの人は、この時間で、自分の言葉で書く、報告用にまとめ直す、
他の issues を見て英語にしなくても日本語のままの報告で良さそうという確認、
というところまでできていました。</p>

<h2>ふりかえり</h2>

<p>ミニふりかえりの時とは逆回りに入れ替わって、
またビギナーの人が何をやったのか話を聞きました。</p>

<p>ドキュメントの修正の pull request をすると良いのでは、
(明確な修正だと複雑な英語でのやりとりも発生しないので楽)
という話をしました。</p>

<h2>まとめ、アンケート記入</h2>

<p>まとめの話とアンケート記入がありました。</p>

<p>アンケート記入は <a href="https://github.com/oss-gate/workshop">https://github.com/oss-gate/workshop</a> を fork して
tutorial/retrospectives/2017-02-25-osaka の beginner.yaml や mentor.yaml をコピーして pull request を送る、
という方法でした。</p>

<p>YAML の文法エラーはマージする進行役の人が直すから細かいことは気にしないで良いということでした。</p>

<h2>ワークショップのふりかえり</h2>

<p>アンケート結果を見ながらふりかえりをしました。</p>

<p>関西も次回からは、進行役の人も関西の人でやる必要があるということで、
メンター用のアンケートの「進行役をできそうか」で
「何人かでフォローしあえばやれそう」が多かったので、
何人かで分担しながらやることになりそうな気がしました。</p>

<p>アンケート結果の表示には <code>aggregate.rb</code> というのを使っていたように見えたので、
たぶん <code>tutorial/retrospectives/aggregate.rb</code> を実行していたのだろうと思いました。</p>

<h2>最後に</h2>

<p>テーブルの移動などをして、宣伝用の集合写真を撮って終わりました。</p>

<h2>終わった後</h2>

<p>終わった後は、用事があったので、懇親会には参加せずにそのまま帰りました。</p>

<p>用事は梅田で時間が少し空いていて微妙だったので、
梅田まで歩いて帰ったところ、
ちょうど良いぐらいの時間になりました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[関西 Debian 勉強会 + openSUSE Meetup + LILO & 東海道らぐLT大会に参加しました]]></title>
    <link href="http://blog.n-z.jp/blog/2017-01-29-kansai4cjointsession.html"/>
    <updated>2017-01-29T13:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/kansai4cjointsession</id>
    <content type="html"><![CDATA[<p><a href="https://opensuseja.connpass.com/event/47907/" title="関西 Debian 勉強会 + openSUSE Meetup + LILO &amp; 東海道らぐLT大会">関西 Debian 勉強会 + openSUSE Meetup + LILO &amp; 東海道らぐLT大会</a>
に参加しました。</p>

<!--more-->


<h2>自己紹介など</h2>

<ul>
<li>人数が多いので、一言ずつの自己紹介と出欠チェックのための connpass のアカウントの申告でした。</li>
<li>会場費は人数が多かったのと学生が少なかったので、学生無料で社会人 100 円になりました。</li>
<li>Debian の発表者の到着が遅れていたので、順番が入れ替えになりました。</li>
<li>ハッシュタグは connpass のページに書いてあるように <code>#Kansai4cJointSession</code></li>
</ul>


<h2>Leap 42.2, 42.3とAsia Summitについて語る</h2>

<ul>
<li>Tumbleweed : 常に最新 (ローリングリリース)</li>
<li>Leap : 安定</li>
<li>Leap 42 系は 42.1 が最初</li>
<li>デスクトップ環境のデフォルトは存在しないが KDE Plasma を使っている人が多いらしい</li>
<li>YaST は GUI, TUI でいろいろ設定できる</li>
<li>パーティショニングから fstab の設定までまとめてできる</li>
<li>Samba の共有の設定も簡単にできる</li>
<li>YaST2 と YaST の違い : 特にない? 会場にいる人は YaST1 の頃を誰も知らなかった。 Ruby に書き換わった時も YaST3 にはならなかった。</li>
<li>openSUSE.Asia Summit</li>
<li><a href="http://blog.geeko.jp/ftake/1405">http://blog.geeko.jp/ftake/1405</a></li>
<li>KDE の翻訳が危うい</li>
</ul>


<h2>openSUSE Build Serviceへの愛を語る</h2>

<ul>
<li>etckeeper や tamago などのパッケージのメンテナ</li>
<li>デフォルトのファイルシステムが btrfs</li>
<li>VirtualBox のゲスト OS としてインストールしたら Guest Additions が最初から入っている</li>
<li>DE (デスクトップ環境) が選べるからというのがカメレオン (Geeko) の由来らしい</li>
<li>1枚のインストーラDVDで複数DE、複数ロケール対応</li>
<li>dpkg 系は git build package が楽なのでは? → 会場から CI などに使える一式の環境が一発で用意できるのが良いという話</li>
<li>アカウントは Novell のシングルサインオン</li>
<li>OBS にログインして実演</li>
<li>github の fork 的なこともできる</li>
<li>ビルドされたパッケージを公開するかどうかを選べる</li>
<li>ビルドされたパッケージのユーザーとしては Ubuntu PPA のように使える</li>
<li>github の pull request のようなこともできる (Submit Request)</li>
<li>spec ファイルに clean 処理が不要</li>
<li>OBS の弱点はネットに繋がっていないとほとんど何もできない</li>
<li><a href="http://miniconf.debian.or.jp/">Mini Debian Conference Japan 2016</a> の Open Build Service in Debian の資料も参照</li>
<li>upstream が git だった場合の話</li>
</ul>


<h2>Debian Updates</h2>

<ul>
<li>到着が遅れた話</li>
<li>LaTeX Beamer のテーマを更新した話</li>
<li>Debian とは?</li>
<li>Debian Updates</li>
<li>autoreconf の話</li>
<li>autoconf-archive パッケージがあるので古い autoconf に依存しているものも動く</li>
<li>Next Debian Release</li>
<li>ビルドインフラが足りないからサポートアーキテクチャから落ちる話</li>
<li>新テーマ Soft waves</li>
<li>Tシャツが作りにくい</li>
<li><a href="https://wiki.debian.org/DebianDesktop/Artwork/Stretch">https://wiki.debian.org/DebianDesktop/Artwork/Stretch</a></li>
<li>PHP5 が消える話</li>
<li>Wayland の話</li>
<li>emacs 25 があるが emacs で入るのは 24</li>
<li>vim が 8</li>
<li>Linux kernel は 4.9 が LTS <a href="https://lkml.org/lkml/2017/1/19/339">https://lkml.org/lkml/2017/1/19/339</a></li>
<li>KDE Connect</li>
</ul>


<h2>集合写真</h2>

<p>休憩時間に集合写真を撮りました。</p>

<h2>LT 大会</h2>

<ul>
<li>Debian を Windows タブレットに入れる話</li>
<li><a href="https://github.com/znz/rabbit-slide-ssh-ed25519">sshでed25519鍵</a> の話をしました。(<a href="/blog/2016-12-04-ssh-ed25519.html">sshでed25519鍵を使うようにした話</a>と基本的に同じ内容なので、スライドサイトへの公開はしていません。)</li>
<li>16進数が好きになりました</li>
<li>年末恒例、IM飲み会に行ってみた</li>
<li>Debconf 16, cape town, South Africa</li>
</ul>


<h2>今後の予定の告知</h2>

<ul>
<li><a href="https://wiki.debian.org/KansaiDebianMeeting">https://wiki.debian.org/KansaiDebianMeeting</a></li>
<li><a href="https://lilo.linux.or.jp/">https://lilo.linux.or.jp/</a></li>
<li><a href="https://histudy.github.io/">姫路IT系勉強会</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第76回 Ruby関西 勉強会に参加しました]]></title>
    <link href="http://blog.n-z.jp/blog/2017-01-14-rubykansai76.html"/>
    <updated>2017-01-14T17:30:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/rubykansai76</id>
    <content type="html"><![CDATA[<p><a href="https://rubykansai.doorkeeper.jp/events/55398" title="第76回 Ruby関西 勉強会">第76回 Ruby関西 勉強会</a>
に参加して発表してきました。</p>

<!--more-->


<p>以下、そのメモです。</p>

<h2>会場</h2>

<p>ちょっと場所がわかりにくいところでした。
グランフロントに着いたあと、ちゃんと「タワーB」を目指して、一度9階で乗り換えて18階に上がりました。</p>

<h2>オープニング</h2>

<ul>
<li>会場案内</li>
<li>懇親会は適当に集まる感じ</li>
<li>ネットワークあり</li>
<li>ustream 中継あり (ライブのみで録画はなし)</li>
<li>公式タグは rubykansai76</li>
<li>公式ハッシュタグは <code>#rubykansai</code></li>
<li>受付はあとで</li>
</ul>


<h2>ゲーム会社でのRuby / Rails活用事例</h2>

<ul>
<li>スポンサーセッション的なセッション</li>
<li>Aiming さんは開発も運用もしている</li>
<li>MessagePack で C++ や C# とやりとり</li>
<li>共通基盤開発</li>
<li>インフラ</li>
<li>運用</li>
<li>Ruby は開発速度が利点</li>
<li>実行速度が求められるサーバーは C++ のままのものもあるらしい</li>
</ul>


<h2>Rails 使いがデータ集計でハマりがちな罠</h2>

<ul>
<li>ActiveRecord は集計には向いていない</li>
<li>集計に O/R mapping は不要</li>
<li>サブクエリが入りみだれると ActiveRecord や ARel はつらい</li>
<li>scope の組合せで DRY にする作戦もうまくいくことがまれでだいたいはカオスになる</li>
<li>適材適所</li>
<li>アンチパターン2: 1項目1クエリ作戦</li>
<li>アンチパターン3: 集計データが text</li>
<li>正体は YAML, JSON のデータ</li>
<li>頑張って移行</li>
<li>SQL は覚えるしかない</li>
<li>alter table せずに drop して create table しなおして集計し直し</li>
<li>クエリの分割: 中間集計テーブル</li>
<li>Q: 集計中に空のテーブルが見えてしまうのでは?</li>
<li>PostGRESQL, Redshift だと DDL にもトランザクションがきくので大丈夫</li>
<li>順序が重要</li>
<li>bricolage: SQL 実行に特化したワークフローエンジン</li>
<li>Redshift 用</li>
<li>dry run できるというのが重要</li>
<li>AWS Redshift の特徴</li>
<li>PostgreSQL 系の SQL の便利機能</li>
<li>ウィンドウ関数</li>
<li>例: <code>rank()</code>, <code>row_number()</code></li>
<li>WITH 句</li>
<li>サブクエリの代わり</li>
<li>ネストが減る</li>
</ul>


<h2>Ruby ボード GR-CITRUS の紹介 #2</h2>

<ul>
<li>ロボホンが写真をとっていたがとれていない?</li>
<li>Ruby の話はほとんど出てこない</li>
<li>GR-CITRUS</li>
<li>チップに Ruby Inside と刻印されている</li>
<li>mruby/c という16ビットマイコンなどに向けたさらに省メモリなものがある</li>
<li>今日は mruby の話</li>
<li>本題は実装について</li>
<li>バインドしている mrbgem</li>
<li>mruby-math: Math.sin</li>
<li>mruby-numeric-ext: 10.chr, 0.zero?</li>
<li>独自実装のクラス</li>
<li>mruby 組込み方法</li>
<li>クロスコンパイル</li>
<li>mrbgem の独自追加</li>
<li>wrbb-v2lib-firm の build_config.rb を使う</li>
<li>クロスコンパイル方法は Qiita に記事がある</li>
<li>mrb 実行の仕組み</li>
<li>コード読み</li>
</ul>


<h2><code>frozen_string_literal</code> の話</h2>

<p>スライドはいつも通り
<a href="http://slide.rabbit-shocker.org/authors/znz/frozen_string_literal/">Rabbit Slide Show</a>
(<a href="https://rubygems.org/gems/rabbit-slide-znz-frozen_string_literal">RubyGems</a>),
<a href="http://www.slideshare.net/znzjp/frozenstringliteral">SlideShare</a>,
<a href="https://speakerdeck.com/znz/frozen-string-literal-falsehua">Speaker Deck</a>
にあげています。
(ソースは
<a href="https://github.com/znz/rubykansai76-frozen_string_literal">github</a>
にあげています。)</p>

<h2>Ruby モンキーパッチの世界</h2>

<ul>
<li>モンキーパッチとは</li>
<li>CarrierWaveDirect で <code>path/to/file</code>, <code>path/to/to/file</code>, <code>path/to/to/to/file</code> のようになるバグがあったのをモンキーパッチで対応した</li>
<li>ActiveSupport が <code>NilClass</code> に <code>blank?</code> メソッドを足している</li>
<li>Refinement</li>
<li>トップレベルの <code>using</code> は <code>using</code> より下にあれば <code>class</code> などの中も対象</li>
<li>クラススコープの <code>using</code> は <code>using</code> より下で <code>class</code> に対応する <code>end</code> までが対象</li>
<li><a href="https://docs.ruby-lang.org/en/trunk/syntax/refinements_rdoc.html">https://docs.ruby-lang.org/en/trunk/syntax/refinements_rdoc.html</a></li>
<li>Rails での例: <a href="https://github.com/rails/rails/blob/07307a7b9d14b752fc5aef474f3c29585676c9fa/activesupport/lib/active_support/core_ext/enumerable.rb#L117-L135">https://github.com/rails/rails/blob/07307a7b9d14b752fc5aef474f3c29585676c9fa/activesupport/lib/active_support/core_ext/enumerable.rb#L117-L135</a></li>
</ul>


<h2>Rails の有限オートマトン</h2>

<ul>
<li><a href="https://github.com/amatsuda/stateful_enum" title="stateful_enum">stateful_enum</a></li>
<li>graphviz や plantuml を使って図を出力できる</li>
<li>gulp で plantuml の図の自動更新</li>
<li><code>draw_uml</code> を使って rails 経由で図を表示</li>
<li>browser sync でブラウザーも自動リロード</li>
<li><code>draw_erd</code>, <code>draw_smd</code> というのもある</li>
<li>guard は rspec を流すのに使っていて、重くなるので gulp は開発の初期だけに使うもの用に分けている</li>
</ul>


<h2>告知 (Rails Girls Osaka, OSS Gate Osaka, 関西Ruby会議)</h2>

<ul>
<li>引き続き ogomr さん</li>
<li><a href="https://speakerdeck.com/ogom/ibentofalseshao-jie-tomu-ji">イベントの紹介と募集</a></li>
<li><a href="https://coderdojo-hommachi.doorkeeper.jp/events/56121">CoderDojo 本町 #4</a></li>
<li><a href="https://railsgirls-osaka.doorkeeper.jp/events/55949">RailsGirls Osaka #4 コーチ希望者募集</a></li>
<li><a href="https://railsgirls-osaka.doorkeeper.jp/events/55947">RailsGirls Osaka #4</a></li>
<li><a href="https://oss-gate.doorkeeper.jp/events/56141">OSS Gate Osaka #1</a></li>
<li><a href="https://rubykansai.github.io/kansai2017/">関西Ruby会議2017</a></li>
</ul>


<h2>Ruby初級者向けレッスン 60回 ─ クラス</h2>

<ul>
<li><a href="https://github.com/higaki/learn_ruby_kansai_76">https://github.com/higaki/learn_ruby_kansai_76</a></li>
<li>解答例</li>
<li><code>to_s</code> で <code>@name</code> なのは <code>name</code> の方が良いのではないかという話</li>
<li><code>age</code> の実装の話</li>
<li><code>Mashal.load Marshal.dump</code> の話</li>
</ul>


<h2>クロージング</h2>

<ul>
<li>懇親会の募集</li>
<li>Rails Follow-up Osaka の紹介</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LILO&東海道らぐオフラインミーティング 2017/01/07]]></title>
    <link href="http://blog.n-z.jp/blog/2017-01-07-lilo-tokaidolug.html"/>
    <updated>2017-01-07T13:20:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/lilo-tokaidolug</id>
    <content type="html"><![CDATA[<p><a href="https://lilo.connpass.com/event/47841/" title="LILO&amp;東海道らぐオフラインミーティング 2017/01/07">LILO&amp;東海道らぐオフラインミーティング 2017/01/07</a> に参加しました。</p>

<p>今回もアンカンファレンス形式でした。</p>

<!--more-->


<h2>メモ</h2>

<p>今回のメモです。</p>

<ul>
<li>本を読んでいたら電車を乗り過ごしてしまって一度梅田まで行ってしまってちょっと遅くなりました。(開始時刻の13時には間に合いました。)</li>
<li>会場の建物は同じでも、いつもの4階と違って6階でした。</li>
<li>ハッシュタグ: <code>#lilo_jp</code> <code>#東海道らぐ</code></li>
<li>登録参加者数 8名</li>
<li>自己紹介から</li>
<li><a href="https://opensuseja.connpass.com/event/47907/" title="関西 Debian 勉強会 + openSUSE Meetup + LILO &amp; 東海道らぐLT大会">関西 Debian 勉強会 + openSUSE Meetup + LILO &amp; 東海道らぐLT大会</a></li>
<li>ラズパイで音楽 (山内さん)</li>
<li>サンハヤトのハイレゾオーディオDACボード AS-E404RAS</li>
<li>Volumio</li>
<li>Spotify</li>
<li>AirPlay対応スピーカーにできた</li>
<li>lilo.linux.or.jp のサーバー管理の話 (自分)</li>
<li>unattended-upgrades の公式っぽさを確認するにはメンテナをみればいいのではという話があったので確認してみたところ、 unattended-upgrades のメンテナを確認すると apt のメンテナの一人でした。 cron-apt のメンテナは全然別の人でした。</li>
<li>休憩</li>
<li>LibreOffice Kaigi 2016.12 の時の資料を使っての話 (榎さん)</li>
<li>LibreOffice Conference の話</li>
<li>Debian を再インストールした話 (さとうさん)</li>
<li>OSM の話 (さかのしたさん)</li>
<li>Overpass API</li>
<li>umap</li>
<li>LOF の LILO 展示の復習 (まるいちさん)</li>
<li>gPhoto2</li>
<li>最後にまた <a href="https://opensuseja.connpass.com/event/47907/" title="関西 Debian 勉強会 + openSUSE Meetup + LILO &amp; 東海道らぐLT大会">関西 Debian 勉強会 + openSUSE Meetup + LILO &amp; 東海道らぐLT大会</a> についての案内</li>
</ul>


<h2>発表した内容</h2>

<p>スライドはいつも通り <a href="http://slide.rabbit-shocker.org/authors/znz/lilo-20170107/">Rabbit Slide Show</a> (<a href="https://rubygems.org/gems/rabbit-slide-znz-lilo-20170107">RubyGems</a>), <a href="https://slideshare.net/znzjp/lilolinuxorjp-20171">SlideShare</a>, <a href="https://speakerdeck.com/u/znz/p/lilo-dot-linux-dot-or-dot-jp-falsehua-2017nian-1yue">Speaker Deck</a> にあげています。(ソースは <a href="https://github.com/znz/lilo-20170107">github</a> にあげています。)</p>

<iframe src="https://slide.rabbit-shocker.org/authors/znz/lilo-20170107/viewer.html"
        width="640" height="524"
        frameborder="0"
        marginwidth="0"
        marginheight="0"
        scrolling="no"
        style="border: 1px solid #ccc; border-width: 1px 1px 0; margin-bottom: 5px"
        allowfullscreen> </iframe>


<div style="margin-bottom: 5px">
  <a href="https://slide.rabbit-shocker.org/authors/znz/lilo-20170107/" title="lilo.linux.or.jp の話 (2017年1月)">lilo.linux.or.jp の話 (2017年1月)</a>
</div>

]]></content>
  </entry>
  
</feed>
