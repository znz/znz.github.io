<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: event | @znz blog]]></title>
  <link href="http://blog.n-z.jp/blog/categories/event/atom.xml" rel="self"/>
  <link href="http://blog.n-z.jp/"/>
  <updated>2015-09-07T00:06:56+09:00</updated>
  <id>http://blog.n-z.jp/</id>
  <author>
    <name><![CDATA[Kazuhiro NISHIYAMA]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[llrrに参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2015-09-05-llrr.html"/>
    <updated>2015-09-05T10:30:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/llrr</id>
    <content type="html"><![CDATA[<p><a href="http://ll.jus.or.jp/2015/">LL Ring Recursive</a>
に参加しました。</p>

<!--more-->


<p>以下はそのメモです。</p>

<h2>Language Update</h2>

<ul>
<li>入場曲が笑点のテーマ</li>
<li>Python は他のイベントが重なっていて参加なし</li>
<li>最近の動向</li>
<li>ES6 から名前が 2015 になった</li>
<li>PHP7 がもうすぐ出る</li>
<li>Perl5 最近は定期リリース、 Perl6 は今年のクリスマスに確定</li>
<li>Ruby 2.x は最近は速度向上がメイン</li>
<li>夢の Ruby 2.0 (悪夢?)</li>
<li>Python よりは 2.0 への移行がうまくいった</li>
<li>JavaScript: arrow function, class</li>
<li>babel というトランスパイラを使いましょうという話</li>
<li>PHP7 は性能改善</li>
<li>Perl6 意味不明なオペレーターがたくさん (内積とか)</li>
<li>ドットはメソッド呼び出しで文字列連結がチルダ</li>
<li>Ruby はできるだけ移行措置を設けて非互換を入れていく</li>
<li>文字列リテラルのデフォルトを immutable にする magic comment の追加予定</li>
<li>古い JavaScript の書き方は JSLint や TypeScript などでチェック</li>
<li>PHP は <code>register_global</code> のようなものはなくなっていくが</li>
<li>POSIX 正規表現エンジンは削られて PCRE と Oniguruma の 2 つになる</li>
<li>Perl5 と Perl6 は非互換</li>
<li>Perl5 でも意味がない機能は削っていく</li>
<li>my の中に my をつけられるとか</li>
<li>Ruby は古いのをばっさり削ったのは 2.0 リリースの頃なのであまり覚えていない</li>
<li>他言語との比較</li>
<li>Ruby は Rails のためのランタイム</li>
<li>Perl6 は Perl6 のインタプリタ自体が Perl6 のサブセットで実装されている <a href="https://github.com/perl6/nqp/">https://github.com/perl6/nqp/</a></li>
<li>JVM でも動く</li>
<li>PHP は新機能を入れるのにも投票</li>
<li>JavaScript はいろんなところで動いている</li>
<li>Acrobat Reader とか地デジとか</li>
<li>Perl6 は 100 倍遅い</li>
<li>JavaScript は数値が浮動小数点数と仕様で決まっている</li>
<li>64 bit 整数が扱えない</li>
<li>文字列操作が mutable か immutable かは言語が作られた時代によるのではないかという話</li>
<li>sourcemap を使うと良い</li>
<li>ビット演算をすると 32 bit の符号なし整数になるので <code>x | 0</code> で型を指定するテクニックが asm.js などで使われている</li>
<li>Perl6 のラリーが考えた最強の正規表現</li>
<li>Ruby の <code>next_float</code></li>
<li>質問コーナー</li>
<li>JavaScript は <code>C++</code> のように記号の組み合わせの lambda のようなものではなく予約語 (<code>class</code>) を先に決めておいてあとで機能拡張している</li>
<li>ブラウザの JavaScript と node の JavaScript の違いとか node が出てきて module が整備されるようになったとか</li>
<li>マルチコアとか Erlang の話</li>
<li>文末が <code>.</code> は古い言語で <code>;</code> の方が新しい言語</li>
<li><code>.</code> の言語は <code>.</code> 抜けのデバッグではまる</li>
<li>Ruby では JRuby を使うかマルチプロセスで頑張る</li>
<li>golang で拡張を書いて使うという案も</li>
<li>今後の予定</li>
<li>JavaScript: babel が流行ってほしい</li>
<li>PHP はあまり愛を語っていない</li>
<li>PHP7.1 に入るかもしれない JIT コンパイラにご期待ください</li>
<li>Perl6 が出る</li>
<li>Ruby は 2.3 がクリスマスに出る予定で、それに向けて新機能の募集期間</li>
</ul>


<h2>IoT時代のLLスタック</h2>

<ul>
<li>入場曲がターミネーター</li>
<li>「それスマホでよくないですか?」</li>
<li>Round 1 IoT Circumstance</li>
<li>注目の国内/海外プレイヤ</li>
<li>注目の国内/海外トレンド</li>
<li><a href="http://itpro.nikkeibp.co.jp/atcl/news/15/040101147/" title="Amazon.com、日用品をボタン1つで注文できる小型機器「Dash Button」">Amazon.com、日用品をボタン1つで注文できる小型機器「Dash Button」</a></li>
<li>Amazon Echo</li>
<li>パイプ椅子1個壊すと4000円と書いてある控え室</li>
<li><a href="http://jp.techcrunch.com/2015/08/22/20150821smartthings-support-is-coming-to-amazon-echo/" title="Amazon EchoがSmartThingsのホームオートメーションをサポート">Amazon EchoがSmartThingsのホームオートメーションをサポート</a></li>
<li>Round 2 How about LL for device</li>
<li>組み込み言語との違い</li>
<li>なんでわざわざ LL (特に JS) なのか?</li>
<li><a href="http://konashi.ux-xu.com/">konashi</a>, tessel, 8pino</li>
<li>jsdo.it との連携</li>
<li><a href="https://twitter.com/okaji/status/640002760922939392" title="スマホで提供できないユーザーニーズを見つけたらそれはセンサーやらアクチュエータなりを積んだ専用機作ればいいよね">スマホで提供できないユーザーニーズを見つけたらそれはセンサーやらアクチュエータなりを積んだ専用機作ればいいよね</a></li>
<li>Perl でミサイル</li>
<li>mbed</li>
<li>開発環境はクラウドにある</li>
<li>Edison</li>
<li><code>rm -rf</code> ができるほど Linux が動いている</li>
<li>Firefox OS が動いているボード <a href="https://twitter.com/lljapan/status/640005059808395264" title="KDDI Open Web Board">KDDI Open Web Board</a></li>
<li>Firefox OS のスマホ用に作ったものがそのまま動く</li>
<li>Round 3 How about Device For LL</li>
<li>デバイスの制約について</li>
<li>制御の難しさ・楽しさ</li>
<li>Raspberry Pi 2</li>
<li>ハードウェアは特化したものじゃないと売れないが、それぞれに専用アプリがあると大変 (アカウント管理とか)</li>
<li>Final Round Future of IoT</li>
<li>我々は IoT の延長上に</li>
<li>鉄●28号を目指すのか</li>
<li>ドラ●もんを夢見るのか</li>
<li>ロボットに操られてる人間 (ルンバのためにとか)</li>
<li>Extra Round</li>
<li>ブレッドボードの未来</li>
<li>ボードゲームウェイ多すぎ</li>
<li>通信プロトコル多すぎ</li>
<li>BLE/MQTT/920MHz/6LoPAN</li>
<li>WebSocket/WebRTC</li>
<li>Questions From Audience</li>
<li><p>時間が来たので引き分け終了</p></li>
<li><p><a href="http://memoclip.y-okajima.com/">http://memoclip.y-okajima.com/</a> via <a href="https://twitter.com/okaji/status/640035516272906241">https://twitter.com/okaji/status/640035516272906241</a></p></li>
</ul>


<h2>昼休み</h2>

<p>LT に申し込みました。</p>

<h2>パネルディスカッション：エンジニア不足はいつまで続くのか</h2>

<ul>
<li>本当にエンジニア不足?</li>
<li>IPAの「IT人材白書」</li>
<li>IT人材不足の原因</li>
<li>『エンジニアtype』について</li>
<li><a href="http://engineer.typemag.jp/article/career-change" title="過去2年で最もチャンス広がる「未経験・異業種」転職事情～人生のコネクティング・ザ・ドッツを成就させるには ">過去2年で最もチャンス広がる「未経験・異業種」転職事情～人生のコネクティング・ザ・ドッツを成就させるには </a></li>
<li>「未経験」3つのパターン</li>
<li>業種未経験 SIなど異業種から技術者採用</li>
<li>職種未経験 学生インターンほか若手採用</li>
<li>OSS未経験 「働き方自由」を売りにする場合</li>
<li>焼きそばじゃなくてチャーハン</li>
<li>みんなネガティブな話すきすぎ</li>
<li><a href="http://yoshidashingo.hatenablog.com/entry/2015/09/05/113806" title="エンジニア不足はいつまで続くのか（メモ）">エンジニア不足はいつまで続くのか（メモ）</a></li>
<li>企業側がエンジニア文化を理解していないのではないか</li>
</ul>


<h2>LLが支えるデータサイエンスの世界</h2>

<ul>
<li>けんた祭り</li>
<li><a href="http://www.slideshare.net/KentaOono/introduction-to-chainer-ll-ring-recursive">Introduction to Chainer (LL Ring Recursive)</a></li>
<li><a href="https://github.com/pfnet/chainer">https://github.com/pfnet/chainer</a></li>
<li>ディープラーニング</li>
<li>順伝播、逆伝播、パラメータの更新</li>
<li>Chainer</li>
<li>MNIST で手書き文字の認識</li>
<li><a href="http://julialang.org/">プログラミング言語Julia</a></li>
<li><a href="http://julia.tokyo/">JuliaTokyo</a></li>
<li>Jupyter</li>
<li><a href="https://www.juliabox.org/">JuliaBox</a></li>
<li>質疑応答</li>
<li>Chainer の訓練済みのデータの共有について</li>
<li>現状は pickle でダンプしたデータを共有</li>
<li>Chainer の将来</li>
<li>万能なものは無理なので Flexibility 重視</li>
<li>Julia では <code>@</code> から始まるものがマクロ呼び出し</li>
<li>関数名の命名規則 全部小文字</li>
<li><code>!</code> は破壊的な操作を行う関数につける慣習
-<code>quicksort!</code> は破壊的な inplace な sort</li>
<li>Julia の速さ</li>
<li>LLVM フレンドリーなコードをはいている</li>
</ul>


<h2>抽選会</h2>

<p>JavaScript の本が当たりました。</p>

<h2>懇親会 &amp; LT</h2>

<p>3 番目でした。</p>

<p>他の人の LT のメモです。</p>

<ul>
<li>チャーハンではなくあんかけチャーハンでした。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[8月9日 アンダースタンディングコンピュテーション読書会 第4回(兵庫県)に参加しました]]></title>
    <link href="http://blog.n-z.jp/blog/2015-08-09-amagasakirb.html"/>
    <updated>2015-08-09T13:02:58+09:00</updated>
    <id>http://blog.n-z.jp/blog/amagasakirb</id>
    <content type="html"><![CDATA[<p><a href="http://kokucheese.com/event/index/322444/" title="8月9日 アンダースタンディングコンピュテーション読書会 第4回(兵庫県)">8月9日 アンダースタンディングコンピュテーション読書会 第4回(兵庫県)</a>
に参加しました。
今回は8章から9章でした。</p>

<!--more-->


<h2>メモ</h2>

<div style="float:right">
<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=znz-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=487311697X" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>
</div>


<p>以下、今回のメモです。</p>

<ul>
<li><a href="https://github.com/tomstuart/computationbook">https://github.com/tomstuart/computationbook</a></li>
<li><a href="https://github.com/ko1/uc_ja">https://github.com/ko1/uc_ja</a></li>
<li>p.259 <code>to_s(2).scan(/.+?(?=.{8}*\z)/)</code> の書き換えの話</li>
<li><code>reserve</code> して <code>each_slice(8)</code> はどうかという話</li>
<li><code>Kernel#Integer</code> を使うかどうかという話</li>
<li>正規表現の先読みの話 <code>gsub(/(?=(.{3})+\z)/, ',')</code> など</li>
<li><code>does_it_say_no.rb</code> の話</li>
<li>p.264 監訳注の <code>"no"</code> と言って停止というのは環境 (スタックの深さ) に依存して <code>"yes"</code> になることもある <a href="https://github.com/ko1/uc_ja/issues/7">https://github.com/ko1/uc_ja/issues/7</a></li>
<li>Quine から <code>HQ9+</code> の話 <a href="https://ja.wikipedia.org/wiki/HQ9%2B">https://ja.wikipedia.org/wiki/HQ9%2B</a></li>
<li>p.276 <code>Prime.each(n - 1)</code> の話</li>
<li>p.296 <code>Array#product</code> の話 <a href="http://docs.ruby-lang.org/ja/2.2.0/method/Array/i/product.html">http://docs.ruby-lang.org/ja/2.2.0/method/Array/i/product.html</a></li>
<li>p.299 <code>T``Type::BOOLEAN</code> の <code>T</code> が余分? <a href="https://github.com/ko1/uc_ja/issues/8">https://github.com/ko1/uc_ja/issues/8</a></li>
<li>8章は時間がかかったが9章はすんなり読めた話</li>
<li>多重代入と <code>to_ary</code> と <code>to_a</code> などの話</li>
<li>SlideShare と SpeakerDeck の違いの話</li>
<li><code>-Float::INFINITY</code> の話</li>
</ul>


<h2>次回の本の候補</h2>

<ul>
<li><a href="http://www.amazon.co.jp/gp/product/4274050653/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4274050653&amp;linkCode=as2&amp;tag=znz-22">Rubyのしくみ -Ruby Under a Microscope-</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4274050653" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.co.jp/gp/product/4798139823/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4798139823&amp;linkCode=as2&amp;tag=znz-22">Effective Ruby</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4798139823" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.co.jp/gp/product/4797376279/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4797376279&amp;linkCode=as2&amp;tag=znz-22">10年戦えるデータ分析入門 SQLを武器にデータ活用時代を生き抜く (Informatics &amp;IDEA)</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4797376279" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.co.jp/gp/product/4873117321/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4873117321&amp;linkCode=as2&amp;tag=znz-22">ユーザーストーリーマッピング</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4873117321" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.co.jp/gp/product/4627817711/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4627817711&amp;linkCode=as2&amp;tag=znz-22">データ解析の実務プロセス入門</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4627817711" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="https://progit-ja.github.io/" title="Pro Git 日本語版電子書籍公開サイト">Pro Git 日本語版電子書籍公開サイト</a></li>
<li><a href="http://railsguides.jp/index.html" title="Ruby on Rails ガイド (4.2 対応)">Ruby on Rails ガイド (4.2 対応)</a></li>
<li><a href="http://www.amazon.co.jp/gp/product/4873116988/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4873116988&amp;linkCode=as2&amp;tag=znz-22">実践 機械学習システム</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4873116988" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.co.jp/gp/product/4797376724/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4797376724&amp;linkCode=as2&amp;tag=znz-22">ソフトウェアシステムアーキテクチャ構築の原理 第2版 ITアーキテクトの決断を支えるアーキテクチャ思考法</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4797376724" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.co.jp/gp/product/4798139211/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4798139211&amp;linkCode=as2&amp;tag=znz-22">システムテスト自動化 標準ガイド (CodeZine BOOKS)</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4798139211" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
<li><a href="http://www.amazon.co.jp/gp/product/4274069117/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4274069117&amp;linkCode=as2&amp;tag=znz-22">型システム入門 −プログラミング言語と型の理論−</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4274069117" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></li>
</ul>


<h2>次回予定</h2>

<div style="float:right">
<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=znz-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=4274069117" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>
</div>


<p>次回の本は<a href="http://www.amazon.co.jp/gp/product/4274069117/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=4274069117&amp;linkCode=as2&amp;tag=znz-22">型システム入門 −プログラミング言語と型の理論−</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=4274069117" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />に決定しました。
次回は10月の予定で詳細は未定です。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第68回 Ruby関西 勉強会に参加しました]]></title>
    <link href="http://blog.n-z.jp/blog/2015-08-08-rubykansai68.html"/>
    <updated>2015-08-08T13:07:42+09:00</updated>
    <id>http://blog.n-z.jp/blog/rubykansai68</id>
    <content type="html"><![CDATA[<p><a href="https://rubykansai.doorkeeper.jp/events/25693" title="第68回 Ruby関西 勉強会">第68回 Ruby関西 勉強会</a>
(<a href="https://github.com/rubykansai/workshops/wiki/Kansaiworkshop068" title="KansaiWorkshop068">KansaiWorkshop068</a>)
に参加しました。</p>

<!--more-->


<p>以下、そのメモです。</p>

<h2>前説</h2>

<p>主にちゃんとリアクションをしましょうという話でした。</p>

<h2>Middleware Configuration as Code</h2>

<ul>
<li><a href="https://speakerdeck.com/matsumoto_r/middleware-configuration-as-code">https://speakerdeck.com/matsumoto_r/middleware-configuration-as-code</a></li>
<li>本番環境での使い方について詳細は @hsbt さんの <a href="http://www.slideshare.net/hsbt/middleware-as-code-with-mruby">Details of mruby usage in production</a> を参照ということで省略</li>
<li><code>mod_mruby</code> や <code>ngx_mruby</code> でユーザーに見せるクラス構成などを似せて学習コストを下げている</li>
<li><code>ngx_mruby</code> チュートリアル用 docker イメージ <a href="https://github.com/matsumoto-r/docker-ngx_mruby">https://github.com/matsumoto-r/docker-ngx_mruby</a></li>
<li>事例紹介</li>
<li><a href="http://harasou.github.io/2015/07/15/%E9%96%A2%E8%A5%BFRuby%E4%BC%9A%E8%AD%B006-%E3%81%AB%E7%99%BB%E5%A3%87%E3%81%95%E3%81%9B%E3%81%A6%E3%82%82%E3%82%89%E3%81%A3%E3%81%9F/" title="関西Ruby会議06 に登壇させてもらった">関西Ruby会議06 に登壇させてもらった</a></li>
<li>質疑応答</li>
<li>AOT コンパイラについては不明</li>
<li>mruby はスレッドごとに VM が動かせる</li>
<li>C 拡張直接と比べてメモリ消費は増えるのか</li>
</ul>


<h2>Rails と ERD（アソシエーション）</h2>

<ul>
<li><a href="https://speakerdeck.com/ogom/erd-on-rails">https://speakerdeck.com/ogom/erd-on-rails</a></li>
<li><a href="https://github.com/ogom/draw_erd">https://github.com/ogom/draw_erd</a> <a href="https://rubygems.org/gems/draw_erd">https://rubygems.org/gems/draw_erd</a></li>
<li>ライブコーディングをしならがらの説明</li>
<li>(空気を読まずに 15 時のおやつの時間を教えてくれる pepper くん)</li>
<li>質疑応答</li>
<li>コミュニティーではなくグループなのは doorkeeper がそうなっていたから</li>
<li>余った時間を使ってホワイトボードで解説</li>
</ul>


<h2>Ruby 初級者向けレッスン（クラス）</h2>

<ul>
<li><a href="https://github.com/higaki/learn_ruby_kansai_68">https://github.com/higaki/learn_ruby_kansai_68</a></li>
<li>Struct を使うかどうか</li>
<li><a href="http://docs.ruby-lang.org/ja/2.2.0/method/Struct/s/=5b=5d.html">http://docs.ruby-lang.org/ja/2.2.0/method/Struct/s/=5b=5d.html</a> には「Structをカスタマイズする場合はこの方法が推奨されます。無名クラスのサブクラスを作成する方法でカスタマイズする場合は無名クラスが使用されなくなってしまうことがあるためです。」と書いてあってブロックを指定する方法が推奨されている(が、<a href="http://www.amazon.co.jp/gp/product/487311697X/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=487311697X&amp;linkCode=as2&amp;tag=znz-22">アンダースタンディング コンピュテーション ―単純な機械から不可能なプログラムまで</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=487311697X" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />では継承して使っている)</li>
</ul>


<h2>スポンサーセッション</h2>

<ul>
<li>ファーストサーバさんの Zenlogic の紹介</li>
</ul>


<h2>クロージング</h2>

<ul>
<li>関西の Ruby 関連のイベント紹介</li>
<li>次回は 10 月</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[関西Ruby会議06に参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2015-07-11-kanrk06.html"/>
    <updated>2015-07-11T23:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/kanrk06</id>
    <content type="html"><![CDATA[<p><a href="http://regional.rubykaigi.org/kansai06/" title="関西Ruby会議06">関西Ruby会議06</a>
と前夜祭に参加しました。</p>

<!--more-->


<p>メモはとらずに話を聞くことに集中していたので、この記事は感想がメインです。</p>

<h2>前夜祭</h2>

<p>matz への質問コーナーで <code>.emacs</code> の行数という質問の答えのときに行数だけではなく内容もざっと見せてもらえて、
morq というのがちらっと目に付いたので、
会場からの質問のタイミングでメールリーダーについてきいてみたところ、
morq をまだ使っていて、最初は全文検索に Rast を使っていたという話から
Hyper Estraier? (Estraier と言っていたかも?) に乗り換えて、
さらに今は groonga を使っているということが聞けました。</p>

<h2>基調講演1</h2>

<p>matz の昔話が中心でした。</p>

<p>PC-1211 は前夜祭のときの思い出のコンピューターは何かという質問の答えのときにも使われていた画像だったので、
あの時に出した画像は、この講演の資料の画像だったのかと思いました。</p>

<h2>スポンサーLT</h2>

<p>作っているサービスの宣伝は少なめで、技術的な話が多めでした。</p>

<p><code>wicked_pdf</code> の画像などのメソッドの切り替えは、みんな同じようなラッパーメソッドを作って使っていそうなので、もうちょっと <code>wicked_pdf</code> の方でなんとかできると良さそうなのに、と思いました。</p>

<h2>講演</h2>

<p>Rspec と Minitest の比較の話が一番印象に残りました。
個人的には transpec で Rspec 2 から 3 に問題なく移行できたので、
Rspec を使い続けていますが、
Minitest も機会があれば使ってみようと思いました。</p>

<h2>LT</h2>

<p>Ruby 関西のイベントとしては珍しくちゃんと5分で強制終了になるという形式でした。
時間に収まらずに続きがきになる発表もあったので、後で発表資料を確認したいと思いました。</p>

<h2>基調講演2</h2>

<p>最後は笹田さんの Ruby 2.2 でのキーワード引数の速度改善の話でした。</p>

<p>キーワード引数はまだほとんど使ったことがなかったので、
話に出てきた Proc との組み合わせなどを
<code>irb</code> で試してみると
以下のような挙動でした。</p>

<pre><code>% rbenv exec irb -r irb/completion --simple-prompt
&gt;&gt; def foo(a, b, key1: 1, key2: 2);end
=&gt; :foo
&gt;&gt; foo(1,2, key3: 3)
ArgumentError: unknown keyword: key3
           from (irb):3
           from /Users/kazu/.rbenv/versions/2.1.5/bin/irb:11:in `&lt;main&gt;'
&gt;&gt; lambda{|a,b|p [a, b]}.call(1,2,3)
ArgumentError: wrong number of arguments (3 for 2)
           from (irb):6:in `block in irb_binding'
           from (irb):6:in `call'
           from (irb):6
           from /Users/kazu/.rbenv/versions/2.1.5/bin/irb:11:in `&lt;main&gt;'
&gt;&gt; lambda{|a,b|p [a, b]}.call(1)
ArgumentError: wrong number of arguments (1 for 2)
           from (irb):7:in `block in irb_binding'
           from (irb):7:in `call'
           from (irb):7
           from /Users/kazu/.rbenv/versions/2.1.5/bin/irb:11:in `&lt;main&gt;'
&gt;&gt; proc{|a,b|p [a, b]}.call(1)
[1, nil]
=&gt; [1, nil]
&gt;&gt; proc{|a,b|p [a, b]}.call(1,2,3)
[1, 2]
=&gt; [1, 2]
&gt;&gt; proc{|k1:1,k2:2|p [k1, k2]}.call(k3: 3)
ArgumentError: unknown keyword: k3
           from (irb):10:in `call'
           from (irb):10
           from /Users/kazu/.rbenv/versions/2.1.5/bin/irb:11:in `&lt;main&gt;'
&gt;&gt;
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第7回 コンテナ型仮想化の情報交換会＠大阪に参加しました]]></title>
    <link href="http://blog.n-z.jp/blog/2015-06-20-ct-study-7-osaka.html"/>
    <updated>2015-06-20T14:30:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/ct-study-7-osaka</id>
    <content type="html"><![CDATA[<p><a href="http://ct-study.connpass.com/event/15121/" title="第7回 コンテナ型仮想化の情報交換会＠大阪">第7回 コンテナ型仮想化の情報交換会＠大阪</a>
に参加しました。</p>

<!--more-->


<p>入り口に pepper くんがいました。
懇親会でも人気でした。</p>

<p>以下メモです。</p>

<h2>いまさら聞けない Linux コンテナの基礎</h2>

<ul>
<li><a href="https://speakerdeck.com/tenforward/jin-sarawen-kenai-linux-kontenafalseji-chu-2015-06-20">https://speakerdeck.com/tenforward/jin-sarawen-kenai-linux-kontenafalseji-chu-2015-06-20</a></li>
<li>cgroup などの Linux コンテナの基礎についての話でした。</li>
<li><a href="http://blog.kazuhooku.com/2015/05/jailing-chroot-jail.html" title="jailing - chroot jailを構築・運用するためのスクリプトを書いた">jailing - chroot jailを構築・運用するためのスクリプトを書いた</a></li>
<li><a href="http://criu.org/">http://criu.org/</a></li>
<li>overlayfs</li>
</ul>


<h2>いまさら聞けない Linux コンテナの基礎 (後半)</h2>

<ul>
<li>いろいろと namespace のデモ</li>
<li>kernel のバージョンの他にも unshare コマンドが入っている util-linux のバージョンも重要</li>
<li>最近の systemd だと <code>mount --make-shared /</code> 相当になっている</li>
<li>いろいろなコンテナ関係の紹介</li>
<li><a href="https://github.com/mhiramat/mincs">https://github.com/mhiramat/mincs</a></li>
<li>LXC のデモ (lxc-なんとか コマンド)</li>
<li>LXD のデモ (lxc コマンド)</li>
</ul>


<h2>dokku を本番環境で使ってみた話</h2>

<ul>
<li>自分の発表でした。</li>
<li><a href="http://slide.rabbit-shocker.org/authors/znz/dokku-201506/">http://slide.rabbit-shocker.org/authors/znz/dokku-201506/</a></li>
<li>Heroku を使っていない理由は VPS の方が安い</li>
<li>apache+passenger だと ruby や passenger のバージョンアップが辛かった</li>
</ul>


<h2>VIMAGE を使ってみた話</h2>

<ul>
<li>whois owatan.jp</li>
<li>ConoHa は 17 個の IPv6 アドレスが付いてくる</li>
<li>epair</li>
</ul>


<h2>アンケート</h2>

<ul>
<li><a href="https://goo.gl/g75FNJ">https://goo.gl/g75FNJ</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
