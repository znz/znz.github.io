<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: gem | @znz blog]]></title>
  <link href="http://blog.n-z.jp/blog/categories/gem/atom.xml" rel="self"/>
  <link href="http://blog.n-z.jp/"/>
  <updated>2017-05-20T15:03:18+09:00</updated>
  <id>http://blog.n-z.jp/</id>
  <author>
    <name><![CDATA[Kazuhiro NISHIYAMA]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[bootstrap-sass-railsからbootstrap-sassに移行した]]></title>
    <link href="http://blog.n-z.jp/blog/2014-02-06-bootstrap-sass.html"/>
    <updated>2014-02-06T14:29:27+09:00</updated>
    <id>http://blog.n-z.jp/blog/bootstrap-sass</id>
    <content type="html"><![CDATA[<p>今日の <code>bundle update</code> は bootstrap の sass の gem を bootstrap 公式のものに移行したのが大きな変更点でした。</p>

<!--more-->


<h2>bootstrap-sass-rails から bootstrap-sass 3.1.0.2</h2>

<p><a href="http://blog.getbootstrap.com/2014/01/30/bootstrap-3-1-0-released/">bootstrap 3.1.0 がリリース</a>されて少し時間が経ったので、
bootstrap-sass-rails を確認してみたところ、
<a href="https://github.com/yabawock/bootstrap-sass-rails#deprecation-notice">DEPRECATION NOTICE</a>
に公式サポートされた sass の gem があるので、
そちらに移行を推奨と書かれていたので、移行しました。</p>

<p>bootstrap-sass gem への移行は UPGRADING に書かれているように <code>@import "twitter/bootstrap";</code> を <code>@import "bootstrap";</code> に書き換えるだけでした。</p>

<h2>bootstrap-sass のカスタマイズ</h2>

<p><a href="https://github.com/twbs/bootstrap-sass#usage">Usage</a>
によると、一番単純な使い方としては <code>@import "bootstrap";</code> だけですが、
<a href="http://getbootstrap.com/customize/#less-variables">Less variables</a>
を参考にして以下のようにカスタマイズして使うのが良いようです。</p>

<p>Less では変数の接頭辞は <code>@</code> ですが、 sass では <code>$</code> になることさえわかっていれば、最低限のカスタマイズは出来ると思います。</p>

<pre><code>$navbar-default-bg: #312312;
$light-orange: #ff8c00;
$navbar-default-color: $light-orange;

@import "bootstrap";
</code></pre>

<p>bootstrap-sass-rails からの移行だったので、
bootstrap-custom.css.scss の内容は以下のようにしました。</p>

<pre><code>$body-bg:               #fff;
$text-color:            lighten(#000, 20%);

@import "bootstrap";
</code></pre>

<p>もっと高度なカスタマイズをするなら、
<code>cp $(bundle show bootstrap-sass)/vendor/assets/stylesheets/bootstrap.scss app/assets/stylesheets/bootstrap-custom.scss</code>
でコピーしたファイルを
<code>@import 'bootstrap';</code>
の代わりに
<code>@import 'bootstrap-custom';</code>
で使うことを想定しているようです。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rails_best_practices 1.15.0でtryが壊れた]]></title>
    <link href="http://blog.n-z.jp/blog/2014-02-05-rails-best-practices-1-15-0-broken.html"/>
    <updated>2014-02-05T10:35:06+09:00</updated>
    <id>http://blog.n-z.jp/blog/rails-best-practices-1-15-0-broken</id>
    <content type="html"><![CDATA[<p>今日の <code>bundle update</code> をしてみたところ、開発環境での devise でのログイン時に <code>devise (3.2.2) lib/devise/hooks/csrf_cleaner.rb, line 3</code> で <code>wrong number of arguments (2 for 1)</code> という <code>ArgumentError</code> が発生するようになりました。</p>

<p>その原因調査方法の記録です。</p>

<!--more-->


<p>例外が発生した行は以下の内容で、今まで問題なく動いていたし、特に問題はなさそうだったので、他の gem の影響だということがわかりました。</p>

<pre><code class="ruby lib/devise/hooks/csrf_cleaner.rb">Warden::Manager.after_authentication do |record, warden, options|
  if Devise.clean_up_csrf_token_on_authentication
    warden.request.session.try(:delete, :_csrf_token)
  end
end
</code></pre>

<p>ソースコードを追いかけるのは難しそうだったので、 better_errors の live shell を使って調査しました。</p>

<pre><code class="console">&gt;&gt; env.keys
=&gt; 略
&gt;&gt; env["warden"]
=&gt; Warden::Proxy:70192217236640 @config={:default_scope=&gt;:user, :scope_defaults=&gt;{}, :default_strategies=&gt;{:user=&gt;[:rememberable, :database_authenticatable]}, :intercept_401=&gt;false, :failure_app=&gt;#&lt;Devise::Delegator:0x007fadcc44d438&gt;}
&gt;&gt; env["warden"].request
=&gt; #&lt;ActionDispatch::Request:0x007fadd10c4dc0 略&gt;
&gt;&gt; env["warden"].request.session
=&gt; {"session_id"=&gt;"略", "user_return_to"=&gt;"/", "_csrf_token"=&gt;"略", "warden.user.user.key"=&gt;[[8], "$2a$10$略"]}
&gt;&gt; env["warden"].request.session.try(:delete, :_csrf_token)
!! #&lt;ArgumentError: wrong number of arguments (2 for 1)&gt;
</code></pre>

<p><code>env["warden"]</code> 経由で再現しました。</p>

<p>次に原因を探るために <code>arity</code> を調べました。</p>

<pre><code class="console">&gt;&gt; env["warden"].request.session.methods.grep /delete/
=&gt; [:delete, :delete_if]
&gt;&gt; env["warden"].request.session.method("delete")
=&gt; #&lt;Method: Rack::Session::Abstract::SessionHash#delete&gt;
&gt;&gt; env["warden"].request.session.method("delete").arity
=&gt; 1
&gt;&gt; env["warden"].request.session.method("try")
=&gt; #&lt;Method: Rack::Session::Abstract::SessionHash(Object)#try&gt;
&gt;&gt; env["warden"].request.session.method("try").arity
=&gt; 1
&gt;&gt; env["warden"].request.session.method("try").source_location
=&gt; ["略/rails_best_practices-1.15.0/lib/rails_best_practices/core_ext/object.rb", 7]
&gt;&gt;
</code></pre>

<p>rails_best_practices 1.15.0 が原因とわかったので issues を確認すると既に同様の現象の報告があったので、<a href="https://github.com/railsbp/rails_best_practices/issues/202#issuecomment-34129010">コメントしておきました</a>。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[bundle updateした記録]]></title>
    <link href="http://blog.n-z.jp/blog/2014-02-03-bundle-update.html"/>
    <updated>2014-02-03T17:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/bundle-update</id>
    <content type="html"><![CDATA[<p><code>bundle update</code> で更新された gem などのメモを残すことにしました。</p>

<!--more-->


<h2>jquery-rails 3.1.0 (was 3.0.4)</h2>

<p>jQuery 1.11.0 にあがったのと jquery-ujs が更新されていました。</p>

<pre><code class="text CHANGELOG.md">## 3.1.0 (29 January 2014)

  - Updated to jQuery 1.11.0
  - Updated to latest jquery-ujs
  - Added development rake task for updating jQuery
</code></pre>

<h2>omniauth-oauth2 1.1.2 (was 1.1.1)</h2>

<p>oauth2 が 0.8.1 から 0.9.3 に一気にあがって驚きましたが、
omniauth-oauth2 の依存関係が更新されたのが原因でした。</p>

<p>他にもたくさん変更されていました。</p>

<h2>turbolinks 2.2.1 (was 2.2.0)</h2>

<p><a href="https://github.com/rails/turbolinks/blob/master/CHANGELOG.md#turbolinks-221-january-30-2014">https://github.com/rails/turbolinks/blob/master/CHANGELOG.md#turbolinks-221-january-30-2014</a>
によるとバグ修正のみのようです。</p>

<h2>rails_admin 0.6.1 (was 0.6.0)</h2>

<p>paper_trail gem が 3.0.0 で <code>Version</code> から <code>PaperTrail::Version</code> に変わった
<a href="https://github.com/airblade/paper_trail/pull/165">#165</a>
影響を受けて、
<code>config/initializers/rails_admin.rb</code>
を以下のように変更する必要がありました。</p>

<pre><code class="diff config/initializers/rails_admin.rb.diff">--- a/config/initializers/rails_admin.rb
+++ b/config/initializers/rails_admin.rb
@@ -18,7 +18,7 @@ RailsAdmin.config do |config|
   # config.audit_with :history, 'User'

   # Or with a PaperTrail: (you need to install it first)
-  config.audit_with :paper_trail, 'User'
+  config.audit_with :paper_trail, 'User', 'PaperTrail::Version'

   # Display empty fields in show views:
   # config.compact_show_view = false
</code></pre>

<p>あまりカスタマイズしていないのなら、
<code>rails g rails_admin:install</code>
で生成し直して、設定し直した方が良いかもしれません。</p>

<p>最初に rails_admin を更新した rails アプリでは以下のように
devise と pundit と paper_trail の設定をしただけで、
actions などはそのままにしています。</p>

<pre><code class="ruby config/initializers/rails_admin.rb">RailsAdmin.config do |config|

  ### Popular gems integration

  ## == Devise ==
  config.authenticate_with do
    warden.authenticate! scope: :user
  end
  config.current_user_method(&amp;:current_user)

  ## == Cancan ==
  # config.authorize_with :cancan

  require 'rails_admin/extensions/pundit'
  config.authorize_with :pundit

  ## == PaperTrail ==
  config.audit_with :paper_trail, 'User', 'PaperTrail::Version' # PaperTrail &gt;= 3.0.0

  ### More at https://github.com/sferik/rails_admin/wiki/Base-configuration

  config.actions do
    dashboard                     # mandatory
    index                         # mandatory
    new
    export
    bulk_delete
    show
    edit
    delete
    show_in_app

    ## With an audit adapter, you can add:
    # history_index
    # history_show
  end
end
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rails で assets を gem に入れる時の配置]]></title>
    <link href="http://blog.n-z.jp/blog/2013-10-03-rails-assets-in-gem.html"/>
    <updated>2013-10-03T10:30:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/rails-assets-in-gem</id>
    <content type="html"><![CDATA[<p>昨日の記事で
<a href="https://rubygems.org/gems/jquery_mobile_rails">jquery_mobile_rails</a> 1.3.2
で画像ファイルが
<code>rake assets:precompile</code>
で処理されないという話を書きましたが、
<a href="http://rubygems.org/gems/jquery-ui-rails">jquery-ui-rails</a>
gem
などは Gemfile に足すだけで特に require などをしなくても
画像が処理されていたので違いを調べてみました。</p>

<!--more-->


<p>結論を先に書くと、
<code>jquery-ui-rails</code>
は
<code>app/assets/images/</code>
に画像ファイルを置いていたから処理されていて、
<code>jquery_mobile_rails</code>
は
<code>vendor/assets/images/</code>
に画像ファイルを置いていたから、
というのが原因でした。</p>

<p>自作の gem で
<code>app/assets/images/</code>
と
<code>vendor/assets/images/</code>
に画像を置いて rails 4.0.0 の
<code>rake assets:precompile</code>
で違いがあることを確認しています。</p>

<p><code>jquery_mobile_rails</code> の issues を確認すると
<a href="https://github.com/tscolari/jquery-mobile-rails/issues/16">In production, path to images is wrong</a>
という同じ問題に困っている話があったので、
コメントを付けておきました。</p>

<p>ちなみに
いくつか存在する jQuery Mobile の assets の中から
<code>jquery_mobile_rails</code>
を選んだ理由は新しいバージョンへの対応が一番早そうにみえたからです。</p>
]]></content>
  </entry>
  
</feed>
