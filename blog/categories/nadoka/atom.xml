<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: nadoka | @znz blog]]></title>
  <link href="http://blog.n-z.jp/blog/categories/nadoka/atom.xml" rel="self"/>
  <link href="http://blog.n-z.jp/"/>
  <updated>2013-12-04T11:13:52+09:00</updated>
  <id>http://blog.n-z.jp/</id>
  <author>
    <name><![CDATA[Kazuhiro NISHIYAMA]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[nadokaさんの0.8.6をリリースした関連の話]]></title>
    <link href="http://blog.n-z.jp/blog/2013-11-29-nadoka-086-released.html"/>
    <updated>2013-11-29T23:30:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/nadoka-086-released</id>
    <content type="html"><![CDATA[<p><a href="http://mla.n-z.jp/?ruby-list:49704">nadoka さんの 0.8.6 をリリース</a>
したので、
その関連の話を書いてみようと思います。</p>

<!--more-->


<h2>なぜ続けているか</h2>

<p>短い答えとしては、自分が使っているからというのが一番大きな理由です。</p>

<p>bot というか plugin もいくつか作って、
サーバーの管理などにも便利に使っていて、
わざわざ他の IRC proxy 的なソフトに乗り換えて
プラグインを書き直すよりは、
一応動いているものをメンテナンスし続けた方が楽というのが
理由になっています。</p>

<h2>subversion repository について</h2>

<p>最初は
<a href="http://www.atdot.net/nadoka/nadoka.ja.html">atdot.net の nadoka さん</a>
のところに書いてある
<code>http://www.atdot.net/svn/nadoka/trunk</code>
にあったものが、
ささださんのサーバー管理の都合なのか、
rubyforge に移行して今に至ります。</p>

<p>途中から
(<a href="https://github.com/nadoka/nadoka/wiki/HowToRelease">HowToRelease</a>
の記録によると 0.7.7 から)
は github メインに移行しています。</p>

<p>その後、しばらく放置していたかどうだったのか忘れましたが、
最近のリリースでは github での変更をリリースのタイミングで
rubyforge の svn にも git-svn を使ってマージしていました。</p>

<p>このマージも今回で最後になります。</p>

<p>その作業をするときに
<code>http://rubyforge.org/</code>
をみてみると
<code>RubyForge Could Not Connect to Database:</code>
というエラーになっていて、
<a href="https://twitter.com/hsbt/status/406423900432506881">hsbt さん</a>
に
<a href="https://twitter.com/evanphx/status/399552820380053505">RubyForgeは5月15日で終了予定</a>
という話を教えてもらいました。</p>

<p>古いサーバーで svn co して、
そのまま使っている場合でも使い続けられるように続けていましたが、
rubyforge 自体が終わるということで、
そういうサーバーでは、
そのまま最後の svn up をして使い続けるか、
git に移行する必要がありそうです。</p>

<h2>git repository について</h2>

<p>github が主流になっていたこともあり、
pull request とかしやすくなることを期待して
移行しました。</p>

<p>pull request が来た件数も 0 ではないので、
そのあたりは活発ではないプロジェクトとしては
うまくいっているのではないでしょうか。</p>

<p>github への移行方法として、
最初は
<a href="http://darcs.net/RelatedSoftware/Tailor">tailor</a>
を検討したのですが、
既にあまり使われていなくて、
ちょっと試した感じでもうまくいかなかったので、
git-svn で移行しました。</p>

<p>今となっては変換専用ソフトはほぼ使えるものはなく、
変換先のソフト (今回は git) のプラグイン的なものを使って
変換元のソフト (今回は svn) の repository から取り出す、
という方法しかないようです。</p>

<h2>CloudCore VPS</h2>

<p><a href="http://www.cloudcore.jp/vps/develop/">開発者支援制度 &ndash; CloudCore VPS</a>
でサーバーを借りてみて、
テスト用の IRC サーバーを動かしています。</p>

<p>接続用の設定は
<a href="https://github.com/nadoka/nadokarc-example">nadokarc-example</a>
にあるので、適当に試したい時に使えると思います。</p>

<p>途中の経路の問題 (モバイルでモバイルルーターの接続が切れたとか?)
で、サーバーから応答がなくなったときに
nadoka さんの再接続がうまくいかないのを調査するのに使いたいと
思っているのですが、
切れた状況を再現する部分の作り込みがまだ出来ていないです。</p>

<p>ircd の設定は
<a href="https://github.com/nadoka/ansible-ircd">ansible-ircd</a>
のように ansible でやってみました。
SSL の証明書の問題などがあるので、
すべての情報を公開できるわけじゃないというのが難しいところです。</p>

<h2>まとめ的なもの</h2>

<p>長い間続いているといろいろあるものです。</p>

<p>小規模なプロジェクトなので、
いつも場当たり的な対応でなんとかなっていますが、
そういうのも良いんじゃないでしょうか。</p>

<p>とりあえず自分が使っている限りはリリースも続くと思いますし、
新しいバージョンの ruby への対応も続けていけると思います。</p>
]]></content>
  </entry>
  
</feed>
