<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: octopress | @znz blog]]></title>
  <link href="http://blog.n-z.jp/blog/categories/octopress/atom.xml" rel="self"/>
  <link href="http://blog.n-z.jp/"/>
  <updated>2016-04-17T21:18:19+09:00</updated>
  <id>http://blog.n-z.jp/</id>
  <author>
    <name><![CDATA[Kazuhiro NISHIYAMA]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[octopress をアップデートした]]></title>
    <link href="http://blog.n-z.jp/blog/2014-08-16-update-octopress.html"/>
    <updated>2014-08-16T22:26:34+09:00</updated>
    <id>http://blog.n-z.jp/blog/update-octopress</id>
    <content type="html"><![CDATA[<p><a href="http://octopress.org/docs/updating/" title="Updating Octopress">Updating Octopress</a> を参考にして octopress をアップデートしてみました。</p>

<!--more-->


<h2>更新をマージ</h2>

<p><code>git pull octopress master</code> でマージしました。
conflict したらがんばって修正してから <code>git commit</code> します。</p>

<p>久しぶりに更新すると <code>_config.yml</code> がひっかかりやすいと思いますが、変更は少ないのでマージしやすいと思います。</p>

<h2>gem の更新</h2>

<p><code>bundle install</code> か <code>bundle update</code> で更新します。</p>

<p><code>Gemfile.lock</code> が <code>.gitignore</code> に入って octopress master からは消されてしまったので、
<code>bundle update</code> で動かなくなったときに戻せるように、
<code>git add -f Gemfile.lock</code> で自分のレポジトリでは追加しておくのも良いかもしれません。</p>

<h2>テンプレートのソースの更新</h2>

<p><code>rake update_source</code> で更新します。
カスタマイズしていると戻ってしまうので、がんばって再適用します。</p>

<p>zenback 対応の追加などの <code>_config.yml</code> の <code>default_asides</code> などでは対応しきれないカスタマイズが戻ってしまうので、
変更し直しました。</p>

<h2>テンプレートのスタイルの更新</h2>

<p><code>rake update_style</code> は特に何も変化がありませんでした。</p>

<h2><code>*.old</code> の削除</h2>

<p>テンプレートの更新でバックアップとして作成される <code>source.old/</code> と <code>sass.old/</code> は更新後には不要なので削除します。</p>

<h2>Build Warning の対処</h2>

<p>更新後に</p>

<pre><code> Build Warning: Layout 'nil' requested in blog/categories/octopress/atom.xml does not exist.
</code></pre>

<p>のような警告が出るようになってそのうち対処されると思っていたら、
<a href="http://www.bravo-kernel.com/blog/2014/08/how-to-fix-octopress-build-warning-layout-nil-requested/" title="How to fix Octopress build warning Layout nil requested - Bravo Kernel">How to fix Octopress build warning Layout nil requested - Bravo Kernel</a>
に書いてあるように</p>

<pre><code> layout: nil
</code></pre>

<p>を</p>

<pre><code> layout: null
</code></pre>

<p>にするという修正で対応が入ったのですが、
<code>source/_includes/custom/category_feed.xml</code>
は <code>source/_includes/custom/</code> 以下なので自分で修正する必要がありました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[octopress で ansible の記事を書く時のエスケープ]]></title>
    <link href="http://blog.n-z.jp/blog/2014-05-20-octopress-ansible.html"/>
    <updated>2014-05-20T23:25:18+09:00</updated>
    <id>http://blog.n-z.jp/blog/octopress-ansible</id>
    <content type="html"><![CDATA[<p>octopress で ansible の記事を書く時に連続する <code>{</code> のエスケープに困ったので、
対処方法を調べました。</p>

<!--more-->


<h2>コードブロックのエスケープ</h2>

<p><a href="http://stackoverflow.com/questions/15786144/how-to-escape-in-markdown-on-octopress">How to escape  in markdown on Octopress? - Stack Overflow</a>
にあるように</p>

<pre><code>```種類 ファイル名
コードブロック
```
</code></pre>

<p>の外側を
<code>{% raw %}</code> と <code>{% endraw %}</code>
でくくればうまくいきました。</p>

<h2>文中の  のエスケープ</h2>

<p>先ほどのリンクのアンカーやこの節の見出しのような文の途中は</p>

<p>
    {{ &ldquo;{{&rdquo; }}
</p>

<p>のように書けばエスケープできました。</p>

<p>幅なしスペース (<code>&amp;#x200B;</code>) のような幅のない文字を挟んでごまかすという手もあるかもしれません。</p>

<h2>文中の <code>{%</code> のエスケープ</h2>

<p><code>{% raw %}</code> と <code>{% endraw %}</code> 自体をエスケープするのに</p>

<p>
    {{ &ldquo;{%&rdquo; }}
</p>

<p>を使って</p>

<p>
    <code>{{ "{%" }} raw %}</code> と <code>{{ "{%" }} endraw %}</code>
</p>

<p>のように書きました。</p>

<p><code>%}</code> まで <code>""</code> の中に入れようとして</p>

<p>
    <code>{{ "{% raw %}" }}</code>
</p>

<p>と書くと</p>

<p>
    Liquid Exception: Variable &lsquo;{{ &ldquo;{% raw %}&rsquo; was not properly terminated with regexp: /}}/
</p>

<p>というエラーになってうまくいきませんでした。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[octopressをアップデートしてisolateを使い始めた]]></title>
    <link href="http://blog.n-z.jp/blog/2013-12-21-update-octopress.html"/>
    <updated>2013-12-21T22:43:36+09:00</updated>
    <id>http://blog.n-z.jp/blog/update-octopress</id>
    <content type="html"><![CDATA[<p>気が向いたので、また octopress の更新をしてみました。
そして <code>rake isolate</code> を使い始めました。</p>

<p>記事中では <code>git fetch --prune</code> とか、
zsh の <code>(mm-1)</code> を使っているので、
カテゴリに <code>git</code> と <code>zsh</code> も付けています。</p>

<!--more-->


<h2>octopress のアップデート</h2>

<p><code>git fetch</code> します。
最近は <code>--prune</code> を付けてリモートで削除されたブランチは手元でも削除されるようにしていることが多いので、
今回も付けています。</p>

<pre><code class="console">% git remote -v
octopress   git://github.com/imathis/octopress.git (fetch)
octopress   git@github.com:imathis/octopress.git (push)
origin  git@github.com:znz/znz.github.io (fetch)
origin  git@github.com:znz/znz.github.io (push)
origin  ssh://git@bitbucket.org/znz/blog.n-z.jp.git (push)
% git fetch --prune octopress
remote: Counting objects: 33, done.
remote: Compressing objects: 100% (18/18), done.
remote: Total 24 (delta 16), reused 14 (delta 6)
Unpacking objects: 100% (24/24), done.
From git://github.com/imathis/octopress
 * [new branch]      jekyll-1-3 -&gt; octopress/jekyll-1-3
   64ba603..78defff  master     -&gt; octopress/master
%
</code></pre>

<p>差分を確認してからマージしました。</p>

<pre><code class="console">% git diff source...octopress/master
% git merge octopress/master
Auto-merging Rakefile
Merge made by the 'recursive' strategy.
 .themes/classic/sass/base/_theme.scss                     |  2 +-
 .themes/classic/source/_includes/archive_post.html        |  2 +-
 .themes/classic/source/_includes/custom/category_feed.xml |  4 +-
 .themes/classic/source/_includes/disqus.html              |  2 +-
 .themes/classic/source/_includes/head.html                |  4 +-
 .themes/classic/source/atom.xml                           |  4 +-
 README.markdown                                           |  2 +-
 Rakefile                                                  |  6 +--
 plugins/category_generator.rb                             |  3 +-
 plugins/code_block.rb                                     |  2 +-
 plugins/date.rb                                           | 53 +++++++++----------------
 plugins/gist_tag.rb                                       |  8 +++-
 plugins/include_code.rb                                   |  2 +-
 plugins/jsfiddle.rb                                       |  2 +-
 14 files changed, 41 insertions(+), 55 deletions(-)
</code></pre>

<p>themes も更新されているので、
<a href="http://octopress.org/docs/updating/">Updating Octopress</a>
の手順に従ってアップデートしました。</p>

<pre><code class="console"> % bundle install
 Using rake (0.9.2.2)
 Using RedCloth (4.2.9)
 Using chunky_png (1.2.5)
 Using fast-stemmer (1.0.1)
 Using classifier (1.3.3)
 Using fssm (0.2.9)
 Using sass (3.2.9)
 Using compass (0.12.2)
 Using directory_watcher (1.4.1)
 Using haml (3.1.7)
 Using kramdown (0.13.8)
 Using liquid (2.3.0)
 Using syntax (1.0.0)
 Using maruku (0.6.1)
 Using posix-spawn (0.3.6)
 Using yajl-ruby (1.1.0)
 Using pygments.rb (0.3.4)
 Using jekyll (0.12.0)
 Using rack (1.5.2)
 Using rack-protection (1.5.0)
 Using rb-fsevent (0.9.1)
 Using rdiscount (2.0.7.3)
 Using rubypants (0.2.0)
 Using sass-globbing (1.0.0)
 Using tilt (1.3.7)
 Using sinatra (1.4.2)
 Using stringex (1.4.0)
 Using bundler (1.3.5)
 Your bundle is complete!
 Use `bundle show [gemname]` to see where a bundled gem is installed.
 % bundle exec rake update_source
 mkdir source.old
 cp -r source/. source.old
 ## Copied source into source.old/
 cp -r --remove-destination .themes/classic/source/. source
 cp -r --remove-destination source.old/_includes/custom/. source/_includes/custom/
 cp source.old/favicon.png source
 ## Updated source ##
 % bundle exec rake update_style
 mv sass sass.old
 ## Moved styles into sass.old/
 cp -r .themes/classic/sass/ sass
 cp -r sass/custom/. sass.old/custom
 ## Updated Sass ##
 %
</code></pre>

<p><code>git diff</code> で確認するとローカルでの変更が消えてしまっていたので、
<code>git checkout ファイルパス</code> で戻したり、
再適用したりしてからコミットしました。</p>

<h2>rake isolate</h2>

<p><a href="http://rcmdnk.github.io/blog/2013/10/07/blog-octopress/">Octopressでチェック用に高速にgenerate/previewする</a>
で紹介されていた
<code>rake isolate[filename]</code>
を使い始めてみました。</p>

<h3>ファイル名の指定を省略する</h3>

<p>最終更新時刻でソートして最新だけ、という絞り込みをしたかったのですが、
zsh の機能だけでうまく表現できなかったので、
<a href="http://qiita.com/mollifier/items/1c4a4930a89aa75e5ced">zsh で find を使わずに簡単にファイルを絞り込む</a>
を参考にして1分以内に変更されたファイルだけという絞り込みで妥協することにしました。</p>

<pre><code class="console"> bundle exec rake "isolate[$(echo source/_posts/*.markdown(mm-1))]"
 bundle exec rake preview
 bundle exec rake integrate
</code></pre>

<h3>rake integrate 忘れを防ぐ</h3>

<p>isolate した状態で deploy する事故を防ぐために
<a href="https://github.com/imathis/octopress/pull/1444">check stash dir before deploy</a>
という変更を入れてから使うようにしてみました。</p>

<p>Rakefile をみてみると</p>

<pre><code class="ruby Rakefile">desc "Generate website and deploy"
task :gen_deploy =&gt; [:integrate, :generate, :deploy] do
end
</code></pre>

<p>となっているので、
<code>bundle exec rake deploy</code> ではなく
<code>bundle exec rake gen_deploy</code> を使うようにしていれば
大丈夫そうですが、
念のためチェックした方が安全だと思いました。</p>

<p>octopress の fork で作成したこの変更は</p>

<pre><code class="console">git pull git@github.com:znz/octopress.git check-stash-before-deploy
</code></pre>

<p>で手元の source ブランチに取り込みました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[octopress をアップデートした (.ruby-version が conflict した) 話]]></title>
    <link href="http://blog.n-z.jp/blog/2013-10-09-update-octopress-and-conflict-ruby-version.html"/>
    <updated>2013-10-09T21:21:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/update-octopress-and-conflict-ruby-version</id>
    <content type="html"><![CDATA[<p>octopress で使う ruby を 1.9.3-p448 から 2.0.0-p247 にあげようと思って、
そのついでに octopress 自体も master の最新のものに更新したので、
その手順のメモです。</p>

<p>その時に <code>.ruby-version</code> が conflict したので、
その話がメインです。</p>

<!--more-->


<h2><code>.ruby-version</code> とは?</h2>

<p>rbenv が <code>.rbenv-version</code> から <code>.ruby-version</code> に変わった時には
知らなかったのですが、
<a href="https://gist.github.com/fnichol/1912050">A Common .ruby-version File For Ruby Projects</a>
というものがあって、
rbenv や rvm のような切り替えツール共通で
<code>.ruby-version</code>
というファイルを使おうということのようです。</p>

<h2>octopress の .ruby-version</h2>

<p>その発想は良いのですが、
rbenv + ruby-build だと 1.9.3-p448 や 2.0.0-p247 のように
パッチレベルまで <code>.rbenv-version</code> に入るのが普通なのに
rvm が作る <code>.ruby-version</code> だと <code>1.9.3</code> のように
パッチレベルが入らないようで、
octopress の <code>.ruby-version</code> で問題が起きました。</p>

<p>元々使い始めた時の octopress の master には
<code>.ruby-version</code>
ファイルが入っていて、
<code>1.9.3</code>
という内容でした。</p>

<p>手元での回避策としては、
<code>ln -snf 1.9.3-p448 ~/.rbenv/versions/1.9.3</code>
のようにシンボリックリンクで回避するとか、
<code>configure</code> で <code>--prefix=$HOME/.rbenv/versions/1.9.3</code> で
別途インストールするとかも考えたのですが、
他に影響が出るのが嫌だったので、
結局
<code>.ruby-version</code>
を書き換えて使うことにしました。</p>

<p>rbenv を使っていて、
リリースされているバージョンの ruby のインストールには
ruby-build を使っていて
<code>1.9.3-p448</code>
にする必要があったので、
<code>rbenv local 1.9.3-p448</code>
で置き換えました。</p>

<h2>バージョンアップ手順</h2>

<p>まず remote を確認します。</p>

<pre><code> git remote -v
octopress       git://github.com/imathis/octopress.git (fetch)
octopress       git://github.com/imathis/octopress.git (push)
origin  git@github.com:znz/znz.github.io (fetch)
origin  git@github.com:znz/znz.github.io (push)
</code></pre>

<p>octopress という名前にしていることが確認出来たので、
fetch します。</p>

<pre><code>% git fetch octopress
remote: Counting objects: 85, done.
remote: Compressing objects: 100% (34/34), done.
remote: Total 46 (delta 30), reused 26 (delta 10)
Unpacking objects: 100% (46/46), done.
From git://github.com/imathis/octopress
   9699df7..5a6b8e4  2.5        -&gt; octopress/2.5
   f75547f..ff71657  master     -&gt; octopress/master
   8d7ef9a..98bd6c9  site-2.1   -&gt; octopress/site-2.1
</code></pre>

<p>merge する前に
<code>git diff source...octopress/master</code>
で変更点を確認してから merge します。</p>

<pre><code>% git diff source...octopress/master
% git merge octopress/master
Auto-merging Rakefile
CONFLICT (modify/delete): .ruby-version deleted in octopress/master and modified in HEAD. Version HEAD of .ruby-version left in tree.
Automatic merge failed; fix conflicts and then commit the result.
zsh: exit 1     git merge octopress/master
</code></pre>

<p>conflict しました。
<code>.ruby-version</code>
は消してしまって
<code>rbenv global 2.0.0-p247</code>
で設定している <code>2.0.0-p247</code> を使う予定なので、
消してしまいます。
その変更を commit すると merge 完了でした。</p>

<pre><code>% git rm .ruby-version
.ruby-version: needs merge
rm '.ruby-version'
% git commit -av
[source 136b37f] Merge remote-tracking branch 'octopress/master' into source
</code></pre>

<p>うまくいったので、バックアップをかねて github に push しておきます。</p>

<pre><code>% git push
Counting objects: 55, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (39/39), done.
Writing objects: 100% (41/41), 4.90 KiB | 0 bytes/s, done.
Total 41 (delta 28), reused 0 (delta 0)
To git@github.com:znz/znz.github.io
   5dabdd2..136b37f  source -&gt; source
</code></pre>

<p>rake のバージョンの関係で
<code>rake preview</code>
などではなく
<code>bundle exec rake preview</code>
のように実行することが必須になってしまいました。</p>

<pre><code>% rake preview
rake aborted!
You have already activated rake 10.1.0, but your Gemfile requires rake 0.9.2.2. Using bundle exec may solve this.
</code></pre>

<h2>まとめ</h2>

<p>事前に予測できた範囲の conflict しかなくて、
簡単に解決できました。</p>

<p><code>.ruby-version</code>
は
<code>.gitignore</code>
には入っていないので、
余計な conflict を避けるために
<code>.gitignore</code>
を変更せずに使いたいのなら、
親ディレクトリに
<code>.ruby-version</code>
を用意してバージョンを指定するのが良いと思います。
<code>.git</code>
などと同じように
<code>.ruby-version</code>
もディレクトリを上がっていって最初に見つかったものが使われるので、
そういう運用が可能です。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[タグクラウドプラグインを入れた]]></title>
    <link href="http://blog.n-z.jp/blog/2013-09-11-tagcloud.html"/>
    <updated>2013-09-11T00:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/tagcloud</id>
    <content type="html"><![CDATA[<p>探してみて見つけた中で今もちゃんとメンテナンスされてそうだった
<a href="https://github.com/tokkonopapa/octopress-tagcloud">Tag cloud plugin for Octopress</a>
を入れてタグクラウドが出るようにしてみました。</p>
]]></content>
  </entry>
  
</feed>
