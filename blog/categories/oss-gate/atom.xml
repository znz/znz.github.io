<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: oss-gate | @znz blog]]></title>
  <link href="http://blog.n-z.jp/blog/categories/oss-gate/atom.xml" rel="self"/>
  <link href="http://blog.n-z.jp/"/>
  <updated>2017-12-09T21:55:53+09:00</updated>
  <id>http://blog.n-z.jp/</id>
  <author>
    <name><![CDATA[Kazuhiro NISHIYAMA]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[OSS Gate Workshopのブランチ名の調査]]></title>
    <link href="http://blog.n-z.jp/blog/2017-08-15-oss-gate-workshop-branch-name.html"/>
    <updated>2017-08-15T20:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/oss-gate-workshop-branch-name</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/oss-gate/workshop">OSS Gate ワークショップのリポジトリー</a>では、ワークショップの最後にアンケートを pull request で集めているのですが、
tutorial/retrospectives/README.md には <a href="https://github.com/oss-gate/workshop/commit/0d12651d72f8bcec0cd550da6a4e97d25caa3968">https://github.com/oss-gate/workshop/commit/0d12651d72f8bcec0cd550da6a4e97d25caa3968</a> で「適当なブランチ名」と追加され (今は <a href="https://github.com/oss-gate/workshop/pull/549">#549</a> で <code>add-retrospective</code> に変更済み)、
以前は全く指針などはなかったので、
みんなどんなブランチ名を使っていたのか気になったので、
集計してみました。</p>

<!--more-->


<h2>集計スクリプト</h2>

<p>簡単のため、<code>git log</code> の出力から日付などの可変部分はできるだけまとめて集計するようにしてみました。</p>

<pre><code>#!ruby
count = Hash.new(0)
ARGF.each_line do |line|
  if /Merge pull request #\d+ from / =~ line
    id, branch = $'.split('/', 2)
    branch.sub!(Regexp.quote(id), "{id}")
    branch.sub!(/\d{4}(.?)\d{2}(.?)\d{2}/, 'YYYY\1MM\2DD')
    branch.sub!(/tokyo|osaka|pixiv/, '{place}')
    count[branch] += 1
  end
end
count.keys.sort_by do |k|
  [-count[k], k]
end.each do |k|
  puts "#{count[k]}:#{k}"
end
</code></pre>

<h2>集計結果</h2>

<p>ふりかえり以外の pull request もあるので、すべてがふりかえりのものとは断言できないのですが、
圧倒的に master, patch-1, patch-2 が多かったです。</p>

<p>master は別ブランチを作っていないことが多いということを示しています。</p>

<p>patch-1, patch-2, patch-3 などは github の Web から Edit で編集を開始するとできるブランチ名だったはずなので、
Web で操作して作成した pull request かもしれません。</p>

<p><code>masayuki14_closed_workshop</code> は「社内向けのクローズドでWorkshopを開催したので、ふりかえりのアンケートを共有します」とあるので、
特殊なので無視して良さそうです。</p>

<p>形式がバラバラで集計ではバラバラのままにしていますが、日付・場所・ID・役割 (beginner や mentor など) が入っていることが多く、
workshop (や meetup)、retrospective (answer, comment, enquete) や add などの単語が使われていることが多いようです。</p>

<pre><code>% git log | ruby /tmp/s.rb
99:master
60:patch-1
14:patch-2
6:masayuki14_closed_workshop
5:{id}
4:YYYY-MM-DD-{place}
4:YYYYMMDD_{place}_meetup_{id}
4:patch-3
3:retrospectives-YYYY-MM-DD
3:{id}-patch-1
2:YYYY-MM-DD-{id}
2:YYYYMMDD-{place}-workshop
2:YYYYMMDD_{place}_{id}
2:add-{id}-comment
2:knokmki612-patch-1
1:Add-{id}-enquete
1:YYYY-MM-DD-{place}-{id}
1:YYYY-MM-DD-{place}-{id}-answer
1:YYYY-MM-DD-{place}_{id}_retrospective
1:YYYYMMDD
1:YYYYMMDD_oss_gate_{place}_{id}_enquete
1:YYYYMMDD_retro
1:YYYYMMDD_ryo-endo
1:YYYYMMDD_{id}
1:YYYYMMDD_{place}_mentor_{id}
1:YYYYMMDD_{place}_{id}_answer
1:add-YYYYMMDD-{id}
1:add-YYYYMMDD-{place}
1:add-cm-wada-yusuke
1:add-comment
1:add-mentor-tSU-RooT-11-26
1:add-questionnaire-desc
1:add-yaml
1:add-{id}-0116
1:add-{id}-YYYY-MM-DD
1:add_beginner-{id}
1:add_description_of_oss_gate
1:add_mentor_yaml_by_{id}
1:add_questionnaire
1:add_retrospective_{id}
1:aggeregate
1:answer_by_satoryu
1:begginer-n-ina
1:beginner-{id}
1:change_issue_template
1:enquete
1:feature/YYYY_MM_DD_{place}_supporter_{id}
1:feature/add_{id}_answer
1:feature/retrospective
1:fill_retrospective_{id}
1:fix/issue_26
1:fix/retrospective_27
1:fix/typo
1:fix_retrospective
1:fix_supporter_questionnaire
1:fix_survey_url
1:fix_yaml_error
1:gitter-badge
1:goto_add_comment
1:hiroysato
1:improve_slide_2
1:improve_slide_split_2
1:issue_template
1:issue_template-2
1:kamimura
1:link-to-tutorial
1:make_template
1:mentor-majima
1:mentor-matsue
1:my_retrospectives
1:opinionaire_YYYYMMDD_morioka
1:patch-5
1:question_template
1:questionnaire
1:questionnaire-YYYY-MM-DD-{place}
1:rename
1:result_of_YYYY_MM_DD
1:retrospective
1:retrospective-{id}
1:retrospective_instruction
1:retrospective_{id}
1:retrospectives/{id}
1:sort_retrospectives
1:stat-rate
1:support-yaml-with-bom
1:survey_2017_3_25
1:tdtds
1:tricknotes
1:tricknotes-patch-1
1:update-retrospectives-readme
1:update_for_2016_9_24
1:write_questionnaire_kohei_otsuka
1:write_retrospectives
1:y-goto_surver_YYYYMMDD
1:y-goto_survey_YYYYMMDD
1:{id}-enquete-170116
1:{id}-mentor
1:{id}-oss-comment
1:{id}-questionnaire
1:{id}-workshop-answer1
1:{id}/n-n-n-
1:{id}/retrospective
1:{id}1
1:{id}_ans
1:{id}_closed_workshop
1:{place}_0629
</code></pre>

<h2>まとめ</h2>

<p>今回は <a href="https://github.com/oss-gate/workshop/pull/549">#549</a> の時に目視で確認していたのを、もうちょっとちゃんと確認してみました。
ブランチ名やコミットメッセージはみんな色々悩んでつけている感じがして、過去のものを眺めてみると面白いと思います。</p>

<p>OSS Gate のワークショップのふりかえりはワークショップの特性上、できるだけブランチ名も悩まずにとりあえずこれを使ってもらう、というのがあるのが望ましいので、固定の説明に変更しましたが、慣れていれば独自のブランチ名やコミットメッセージでも全く問題なさそうです。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OSS Gate大阪ワークショップ2017-08-12 with さくらクラブに参加しました]]></title>
    <link href="http://blog.n-z.jp/blog/2017-08-12-oss-gate-osaka.html"/>
    <updated>2017-08-12T23:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/oss-gate-osaka</id>
    <content type="html"><![CDATA[<p><a href="https://oss-gate.doorkeeper.jp/events/63163">OSS Gate大阪ワークショップ2017-08-12 with さくらクラブ</a>に参加しました。</p>

<!--more-->


<p>以下、今回感じたことを適当にメモしておきます。</p>

<h2>会場</h2>

<p>最近よく行っている気がするグランフロント大阪タワーA 35Fのさくらインターネットさんでした。
やはり1階からは入れなくて、2階から入る必要がありました。
9階で乗り換えが必要なのも最初はわかりにくそうです。</p>

<p>プロジェクター3台に同じ画面を出すには分配器を用意してもらう必要があったようで、今回は途中で用意してもらいましたが、必要なら開始前に用意しておいてもらうのが良さそうでした。</p>

<h2>座席</h2>

<p>4人がけできるテーブルがメインだったので、1人のサポーターの左右に2人のビギナーという体制でした。
余ったサポーターはサポートメンターということになったので、一応サポートメンターでした。</p>

<h2>改善できそうだと思ったところ</h2>

<p>Doorkeeper で参加申し込みするところに壁があるという話があったので、 <a href="https://oss-gate.github.io/">https://oss-gate.github.io/</a> では良い感じに目立っている動画を doorkeeper の方でも気付きやすいところで紹介すると良いのではないかという話がありました。</p>

<h2>未経験者の理由</h2>

<p>スライドに書いてある理由の予想とはだいたい違う回答が出てくるのですが、今回は英語だからという感じの理由でした。</p>

<h2>BOM 問題</h2>

<p>アンケートの集計で BOM 付きの YAML ファイルになっていた人がいて、結構はまったので、YAML は意外と難しいなと思いました。</p>

<p>今は BOM 対応が入ったので次回以降は大丈夫だと思います。</p>

<h2>事前準備</h2>

<p>初めてのサポーターの人には動画を見てもらっておくと、だいたいどんな感じのことをするのか、わかってもらえて良いのではないかと思いました。</p>

<h2>ふりかえり</h2>

<p>サポーター1人にビギナー2人だとふりかえりの時間にフィードバックをしっかりしていると時間が足りないと感じました。</p>

<h2>ドキュメント</h2>

<p>モデレーター(進行役)やサポートメンター用のドキュメントが不足しているようなので、もっとまとめられると良さそうに思いました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OSS Gate大阪ワークショップ2017-04-22に参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2017-04-22-oss-gate-workshop.html"/>
    <updated>2017-04-22T23:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/oss-gate-workshop</id>
    <content type="html"><![CDATA[<p><a href="https://oss-gate.doorkeeper.jp/events/58579" title="OSS Gate大阪ワークショップ2017-04-22 - OSS Gate | Doorkeeper">OSS Gate大阪ワークショップ2017-04-22 - OSS Gate | Doorkeeper</a>にサポーター (旧称: メンター) として参加しました。</p>

<!--more-->


<h2>全体の感想</h2>

<p>最後のアンケートにも書きましたが、前回はデモである程度メモをどの程度とるのかなどの方向性が示されていたのと、やる内容がインストールから初めて、ひっかかったところのドキュメントの改善をフィードバックする、というのが多かったのに対して、今回はデモがほぼなくて、サポーター (旧称: メンター) として応募したけど、人数の都合でビギナーになった人が多かったからか、いろんなことに挑戦していて、難しい感じでした。</p>

<p>作業メモの粒度としては、<a href="https://github.com/oss-gate/workshop/issues?q=is%3Aissue+is%3Aclosed">過去のビギナーの作業ログ</a>から特にコメント数が多いものを参考にしてみると、こういう細かい思考過程までメモすると良いのか、というのが、 oss-gate に限らず普段の作業メモのとり方としても、参考になるかと思います。</p>

<h2>メモ</h2>

<p>以下、今回の雑多なメモです。</p>

<h3>フォント</h3>

<p>途中のふりかえりのときのビギナーの人がブラウザーで変わったフォントを使っていたのできいてみたところ、「スマートフォントUI」というのを使っていると教えてもらいました。</p>

<h3>Chef DK のアンインストール</h3>

<p>参考のため、自分の環境にも Chef DK を入れてみていたのですが、 <a href="https://docs.chef.io/install_dk.html">https://docs.chef.io/install_dk.html</a> にアンインストールの手順があったので、それに従ってアンインストールしました。</p>

<p>symlink は削除前に確認してみたら、たくさんありました。</p>

<pre><code>%  sudo rm -rf /opt/chefdk
Password:
%  sudo pkgutil --forget com.getchef.pkg.chefdk
Forgot package 'com.getchef.pkg.chefdk' on '/'.
%  find /usr/local/bin -lname '/opt/chefdk/*'
/usr/local/bin/berks
/usr/local/bin/chef
/usr/local/bin/chef-apply
/usr/local/bin/chef-client
/usr/local/bin/chef-shell
/usr/local/bin/chef-solo
/usr/local/bin/chef-vault
/usr/local/bin/cookstyle
/usr/local/bin/dco
/usr/local/bin/delivery
/usr/local/bin/foodcritic
/usr/local/bin/inspec
/usr/local/bin/kitchen
/usr/local/bin/knife
/usr/local/bin/ohai
/usr/local/bin/push-apply
/usr/local/bin/pushy-client
/usr/local/bin/pushy-service-manager
/usr/local/bin/rubocop
%  sudo find /usr/local/bin -lname '/opt/chefdk/*' -delete
%  find /usr/bin -lname '/opt/chefdk/*'
</code></pre>

<h3>辞書</h3>

<p>macOS の辞書ではなく、Logophile という辞書ソフトを使っているのをみました。
COBUILD のシソーラスが便利だそうです。</p>

<p>たぶん <a href="http://dicwizard.jp/logophile/" title="Logophile">Logophile</a> で、シェアウェアのようです。</p>

<h3>fish shell</h3>

<p>検索しにくい名前ですが、<a href="http://fish.rubikitch.com/" title="全訳！fishシェル普及計画【コマンドラインは怖くない】">全訳！fishシェル普及計画【コマンドラインは怖くない】</a> に翻訳されたドキュメントがあるので、使い始めやすそうです。</p>

<p>個人的には rvm を入れたら環境を壊された (<code>zsh</code> なら <code>chpwd_function</code> を使えばいいのに使っていなかったらしく <code>cd</code> のカスタマイズが壊れた) ぐらいシェルはカスタマイズをしているので、乗り換える可能性は低いですが、ちょっと試してみたところ、 <code>echo</code> のオートサジェスチョンで <code>$BASH_VERSION</code> がでてきたので、<code>.bash_history</code> をみているようです。
ちょっと試した後は、 <code>rm -rf ~/.local/share/fish</code> でクリーンな状態に戻して、また最初から試せるようにしておきました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OSS Gate大阪ワークショップ2017-02-25に参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2017-02-25-oss-gate-workshop.html"/>
    <updated>2017-02-25T23:59:59+09:00</updated>
    <id>http://blog.n-z.jp/blog/oss-gate-workshop</id>
    <content type="html"><![CDATA[<p><a href="https://oss-gate.doorkeeper.jp/events/56141" title="OSS Gate大阪ワークショップ2017-02-25">OSS Gate大阪ワークショップ2017-02-25</a>にメンターとして参加しました。</p>

<!--more-->


<h2>事前準備</h2>

<p>ざっと見て大丈夫そうだったので、細かくチェックしていなかったのですが、
<a href="https://oss-gate.doorkeeper.jp/events/56141" title="イベントページ">イベントページ</a>
に書いてある説明や、
そこからリンクされている
<a href="https://github.com/oss-gate/workshop/blob/master/tutorial/scenario.md#%E3%82%B7%E3%83%8A%E3%83%AA%E3%82%AA" title="シナリオ">シナリオ</a>
などは事前に見ておくと流れがわかって良さそうだと
後から思いました。</p>

<h2>移動</h2>

<p>最寄駅をちゃんとチェックしていなくて、
本町駅に行ってしまって、
ちょっと歩きました。
時間に余裕を持って出発していたので、
開始には間に合いました。</p>

<h2>準備</h2>

<p>ビギナーの横に少なくとも一人はメンターがいるようになるように席がある程度決まっていて、
無線LANの設定をしたりしながら開始を待っていました。</p>

<p>最初、無線LANに繋がるのにIPアドレスが割り振られないという状況になっていて、
ちゃんと繋がるまで少し時間がかかりましたが、問題なく始まりました。</p>

<h2>アイスブレイク</h2>

<p>ある程度、説明があった後、アイスブレイクとして4,5人のグループで軽く話をしました。
このグループ分けはこの時だけのものだったらしく、
後は個別にわかれていました。</p>

<h2>対象OSSの決定</h2>

<p>対象とする OSS をビギナーの人が決めるというのが最初にありました。</p>

<p>デモとして、隣にいたビギナーの人が呼ばれて、
前で決めていました。</p>

<p>席に戻ってきて、一緒に確認してみると、
前に出てひっかかることがあるといっていた OSS は環境依存の問題っぽい感じで、
結局他の OSS を選び直していました。</p>

<h2>対象OSSを動かす</h2>

<p>これは最初のデモで決まった OSS を例に進行役の人が
実際に細かくメモを取りつつ動かしてみるというデモをした後、
各自動かしてみるということをしていました。</p>

<p>その手順の中にライセンスが OSS かどうかを確認するというのが入っていました。
ライセンスの話はちゃんとするとそれだけで時間がかかってしまうので、
難しいところだと思いました。</p>

<p>担当していたビギナーの人は、
その時々の心情も含めて記録していて、
ちゃんとできていてすごいなと思って見ていました。</p>

<p>答えを先に言ってしまうのはよくないということだったはずなので、
知っていることでもほとんど口を挟まずに見ていました。
この辺りの加減は何度か参加して見ないとわからなそうな気がしました。</p>

<h2>休憩</h2>

<p>おやつ休憩が入りました。</p>

<h2>ミニふりかえり</h2>

<p>進行役の人が順番を間違えていたらしく、
休憩の後にミニふりかえりが入りました。</p>

<p>3列あったテーブルごとにほぼ同じペア数だったので、
ぐるっと回転するようにメンターが入れ替わって説明を聞く、
ということをしました。</p>

<p>担当しているビギナー以外の他のビギナーの人が何をやっているかというのは、
基本的にはふりかえりのタイミングしか聞く機会がないようなので、
興味深く聞きました。
ここがフィードバックできるポイントかも、という点も見つけられました。</p>

<h2>プロジェクトにフィードバックする</h2>

<p>時間配分のミスがあったらしく、2時間の予定が1時間になってしまっていたそうです。</p>

<p>担当していたビギナーの人は、この時間で、自分の言葉で書く、報告用にまとめ直す、
他の issues を見て英語にしなくても日本語のままの報告で良さそうという確認、
というところまでできていました。</p>

<h2>ふりかえり</h2>

<p>ミニふりかえりの時とは逆回りに入れ替わって、
またビギナーの人が何をやったのか話を聞きました。</p>

<p>ドキュメントの修正の pull request をすると良いのでは、
(明確な修正だと複雑な英語でのやりとりも発生しないので楽)
という話をしました。</p>

<h2>まとめ、アンケート記入</h2>

<p>まとめの話とアンケート記入がありました。</p>

<p>アンケート記入は <a href="https://github.com/oss-gate/workshop">https://github.com/oss-gate/workshop</a> を fork して
tutorial/retrospectives/2017-02-25-osaka の beginner.yaml や mentor.yaml をコピーして pull request を送る、
という方法でした。</p>

<p>YAML の文法エラーはマージする進行役の人が直すから細かいことは気にしないで良いということでした。</p>

<h2>ワークショップのふりかえり</h2>

<p>アンケート結果を見ながらふりかえりをしました。</p>

<p>関西も次回からは、進行役の人も関西の人でやる必要があるということで、
メンター用のアンケートの「進行役をできそうか」で
「何人かでフォローしあえばやれそう」が多かったので、
何人かで分担しながらやることになりそうな気がしました。</p>

<p>アンケート結果の表示には <code>aggregate.rb</code> というのを使っていたように見えたので、
たぶん <code>tutorial/retrospectives/aggregate.rb</code> を実行していたのだろうと思いました。</p>

<h2>最後に</h2>

<p>テーブルの移動などをして、宣伝用の集合写真を撮って終わりました。</p>

<h2>終わった後</h2>

<p>終わった後は、用事があったので、懇親会には参加せずにそのまま帰りました。</p>

<p>用事は梅田で時間が少し空いていて微妙だったので、
梅田まで歩いて帰ったところ、
ちょうど良いぐらいの時間になりました。</p>
]]></content>
  </entry>
  
</feed>
