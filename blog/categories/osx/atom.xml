<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: osx | @znz blog]]></title>
  <link href="http://blog.n-z.jp/blog/categories/osx/atom.xml" rel="self"/>
  <link href="http://blog.n-z.jp/"/>
  <updated>2014-02-07T17:15:07+09:00</updated>
  <id>http://blog.n-z.jp/</id>
  <author>
    <name><![CDATA[Kazuhiro NISHIYAMA]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[emacsやdistnotedを安定させるパッチをhomebrewで適用した]]></title>
    <link href="http://blog.n-z.jp/blog/2014-01-29-emacs-distnoted-patch.html"/>
    <updated>2014-01-29T15:59:28+09:00</updated>
    <id>http://blog.n-z.jp/blog/emacs-distnoted-patch</id>
    <content type="html"><![CDATA[<p>Emacs で distnoted が大変なことになる件で、
さらにコメントで追加の情報があったので、
homebrew でのインストール時に
追加のパッチをあてるようにしました。</p>

<!--more-->


<h2>パッチ適用</h2>

<p>適用法としては
<code>brew edit emacs</code>
で以下のように変更して、
<code>brew reinstall emacs</code>
で再インストールしました。
その後の <code>brew update</code> で引っかかる原因になるので、
reinstall したら <code>brew edit emacs</code> で戻しました。</p>

<p>適用されればどこでも良いのですが、最後に追加するようにしてみました。</p>

<p>```diff
diff &mdash;git a/Library/Formula/emacs.rb b/Library/Formula/emacs.rb
index db7c46c..26ec334 100644
&mdash;&ndash; a/Library/Formula/emacs.rb
+++ b/Library/Formula/emacs.rb
@@ -49,6 +49,7 @@ class Emacs &lt; Formula</p>

<pre><code> if build.include? "cocoa" and build.include? "japanese"
   p[:p0].push("http://sourceforge.jp/projects/macemacsjp/svn/view/inline_patch/trunk/emacs-inline.patch?view=co&amp;revision=583&amp;root=macemacsjp&amp;pathrev=583")
 end
</code></pre>

<ul>
<li> p[:p1].push &ldquo;<a href="https://gist.github.com/anonymous/8553178/raw/c0ddb67b6e92da35a815d3465c633e036df1a105/emacs.memory.leak.aka.distnoted.patch.diff">https://gist.github.com/anonymous/8553178/raw/c0ddb67b6e92da35a815d3465c633e036df1a105/emacs.memory.leak.aka.distnoted.patch.diff</a>&rdquo;
 p
end unless build.head?</li>
</ul>


<p>```</p>

<h2>しばらく使ってみて</h2>

<p>inline patch をあてたり外したりして試していた時は時々突然 Emacs 自体が落ちていたのですが、このパッチにしてからは起きていないようです。</p>

<h2>japanese パッチ問題</h2>

<p>別の話として、ことえりの日本語入力の確定直後になぜか「英字」入力状態になってしまうことがあって、カーソルを動かさないと直らないという現象が以前から起きています。
これは inline patch と mavericks の組み合わせで発生しているようなのですが、原因は調べられていません。</p>

<p>文章を入力しにくくなるので、今は</p>

<p><code>
brew uninstall emacs
brew install emacs --cocoa --srgb --with-gnutls
brew linkapps
</code></p>

<p>という感じで <code>--japanese</code> は外した状態でインストールしています。</p>

<p>homebrew でオプションの追加は <code>brew reinstall emacs --japanese</code> のように <code>reinstall</code> でも出来るのに、
外す方は <code>reinstall</code> だと出来ないようなので、
<code>uninstall</code> してから <code>install</code> し直しています。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第 7 回 RubyMotion もくもく会 in Osaka に参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2014-01-22-rubymotion-mokumoku-osaka.html"/>
    <updated>2014-01-22T23:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/rubymotion-mokumoku-osaka</id>
    <content type="html"><![CDATA[<p>第 1 回から第 6 回にも参加した RubyMotion もくもく会 in Osaka の
<a href="http://connpass.com/event/4560/">第 7 回 RubyMotion もくもく会 in Osaka</a>
に参加してきました。</p>

<p>次回の
<a href="http://connpass.com/event/4910/">第 8 回 RubyMotion もくもく会 in Osaka</a>
は 2/19(水) になりました。</p>

<!--more-->


<h2>もくもく</h2>

<p>今回は初参加の人がいました。</p>

<p>途中は少し質問の話があったり、リリースしたものの話があったりした以外は
基本的にみんなもくもくしていました。</p>

<h2>話に出たもの</h2>

<p>話に出てきたサイトなどのメモです。</p>

<ul>
<li><a href="https://parse.com/">https://parse.com/</a></li>
<li><a href="http://shin1x1.github.io/vagrantx/">http://shin1x1.github.io/vagrantx/</a></li>
<li><a href="https://twitter.com/ametalk">https://twitter.com/ametalk</a></li>
<li><a href="http://orekike.com/history/orekike7">http://orekike.com/history/orekike7</a></li>
<li><a href="http://www.paintcodeapp.com/">http://www.paintcodeapp.com/</a></li>
</ul>


<h2>やっていたこと</h2>

<ul>
<li>ちゃんと名前をつけて <code>motion create</code> からやり直しました。</li>
<li>いらないメニュー項目がほとんどなので、 <code>buildMenu</code> をコメントアウトしてみたら、
Command+q での終了も出来なくなって不便になったので、戻しました。</li>
<li><code>open</code> コマンドでエラーになったときに <code>NSAlert</code> でエラーメッセージを出すようにしました。</li>
</ul>


<h2>引き続き不明な点</h2>

<p>細かいものはいろいろありますが、大きなものは以下の2点です。</p>

<h3>URL の受け取り方</h3>

<p>起動中に <code>open http://localhost:3000</code> のように URL を開いた場合は</p>

<p>```ruby</p>

<pre><code>NSAppleEventManager.sharedAppleEventManager.setEventHandler(
  self,
  andSelector: :'handleGetURLEvent:withReplyEvent:',
  forEventClass: KInternetEventClass,
  andEventID: KAEGetURL)
</code></pre>

<p>```</p>

<p>で登録しておけば受け取れていますが、
起動していない時に開かれた URL を受け取る方法がわからないままです。</p>

<p><code>open -a Hello --args http://localhost:3000</code> のように起動すれば
<code>NSProcessInfo.processInfo.arguments</code> で取り出せますが、
他のアプリケーションから URL を開いた時に受け取れないので
意味がないです。</p>

<h3>window が閉じられた時の処理</h3>

<p>今のままだと Command+w などで閉じられてしまうと
URL を受け取っても見せる window がなくなっているので
何も出来ないです。</p>

<p>window を閉じられたら終了するか、
閉じられても URL を開いたらまた出てくるようにしたいです。</p>

<h2>まとめ</h2>

<p>今回はみんなもくもくとそれぞれの作業が進んだという感じで、
成果発表もすぐに終わった感じでした。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RubyMotionのOSXアプリの起動エラー]]></title>
    <link href="http://blog.n-z.jp/blog/2013-12-28-rubymotion-error.html"/>
    <updated>2013-12-28T18:55:18+09:00</updated>
    <id>http://blog.n-z.jp/blog/rubymotion-error</id>
    <content type="html"><![CDATA[<p>最近 RubyMotion で作っている OSX アプリが
<code>LSOpenURLsWithRole() failed with error -10810</code>
などで起動しないことがあったので原因を調べてみました。</p>

<!--more-->


<h2>LSOpenURLsWithRole() failed with error -10810</h2>

<h3>よくある原因</h3>

<p><code>Hello.app/Contents/MacOS/Hello</code>
のような実行ファイルの実体に実行属性が外れているというのが
よくある原因のようで、
<a href="http://owncloud.org/">ownCloud</a>
経由で同期したアプリが実行できなかったときは
これが原因でした。</p>

<h3>別の原因</h3>

<p>実行属性も問題なくて悩んでいたときに
コンソール (Console.app) のログを見てみると</p>

<p><code>
2013/12/28 10:39:17.963 open[85406]: spawn_via_launchd() failed, errno=22 label=com.yourcompany.Hello.44032 path=.../Hello/build/MacOSX-10.9-Development/Hello.app/Contents/MacOS/Hello flags=0 : LaunchApplicationClient.cp #1168 LaunchApplicationViaLaunchDJobLabel() q=com.apple.main-thread
</code>
のようなログが出ていたので、
<code>LaunchApplicationViaLaunchDJobLabel</code>
で検索してみたところ、
<a href="http://portingteam.com/topic/9723-mavericks-problem-opening-fresh-wrapper/">Mavericks problem opening fresh wrapper</a>
という話が見つかって、
そこに書いてあった</p>

<p><code>
launchctl remove $(launchctl list | grep wineskin | awk '{ print $3 }')
</code></p>

<p>という手順を参考にして解決しました。</p>

<p><code>Hello</code> が2個残っていて、
<code>$()</code> だとダメだったので個別に <code>launchctl remove</code> しました。</p>

<p><code>
% launchctl list | grep Hello
-   2   com.yourcompany.Hello.44032
-   0   com.yourcompany.Hello.53008
%  launchctl remove $(launchctl list | awk '/Hello/{print $3}')
usage: launchctl remove &lt;job label&gt;
zsh: exit 1     launchctl remove $(launchctl list | awk '/Hello/{print $3}')
%  echo launchctl remove $(launchctl list | awk '/Hello/{print $3}')
launchctl remove com.yourcompany.Hello.44032 com.yourcompany.Hello.53008
%  launchctl remove com.yourcompany.Hello.44032
%  launchctl remove com.yourcompany.Hello.53008
%  open -a Hello
</code></p>

<h3>その他</h3>

<p>その他の対象方法も含めて
<a href="http://www.thexlab.com/faqs/error-10810.html">Error -10810 Openng Applictions or Relaunching Finder</a>
にいろいろ書いてあるようです。
(英語で長かったのでちゃんと読んでません。)</p>

<h2>MacBookPro6,2 で EXC_BAD_INSTRUCTION (SIGILL) になって起動しない</h2>

<p>未解決です。</p>

<p><a href="https://github.com/MohawkApps/Hacker-Bar/issues/36">EXC_BAD_INSTRUCTION crash in App Store version&hellip;</a>
に似た話があって、
RubyMotion のバグっぽいという話のようです。</p>

<p><code>motion create --template=osx HelloOSX</code>
で作成しただけのものでも
<a href="https://gist.github.com/znz/8158061#file-helloosx-report-txt">クラッシュ</a>
して起動しませんでした。</p>

<p>RubyMotion を入れている自分の MacBook Air の環境の問題かどうかを切り分けるために
<a href="http://shin1x1.github.io/vagrantx/">VagrantX</a>
も試してみましたが、
<a href="https://gist.github.com/znz/8158061#file-vagrantx-report-txt">同じくクラッシュ</a>
して起動しませんでした。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[distnotedの暴走が止まるというCocoa Emacsのinline patch修正版を使ってみた]]></title>
    <link href="http://blog.n-z.jp/blog/2013-12-27-emacs-inline-patch.html"/>
    <updated>2013-12-27T23:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/emacs-inline-patch</id>
    <content type="html"><![CDATA[<p><a href="/blog/2013-11-13-killall-distnoted-periodically.html">launchdでdistnotedを定期的に終了させる</a>
話のコメントで
<a href="https://gist.github.com/anonymous/8142555">Emacs.appでインラインパッチを当てた時にdistnotedが暴走しなくなる</a>
修正を教えてもらったので、
試してみました。</p>

<p>2014-01-29追記:
コメントにあるようにまだ問題があったので、続きとして
<a href="/blog/2014-01-29-emacs-distnoted-patch.html">emacsやdistnotedを安定させるパッチをhomebrewで適用した</a>
話を書きました。</p>

<!--more-->


<h2>homebrew で適用するパッチの変更</h2>

<p>適用法としては
<code>brew edit emacs</code>
で以下のように変更して、
<code>brew reinstall emacs</code>
で再インストールしました。</p>

<p>```diff
diff &mdash;git a/Library/Formula/emacs.rb b/Library/Formula/emacs.rb
index 712c3d1..5ce4ce2 100644
&mdash;&ndash; a/Library/Formula/emacs.rb
+++ b/Library/Formula/emacs.rb
@@ -47,7 +47,7 @@ class Emacs &lt; Formula</p>

<pre><code> # "--japanese" option:
 # to apply a patch from MacEmacsJP for Japanese input methods
 if build.include? "cocoa" and build.include? "japanese"
</code></pre>

<ul>
<li>   p[:p0].push(&ldquo;<a href="http://sourceforge.jp/projects/macemacsjp/svn/view/inline_patch/trunk/emacs-inline.patch?view=co&amp;revision=583&amp;root=macemacsjp&amp;pathrev=583">http://sourceforge.jp/projects/macemacsjp/svn/view/inline_patch/trunk/emacs-inline.patch?view=co&amp;revision=583&amp;root=macemacsjp&amp;pathrev=583</a>&rdquo;)</li>
<li>   p[:p0].push(&ldquo;<a href="https://gist.github.com/anonymous/8142555/raw/d67ad1dc814579d125afbd18de3a62ba69895601/emacs-inline.patch">https://gist.github.com/anonymous/8142555/raw/d67ad1dc814579d125afbd18de3a62ba69895601/emacs-inline.patch</a>&rdquo;)
 end
 p
end unless build.head?
```</li>
</ul>


<h2>元のパッチからの変更点</h2>

<p>元の sourceforge.jp のパッチとの差分をとってみると、
以下のメソッド呼び出しが変わっているだけでした。</p>

<p>```diff
diff &mdash;git a/emacs-inline.patch.sfjp b/emacs-inline.patch.gist
index 52f2052..d67ad1d 100644
&mdash;&ndash; a/emacs-inline.patch.sfjp
+++ b/emacs-inline.patch.gist
@@ -1015,7 +1015,7 @@ diff -r -N -p ../emacs-24.3.org/src/nsterm.m src/nsterm.m</p>

<pre><code>                                            name: nil object: nil]; */
</code></pre>

<ul>
<li> [[NSDistributedNotificationCenter defaultCenter] addObserver: NSApp</li>
<li><pre><code>            selector: @selector (changeInputMethod:)
</code></pre>

<p>&ndash;+                         name: @&ldquo;AppleSelectedInputSourcesChangedNotification&rdquo; object: nil];
++                         name: @&ldquo;AppleSelectedInputSourcesChangedNotification&rdquo; object: nil suspensionBehavior:NSNotificationSuspensionBehaviorDeliverImmediately];</p>

<p>   dpyinfo = xzalloc (sizeof *dpyinfo);</p></li>
</ul>


<p>```</p>

<h2>まとめ</h2>

<p>使ってみて問題がなければ sourceforge.jp の方に取り込んでもらうのが良さそうです。</p>

<p>しばらく使ってみた感じだと distnoted のメモリ使用量が増えていっても、
一度 Emacs.app を終了すると distnoted のメモリ使用量が一気に減るようになりました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第 6 回 RubyMotion もくもく会 in Osaka に参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2013-12-26-rubymotion-mokumoku-osaka.html"/>
    <updated>2013-12-26T23:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/rubymotion-mokumoku-osaka</id>
    <content type="html"><![CDATA[<p>第 1 回から第 5 回にも参加した RubyMotion もくもく会 in Osaka の
<a href="http://connpass.com/event/4211/">第 6 回 RubyMotion もくもく会 in Osaka</a>
に参加してきました。</p>

<p>次回の
<a href="http://connpass.com/event/4560/">第 7 回 RubyMotion もくもく会 in Osaka</a>
は 1/22(水) になりました。</p>

<!--more-->


<h2>話に出たもの</h2>

<p>話に出てきたサイトなどのメモです。</p>

<ul>
<li><a href="http://shin1x1.github.io/vagrantx/">http://shin1x1.github.io/vagrantx/</a>

<ul>
<li>URL が小文字に変わっていました。</li>
</ul>
</li>
<li><a href="https://www.cocoacontrols.com/">Cocoa Controls</a></li>
<li><a href="http://getpocket.com/">Pocket</a></li>
<li><a href="http://71squared.com/ja/particledesigner">Particle Designer</a></li>
<li>UIMotionEffect で視差効果が簡単に実装できる</li>
<li>All Cast という Android アプリで Apple TV に AirPlay できる</li>
</ul>


<h2>やっていたこと</h2>

<p>今回は前回作り始めていたデフォルトブラウザを乗っ取って、
Firefox とか Chrome とか Safari とかに起動し分けられる
OSX アプリの作成の続きをやっていました。</p>

<p>今回の最後ではスクリーンショットのようになりました。</p>

<p><img src="/images/2013-12-26-hello.png" title="&ldquo;screenshot&rdquo; &ldquo;作成途中のアプリのスクリーンショット&rdquo;" ></p>

<p>適当に作った Hello.app に動作確認用のメソッドを付け足していただけなので、
まだタイトルは Hello のままになっています。</p>

<h3>URL 受け取り問題</h3>

<p>LimeChat で URL をクリックしたときなどに受け取るのは
前回調べていた <code>LSSetDefaultHandlerForURLScheme</code> での
デフォルトブラウザ設定とあわせて、</p>

<p>```ruby</p>

<pre><code>NSAppleEventManager.sharedAppleEventManager.setEventHandler(
  self,
  andSelector: :'handleGetURLEvent:withReplyEvent:',
  forEventClass: KInternetEventClass,
  andEventID: KAEGetURL)
</code></pre>

<p>```</p>

<p>でイベントを受け取ると Hello.app 起動中は受け取れたのですが、
起動していない時の URL クリックのイベントを受け取れない問題は
結局解決できませんでした。</p>

<p><code>open -a Hello --args URL</code>
というなら
<code>NSProcessInfo.processInfo.arguments</code>
で受け取れるのですが、
LimeChat などでの URL クリックで起動された時や
<code>open -a Hello URL</code>
という起動方法だと受け取り方がわかりませんでした。</p>

<p>他のブラウザの起動も
<code>open -a 'Google Chrome' http://localhost:4000/ --args -incognito</code>
のように URL は args ではない方法で渡さないと開けませんでした。</p>

<h3><code>keyDirectObject</code> がない問題と前面に出てこない問題</h3>

<p>URL の受け取り部分は今のところ、以下のようにしています。</p>

<p>```ruby
  def handleGetURLEvent(event, withReplyEvent: replyEvent)</p>

<pre><code>keyDirectObject = '----'.unpack('L')[0]
urlStr = event.paramDescriptorForKeyword(keyDirectObject).stringValue
@text.stringValue = urlStr

Process.spawn("osascript", "-e", &lt;&lt;-SCRIPT)
</code></pre>

<p>tell Application &ldquo;#{NSBundle.mainBundle.infoDictionary[&lsquo;CFBundleName&rsquo;]}&rdquo;
  activate
end tell</p>

<pre><code>SCRIPT
</code></pre>

<p>  end
```</p>

<p>最初の問題として、
<code>keyDirectObject</code> が RubyMotion にはなさそうだったので、
値を調べて <code>unpack</code> で同等の値を生成するようにしました。
この部分は前回から今回までの間に調査して作成済みだったので、
詳しい調査方法は忘れてしまいましたが、
引数のオブジェクトを調べて見つけたような気がします。</p>

<p>前面に出てこない問題は
今回のもくもく会の間に対処しました。</p>

<p>前面に持ってくる方法がどういう API を呼べばよいのかわからず、
AppleScript を使った方法は情報があったので、
とりあえず <code>osascript</code> を呼び出してしまうことにしました。</p>

<p>最初は <code>spawn</code> ではなく <code>system</code> を使ってしまったら、
デッドロックしてしまって強制終了するしかなくなってしまったので、
<code>Process.spawn</code> を使いました。</p>

<h2>まとめ</h2>

<p>今回は作りたいものが決まっていて、しっかりもくもく出来ました。</p>

<p>起動時に URL が受け取れない問題は
自分が使うだけなら
URL を 2 回クリックするという方法で
回避できるのですが、なんとかしたいところです。</p>

<p><code>keyDirectObject</code> と <code>osascript</code> を使っているところは
他に方法がなければ
今のままでも実用上は困らないと感じました。</p>
]]></content>
  </entry>
  
</feed>
