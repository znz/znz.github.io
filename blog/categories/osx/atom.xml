<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: osx | @znz blog]]></title>
  <link href="http://blog.n-z.jp/blog/categories/osx/atom.xml" rel="self"/>
  <link href="http://blog.n-z.jp/"/>
  <updated>2014-08-14T21:36:20+09:00</updated>
  <id>http://blog.n-z.jp/</id>
  <author>
    <name><![CDATA[Kazuhiro NISHIYAMA]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[第 13 回 RubyMotion もくもく会 in Osaka に参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2014-07-16-rubymotion-mokumoku-osaka.html"/>
    <updated>2014-07-16T19:33:35+09:00</updated>
    <id>http://blog.n-z.jp/blog/rubymotion-mokumoku-osaka</id>
    <content type="html"><![CDATA[<p>第 1 回から第 12 回にも参加した RubyMotion もくもく会 in Osaka の
<a href="http://rubymotionjp.connpass.com/event/7079/">第 13 回 RubyMotion もくもく会 in Osaka</a>
に参加してきました。
今日はほぼ途中の会話はなくて、みんなでもくもくしていました。
その代わり、最後の成果発表の時は盛り上がっていました。</p>

<p>次回の
<a href="http://rubymotionjp.connpass.com/event/7583/" title="第 14 回 RubyMotion もくもく会 in Osaka">第 14 回 RubyMotion もくもく会 in Osaka</a>
は 08/20(水) になりました。</p>

<!--more-->


<h2>メモ</h2>

<ul>
<li>AppCode</li>
<li>TapTheCircle</li>
<li>motion-osx-cli</li>
<li><a href="https://speakerdeck.com/iwazer/rubymotionfalseqi-chi-tiiitokoro" title="RubyMotionの気持ちいいところ // Speaker Deck">RubyMotionの気持ちいいところ // Speaker Deck</a></li>
<li>RubyMotion + IB で参考にしたもの

<ul>
<li><a href="http://tama.hatenablog.jp/entry/2014/05/02/231633" title="RubyMotion(MacOS)でIBの作成方法 - たまたんのぶろぐ">RubyMotion(MacOS)でIBの作成方法 - たまたんのぶろぐ</a></li>
<li><a href="http://d.hatena.ne.jp/laiso+iphone/20130510/1368201914" title="RubyMotionアプリでStoryboardとIBのアウトレット+アクションを使う話 - laiso+iphone">RubyMotionアプリでStoryboardとIBのアウトレット+アクションを使う話 - laiso+iphone</a></li>
</ul>
</li>
<li><a href="https://github.com/omoon/rm-test-test">https://github.com/omoon/rm-test-test</a>

<ul>
<li>travis-ci で RubyMotion のテストも動かせるという話</li>
<li><code>bundle exec rake spec osx=true</code> にすれば OSX も動く。</li>
<li>参考: <a href="https://github.com/rubymotion/BubbleWrap/blob/master/.travis.yml">https://github.com/rubymotion/BubbleWrap/blob/master/.travis.yml</a></li>
</ul>
</li>
<li><a href="https://github.com/mattsears/nyan-cat-formatter">https://github.com/mattsears/nyan-cat-formatter</a></li>
</ul>


<h2>今日の成果</h2>

<p>情報を探してみたら <code>rake ib</code> で Interface Builder を起動すれば stub を自動生成してくれて、
ボタンクリックとアクションのひも付けができるとわかったので、
ボタンをクリックした時にメソッド呼び出しはできるようになりました。</p>

<p>しかし、 <code>ib_outlet</code> で宣言したプロパティに outlet でひも付けしたインスタンス変数が <code>nil</code> のままで悩んでいたところ、
最後に <code>outlet</code> に変えると動くようになりました。
<code>ib_outlet</code> のままでも Interface Builder で出てくるので使えるのかと勘違いしていました。</p>

<p>家に帰ってから
<code>$(find /System/Library/Frameworks -name lsregister) -kill -r -domain local -domain user</code>
で既存の起動の関連付けを削除して、
ib 版で <code>Set Default Browser</code> をやり直したところ、
まだ問題があったので、それも直して以前のものと同様に使えるところまでは出来ました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第 12 回 RubyMotion もくもく会 in Osaka に参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2014-06-20-rubymotion-mokumoku-osaka.html"/>
    <updated>2014-06-20T19:27:13+09:00</updated>
    <id>http://blog.n-z.jp/blog/rubymotion-mokumoku-osaka</id>
    <content type="html"><![CDATA[<p>第 1 回から第 11 回にも参加した RubyMotion もくもく会 in Osaka の
<a href="http://rubymotionjp.connpass.com/event/6666/">第 12 回 RubyMotion もくもく会 in Osaka</a>
に参加してきました。</p>

<p>次回の
<a href="http://rubymotionjp.connpass.com/event/7079/">第 13 回 RubyMotion もくもく会 in Osaka</a>
は 07/16(水) になりました。</p>

<!--more-->


<h2>メモ</h2>

<ul>
<li>一周年記念</li>
<li>RubyMotion は Android にも対応予定</li>
<li>RubyMotion のライセンスが expired して更新しても <code>rake</code> のときの <code>Your maintenance plan is expired. Run 'motion account' to renew it.</code> というメッセージはキャッシュの影響で 24 時間ぐらい待たないと消えないらしいという話</li>
<li>バージョンは 2.29 が最新</li>
<li>Swift が話題</li>
<li><a href="http://tools.msng.info/">割り勘電卓</a></li>
<li><a href="https://github.com/shin1x1/vagrantx">https://github.com/shin1x1/vagrantx</a> のソース公開</li>
<li><a href="https://github.com/MacFace/MacFace/tree/v2.0">MacFace v2</a> が Swift で作り直し中</li>
</ul>


<h2>やったこと</h2>

<p>Interface Builder と <code>gem 'ib'</code> で GUI を作り直そうとしていました。</p>

<p>GUI 作成は細かいサイズを気にしなくて良い Tcl/Tk の pack 方式や
Web での bootstrap のようなやり方の方が慣れていて、
GUI ツールで作成するのは GTK+2 の glade ぐらいしかまともに使ったことがなかったので、
使い方や良い感じに配置する方法で結構悩んでいました。
悩んでいた部分は最後の成果発表の時にいろいろ教えてもらったりしました。</p>

<p>コードとの組み合わせは、検索で見つけた</p>

<pre><code>@mainWindowController = MainWindow.alloc.initWithWindowNibName('MainWindow')
@mainWindowController.window.makeKeyAndOrderFront(self)
</code></pre>

<p>という方法で window は表示できたものの、
<code>@mainWindowController.window</code> が <code>nil</code> になっていて、
<code>makeKeyAndOrderFront</code> の呼び出しは失敗していました。</p>

<p>ひとまず現状は <a href="https://github.com/znz/urltrapper/tree/ib">ib ブランチ</a> に公開しています。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第 11 回 RubyMotion もくもく会 in Osaka に参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2014-05-28-rubymotion-mokumoku-osaka.html"/>
    <updated>2014-05-28T19:38:39+09:00</updated>
    <id>http://blog.n-z.jp/blog/rubymotion-mokumoku-osaka</id>
    <content type="html"><![CDATA[<p>第 1 回から第 10 回にも参加した RubyMotion もくもく会 in Osaka の
<a href="http://connpass.com/event/6116/">第 11 回 RubyMotion もくもく会 in Osaka</a>
に参加してきました。</p>

<p>次回の
<a href="http://connpass.com/event/6666/">第 12 回 RubyMotion もくもく会 in Osaka</a>
は 06/20(金) になりました。</p>

<!--more-->


<h2>メモ</h2>

<ul>
<li><code>gem 'ib'</code> と Auto Layout</li>
<li><a href="http://kojisatoapp.blogspot.jp/2014/03/admobnendiadadmob.html">アプリで飯を食う: AdMobメディエーションで広告(Nend,iAd,AdMob)を切り替える方法</a></li>
<li><code>usingSpringWithDamping</code></li>
<li><a href="http://vagrantmanager.com/">Vagrant Manager</a></li>
<li><a href="http://stackoverflow.com/questions/13216092/how-to-sort-a-hash-by-value-in-descending-order-and-output-a-hash-in-ruby">Hash のソート</a></li>
<li><a href="http://urltrapper.n-z.jp/">URLTrapper</a> v0.1</li>
<li><a href="https://itunes.apple.com/jp/app/kokowo-songru/id473519853?mt=8">ここを送る</a></li>
<li><a href="http://shin1x1.github.io/vagrantx/">VagrantX</a> v0.2.0</li>
<li><a href="http://macface.github.io/">MacFace</a></li>
</ul>


<h2>URLTrapper 公開</h2>

<p>今日は URLTrapper の公開作業をしていました。</p>

<p>最終的には
<a href="http://urltrapper.n-z.jp/">URLTrapper</a>
の<a href="https://github.com/znz/urltrapper">ソースコードを公開</a>して、
<a href="https://github.com/znz/urltrapper/releases/tag/v0.1">v0.1 をリリース</a>しました。</p>

<h2>Config 設定</h2>

<p>まず
<a href="http://rubymotion.jp/RubyMotionDocumentation/guides/project-management/index.html">RubyMotion Project Management Guide</a>
の 2. Configuration をみて identifier などを設定していきました。</p>

<h2>リリースファイル作成</h2>

<p><code>rake build</code> で <code>build/MacOSX-10.9-Release/*.app</code> が出来るので、
それを Finder で zip にして、
バージョン付きのファイル名にしました。</p>

<h2>リリース</h2>

<p>github の Release からリリースを作成して、
先ほどの zip ファイルをアップロードしてリリースしました。</p>

<p>途中、リリースノートにスクリーンショットをアップロードしました。
このスクリーンショットは後で GitHub Pages を作る時にも使いました。</p>

<h2>GitHub Pages 作成</h2>

<p>github の Settings から GitHub Pages にある Automatic page generator を使って作成しました。</p>

<p>自動作成されたものから、ダウンロードのリンクのところは VagrantX を参考にして、
ソースコードのダウンロードからバイナリの zip のダウンロードに書き換えました。</p>

<h2>ドメイン問題</h2>

<p><code>znz.github.io</code> は、この blog 用に使っていて、
<code>znz.github.io/urltrapper</code> を開くと
<code>blog.n-z.jp/urltrapper</code> に飛ばされてしまって
困ってしまったので、
<a href="https://github.com/znz/urltrapper/blob/gh-pages/CNAME">https://github.com/znz/urltrapper/blob/gh-pages/CNAME</a>
として個別のサブドメインを使うように設定したのですが、
すぐには反映されなくて、しばらく悩んでいました。</p>

<p>最後の成果発表のタイミングでは反映されていて見えるようになっていました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[brew pin でバグのあるバージョンを避ける例]]></title>
    <link href="http://blog.n-z.jp/blog/2014-05-19-brew-pin.html"/>
    <updated>2014-05-19T21:35:03+09:00</updated>
    <id>http://blog.n-z.jp/blog/brew-pin</id>
    <content type="html"><![CDATA[<p><code>graphviz version 2.38.0 (20140413.2041)</code>
で
<a href="http://graphviz.org/mantisbt/view.php?id=2444">label の先頭の日本語が消える</a>
というバグにはまったので、
<code>brew pin</code>
で修正されたバージョンがリリースされるまでの間、
古いバージョンに固定することにしました。
(バグ自体はリンク先をみればわかるようにすぐに修正されたようです。)</p>

<!--more-->


<h2>対象バージョン</h2>

<p>現在の最新は</p>

<pre><code class="console">% dot -V
dot - graphviz version 2.38.0 (20140413.2041)
</code></pre>

<p>で以下のバージョンに戻しました。</p>

<pre><code class="console">% dot -V
dot - graphviz version 2.36.0 (20140111.2315)
</code></pre>

<h2>対象コミット調査</h2>

<p>以下のように 2.38.0 にあがったコミットを探してみると
<code>2f368f7be64a5b4a6b56b4ab85827997fa520953</code>
だったので、この前に戻せば良いとわかりました。</p>

<pre><code class="console">% cd $(brew --prefix)
% git log -p Library/Formula/graphviz.rb
</code></pre>

<h2><code>brew pin</code> で固定</h2>

<p>そして、以下の手順で固定しました。</p>

<ul>
<li><code>git checkout コミット^</code> でコミットの直前に戻す</li>
<li>古いバージョンに戻すので一度アンインストール</li>
<li>古いバージョンでインストールし直し</li>
<li><code>brew pin</code> で固定</li>
<li><code>git checkout master</code> で <code>/usr/local</code> (<code>brew --prefix</code>) の状態を戻す</li>
<li><code>brew upgrade</code> で固定されているのを確認</li>
</ul>


<pre><code class="console">% cd $(brew --prefix)
%  git checkout 2f368f7be64a5b4a6b56b4ab85827997fa520953\^
Note: checking out '2f368f7be64a5b4a6b56b4ab85827997fa520953^'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at b8b3a30... glib-networking 2.40.1
%  lv Library/Formula/graphviz.rb
% brew uninstall graphviz
Uninstalling /usr/local/Cellar/graphviz/2.38.0...
% brew install graphviz
==&gt; Downloading https://downloads.sf.net/project/machomebrew/Bottles/graphviz-2.36.0_1.mav
Already downloaded: /Library/Caches/Homebrew/graphviz-2.36.0_1.mavericks.bottle.tar.gz
==&gt; Pouring graphviz-2.36.0_1.mavericks.bottle.tar.gz
🍺  /usr/local/Cellar/graphviz/2.36.0_1: 470 files, 11M
% brew pin graphviz
% git checkout master
Previous HEAD position was b8b3a30... glib-networking 2.40.1
Switched to branch 'master'
% brew upgrade
==&gt; No packages to upgrade
==&gt; Not upgrading 1 pinned package:
graphviz 2.38.0
</code></pre>

<h2><code>brew unpin</code></h2>

<p>修正されたバージョンがリリースされて、
Homebrew でインストールできるようになったら
<code>brew unpin graphviz</code>
で解除すれば良さそうです。</p>

<p><code>brew pin</code> は
<a href="http://qiita.com/uasi/items/f06c6fe7c04b593ec6a3#comment-178ddb970a3033653648">qiita の Homebrew でバージョンを指定してインストールするコマンド作った のコメント</a>
に書いてあるように、
FORMULA 指定なしの <code>brew upgrade</code> での更新対象にしないという意味のようなので、
master に戻った状態で <code>unpin</code> してしまっても
その場で <code>pin</code> し直せば大丈夫のようです。</p>

<pre><code class="console">% dot -V
dot - graphviz version 2.36.0 (20140111.2315)
% brew unpin graphviz
% brew pin graphviz
% brew upgrade
==&gt; No packages to upgrade
==&gt; Not upgrading 1 pinned package:
graphviz 2.38.0
</code></pre>

<p>修正されたバージョンがリリースされた時に <code>brew unpin</code> を忘れないように実行する必要がありますが、
<code>brew upgrade</code> の時に毎回メッセージが出るので、気付きやすそうです。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac OS X で owncloudcmd を使う]]></title>
    <link href="http://blog.n-z.jp/blog/2014-05-02-owncloudcmd.html"/>
    <updated>2014-05-02T22:18:39+09:00</updated>
    <id>http://blog.n-z.jp/blog/owncloudcmd</id>
    <content type="html"><![CDATA[<p>ownCloud のデスクトップクライアントには <code>owncloudcmd</code> というコマンドが含まれています。
昔は <code>ocsync</code> というコマンドが別途あったようですが、今は同梱されている <code>owncloudcmd</code> を使うのが主流のようです。</p>

<!--more-->


<h2>対象バージョン</h2>

<ul>
<li>クライアント : ownCloud client for Mac 1.5.4 に同梱の <code>owncloudcmd</code> で試しました。</li>
<li>サーバー : 自前サーバーなら ownCloud 6.0.3 で、今回の例では <a href="https://teracloud.jp/">Teraクラウド</a> を使ってみました。</li>
</ul>


<h2>概要</h2>

<p><code>path/to/owncloudcmd path/to/localdir ownclouds://example.jp/remote.php/webdav</code>
のようにローカルのディレクトリと <code>owncloud</code> の WebDAV 用の URL の先頭の <code>http</code> を <code>owncloud</code> に置き換えたもの (<code>https</code> なら <code>ownclouds</code>) を指定すると同期できます。</p>

<p>引数なしで実行するとオプションの説明が出ます。</p>

<h2>Mac OS X 版での修正</h2>

<h3><code>owncloudcmd</code> のリンクミス?</h3>

<p>普通に使おうとすると <code>dyld: Library not loaded: libowncloudsync.0.dylib</code> で起動できません。</p>

<pre><code class="console">% /Applications/owncloud.app/Contents/MacOS/owncloudcmd $HOME/teracloud ownclouds://teracloud.jp/remote.php/webdav
dyld: Library not loaded: libowncloudsync.0.dylib
  Referenced from: /Applications/owncloud.app/Contents/MacOS/owncloudcmd
  Reason: image not found
zsh: trace trap  /Applications/owncloud.app/Contents/MacOS/owncloudcmd
</code></pre>

<h3>ライブラリのパス修正</h3>

<p><code>otool -L</code> で確認すると相対パスがまずいとわかります。</p>

<pre><code class="console">% otool -L /Applications/owncloud.app/Contents/MacOS/owncloudcmd
/Applications/owncloud.app/Contents/MacOS/owncloudcmd:
    libowncloudsync.0.dylib (compatibility version 0.0.0, current version 1.5.4)
    QtWebKit.framework/Versions/4/QtWebKit (compatibility version 4.9.0, current version 4.9.3)
    QtXmlPatterns.framework/Versions/4/QtXmlPatterns (compatibility version 4.8.0, current version 4.8.4)
    QtGui.framework/Versions/4/QtGui (compatibility version 4.8.0, current version 4.8.4)
    QtDBus.framework/Versions/4/QtDBus (compatibility version 4.8.0, current version 4.8.4)
    QtXml.framework/Versions/4/QtXml (compatibility version 4.8.0, current version 4.8.4)
    QtSql.framework/Versions/4/QtSql (compatibility version 4.8.0, current version 4.8.4)
    QtNetwork.framework/Versions/4/QtNetwork (compatibility version 4.8.0, current version 4.8.4)
    QtCore.framework/Versions/4/QtCore (compatibility version 4.8.0, current version 4.8.4)
    libocsync.0.dylib (compatibility version 0.0.0, current version 0.2.1)
    /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 125.2.11)
    /usr/local/opt/sqlite/lib/libsqlite3.0.dylib (compatibility version 9.0.0, current version 9.6.0)
    /usr/lib/libiconv.2.dylib (compatibility version 7.0.0, current version 7.0.0)
    /System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices (compatibility version 1.0.0, current version 44.0.0)
    /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation (compatibility version 300.0.0, current version 751.63.0)
    /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 1038.36.0)
    @loader_path/../Frameworks/Sparkle.framework/Versions/A/Sparkle (compatibility version 1.5.0, current version 1.5.0)
    /usr/local/lib/libqtkeychain.0.3.0.dylib (compatibility version 0.0.0, current version 0.3.0)
    /usr/local/opt/neon/lib/libneon.27.dylib (compatibility version 31.0.0, current version 31.0.0)
    /usr/lib/libstdc++.6.dylib (compatibility version 7.0.0, current version 7.9.0)
</code></pre>

<p><code>install_name_tool -add_rpath</code> や <code>install_name_tool -delete_rpath</code> で試行錯誤したのですが、
<code>otool -l /Applications/owncloud.app/Contents/MacOS/owncloudcmd</code> で確認しても
<code>rpath</code> が後ろに追加されてきいていないようだったので、
<code>install_name_tool -change</code> で対応することにしました。</p>

<p>まず相対パスを修正しました。</p>

<pre><code class="console">%  otool -L /Applications/owncloud.app/Contents/MacOS/owncloudcmd | awk '$1~"^lib"{print "install_name_tool -change " $1 " @executable_path/../MacOS/" $1 " /Applications/owncloud.app/Contents/MacOS/owncloudcmd" }' | sh -e
%  otool -L /Applications/owncloud.app/Contents/MacOS/owncloudcmd | awk '$1~"^Qt"{print "install_name_tool -change " $1 " @executable_path/../Frameworks/" $1 " /Applications/owncloud.app/Contents/MacOS/owncloudcmd" }' | sh -e
</code></pre>

<p>さらに <code>/usr/local/lib</code> をさしているものがあったのを修正しました。</p>

<pre><code class="console">%  /Applications/owncloud.app/Contents/MacOS/owncloudcmd
dyld: Library not loaded: /usr/local/lib/libqtkeychain.0.3.0.dylib
  Referenced from: /Applications/owncloud.app/Contents/MacOS/owncloudcmd
  Reason: image not found
zsh: trace trap  /Applications/owncloud.app/Contents/MacOS/owncloudcmd
%  find /Applications/owncloud.app -name libqtkeychain.0.3.0.dylib
/Applications/owncloud.app/Contents/MacOS/libqtkeychain.0.3.0.dylib
%  install_name_tool -change /usr/local/lib/libqtkeychain.0.3.0.dylib /Applications/owncloud.app/Contents/MacOS/libqtkeychain.0.3.0.dylib /Applications/owncloud.app/Contents/MacOS/owncloudcmd
%  /Applications/owncloud.app/Contents/MacOS/owncloudcmd
dyld: Library not loaded: /usr/local/opt/neon/lib/libneon.27.dylib
  Referenced from: /Applications/owncloud.app/Contents/MacOS/owncloudcmd
  Reason: image not found
zsh: trace trap  /Applications/owncloud.app/Contents/MacOS/owncloudcmd
%  find /Applications/owncloud.app -name libneon.27.dylib
/Applications/owncloud.app/Contents/MacOS/libneon.27.dylib
%  install_name_tool -change /usr/local/opt/neon/lib/libneon.27.dylib /Applications/owncloud.app/Contents/MacOS/libneon.27.dylib /Applications/owncloud.app/Contents/MacOS/owncloudcmd
</code></pre>

<p>これで余計なメッセージは出ますが、使えるようになりました。</p>

<pre><code class="console">%  /Applications/owncloud.app/Contents/MacOS/owncloudcmd
objc[40210]: Class WebCoreMovieObserver is implemented in both /System/Library/Frameworks/WebKit.framework/Versions/A/Frameworks/WebCore.framework/Versions/A/WebCore and /Applications/owncloud.app/Contents/Frameworks/QtWebKit.framework/Versions/4/QtWebKit. One of the two will be used. Which one is undefined.
objc[40210]: Class WebCoreSharedBufferData is implemented in both /System/Library/Frameworks/WebKit.framework/Versions/A/Frameworks/WebCore.framework/Versions/A/WebCore and /Applications/owncloud.app/Contents/Frameworks/QtWebKit.framework/Versions/4/QtWebKit. One of the two will be used. Which one is undefined.
objc[40210]: Class WebVideoFullscreenWindow is implemented in both /System/Library/Frameworks/WebKit.framework/Versions/A/Frameworks/WebCore.framework/Versions/A/WebCore and /Applications/owncloud.app/Contents/Frameworks/QtWebKit.framework/Versions/4/QtWebKit. One of the two will be used. Which one is undefined.
objc[40210]: Class WebVideoFullscreenController is implemented in both /System/Library/Frameworks/WebKit.framework/Versions/A/Frameworks/WebCore.framework/Versions/A/WebCore and /Applications/owncloud.app/Contents/Frameworks/QtWebKit.framework/Versions/4/QtWebKit. One of the two will be used. Which one is undefined.
objc[40210]: Class WebVideoFullscreenHUDWindowController is implemented in both /System/Library/Frameworks/WebKit.framework/Versions/A/Frameworks/WebCore.framework/Versions/A/WebCore and /Applications/owncloud.app/Contents/Frameworks/QtWebKit.framework/Versions/4/QtWebKit. One of the two will be used. Which one is undefined.
objc[40210]: Class WebVideoFullscreenHUDWindow is implemented in both /System/Library/Frameworks/WebKit.framework/Versions/A/Frameworks/WebCore.framework/Versions/A/WebCore and /Applications/owncloud.app/Contents/Frameworks/QtWebKit.framework/Versions/4/QtWebKit. One of the two will be used. Which one is undefined.
objc[40210]: Class WebWindowFadeAnimation is implemented in both /System/Library/Frameworks/WebKit.framework/Versions/A/Frameworks/WebCore.framework/Versions/A/WebCore and /Applications/owncloud.app/Contents/Frameworks/QtWebKit.framework/Versions/4/QtWebKit. One of the two will be used. Which one is undefined.
objc[40210]: Class WebWindowScaleAnimation is implemented in both /System/Library/Frameworks/WebKit.framework/Versions/A/Frameworks/WebCore.framework/Versions/A/WebCore and /Applications/owncloud.app/Contents/Frameworks/QtWebKit.framework/Versions/4/QtWebKit. One of the two will be used. Which one is undefined.
owncloudcmd - command line ownCloud client tool.

Usage: owncloudcmd &lt;sourcedir&gt; &lt;owncloudurl&gt;

A proxy can either be set manually using --httpproxy or it
uses the setting from a configured sync client.

Options:
  --confdir = configdir: Read config from there.
  --httpproxy = proxy:   Specify a http proxy to use.
                         Proxy is http://server:port

zsh: exit 1     /Applications/owncloud.app/Contents/MacOS/owncloudcmd
</code></pre>

<h2>使い方</h2>

<p>概要のところに書いたように、
普通に <code>owncloudcmd sourcedir owncloudurl</code> で実行するとユーザー名とパスワードを聞かれます。
URL に <code>ownclouds://user:password@example.jp/remote.php/webdav</code> のようにユーザー名とパスワードを埋め込むことも出来ますが、あまりコマンドラインにパスワードは書きたくないことが多いと思います。</p>

<p>しかし、
<a href="https://github.com/owncloud/mirall/blob/f72e1cc8375b72c97d6566c6875f7214415cea9c/src/owncloudcmd/owncloudcmd.cpp">owncloudcmd のオプション処理部分のソース</a>
をみても <code>"--confdir"</code> は読み込むだけで使われていないようなので、
他の方法で指定することは出来なさそうでした。</p>

<h2>まとめ</h2>

<p><code>owncloudcmd</code> を使えば GUI クライアントで設定しているサーバー以外のサーバーと同期したり、
サーバーなどのコマンドラインのみの環境でも <code>owncloud</code> との同期が出来ることがわかりました。</p>

<p>しかし、クライアントの出来がまだあまりよくないので、使い勝手は良くないということもわかりました。</p>
]]></content>
  </entry>
  
</feed>
