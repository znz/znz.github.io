<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: rails | @znz blog]]></title>
  <link href="http://blog.n-z.jp/blog/categories/rails/atom.xml" rel="self"/>
  <link href="http://blog.n-z.jp/"/>
  <updated>2014-12-17T23:26:26+09:00</updated>
  <id>http://blog.n-z.jp/</id>
  <author>
    <name><![CDATA[Kazuhiro NISHIYAMA]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[capistrano 3.3.3 が依存している capistrano-stats について]]></title>
    <link href="http://blog.n-z.jp/blog/2014-12-01-capistrano-stats.html"/>
    <updated>2014-12-01T21:33:21+09:00</updated>
    <id>http://blog.n-z.jp/blog/capistrano-stats</id>
    <content type="html"><![CDATA[<p>capistrano が 3.3.3 にあがって
<a href="https://github.com/capistrano/stats">capistrano-stats</a>
という gem に依存するようになりました。
これは <code>metrics.capistranorb.com:1200</code> にバージョン情報などを送信して
capistrano のサポートの改善に役立てようとするもののようです。</p>

<!--more-->


<h2>対象バージョン</h2>

<ul>
<li>capistrano 3.3.3</li>
<li>capistrano-stats 1.0.3</li>
</ul>


<h2>Capfile locked</h2>

<p>capistrano-stats とは関係ないですが、
<code>Capfile locked at 3.2.1, but 3.3.3 is loaded</code>
と出るときは <code>config/deploy.rb</code> の最初の方にある
<code>lock '3.2.1'</code>
という行を
<code>lock '3.3.3'</code>
に書き換えれば OK です。</p>

<h2>capistrano-stats 1.0.3 の挙動</h2>

<p>初回実行時に
<code>Do you want to enable statistics? (y/N):</code>
ときかれて、
そのまま Enter か <code>n</code> を入力すると ruby や capistrano のバージョンは送信されなくなるのですが、
(少なくとも私の) 期待に反して
<code>metrics.capistranorb.com:1200</code>
への送信自体は発生するようになっています。</p>

<h2>何が問題か</h2>

<p>全く送信してほしくない場合にも通信が発生したり、
firewall で塞がれている場合にエラーになったり
という問題があります。</p>

<h2>一時的に無効にするには?</h2>

<p><code>CAPISTRANO_METRICS=localhost:1200 bundle exec cap default</code>
のように環境変数 <code>CAPISTRANO_METRICS</code> で送っても無視されるところに送信すれば良さそうです。</p>

<h2>完全に無効にするには?</h2>

<p>pull request 1 の
<a href="https://github.com/capistrano/stats/pull/1" title="Honor the users privacy decision and do not send UDP packets if he does not want to send metrics">Honor the users privacy decision and do not send UDP packets if he does not want to send metrics</a>
にあるように</p>

<pre><code class="ruby">Rake::Task['metrics:collect'].clear_actions
</code></pre>

<p>を <code>config/deploy.rb</code> に追加すると送信されなくなりました。</p>

<h2>今後</h2>

<p><a href="https://github.com/capistrano/stats/pull/2" title="Allow users to opt-out of sending the UDP ping and improve error handling when the sendto syscall fails">Allow users to opt-out of sending the UDP ping and improve error handling when the sendto syscall fails</a>
という pull request が続きで出ているので、
将来のバージョンでは全く送信しない選択肢が用意されるかもしれません。</p>

<h2>2014-12-13 追記</h2>

<p>その後、
capistrano 3.3.4 と capistrano-stats 1.1.0 にあがって、
デフォルトの N を 2 回は全く送信しないようになりました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails 4.1.7 にあげたら一部の画像が表示されなくなった]]></title>
    <link href="http://blog.n-z.jp/blog/2014-11-05-sprockets.html"/>
    <updated>2014-11-05T21:11:09+09:00</updated>
    <id>http://blog.n-z.jp/blog/sprockets</id>
    <content type="html"><![CDATA[<p>Rails 4.1.7 にあげたら一部の画像が表示されなくなるという現象が起きて、しばらく悩んでいたのですが解決しました。</p>

<!--more-->


<h2>原因</h2>

<ul>
<li>Rails か sprockets のバージョンアップでファイル名につけられる digest が変わった。</li>
<li><code>image_tag</code> で画像を参照している HTML が <code>cache</code> の中にあった。</li>
</ul>


<h2>現象</h2>

<p><code>rails console</code> で <code>Rails.application.assets.find_asset(asset_name).digest</code> を試しても新しい digest がちゃんと返ってくるのに、
ブラウザー上では古い digest の URL が参照されていてファイルが見つからないという現象になっていました。</p>

<p>アセットはキャッシュ期間の長いファイルとして設定しているので、複数ブラウザーで確認すると最初は現象が起きたり起きなかったりしていて、サーバー側の問題だと気づくのが遅れました。</p>

<h2>対処</h2>

<p><code>dalli</code> gem 経由で <code>memcached</code> をキャッシュ使っていたので <code>sudo service memcached restart</code> してキャッシュを破棄しました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[redmine の運用停止前のバックアップ]]></title>
    <link href="http://blog.n-z.jp/blog/2014-10-09-redmine-backup.html"/>
    <updated>2014-10-09T21:55:27+09:00</updated>
    <id>http://blog.n-z.jp/blog/redmine-backup</id>
    <content type="html"><![CDATA[<p>ある redmine の運用を止める前にリポジトリとの連携部分は止まってしまうのは仕方がないとして、
wiki やチケットなどは後からでも参照できるようにローカルにバックアップを残しておくことにしました。
その手順のメモです。</p>

<!--more-->


<h2>データベースのバックアップ</h2>

<p><a href="http://blog.n-z.jp/blog/2014-01-28-yaml-db.html" title="yaml_dbでMySQLからPostgreSQLに移行した">yaml_dbでMySQLからPostgreSQLに移行した</a>話で使った <code>yaml_db</code> を使いました。</p>

<p>まず、
<code>Gemfile.local</code> をなければ作成して、以下の内容を追加します。</p>

<pre><code class="ruby Gemfile.local">gem 'yaml_db', github: 'jetthoughts/yaml_db'
</code></pre>

<p>そして <code>RAILS_ENV=production bundle exec rake db:data:dump</code> で <code>db/data.yml</code> を作成します。</p>

<h2>ローカル環境の作成</h2>

<p>ローカルにも redmine 環境を作成します。</p>

<ol>
<li>redmine-2.5.2.tar.gz をダウンロードして展開</li>
<li><code>config/database.yml.example</code> を元に <code>config/database.yml</code> を作成 (今回はバックアップ環境なので sqlite3 を使用)</li>
<li>Gemfile.local 作成</li>
<li><code>plugins/</code> に使っていたプラグインをインストール (サーバーから rsync でコピーなど)</li>
<li>プラグインの設定も必要に応じてコピー (<code>config/wiki_external_filter.yml</code> など)</li>
<li><code>bundle install</code> で gem のインストール</li>
<li><code>RAILS_ENV=production bundle exec rake db:migrate</code> と <code>RAILS_ENV=production bundle exec rake redmine:plugins:migrate</code> でデータベース作成</li>
<li><code>db/data.yml</code> をコピーしてきて <code>RAILS_ENV=production bundle exec rake db:data:load</code> で読み込み (<code>db:migrate</code> していないとテーブル不足で読み込めない)</li>
<li><code>files/</code> の添付ファイルをコピー (サーバーから rsync でコピーなど)</li>
<li><code>config/configuration.yml</code> や <code>favicon.ico</code> などカスタマイズしているものがあれば必要に応じて設定やコピー</li>
<li><code>bundle exec rake generate_secret_token</code> で secret token を生成</li>
<li><code>bundle exec rails server -e production</code> で起動</li>
</ol>


<p>ログインして今まで通り見えることを確認して終了です。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[font-awesome-sass を 4.1.0 から 4.2.0 にあげたらアイコンが表示されなくなったので対処した]]></title>
    <link href="http://blog.n-z.jp/blog/2014-09-03-font-awesome-sass-4-2-0.html"/>
    <updated>2014-09-03T20:52:56+09:00</updated>
    <id>http://blog.n-z.jp/blog/font-awesome-sass-4-2-0</id>
    <content type="html"><![CDATA[<p>Rails 4.1.5 で使っている <code>font-awesome-sass</code> gem を 4.1.0 から 4.2.0 にあげたところ、
アイコンが表示されなくなったので、原因を調べてみました。</p>

<h2>解決方法</h2>

<p><a href="https://github.com/FortAwesome/font-awesome-sass">https://github.com/FortAwesome/font-awesome-sass</a> には 3.x からのアップグレード方法しか
書いていないのですが、
4.1.0 などの 4.x 系から 4.2.0 にあげるときは</p>

<pre><code>*= require font-awesome
</code></pre>

<p>の代わりに</p>

<pre><code>@import "font-awesome-sprockets";
@import "font-awesome";
</code></pre>

<p>のように <code>@import</code> を使う必要があり、
既に <code>@import</code> を使っている場合でも
<code>@import "font-awesome-sprockets";</code>
の行の追加が必要でした。</p>

<h2>詳細</h2>

<p>4.1.0 と 4.2.0 の差分の
<a href="https://github.com/FortAwesome/font-awesome-sass/commit/a527acdf693cf0bced797e75f387a8f8e2a9c844" title="Refactoring for use in multiple Ruby envs and upgrading to FontAwesome 4.2.0">Refactoring for use in multiple Ruby envs and upgrading to FontAwesome 4.2.0</a>
を眺めてみると、
FontAwesome を 4.2.0 にあげる以外に
<code>vendor/assets/</code> から <code>assets/</code> に移動していたり、
それに関係する変更をしていたりするようです。</p>

<p>それから詳しいことはわかりませんが、
<code>icon-font-path($path)</code> と <code>icon-image-path($path)</code> で
それぞれ
sprockets では <code>font-path($path)</code> と <code>image-path($path)</code> で、
compass では <code>font-url($path, true)</code> と <code>image-url($path, true)</code> を
使うようになった影響で <code>@import "font-awesome-sprockets"</code> が必要になったようです。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails 4.1 で jQuery Raty を使ってみた]]></title>
    <link href="http://blog.n-z.jp/blog/2014-08-09-jquery-raty.html"/>
    <updated>2014-08-09T19:37:53+09:00</updated>
    <id>http://blog.n-z.jp/blog/jquery-raty</id>
    <content type="html"><![CDATA[<p>Rails で星を使った評価付けを使いたかったので、
jQuery プラグインを探してみたところ、
<a href="http://wbotelhos.com/raty" title="jQuery Raty">jQuery Raty</a>
というのが良さそうだったので使ってみました。</p>

<!--more-->


<h2>対象バージョン</h2>

<ul>
<li>jQuery Raty v2.7.0</li>
<li>Ruby on Rails 4.1.4</li>
<li>Ruby 2.1.2</li>
</ul>


<h2>うまくいかなかった方法</h2>

<p><a href="http://rubygems.org/" title="RubyGems.org">RubyGems.org</a>
の方には古いバージョンしかなさそうだったので、
<a href="https://rails-assets.org/" title="Rails Assets">Rails Assets</a>
で最新バージョンを使おうと思い、
<code>Gemfile</code> に以下の設定をしたのですが、
<code>raty</code> のディレクトリ配置が特殊なのか、
うまくいきませんでした。</p>

<pre><code class="ruby Gemfile">source 'https://rails-assets.org'
gem 'rails-assets-raty'
</code></pre>

<h3>development 環境では動いた方法</h3>

<p>以下のように書くことで development 環境では動いたのですが、
capistrano で deploy した先では画像が表示されていませんでした。</p>

<pre><code class="css app/assets/stylesheets/raty.css.scss">//= require raty/lib/jquery.raty
</code></pre>

<pre><code class="text app/assets/javascripts/raty.js.coffee.erb">#= require raty/lib/jquery.raty
 $ -&gt;
   $('.raty').raty
     cancel   : true
    cancelOff: '&lt;%= image_path('raty/lib/images/cancel-off.png') %&gt;'
    cancelOn : '&lt;%= image_path('raty/lib/images/cancel-on.png') %&gt;'
    starHalf : '&lt;%= image_path('raty/lib/images/star-half.png') %&gt;'
    starOff  : '&lt;%= image_path('raty/lib/images/star-off.png') %&gt;'
    starOn   : '&lt;%= image_path('raty/lib/images/star-on.png') %&gt;'
    click: (score, event) -&gt;
      raty = $(event.target).parent()
      $(raty.data('field')).val(score)
    score: -&gt;
      $($(this).data('field')).val()
</code></pre>

<h2>うまくいった方法</h2>

<p><code>vendor/assets/stylesheets/jquery.raty.css</code> と
<code>vendor/assets/javascripts/jquery.raty.js</code> に
ダウンロードしたファイルをおいて、
<code>assets</code> も以下のように書き換えました。
画像も <code>vendor/assets/images/raty</code> においてもうまくいかなかったので、
<code>vendor/assets/images/raty</code> におきました。</p>

<p>Web フォントは今回は使っていないので、
考慮していません。
<code>starType</code> を <code>i</code> に変更しない限り使われないはずなので、
Web フォントを配置しなくても問題ないと思います。</p>

<pre><code class="css app/assets/stylesheets/raty.css.scss">//= require jquery.raty
</code></pre>

<pre><code class="text app/assets/javascripts/raty.js.coffee.erb">#= require jquery.raty
 $ -&gt;
   $('.raty').raty
     cancel   : true
    cancelOff: '&lt;%= image_path('raty/cancel-off.png') %&gt;'
    cancelOn : '&lt;%= image_path('raty/cancel-on.png') %&gt;'
    starHalf : '&lt;%= image_path('raty/star-half.png') %&gt;'
    starOff  : '&lt;%= image_path('raty/star-off.png') %&gt;'
    starOn   : '&lt;%= image_path('raty/star-on.png') %&gt;'
    click: (score, event) -&gt;
      raty = $(event.target).parent()
      $(raty.data('field')).val(score)
    score: -&gt;
      $($(this).data('field')).val()
</code></pre>

<h2>フォームでの使用例</h2>

<p>bootstrap 3.2.0 の <code>form-horizontal</code> を使っているので、
slim で以下のように使っています。</p>

<pre><code class="text _form.html.slim">    .form-group
      = f.label :readability, class: "control-label col-md-2"
      .col-md-10
        .raty.form-control data-field='#book_report_readability'
        = f.hidden_field :readability, class: "form-control"
</code></pre>

<h2>show での使用例</h2>

<p>以下のように <code>raty</code> の星を使って表示しています。</p>

<pre><code class="ruby app/helpers/raty_helper.rb">module RatyHelper
  def raty_stars(n, max=5)
    (
      image_tag('raty/star-on.png', alt: '') * n +
      image_tag('raty/star-off.png', alt: '') * (max-n)
      ).html_safe
  end
end
</code></pre>
]]></content>
  </entry>
  
</feed>
