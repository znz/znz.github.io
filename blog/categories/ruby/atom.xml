<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ruby | @znz blog]]></title>
  <link href="http://blog.n-z.jp/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://blog.n-z.jp/"/>
  <updated>2014-02-23T01:16:11+09:00</updated>
  <id>http://blog.n-z.jp/</id>
  <author>
    <name><![CDATA[Kazuhiro NISHIYAMA]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[第 8 回 RubyMotion もくもく会 in Osaka に参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2014-02-19-rubymotion-mokumoku-osaka.html"/>
    <updated>2014-02-19T19:27:12+09:00</updated>
    <id>http://blog.n-z.jp/blog/rubymotion-mokumoku-osaka</id>
    <content type="html"><![CDATA[<p>第 1 回から第 7 回にも参加した RubyMotion もくもく会 in Osaka の
<a href="http://connpass.com/event/4910/">第 8 回 RubyMotion もくもく会 in Osaka</a>
に参加してきました。</p>

<p>次回の
<a href="http://connpass.com/event/5276/">第 9 回 RubyMotion もくもく会 in Osaka</a>
は 3/19(水) になりました。</p>

<!--more-->


<h2>話に出たもの</h2>

<p>話に出てきたサイトなどのメモです。</p>

<ul>
<li><a href="http://connpass.com/event/5274/">iBeacon 勉強会（入門編）</a></li>
<li><a href="http://japan.gamesalad.com/">GameSalad</a></li>
<li><a href="http://www.hirotangame.net/">広探ゲーム</a></li>
</ul>


<h2>もくもく</h2>

<p>ブラウザを開くのに <code>open</code> コマンドを経由から <code>NSWorkspace</code> の <code>openURLs:withAppBundleIdentifier:options:additionalEventParamDescriptor:launchIdentifiers:</code> 経由に変更しました。</p>

<p>```ruby
  def openBrowser(app, *args)</p>

<pre><code>r, w = IO.pipe
pid = Process.spawn('open', '-a', app, @text.stringValue, *args, [:out, :err] =&gt; w)
w.close
pid, status = Process.waitpid2(pid)
output = r.read
r.close
unless status.success?
  alert = NSAlert.new
  alert.messageText = "Failed to open #{app}\n\n#{output}"
  alert.runModal
end
</code></pre>

<p>  end
```</p>

<p><code>open -b</code> を使っていれば引数は変わらなかったのですが、 <code>open -a</code> を使っていたので、引数がアプリケーション名からバンドル ID に変わりました。</p>

<p><code>open -a 'Google Chrome' http://localhost:4000/ --args -incognito</code> の <code>-incognito</code> のような追加引数の渡し方がわからなかったので、 Chrome のシークレットウインドウを直接開く機能はなくしました。</p>

<p>```ruby
  NSWorkspaceLaunchAsync = 0x00010000
  NSWorkspaceLaunchAllowingClassicStartup = 0x00020000
  NSWorkspaceLaunchDefault = NSWorkspaceLaunchAsync | NSWorkspaceLaunchAllowingClassicStartup</p>

<p>  def openBrowser(app_bundle_id)</p>

<pre><code>url = NSURL.URLWithString @text.stringValue
ret = NSWorkspace.sharedWorkspace.openURLs([url], withAppBundleIdentifier: app_bundle_id, options: NSWorkspaceLaunchDefault, additionalEventParamDescriptor: nil, launchIdentifiers: nil)
unless ret
  alert = NSAlert.new
  alert.messageText = "Failed to open #{app}"
  alert.runModal
end
</code></pre>

<p>  end
```</p>

<p><a href="https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/Workspace/Articles/WorkspaceServices.html">Workspace Services Programming Topics: Manipulating Files</a>
には <code>openURL:</code> しか書いてなかったり、
<code>additionalEventParamDescriptor</code> には何を渡せばいいのかわかりにくかったりして困りましたが、
<a href="http://www.lancard.com/blog/2011/05/01/open-url-with-browser-about-mac-app/">http://www.lancard.com/blog/2011/05/01/open-url-with-browser-about-mac-app/</a>
のように呼び出せばうまくいきました。</p>

<p>最初に <code>rake</code> の REPL で試していたら、以下のエラーになるので、しばらく悩んでいましたが、 <code>app/app_delegate.rb</code> の中に書けば動いたので、 <code>rake</code> でコンパイルされるタイミングでリンクできていないメソッドは呼び出せないということなのかと思いました。</p>

<p>```console
(main)> url = NSURL.URLWithString(&ldquo;<a href="http://www.apple.com">http://www.apple.com</a>&rdquo;)
=> #&lt;NSURL:0x7fcbe8e45060>
(main)> NSWorkspaceLaunchAsync = 0x00010000
=> 65536
(main)> NSWorkspaceLaunchAllowingClassicStartup = 0x00020000
=> 131072
(main)> NSWorkspaceLaunchDefault = NSWorkspaceLaunchAsync | NSWorkspaceLaunchAllowingClassicStartup
=> 196608
(main)> NSWorkspace.sharedWorkspace.openURLs([url], withAppBundleIdentifier: &ldquo;com.google.Chrome&rdquo;, options: NSWorkspaceLaunchDefault, additionalEventParamDescriptor: nil, launchIdentifiers: nil)
dyld: lazy symbol binding failed: Symbol not found: __ZN9RoxorCore14find_bs_cftypeESs
  Referenced from: /Library/RubyMotion/data/osx/librubymotion-repl.dylib
  Expected in: flat namespace</p>

<p>dyld: Symbol not found: __ZN9RoxorCore14find_bs_cftypeESs
  Referenced from: /Library/RubyMotion/data/osx/librubymotion-repl.dylib
  Expected in: flat namespace</p>

<p>================================================================================
The application terminated. A crash report file may have been generated by the
system, use <code>rake crashlog' to open it. Use</code>rake debug=1' to restart the app</p>

<h1>in the debugger.</h1>

<p>```</p>

<h2>NSDate</h2>

<p>途中 <code>NSDate.distantFuture</code> の返り値がおかしいという話がありました。</p>

<p><code>
(main)&gt; NSDate.distantFuture
=&gt; 1677-09-21 09:12:43 +0900
(main)&gt; NSDate.distantPast
=&gt; 1677-09-21 09:12:43 +0900
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[bootstrap-sass-railsからbootstrap-sassに移行した]]></title>
    <link href="http://blog.n-z.jp/blog/2014-02-06-bootstrap-sass.html"/>
    <updated>2014-02-06T14:29:27+09:00</updated>
    <id>http://blog.n-z.jp/blog/bootstrap-sass</id>
    <content type="html"><![CDATA[<p>今日の <code>bundle update</code> は bootstrap の sass の gem を bootstrap 公式のものに移行したのが大きな変更点でした。</p>

<!--more-->


<h2>bootstrap-sass-rails から bootstrap-sass 3.1.0.2</h2>

<p><a href="http://blog.getbootstrap.com/2014/01/30/bootstrap-3-1-0-released/">bootstrap 3.1.0 がリリース</a>されて少し時間が経ったので、
bootstrap-sass-rails を確認してみたところ、
<a href="https://github.com/yabawock/bootstrap-sass-rails#deprecation-notice">DEPRECATION NOTICE</a>
に公式サポートされた sass の gem があるので、
そちらに移行を推奨と書かれていたので、移行しました。</p>

<p>bootstrap-sass gem への移行は UPGRADING に書かれているように <code>@import "twitter/bootstrap";</code> を <code>@import "bootstrap";</code> に書き換えるだけでした。</p>

<h2>bootstrap-sass のカスタマイズ</h2>

<p><a href="https://github.com/twbs/bootstrap-sass#usage">Usage</a>
によると、一番単純な使い方としては <code>@import "bootstrap";</code> だけですが、
<a href="http://getbootstrap.com/customize/#less-variables">Less variables</a>
を参考にして以下のようにカスタマイズして使うのが良いようです。</p>

<p>Less では変数の接頭辞は <code>@</code> ですが、 sass では <code>$</code> になることさえわかっていれば、最低限のカスタマイズは出来ると思います。</p>

<p>```
$navbar-default-bg: #312312;
$light-orange: #ff8c00;
$navbar-default-color: $light-orange;</p>

<p>@import &ldquo;bootstrap&rdquo;;
```</p>

<p>bootstrap-sass-rails からの移行だったので、
bootstrap-custom.css.scss の内容は以下のようにしました。</p>

<p>```
$body-bg:               #fff;
$text-color:            lighten(#000, 20%);</p>

<p>@import &ldquo;bootstrap&rdquo;;
```</p>

<p>もっと高度なカスタマイズをするなら、
<code>cp $(bundle show bootstrap-sass)/vendor/assets/stylesheets/bootstrap.scss app/assets/stylesheets/bootstrap-custom.scss</code>
でコピーしたファイルを
<code>@import 'bootstrap';</code>
の代わりに
<code>@import 'bootstrap-custom';</code>
で使うことを想定しているようです。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rails_best_practices 1.15.0でtryが壊れた]]></title>
    <link href="http://blog.n-z.jp/blog/2014-02-05-rails-best-practices-1-15-0-broken.html"/>
    <updated>2014-02-05T10:35:06+09:00</updated>
    <id>http://blog.n-z.jp/blog/rails-best-practices-1-15-0-broken</id>
    <content type="html"><![CDATA[<p>今日の <code>bundle update</code> をしてみたところ、開発環境での devise でのログイン時に <code>devise (3.2.2) lib/devise/hooks/csrf_cleaner.rb, line 3</code> で <code>wrong number of arguments (2 for 1)</code> という <code>ArgumentError</code> が発生するようになりました。</p>

<p>その原因調査方法の記録です。</p>

<!--more-->


<p>例外が発生した行は以下の内容で、今まで問題なく動いていたし、特に問題はなさそうだったので、他の gem の影響だということがわかりました。</p>

<p>```ruby lib/devise/hooks/csrf_cleaner.rb
Warden::Manager.after_authentication do |record, warden, options|
  if Devise.clean_up_csrf_token_on_authentication</p>

<pre><code>warden.request.session.try(:delete, :_csrf_token)
</code></pre>

<p>  end
end
```</p>

<p>ソースコードを追いかけるのは難しそうだったので、 better_errors の live shell を使って調査しました。</p>

<p>```console</p>

<blockquote><blockquote><p>env.keys
=> 略
env[&ldquo;warden&rdquo;]
=> Warden::Proxy:70192217236640 @config={:default_scope=>:user, :scope_defaults=>{}, :default_strategies=>{:user=>[:rememberable, :database_authenticatable]}, :intercept_401=>false, :failure_app=>#&lt;Devise::Delegator:0x007fadcc44d438>}
env[&ldquo;warden&rdquo;].request
=> #&lt;ActionDispatch::Request:0x007fadd10c4dc0 略>
env[&ldquo;warden&rdquo;].request.session
=> {&ldquo;session_id&rdquo;=>&ldquo;略&rdquo;, &ldquo;user_return_to&rdquo;=>&ldquo;/&rdquo;, &ldquo;<em>csrf_token&rdquo;=>&ldquo;略&rdquo;, &ldquo;warden.user.user.key&rdquo;=>[[8], &ldquo;$2a$10$略&rdquo;]}
env[&ldquo;warden&rdquo;].request.session.try(:delete, :</em>csrf_token)
!! #&lt;ArgumentError: wrong number of arguments (2 for 1)>
```</p></blockquote></blockquote>

<p><code>env["warden"]</code> 経由で再現しました。</p>

<p>次に原因を探るために <code>arity</code> を調べました。</p>

<p>```console</p>

<blockquote><blockquote><p>env[&ldquo;warden&rdquo;].request.session.methods.grep /delete/
=> [:delete, :delete_if]
env[&ldquo;warden&rdquo;].request.session.method(&ldquo;delete&rdquo;)
=> #&lt;Method: Rack::Session::Abstract::SessionHash#delete>
env[&ldquo;warden&rdquo;].request.session.method(&ldquo;delete&rdquo;).arity
=> 1
env[&ldquo;warden&rdquo;].request.session.method(&ldquo;try&rdquo;)
=> #&lt;Method: Rack::Session::Abstract::SessionHash(Object)#try>
env[&ldquo;warden&rdquo;].request.session.method(&ldquo;try&rdquo;).arity
=> 1
env[&ldquo;warden&rdquo;].request.session.method(&ldquo;try&rdquo;).source_location
=> [&ldquo;略/rails_best_practices-1.15.0/lib/rails_best_practices/core_ext/object.rb&rdquo;, 7]</p>

<p>```</p></blockquote></blockquote>

<p>rails_best_practices 1.15.0 が原因とわかったので issues を確認すると既に同様の現象の報告があったので、<a href="https://github.com/railsbp/rails_best_practices/issues/202#issuecomment-34129010">コメントしておきました</a>。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[bundle updateした記録]]></title>
    <link href="http://blog.n-z.jp/blog/2014-02-03-bundle-update.html"/>
    <updated>2014-02-03T17:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/bundle-update</id>
    <content type="html"><![CDATA[<p><code>bundle update</code> で更新された gem などのメモを残すことにしました。</p>

<!--more-->


<h2>jquery-rails 3.1.0 (was 3.0.4)</h2>

<p>jQuery 1.11.0 にあがったのと jquery-ujs が更新されていました。</p>

<p>```text CHANGELOG.md</p>

<h2>3.1.0 (29 January 2014)</h2>

<ul>
<li>Updated to jQuery 1.11.0</li>
<li>Updated to latest jquery-ujs</li>
<li>Added development rake task for updating jQuery
```</li>
</ul>


<h2>omniauth-oauth2 1.1.2 (was 1.1.1)</h2>

<p>oauth2 が 0.8.1 から 0.9.3 に一気にあがって驚きましたが、
omniauth-oauth2 の依存関係が更新されたのが原因でした。</p>

<p>他にもたくさん変更されていました。</p>

<h2>turbolinks 2.2.1 (was 2.2.0)</h2>

<p><a href="https://github.com/rails/turbolinks/blob/master/CHANGELOG.md#turbolinks-221-january-30-2014">https://github.com/rails/turbolinks/blob/master/CHANGELOG.md#turbolinks-221-january-30-2014</a>
によるとバグ修正のみのようです。</p>

<h2>rails_admin 0.6.1 (was 0.6.0)</h2>

<p>paper_trail gem が 3.0.0 で <code>Version</code> から <code>PaperTrail::Version</code> に変わった
<a href="https://github.com/airblade/paper_trail/pull/165">#165</a>
影響を受けて、
<code>config/initializers/rails_admin.rb</code>
を以下のように変更する必要がありました。</p>

<p>```diff config/initializers/rails_admin.rb.diff
&mdash;&ndash; a/config/initializers/rails_admin.rb
+++ b/config/initializers/rails_admin.rb
@@ -18,7 +18,7 @@ RailsAdmin.config do |config|
   # config.audit_with :history, &lsquo;User&rsquo;</p>

<p>   # Or with a PaperTrail: (you need to install it first)
&ndash;  config.audit_with :paper_trail, &lsquo;User&rsquo;
+  config.audit_with :paper_trail, &lsquo;User&rsquo;, &lsquo;PaperTrail::Version&rsquo;</p>

<p>   # Display empty fields in show views:
   # config.compact_show_view = false
```</p>

<p>あまりカスタマイズしていないのなら、
<code>rails g rails_admin:install</code>
で生成し直して、設定し直した方が良いかもしれません。</p>

<p>最初に rails_admin を更新した rails アプリでは以下のように
devise と pundit と paper_trail の設定をしただけで、
actions などはそのままにしています。</p>

<p>```ruby config/initializers/rails_admin.rb
RailsAdmin.config do |config|</p>

<p>  ### Popular gems integration</p>

<p>  ## == Devise ==
  config.authenticate_with do</p>

<pre><code>warden.authenticate! scope: :user
</code></pre>

<p>  end
  config.current_user_method(&amp;:current_user)</p>

<p>  ## == Cancan ==
  # config.authorize_with :cancan</p>

<p>  require &lsquo;rails_admin/extensions/pundit&rsquo;
  config.authorize_with :pundit</p>

<p>  ## == PaperTrail ==
  config.audit_with :paper_trail, &lsquo;User&rsquo;, &lsquo;PaperTrail::Version&rsquo; # PaperTrail >= 3.0.0</p>

<p>  ### More at <a href="https://github.com/sferik/rails_admin/wiki/Base-configuration">https://github.com/sferik/rails_admin/wiki/Base-configuration</a></p>

<p>  config.actions do</p>

<pre><code>dashboard                     # mandatory
index                         # mandatory
new
export
bulk_delete
show
edit
delete
show_in_app

## With an audit adapter, you can add:
# history_index
# history_show
</code></pre>

<p>  end
end
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[yaml_dbでMySQLからPostgreSQLに移行した]]></title>
    <link href="http://blog.n-z.jp/blog/2014-01-28-yaml-db.html"/>
    <updated>2014-01-28T21:25:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/yaml-db</id>
    <content type="html"><![CDATA[<p>先週 redmine を MySQL から PostgreSQL に移行するときに、最近の ruby では動かなくなっている taps ではなく yaml_db を使ってみました。</p>

<p>その後、自作 Rails アプリでも yaml_db を使って移行しました。</p>

<!--more-->


<h2>yaml_db 選び</h2>

<p>yaml_db は <code>gem install yaml_db</code> でインストールできるものが新しい rails などに
対応していないため fork が乱立していて、どれを使えばいいのか悩ましいのですが、
どこかで見かけた情報を元に
<code>gem 'yaml_db', github: 'jetthoughts/yaml_db', ref: 'fb4b6bd7e12de3cffa93e0a298a1e5253d7e92ba'</code>
を使いました。(今だと別の指定の方が良さそうです。後述)</p>

<p>redmine の場合は <code>Gemfile.local</code> に書いて (なければ作成)、
<code>bundle</code> でインストールすれば使えます。</p>

<h2>データベース移行</h2>

<p>アプリを止めるなどして、データベースの変更が発生しない状態にして移行作業をします。
YAML の互換性の問題などがあるので、データベースの移行と Ruby や Redmine のバージョンアップは別々にした方が良いです。</p>

<ol>
<li>まず <code>RAILS_ENV=production bundle exec rake db:data:dump</code> で <code>db/data.yml</code> を作成します。</li>
<li>つぎに Ruby や Rails や Redmine のバージョンはそのままで <code>config/database.yml</code> を変更します。</li>
<li>必要に応じて <code>bundle</code> でデータベースアダプターの gem をインストールします。</li>
<li>データベースの作成をしたり <code>db:migrate</code> をしておきます。</li>
<li><code>RAILS_ENV=production bundle exec rake db:data:load</code> で読み込みます。</li>
</ol>


<h2>yaml_db の fork の再調査</h2>

<p><a href="https://rubygems.org/gems/yaml_db">yaml_db gem</a> ( <a href="https://github.com/ludicast/yaml_db">ludicast/yaml_db</a> )
からの fork としては
<a href="https://rubygems.org/gems/gitlab_yaml_db">gitlab_yaml_db</a> ( <a href="https://github.com/gitlabhq/yaml_db">gitlabhq/yaml_db</a> ? )
のインストール数が
多いようですが、これは以前の gitlabhq が依存していたからのようです。 (今は依存していない)</p>

<p>新しい fork として
<a href="https://rubygems.org/gems/yaml_db_with_schema_tables">yaml_db_with_schema_tables</a>
( <a href="https://github.com/zweitag/yaml_db">zweitag/yaml_db</a> )
がありましたが、古い yaml_db からの fork なので、新しい rails への対応が入っていないような気がします。
他の fork との違いとして <code>schema_info</code> と <code>schema_migrations</code> も dump するようにしているようです。</p>

<p><a href="https://github.com/jetthoughts/yaml_db">jetthoughts/yaml_db</a> という fork は
rubygems.org にはリリースしていないようですが、
Rails 4 に対応して、 README の <code>This gem is now Rails 3 only.</code> という記述を削除しているなど、メンテナンスが続いていそうなので、
次はこの fork を使うのが良さそうだと思いました。
(古いブログの記事だと <code>gem 'yaml_db', github: 'jetthoughts/yaml_db', branch: 'rails4'</code> で rails4 ブランチを指定している例もあるようですが、 master にマージ済みなので branch 指定は不要です。)</p>

<h2>別 Rails アプリの移行</h2>

<p>続きとして、本日、自作の Rails アプリを <code>jetthoughts/yaml_db</code> を使って移行してみました。</p>

<h3>postgresql のデータベース作成</h3>

<p>データベースの作成は事前に出来るので、
<code>sudo -u postgres psql</code>
で作成しておきます。</p>

<p><code>
CREATE ROLE dbuser LOGIN ENCRYPTED PASSWORD 'dbpass' NOINHERIT VALID UNTIL 'infinity';
CREATE DATABASE dbname WITH ENCODING='UTF8' OWNER=dbuser;
</code></p>

<p>データベースの作成方法はいつも
<a href="http://www.redmine.org/projects/redmine/wiki/RedmineInstall">RedmineInstall</a>
を参考にしています。</p>

<h3>pg gem</h3>

<p>pg gem も忘れずにあらかじめ入れておきます。</p>

<h3>メンテナンス中画面設定</h3>

<p>まず apache2 + passenger の方でメンテナンス中画面を出すようにしました。</p>

<p>```</p>

<pre><code>&lt;Directory /path/to/app&gt;
    Options FollowSymLinks
    AllowOverride None
    #Order allow,deny
    #allow from all
    Order deny,allow
    deny from all
&lt;/Directory&gt;
ErrorDocument 403 "&amp;#x30e1;&amp;#x30f3;&amp;#x30c6;&amp;#x30ca;&amp;#x30f3;&amp;#x30b9;&amp;#x4e2d;&amp;#x3067;&amp;#x3059;&amp;#x3002;&amp;#x20;&amp;#x3057;&amp;#x3070;&amp;#x3089;&amp;#x304f;&amp;#x304a;&amp;#x5f85;&amp;#x3061;&amp;#x304f;&amp;#x3060;&amp;#x3055;&amp;#x3044;&amp;#x3002;"
</code></pre>

<p>```</p>

<p><code>ErrorDocument</code> の埋め込み文字列は <code>Content-Type: text/html;charset=iso-8859-1</code> になってNいたので、
<code>'メンテナンス中です。 しばらくお待ちください。'.unpack('U*').map{|c| '&amp;#x%x;' % c }.join('')</code>
のようにして、すべてエスケープして日本語を埋め込みました。</p>

<p>本来は 5xx のステータスにすべきですが、一時的なものなので 403 で妥協しました。
後日メンテナンスをするときはちゃんと 5xx にしたいと思っています。</p>

<h3>データベースのバックアップとダンプ</h3>

<p>cron で動かしているデータベースのバックアップと yaml_db でのダンプをしました。</p>

<p><code>
/path/to/app$ sudo /etc/cron.daily/local-dump
/path/to/app$ $ sudo env PATH=$(dirname $(awk '/PassengerDefaultRuby/{print $2}' /etc/apache2/conf.d/passenger.conf)):$PATH RAILS_ENV=production bundle exec rake db:data:dump
</code></p>

<h3>config/database.yml 書き換え</h3>

<p>database.yml で postgresql の方を使うように書き換えます。</p>

<p><code>
  adapter: postgresql
  encoding: unicode
  database: dbname
  pool: 5
  username: dbuser
  password: dbpass
  host: localhost
  #port: 5432
  min_messages: warning
</code></p>

<h3>データの読み込み</h3>

<p><code>rake db:migrate</code> でマイグレーションを実行した後、
<code>rake db:data:load</code> でデータを読み込みます。</p>

<p><code>
/path/to/app$ $ sudo env PATH=$(dirname $(awk '/PassengerDefaultRuby/{print $2}' /etc/apache2/conf.d/passenger.conf)):$PATH RAILS_ENV=production bundle exec rake db:migrate
/path/to/app$ $ sudo env PATH=$(dirname $(awk '/PassengerDefaultRuby/{print $2}' /etc/apache2/conf.d/passenger.conf)):$PATH RAILS_ENV=production bundle exec rake db:data:load
</code></p>

<h3>メンテナンス解除と確認</h3>

<p>apache2 の設定を戻して、動作確認します。</p>

<h2>まとめ</h2>

<p>Rails のデータベースの移行に yaml_db を使ってみました。</p>

<p>yaml_db の方が taps より昔からあって、
しばらくメンテナンスが止まっていて、
taps の方が主流になるかと思っていたら、
逆に taps の方がメンテナンスがあまりされなくなって、
yaml_db の方が fork が乱立して、新しい rails に対応したものもでてきて、
結局今のところデータベースの移行には yaml_db が無難という状況になっているようです。</p>

<p>taps は新しい Ruby に対応できていなかったり、
以前の記事に書いたようにスキーマの移行が不十分なところがあったりして、
使われなくなっていくように感じました。</p>
]]></content>
  </entry>
  
</feed>
