<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ruby | @znz blog]]></title>
  <link href="http://blog.n-z.jp/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://blog.n-z.jp/"/>
  <updated>2014-01-26T22:43:33+09:00</updated>
  <id>http://blog.n-z.jp/</id>
  <author>
    <name><![CDATA[Kazuhiro NISHIYAMA]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[第59回 Ruby/Rails勉強会＠関西に参加しました]]></title>
    <link href="http://blog.n-z.jp/blog/2014-01-25-kansaiworkshop059.html"/>
    <updated>2014-01-25T13:36:50+09:00</updated>
    <id>http://blog.n-z.jp/blog/kansaiworkshop059</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/rubykansai/workshops/wiki/Kansaiworkshop059">第59回 Ruby/Rails勉強会＠関西</a> に参加しました。</p>

<p>一部メモを書いていたので公開しておきます。</p>

<!--more-->


<h2>IT関係の同人誌などの話</h2>

<h3>質疑応答</h3>

<ul>
<li>Q ReVIEW の本は?</li>
<li><p>A 存在を知ったのが後だったので、電子書籍で買っただけ。</p></li>
<li><p>Q いくらぐらい?</p></li>
<li>A コピー本などで無料のものもありますが、たとえば500円とか1200円とか。印刷代などの関係で決まります。</li>
</ul>


<h2>gitlab</h2>

<h3>メモ</h3>

<ul>
<li><a href="http://atnd.org/events/47159">C++テンプレート完全ガイド勉強会 vol.1大阪 : ATND</a></li>
<li><a href="http://qwik.jp/minamirb/">Minami.rb</a></li>
<li><a href="https://wiki.debian.org/KansaiDebianMeeting">関西Debian勉強会</a></li>
<li><a href="http://www.slideshare.net/takafumionaka/is-there-anynecessityofusinggithubenterprise">Gitlab は貧者の github enterprise</a></li>
<li><a href="https://gitorious.org/">Gitorious</a></li>
<li><a href="http://gitblit.com/">Gitblit</a></li>
<li>chef とか puppet とか ansible とかが何か知っている人は会場には少なかった。</li>
<li><a href="https://twitter.com/koichiroo/status/425454305944952832/photo/1">レガシー依存の悪循環こわい</a></li>
<li><a href="http://mrk1869.com/blog/gitlab_installation/">GitLab 6.0をインストールする &ndash; Markovnikov Laboratory</a></li>
<li>「6.2で転けて、6.1で転けて、ここまで設定するのに3日かかった…」と書いてあって大変そうなので、 ansible playbook を使ったという話</li>
<li><a href="http://d.hatena.ne.jp/akishin999/20130819/1376868748">20分(くらい)で GitLab をインストールする方法 &ndash; akishin999の日記</a></li>
<li>svn からの移行には GUI がある方が良い</li>
</ul>


<h2>LT1 ダジャレ</h2>

<ul>
<li>わたしを創ったもの R・C・フェラン 年刊ＳＦ傑作選１</li>
<li>mecab で分解して置き換えてダジャレ生成</li>
<li>変なのもたくさん出てくる</li>
<li>評価関数</li>
</ul>


<h2>Ruby 関西 10 周年</h2>

<ul>
<li><a href="https://k-of.jp/2004/">関西オープンソース 2004</a></li>
<li>2004年11月27日 第0回 Ruby勉強会</li>
<li>大前研一: 人間が変わる方法は3つしかない。 １番目は「時間配分を変える。」 ２番目は「住む場所 を変える。」 ３番目は「つきあう人を変える。」 この３つの要素でしか人間は変わらない。 最も無意味なのは「決意を新たにする」ことだ。</li>
<li>助け合いの力</li>
<li>グラミン銀行</li>
<li>Jim Rohn の名言 : あなたは、あなたのまわりの5人の平均です。</li>
<li><a href="http://thewriteway.com/2011/01/learning-by-doing-revisited/">http://thewriteway.com/2011/01/learning-by-doing-revisited/</a></li>
<li>多様性は善</li>
<li>ハブとしてのRuby関西</li>
</ul>


<h2>Ruby初級者向けレッスン</h2>

<ul>
<li><code>codepoints</code> とは Unicode のだったり、それぞれの encoding のだったり。</li>
<li><code>"Ruby関西".chars.each{|c| puts c}</code> の <code>.each</code> はなくても動くが <code>$VERBOSE=true</code> のときに <code>warning: passing a block to String#chars is deprecated</code> という警告がでる。</li>
<li><a href="https://gist.github.com/higaki/8147246">https://gist.github.com/higaki/8147246</a></li>
<li><a href="https://github.com/higaki/learn_ruby_kansai_59">https://github.com/higaki/learn_ruby_kansai_59</a></li>
</ul>


<h2>帰り際の話</h2>

<ul>
<li>Windows 版の Ruby で 2.0.0 からエスケープシーケンスに対応しているのが、
NEWS に書いていないなどソース以外に情報がない。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[heroku で passenger を使うようにした]]></title>
    <link href="http://blog.n-z.jp/blog/2014-01-24-passenger-ruby-heroku.html"/>
    <updated>2014-01-24T23:23:25+09:00</updated>
    <id>http://blog.n-z.jp/blog/passenger-ruby-heroku</id>
    <content type="html"><![CDATA[<p>今は heroku で動いている <a href="https://bugs.ruby-lang.org/">https://bugs.ruby-lang.org/</a> が thin から passenger に切り替えて安定したという話を IRC で知ったので、自分が heroku で動かしている Rails アプリも passenger に切り替えてみました。
(ruby-lang.org の方はいろいろ試すために今後他のものに切り替える可能性もあります。)</p>

<!--more-->


<h2>概要</h2>

<p><a href="https://github.com/phusion/passenger-ruby-heroku-demo">https://github.com/phusion/passenger-ruby-heroku-demo</a>
を参考にして Gemfile と Procfile を設定するだけです。</p>

<h2>Gemfile の書き換え</h2>

<p><code>gem "unicorn"</code> や  <code>gem "thin"</code> があればコメントアウトするなり削除するなりして、
代わりに <code>gem "passenger"</code> を追加します。</p>

<h2>Procfile の設定</h2>

<p>Procfile がなければ新規作成します。
既存の Procfile があって以下のような行があれば削除します。</p>

<pre><code>web: bundle exec ruby web.rb -p $PORT
web: bundle exec unicorn -p $PORT
web: bundle exec thin start -p $PORT
</code></pre>

<p>Procfile に以下の設定を追加します。</p>

<pre><code>web: bundle exec passenger start -p $PORT --max-pool-size 3
</code></pre>

<h2>切り替え反映</h2>

<p>以下のように切り替えを反映します。</p>

<pre><code>bundle install
git commit -a -m "Switch to Phusion Passenger"
git push heroku master
</code></pre>

<p>ここまでは
<a href="https://github.com/phusion/passenger-ruby-heroku-demo">https://github.com/phusion/passenger-ruby-heroku-demo</a>
の手順そのままです。</p>

<h2>ローカルで使う</h2>

<p><code>gem install foreman</code> で <code>foreman</code> を入れておいて <code>env PORT=3000 foreman start</code> とか、
<code>bundle exec passenger start -p 3000 --max-pool-size 3</code> とかで
3000 番ポートで passenger を使えます。</p>

<p>初回起動時は standalone 版 passenger の初期設定が走るので、
少し時間がかかります。</p>

<h2>まとめ</h2>

<p>あまりアクセスが多くない無料の範囲内で使っている Rails アプリなので、
違いはあまりわかっていませんが、簡単に切り替えられるので、
選択肢のひとつとして使われやすくなるのではないかと思います。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第 7 回 RubyMotion もくもく会 in Osaka に参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2014-01-22-rubymotion-mokumoku-osaka.html"/>
    <updated>2014-01-22T23:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/rubymotion-mokumoku-osaka</id>
    <content type="html"><![CDATA[<p>第 1 回から第 6 回にも参加した RubyMotion もくもく会 in Osaka の
<a href="http://connpass.com/event/4560/">第 7 回 RubyMotion もくもく会 in Osaka</a>
に参加してきました。</p>

<p>次回の
<a href="http://connpass.com/event/4910/">第 8 回 RubyMotion もくもく会 in Osaka</a>
は 2/19(水) になりました。</p>

<!--more-->


<h2>もくもく</h2>

<p>今回は初参加の人がいました。</p>

<p>途中は少し質問の話があったり、リリースしたものの話があったりした以外は
基本的にみんなもくもくしていました。</p>

<h2>話に出たもの</h2>

<p>話に出てきたサイトなどのメモです。</p>

<ul>
<li><a href="https://parse.com/">https://parse.com/</a></li>
<li><a href="http://shin1x1.github.io/vagrantx/">http://shin1x1.github.io/vagrantx/</a></li>
<li><a href="https://twitter.com/ametalk">https://twitter.com/ametalk</a></li>
<li><a href="http://orekike.com/history/orekike7">http://orekike.com/history/orekike7</a></li>
<li><a href="http://www.paintcodeapp.com/">http://www.paintcodeapp.com/</a></li>
</ul>


<h2>やっていたこと</h2>

<ul>
<li>ちゃんと名前をつけて <code>motion create</code> からやり直しました。</li>
<li>いらないメニュー項目がほとんどなので、 <code>buildMenu</code> をコメントアウトしてみたら、
Command+q での終了も出来なくなって不便になったので、戻しました。</li>
<li><code>open</code> コマンドでエラーになったときに <code>NSAlert</code> でエラーメッセージを出すようにしました。</li>
</ul>


<h2>引き続き不明な点</h2>

<p>細かいものはいろいろありますが、大きなものは以下の2点です。</p>

<h3>URL の受け取り方</h3>

<p>起動中に <code>open http://localhost:3000</code> のように URL を開いた場合は</p>

<p>```ruby</p>

<pre><code>NSAppleEventManager.sharedAppleEventManager.setEventHandler(
  self,
  andSelector: :'handleGetURLEvent:withReplyEvent:',
  forEventClass: KInternetEventClass,
  andEventID: KAEGetURL)
</code></pre>

<p>```</p>

<p>で登録しておけば受け取れていますが、
起動していない時に開かれた URL を受け取る方法がわからないままです。</p>

<p><code>open -a Hello --args http://localhost:3000</code> のように起動すれば
<code>NSProcessInfo.processInfo.arguments</code> で取り出せますが、
他のアプリケーションから URL を開いた時に受け取れないので
意味がないです。</p>

<h3>window が閉じられた時の処理</h3>

<p>今のままだと Command+w などで閉じられてしまうと
URL を受け取っても見せる window がなくなっているので
何も出来ないです。</p>

<p>window を閉じられたら終了するか、
閉じられても URL を開いたらまた出てくるようにしたいです。</p>

<h2>まとめ</h2>

<p>今回はみんなもくもくとそれぞれの作業が進んだという感じで、
成果発表もすぐに終わった感じでした。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RubyMotionのOSXアプリの起動エラー]]></title>
    <link href="http://blog.n-z.jp/blog/2013-12-28-rubymotion-error.html"/>
    <updated>2013-12-28T18:55:18+09:00</updated>
    <id>http://blog.n-z.jp/blog/rubymotion-error</id>
    <content type="html"><![CDATA[<p>最近 RubyMotion で作っている OSX アプリが
<code>LSOpenURLsWithRole() failed with error -10810</code>
などで起動しないことがあったので原因を調べてみました。</p>

<!--more-->


<h2>LSOpenURLsWithRole() failed with error -10810</h2>

<h3>よくある原因</h3>

<p><code>Hello.app/Contents/MacOS/Hello</code>
のような実行ファイルの実体に実行属性が外れているというのが
よくある原因のようで、
<a href="http://owncloud.org/">ownCloud</a>
経由で同期したアプリが実行できなかったときは
これが原因でした。</p>

<h3>別の原因</h3>

<p>実行属性も問題なくて悩んでいたときに
コンソール (Console.app) のログを見てみると</p>

<p><code>
2013/12/28 10:39:17.963 open[85406]: spawn_via_launchd() failed, errno=22 label=com.yourcompany.Hello.44032 path=.../Hello/build/MacOSX-10.9-Development/Hello.app/Contents/MacOS/Hello flags=0 : LaunchApplicationClient.cp #1168 LaunchApplicationViaLaunchDJobLabel() q=com.apple.main-thread
</code>
のようなログが出ていたので、
<code>LaunchApplicationViaLaunchDJobLabel</code>
で検索してみたところ、
<a href="http://portingteam.com/topic/9723-mavericks-problem-opening-fresh-wrapper/">Mavericks problem opening fresh wrapper</a>
という話が見つかって、
そこに書いてあった</p>

<p><code>
launchctl remove $(launchctl list | grep wineskin | awk '{ print $3 }')
</code></p>

<p>という手順を参考にして解決しました。</p>

<p><code>Hello</code> が2個残っていて、
<code>$()</code> だとダメだったので個別に <code>launchctl remove</code> しました。</p>

<p><code>
% launchctl list | grep Hello
-   2   com.yourcompany.Hello.44032
-   0   com.yourcompany.Hello.53008
%  launchctl remove $(launchctl list | awk '/Hello/{print $3}')
usage: launchctl remove &lt;job label&gt;
zsh: exit 1     launchctl remove $(launchctl list | awk '/Hello/{print $3}')
%  echo launchctl remove $(launchctl list | awk '/Hello/{print $3}')
launchctl remove com.yourcompany.Hello.44032 com.yourcompany.Hello.53008
%  launchctl remove com.yourcompany.Hello.44032
%  launchctl remove com.yourcompany.Hello.53008
%  open -a Hello
</code></p>

<h3>その他</h3>

<p>その他の対象方法も含めて
<a href="http://www.thexlab.com/faqs/error-10810.html">Error -10810 Openng Applictions or Relaunching Finder</a>
にいろいろ書いてあるようです。
(英語で長かったのでちゃんと読んでません。)</p>

<h2>MacBookPro6,2 で EXC_BAD_INSTRUCTION (SIGILL) になって起動しない</h2>

<p>未解決です。</p>

<p><a href="https://github.com/MohawkApps/Hacker-Bar/issues/36">EXC_BAD_INSTRUCTION crash in App Store version&hellip;</a>
に似た話があって、
RubyMotion のバグっぽいという話のようです。</p>

<p><code>motion create --template=osx HelloOSX</code>
で作成しただけのものでも
<a href="https://gist.github.com/znz/8158061#file-helloosx-report-txt">クラッシュ</a>
して起動しませんでした。</p>

<p>RubyMotion を入れている自分の MacBook Air の環境の問題かどうかを切り分けるために
<a href="http://shin1x1.github.io/vagrantx/">VagrantX</a>
も試してみましたが、
<a href="https://gist.github.com/znz/8158061#file-vagrantx-report-txt">同じくクラッシュ</a>
して起動しませんでした。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第 6 回 RubyMotion もくもく会 in Osaka に参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2013-12-26-rubymotion-mokumoku-osaka.html"/>
    <updated>2013-12-26T23:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/rubymotion-mokumoku-osaka</id>
    <content type="html"><![CDATA[<p>第 1 回から第 5 回にも参加した RubyMotion もくもく会 in Osaka の
<a href="http://connpass.com/event/4211/">第 6 回 RubyMotion もくもく会 in Osaka</a>
に参加してきました。</p>

<p>次回の
<a href="http://connpass.com/event/4560/">第 7 回 RubyMotion もくもく会 in Osaka</a>
は 1/22(水) になりました。</p>

<!--more-->


<h2>話に出たもの</h2>

<p>話に出てきたサイトなどのメモです。</p>

<ul>
<li><a href="http://shin1x1.github.io/vagrantx/">http://shin1x1.github.io/vagrantx/</a>

<ul>
<li>URL が小文字に変わっていました。</li>
</ul>
</li>
<li><a href="https://www.cocoacontrols.com/">Cocoa Controls</a></li>
<li><a href="http://getpocket.com/">Pocket</a></li>
<li><a href="http://71squared.com/ja/particledesigner">Particle Designer</a></li>
<li>UIMotionEffect で視差効果が簡単に実装できる</li>
<li>All Cast という Android アプリで Apple TV に AirPlay できる</li>
</ul>


<h2>やっていたこと</h2>

<p>今回は前回作り始めていたデフォルトブラウザを乗っ取って、
Firefox とか Chrome とか Safari とかに起動し分けられる
OSX アプリの作成の続きをやっていました。</p>

<p>今回の最後ではスクリーンショットのようになりました。</p>

<p><img src="/images/2013-12-26-hello.png" title="&ldquo;screenshot&rdquo; &ldquo;作成途中のアプリのスクリーンショット&rdquo;" ></p>

<p>適当に作った Hello.app に動作確認用のメソッドを付け足していただけなので、
まだタイトルは Hello のままになっています。</p>

<h3>URL 受け取り問題</h3>

<p>LimeChat で URL をクリックしたときなどに受け取るのは
前回調べていた <code>LSSetDefaultHandlerForURLScheme</code> での
デフォルトブラウザ設定とあわせて、</p>

<p>```ruby</p>

<pre><code>NSAppleEventManager.sharedAppleEventManager.setEventHandler(
  self,
  andSelector: :'handleGetURLEvent:withReplyEvent:',
  forEventClass: KInternetEventClass,
  andEventID: KAEGetURL)
</code></pre>

<p>```</p>

<p>でイベントを受け取ると Hello.app 起動中は受け取れたのですが、
起動していない時の URL クリックのイベントを受け取れない問題は
結局解決できませんでした。</p>

<p><code>open -a Hello --args URL</code>
というなら
<code>NSProcessInfo.processInfo.arguments</code>
で受け取れるのですが、
LimeChat などでの URL クリックで起動された時や
<code>open -a Hello URL</code>
という起動方法だと受け取り方がわかりませんでした。</p>

<p>他のブラウザの起動も
<code>open -a 'Google Chrome' http://localhost:4000/ --args -incognito</code>
のように URL は args ではない方法で渡さないと開けませんでした。</p>

<h3><code>keyDirectObject</code> がない問題と前面に出てこない問題</h3>

<p>URL の受け取り部分は今のところ、以下のようにしています。</p>

<p>```ruby
  def handleGetURLEvent(event, withReplyEvent: replyEvent)</p>

<pre><code>keyDirectObject = '----'.unpack('L')[0]
urlStr = event.paramDescriptorForKeyword(keyDirectObject).stringValue
@text.stringValue = urlStr

Process.spawn("osascript", "-e", &lt;&lt;-SCRIPT)
</code></pre>

<p>tell Application &ldquo;#{NSBundle.mainBundle.infoDictionary[&lsquo;CFBundleName&rsquo;]}&rdquo;
  activate
end tell</p>

<pre><code>SCRIPT
</code></pre>

<p>  end
```</p>

<p>最初の問題として、
<code>keyDirectObject</code> が RubyMotion にはなさそうだったので、
値を調べて <code>unpack</code> で同等の値を生成するようにしました。
この部分は前回から今回までの間に調査して作成済みだったので、
詳しい調査方法は忘れてしまいましたが、
引数のオブジェクトを調べて見つけたような気がします。</p>

<p>前面に出てこない問題は
今回のもくもく会の間に対処しました。</p>

<p>前面に持ってくる方法がどういう API を呼べばよいのかわからず、
AppleScript を使った方法は情報があったので、
とりあえず <code>osascript</code> を呼び出してしまうことにしました。</p>

<p>最初は <code>spawn</code> ではなく <code>system</code> を使ってしまったら、
デッドロックしてしまって強制終了するしかなくなってしまったので、
<code>Process.spawn</code> を使いました。</p>

<h2>まとめ</h2>

<p>今回は作りたいものが決まっていて、しっかりもくもく出来ました。</p>

<p>起動時に URL が受け取れない問題は
自分が使うだけなら
URL を 2 回クリックするという方法で
回避できるのですが、なんとかしたいところです。</p>

<p><code>keyDirectObject</code> と <code>osascript</code> を使っているところは
他に方法がなければ
今のままでも実用上は困らないと感じました。</p>
]]></content>
  </entry>
  
</feed>
