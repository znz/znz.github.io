<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ruby | @znz blog]]></title>
  <link href="http://blog.n-z.jp/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://blog.n-z.jp/"/>
  <updated>2014-12-01T21:43:56+09:00</updated>
  <id>http://blog.n-z.jp/</id>
  <author>
    <name><![CDATA[Kazuhiro NISHIYAMA]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[capistrano 3.3.3 が依存している capistrano-stats について]]></title>
    <link href="http://blog.n-z.jp/blog/2014-12-01-capistrano-stats.html"/>
    <updated>2014-12-01T21:33:21+09:00</updated>
    <id>http://blog.n-z.jp/blog/capistrano-stats</id>
    <content type="html"><![CDATA[<p>capistrano が 3.3.3 にあがって
<a href="https://github.com/capistrano/stats">capistrano-stats</a>
という gem に依存するようになりました。
これは <code>metrics.capistranorb.com:1200</code> にバージョン情報などを送信して
capistrano のサポートの改善に役立てようとするもののようです。</p>

<!--more-->


<h2>対象バージョン</h2>

<ul>
<li>capistrano 3.3.3</li>
<li>capistrano-stats 1.0.3</li>
</ul>


<h2>Capfile locked</h2>

<p>capistrano-stats とは関係ないですが、
<code>Capfile locked at 3.2.1, but 3.3.3 is loaded</code>
と出るときは <code>config/deploy.rb</code> の最初の方にある
<code>lock '3.2.1'</code>
という行を
<code>lock '3.3.3'</code>
に書き換えれば OK です。</p>

<h2>capistrano-stats 1.0.3 の挙動</h2>

<p>初回実行時に
<code>Do you want to enable statistics? (y/N):</code>
ときかれて、
そのまま Enter か <code>n</code> を入力すると ruby や capistrano のバージョンは送信されなくなるのですが、
(少なくとも私の) 期待に反して
<code>metrics.capistranorb.com:1200</code>
への送信自体は発生するようになっています。</p>

<h2>何が問題か</h2>

<p>全く送信してほしくない場合にも通信が発生したり、
firewall で塞がれている場合にエラーになったり
という問題があります。</p>

<h2>一時的に無効にするには?</h2>

<p><code>CAPISTRANO_METRICS=localhost:1200 bundle exec cap default</code>
のように環境変数 <code>CAPISTRANO_METRICS</code> で送っても無視されるところに送信すれば良さそうです。</p>

<h2>完全に無効にするには?</h2>

<p>pull request 1 の
<a href="https://github.com/capistrano/stats/pull/1" title="Honor the users privacy decision and do not send UDP packets if he does not want to send metrics">Honor the users privacy decision and do not send UDP packets if he does not want to send metrics</a>
にあるように</p>

<pre><code class="ruby">Rake::Task['metrics:collect'].clear_actions
</code></pre>

<p>を <code>config/deploy.rb</code> に追加すると送信されなくなりました。</p>

<h2>今後</h2>

<p><a href="https://github.com/capistrano/stats/pull/2" title="Allow users to opt-out of sending the UDP ping and improve error handling when the sendto syscall fails">Allow users to opt-out of sending the UDP ping and improve error handling when the sendto syscall fails</a>
という pull request が続きで出ているので、
将来のバージョンでは全く送信しない選択肢が用意されるかもしれません。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第 17 回 RubyMotion もくもく会 in Osaka に参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2014-11-19-rubymotion-mokumoku-osaka.html"/>
    <updated>2014-11-19T19:36:19+09:00</updated>
    <id>http://blog.n-z.jp/blog/rubymotion-mokumoku-osaka</id>
    <content type="html"><![CDATA[<p>第 1 回から第 15 回に参加していて
前回の 16 回は中止になっていた
RubyMotion もくもく会 in Osaka の
<a href="http://rubymotionjp.connpass.com/event/9597/" title="第 17 回 RubyMotion もくもく会 in Osaka - connpass">第 17 回 RubyMotion もくもく会 in Osaka - connpass</a>
に参加してきました。
今回も基本的にみんなもくもくしていました。</p>

<p>次回の
<a href="http://rubymotionjp.connpass.com/event/10195/" title="第 18 回 RubyMotion もくもく会 in Osaka - connpass">第 18 回 RubyMotion もくもく会 in Osaka - connpass</a>
は 2014/12/17(水) になりました。</p>

<!--more-->


<p>今回はメールを書いたり github の issues を見たりコメントしたりしていました。</p>

<p>最後の方は <a href="http://support.apple.com/ja-jp/HT5868">iPod touch の「このコンピュータを信頼しますか」警告</a>が出続けて
iTunes が認識してくれない問題を思い出したので、調べていたのですが、結局解決しませんでした。
Dropbox は認識して写真を取り込んでくれるので、ケーブルなどのハードウェアは問題がないはずなので、
ソフトウェア側の問題らしいというところまでは絞り込めています。</p>

<h2>メモ</h2>

<p>以下メモです。</p>

<ul>
<li>Firebase</li>
<li>WKWebView</li>
<li><a href="https://www.mapbox.com/">Mapbox</a></li>
<li><a href="http://qiita.com/aki/items/c0073bf1e83858fe2e92">Xcode6のiPhone Simulatorの場所</a></li>
<li><a href="https://github.com/magicalpanda/MagicalRecord">https://github.com/magicalpanda/MagicalRecord</a></li>
<li><a href="http://qiita.com/susieyy/items/749c4ac5d82d765c12c6">SwiftのRSS Readerを100行で作ったよ</a></li>
<li><a href="https://github.com/lingoer/SwiftyJSON">https://github.com/lingoer/SwiftyJSON</a></li>
<li>WatchKit</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails 4.1.7 にあげたら一部の画像が表示されなくなった]]></title>
    <link href="http://blog.n-z.jp/blog/2014-11-05-sprockets.html"/>
    <updated>2014-11-05T21:11:09+09:00</updated>
    <id>http://blog.n-z.jp/blog/sprockets</id>
    <content type="html"><![CDATA[<p>Rails 4.1.7 にあげたら一部の画像が表示されなくなるという現象が起きて、しばらく悩んでいたのですが解決しました。</p>

<!--more-->


<h2>原因</h2>

<ul>
<li>Rails か sprockets のバージョンアップでファイル名につけられる digest が変わった。</li>
<li><code>image_tag</code> で画像を参照している HTML が <code>cache</code> の中にあった。</li>
</ul>


<h2>現象</h2>

<p><code>rails console</code> で <code>Rails.application.assets.find_asset(asset_name).digest</code> を試しても新しい digest がちゃんと返ってくるのに、
ブラウザー上では古い digest の URL が参照されていてファイルが見つからないという現象になっていました。</p>

<p>アセットはキャッシュ期間の長いファイルとして設定しているので、複数ブラウザーで確認すると最初は現象が起きたり起きなかったりしていて、サーバー側の問題だと気づくのが遅れました。</p>

<h2>対処</h2>

<p><code>dalli</code> gem 経由で <code>memcached</code> をキャッシュ使っていたので <code>sudo service memcached restart</code> してキャッシュを破棄しました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rubyによるクローラー開発技法 読書会 第2回(兵庫県)に参加しました]]></title>
    <link href="http://blog.n-z.jp/blog/2014-11-01-amagasakirb.html"/>
    <updated>2014-11-01T13:05:51+09:00</updated>
    <id>http://blog.n-z.jp/blog/amagasakirb</id>
    <content type="html"><![CDATA[<p><a href="http://kokucheese.com/event/index/220392/" title="11月1日 Rubyによるクローラー開発技法　読書会　第2回(兵庫県)">11月1日 Rubyによるクローラー開発技法　読書会　第2回(兵庫県)</a>
に参加しました。
今回は3,4章でした。</p>

<!--more-->


<h2>メモ</h2>

<div style="float:right">
<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=znz-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=4797380357" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>
</div>


<p>前回参加していなかった人向けに、最初に 1,2 章の概要説明があって、
今回は 3 章からでした。
今回から、誤字・脱字などのフィードバックのため、
Wiki
(<a href="https://github.com/cuzic/amagasakirb/wiki/2014.11.01-Ruby-%E3%81%AB%E3%82%88%E3%82%8B%E3%82%AF%E3%83%AD%E3%83%BC%E3%83%A9%E3%83%BC%E9%96%8B%E7%99%BA%E6%8A%80%E6%B3%95%E8%AA%AD%E6%9B%B8%E4%BC%9A-%E7%AC%AC2%E5%9B%9E" title="2014.11.01 『Ruby によるクローラー開発技法』読書会 第2回">2014.11.01 『Ruby によるクローラー開発技法』読書会 第2回</a>)
に記録するようになりました。</p>

<p>以下、今回のメモです。</p>

<ul>
<li>p.112 Crawl-delay の単位は決まっていない</li>
<li>p.148 構文解析で正規表現が使われていることは多い?</li>
<li>p.149 3-1-2 ECU_JP → EUC-JP</li>
<li>p.151 行頭に <code>=~</code> は syntax error で、行頭に <code>.</code> は最近の ruby では OK になっている</li>
<li>Fluent API の話</li>
<li>p.150 RegExp → Regexp</li>
<li>posix 文字クラスと Unicode プロパティの話</li>
<li>Oniguruma と Onigmo の話</li>
<li>pp.152-153 名前付きキャプチャの説明がローカル変数への割当だけの説明になっているようにみえる</li>
<li>p.153 <code>\b</code> は文字クラスの中か外かで解釈が変わる</li>
<li>p.154 <code>\x{7HHHHHHH}</code> は使えない <a href="https://github.com/rurema/doctree/issues/80">https://github.com/rurema/doctree/issues/80</a> 参照</li>
<li>p.154 <code>\s</code> には <code>\v</code> が含まれる</li>
<li>p.155 「m」オプションを使うことで改行を無視する → <code>.</code> で改行も含むようになる</li>
<li>p.156 EUC_JP → EUC-JP</li>
<li><a href="https://github.com/cuzic/amagasakirb/wiki">https://github.com/cuzic/amagasakirb/wiki</a></li>
<li>p.159 コードの中のコメント部分: UFT8 → UTF-8</li>
<li>p.162 モンキーパッチではなく直接変更している話</li>
<li>p.164 <code>xmlns:"デフォルトの名前空間識別子"</code> → <code>xmlns="デフォルトの名前空間識別子"</code></li>
<li>p.167 Webサイトの更新には、Atom配信フォーマットが利用できます。 → Atom出版プロトコルの間違い?</li>
<li>p.171 Atom 1.0の構造は、RSS 2.0と同様に名前空間の指定が必要になります。 → RSS 1.0?</li>
<li>close されていないので <code>open(url).read</code> よりも <code>open(url, &amp;:read)</code> の方が良いのではという話</li>
<li>標準添付の RSS ライブラリが便利という話</li>
<li>Google Feed API</li>
<li>p.180 の <code>doc.at('//a').[]('href')</code> から <code>doc.xpath("//a/@href").text</code> などの話</li>
<li>p.177 Aタグの例の <code>node.inner_text</code> の出力例が間違っている</li>
<li>p.182 <code>\/</code> の <code>\</code> が不要?</li>
<li>p.184 スクリーンショットの値段がずれている</li>
<li>p.192 ここでは nokogiri ではなく REXML を使っている</li>
<li>p.199, p.205 Marshal.dmp は Marshal.dump なのではないかという話</li>
<li>mitmproxy の話</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[redmine の運用停止前のバックアップ]]></title>
    <link href="http://blog.n-z.jp/blog/2014-10-09-redmine-backup.html"/>
    <updated>2014-10-09T21:55:27+09:00</updated>
    <id>http://blog.n-z.jp/blog/redmine-backup</id>
    <content type="html"><![CDATA[<p>ある redmine の運用を止める前にリポジトリとの連携部分は止まってしまうのは仕方がないとして、
wiki やチケットなどは後からでも参照できるようにローカルにバックアップを残しておくことにしました。
その手順のメモです。</p>

<!--more-->


<h2>データベースのバックアップ</h2>

<p><a href="http://blog.n-z.jp/blog/2014-01-28-yaml-db.html" title="yaml_dbでMySQLからPostgreSQLに移行した">yaml_dbでMySQLからPostgreSQLに移行した</a>話で使った <code>yaml_db</code> を使いました。</p>

<p>まず、
<code>Gemfile.local</code> をなければ作成して、以下の内容を追加します。</p>

<pre><code class="ruby Gemfile.local">gem 'yaml_db', github: 'jetthoughts/yaml_db'
</code></pre>

<p>そして <code>RAILS_ENV=production bundle exec rake db:data:dump</code> で <code>db/data.yml</code> を作成します。</p>

<h2>ローカル環境の作成</h2>

<p>ローカルにも redmine 環境を作成します。</p>

<ol>
<li>redmine-2.5.2.tar.gz をダウンロードして展開</li>
<li><code>config/database.yml.example</code> を元に <code>config/database.yml</code> を作成 (今回はバックアップ環境なので sqlite3 を使用)</li>
<li>Gemfile.local 作成</li>
<li><code>plugins/</code> に使っていたプラグインをインストール (サーバーから rsync でコピーなど)</li>
<li>プラグインの設定も必要に応じてコピー (<code>config/wiki_external_filter.yml</code> など)</li>
<li><code>bundle install</code> で gem のインストール</li>
<li><code>RAILS_ENV=production bundle exec rake db:migrate</code> と <code>RAILS_ENV=production bundle exec rake redmine:plugins:migrate</code> でデータベース作成</li>
<li><code>db/data.yml</code> をコピーしてきて <code>RAILS_ENV=production bundle exec rake db:data:load</code> で読み込み (<code>db:migrate</code> していないとテーブル不足で読み込めない)</li>
<li><code>files/</code> の添付ファイルをコピー (サーバーから rsync でコピーなど)</li>
<li><code>config/configuration.yml</code> や <code>favicon.ico</code> などカスタマイズしているものがあれば必要に応じて設定やコピー</li>
<li><code>bundle exec rake generate_secret_token</code> で secret token を生成</li>
<li><code>bundle exec rails server -e production</code> で起動</li>
</ol>


<p>ログインして今まで通り見えることを確認して終了です。</p>
]]></content>
  </entry>
  
</feed>
