<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: rubykansai | @znz blog]]></title>
  <link href="http://blog.n-z.jp/blog/categories/rubykansai/atom.xml" rel="self"/>
  <link href="http://blog.n-z.jp/"/>
  <updated>2015-01-22T00:06:37+09:00</updated>
  <id>http://blog.n-z.jp/</id>
  <author>
    <name><![CDATA[Kazuhiro NISHIYAMA]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[第64回 Ruby関西 勉強会に参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2014-12-13-rubykansai64.html"/>
    <updated>2014-12-13T13:13:04+09:00</updated>
    <id>http://blog.n-z.jp/blog/rubykansai64</id>
    <content type="html"><![CDATA[<p><a href="http://rubykansai.doorkeeper.jp/events/17347" title="第64回 Ruby関西 勉強会">第64回 Ruby関西 勉強会</a>
に参加したので、そのメモです。</p>

<!--more-->


<h2>オープニング</h2>

<ul>
<li>勉強会の名前がちょっと変わった。</li>
</ul>


<h2>名付け親システム</h2>

<ul>
<li>子供の名前付けの補助をするプログラムを作った話</li>
<li>要件定義が一番時間がかかった</li>
</ul>


<h2>史上最安易／できるだけ速く数を数えたい</h2>

<ul>
<li>那由他まで挑戦したい</li>
<li>enzi</li>
<li>RuJit</li>
<li>IO が遅いのではという話</li>
</ul>


<h2>Ruby/SDL2 のはなし</h2>

<ul>
<li><a href="https://github.com/ohai/ruby-sdl2">https://github.com/ohai/ruby-sdl2</a></li>
<li><a href="http://www.kmc.gr.jp/~ohai/rubysdl2/doc-en/">http://www.kmc.gr.jp/~ohai/rubysdl2/doc-en/</a></li>
<li>SDL 2.x 自体は Android などにも対応しているらしい (Ruby/SDL2 は無理)</li>
<li>2000年頃(?)から 2D 描画にも 3D 機能を利用するようになってきていた</li>
<li>初期化に失敗したときのエラーメッセージ表示とかできるようになった</li>
<li>yard の i18n 機能は英語を書いておかないと日本語が書けないので日本語は後になっている</li>
<li>加算ブレンディングは光っぽいものに使う</li>
<li>アルファブレンディングは透明っぽいものに使う</li>
<li>デモ: <a href="https://gist.github.com/ohai/fb18f6c313ce669911a3">https://gist.github.com/ohai/fb18f6c313ce669911a3</a></li>
<li>Smalruby で Ruby/SDL (1の方) が使われているらしい</li>
<li>SDL と SDL2 が非互換なので</li>
</ul>


<h2>DDD with Rails</h2>

<ul>
<li><a href="https://speakerdeck.com/ogom/ddd-with-rails">https://speakerdeck.com/ogom/ddd-with-rails</a></li>
<li><a href="https://github.com/hommachirb/rails-ddd">https://github.com/hommachirb/rails-ddd</a></li>
<li>ActiveState が middleware なのはデータベースに接続できないと ActiveRecord の middleware でエラーになって、そもそも任意の view が使えないため</li>
<li>state machine gem は開発が止まっている</li>
<li>aasm gem は活発</li>
<li><a href="http://qiita.com/ogomr/items/0b5c4de7f38fd1482a48" title="PlantUML Cheat Sheet">PlantUML Cheat Sheet</a></li>
</ul>


<h2>Ruby初級者向けレッスン 51回 例外</h2>

<p>内容の他に、デモのときのシェルや Emacs の操作などが気になりました (参考になりました)。</p>

<h2>クロージング</h2>

<ul>
<li>次回は 2015 年 2 月 21 日</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[62nd Ruby/Rails勉強会@関西に参加した]]></title>
    <link href="http://blog.n-z.jp/blog/2014-07-26-kansaiworkshop062.html"/>
    <updated>2014-07-26T13:27:09+09:00</updated>
    <id>http://blog.n-z.jp/blog/kansaiworkshop062</id>
    <content type="html"><![CDATA[<p><a href="http://rubykansai.doorkeeper.jp/events/13160" title="62nd Ruby/Rails勉強会@関西">62nd Ruby/Rails勉強会@関西</a>
に参加したので、そのメモです。</p>

<!--more-->


<h2>スクレイピングの話</h2>

<p>後で資料は公開してくれるということで、メモはとらずに話をきいていましたが、
実際にどういうことに使っている話も多くて面白かったです。</p>

<p>資料は
<a href="http://www.slideshare.net/takurosasaki/ruby-crawler" title="Rubyで作るクローラー Ruby crawler">Rubyで作るクローラー Ruby crawler</a>
で公開されています。</p>

<h2>Rails Girls Osaka の話</h2>

<p><a href="http://railsgirls.com/osaka" title="Osaka 6-7th June 2014">Rails Girls Osaka 6-7th June 2014</a>
の話でした。
写真が多いので資料の公開はないということでした。</p>

<p>今後の予定としては、
<a href="http://railsgirls.jp/events/" title="近日開催のイベント">近日開催のイベント</a>
にはないですが、
<a href="http://railsgirls.com/events" title="Upcoming Events">Upcoming Events</a>
には
<a href="http://rubyhiroba.org/2014/" title="RubyHiroba 2014">RubyHiroba 2014</a>
での
<a href="http://rubyhiroba.org/2014/rails-girls.html" title="Rails Girls Tokyo 4th">Rails Girls Tokyo 4th</a>
も書いていました。</p>

<h2>Gemfile.local の話</h2>

<p>redmine とかでも使っている方法で、
追記せずに何か良い方法はないのかという相談でした。</p>

<h2>るびま (Rubyist Magazine) の話</h2>

<ul>
<li><a href="http://magazine.rubyist.net/">http://magazine.rubyist.net/</a></li>
<li>誤植などの指摘は <a href="https://github.com/rubima/rubima-support">https://github.com/rubima/rubima-support</a> へ。</li>
<li><a href="http://goo.gl/KpASY9">Rubyist Magazine 十周年へのメッセージ</a> 募集中</li>
</ul>


<h2>GitLab の Git Flow の話</h2>

<div style="float:right">
<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&amp;bc1=000000&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=znz-22&amp;o=9&amp;p=8&amp;l=as4&amp;m=amazon&amp;f=ifr&amp;ref=ss_til&amp;asins=477416366X" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>
</div>


<ul>
<li><a href="https://gitlab.com/gitlab-org/cookbook-gitlab/blob/master/README.md" title="GitLab Cookbook">GitLab Cookbook</a> のベースを作った。</li>
<li><a href="http://www.amazon.co.jp/gp/product/477416366X/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=477416366X&amp;linkCode=as2&amp;tag=znz-22">GitHub実践入門 ~Pull Requestによる開発の変革 (WEB+DB PRESS plus)</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=znz-22&amp;l=as2&amp;o=9&amp;a=477416366X" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /> はおすすめと言っていました。</li>
<li><a href="http://danielkummer.github.io/git-flow-cheatsheet/index.ja_JP.html" title="git-flow cheatsheet">git-flow cheatsheet</a></li>
<li><a href="https://guides.github.com/introduction/flow/index.html" title="Understanding the GitHub Flow · GitHub Guides">Understanding the GitHub Flow · GitHub Guides</a></li>
<li>GitLab Flow の提案</li>
<li>Git Flow について詳細に説明</li>
</ul>


<p>GitLab Flow は git flow を知っている人向けに大雑把に説明すると</p>

<ul>
<li>release ブランチは使わない。</li>
<li>develop ブランチの代わりに master ブランチを使う。</li>
<li>master ブランチの代わりに stable ブランチを作る。</li>
</ul>


<p>ということだと理解しました。</p>

<h2>Ruby 初級者向けレッスン 50回 ブロック</h2>

<p><code>block.call</code> の引数に複数渡すのがいいのか、配列でまとめて渡すのが良いのかという話はきいたことがなかったので、どういう話なのかちょっと気になりました。</p>

<p>多重代入について深入りすると大変そうなので、さらっと流したのはありだと思いました。</p>

<h2>@IT Rails4 入門記事をツッコもう</h2>

<ul>
<li><a href="http://www.atmarkit.co.jp/ait/articles/1402/28/news047_2.html" title="開発現場でちゃんと使えるRails 4入門（1）：簡単インストールから始める初心者のためのRuby on Railsチュートリアル (2/3) - ＠IT">開発現場でちゃんと使えるRails 4入門（1）：簡単インストールから始める初心者のためのRuby on Railsチュートリアル (2/3) - ＠IT</a></li>
<li>rbenv 対 RVM</li>
<li>エディタは Sublime Text, Vim, Emacs が多くて、その他 Atom, Eclipse</li>
<li><code>rails new</code> の時の <code>--skip-bundle</code> と <code>bundle install --path vendor/bundle</code> の話</li>
<li><code>bundle exec</code> の話</li>
<li><a href="http://www.atmarkit.co.jp/ait/articles/1405/16/news024.html" title="開発現場でちゃんと使えるRails 4入門（4）：現場で使えるか見極めたいRails 4.1の新機能8選 - ＠IT">開発現場でちゃんと使えるRails 4入門（4）：現場で使えるか見極めたいRails 4.1の新機能8選 - ＠IT</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第60回 Ruby/Rails勉強会＠関西で正規表現の先読みについてという発表をしました]]></title>
    <link href="http://blog.n-z.jp/blog/2014-03-29-kansaiworkshop060.html"/>
    <updated>2014-03-29T22:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/kansaiworkshop060</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/rubykansai/workshops/wiki/Kansaiworkshop060">第50回 Ruby/Rails勉強会＠関西</a> に参加して、「正規表現の先読みについて」という発表をしてきました。</p>

<!--more-->


<h2>発表資料</h2>

<ul>
<li><a href="https://github.com/znz/regexp-201403">https://github.com/znz/regexp-201403</a></li>
<li><a href="http://slide.rabbit-shocker.org/authors/znz/regexp-201403/">http://slide.rabbit-shocker.org/authors/znz/regexp-201403/</a></li>
<li><a href="https://speakerdeck.com/znz/zheng-gui-biao-xian-falsexian-du-minituite">https://speakerdeck.com/znz/zheng-gui-biao-xian-falsexian-du-minituite</a></li>
<li><a href="http://www.slideshare.net/znzjp/regexp-201403">http://www.slideshare.net/znzjp/regexp-201403</a></li>
</ul>


<h2>デモアプリ</h2>

<p>デモに使った Web アプリのソースは
<a href="https://gist.github.com/znz/9835956#file-regexp-201403-rb">https://gist.github.com/znz/9835956#file-regexp-201403-rb</a>
で公開しています。</p>

<p>heroku にも deploy したので、
<a href="http://regexp-201403.herokuapp.com/">http://regexp-201403.herokuapp.com/</a>
で試せます。</p>

<h3>制限事項</h3>

<p>発表で見せる範囲しかちゃんと作っていないので、
変なことをすると変になるのはそういうものです。</p>

<p>対応している正規表現も最初に例として並んでいるもので使っているようなものしか対応していません。</p>

<h2>発表内容</h2>

<p>デモを先に作って後で発表資料を作ったので、デモの方がメインで資料は後付けという感じです。</p>

<h2>KPT</h2>

<ul>
<li>Keep

<ul>
<li>ちゃんと発表できた。</li>
<li>直前になってしまったけれど、発表資料もちゃんと作成できた。</li>
</ul>
</li>
<li>Problem

<ul>
<li>準備の時間があまり取れなかった。</li>
<li>会場の後ろの方でちゃんと見えていたのかとか、聞こえていたのかとかが確認できなかった。</li>
<li>発表資料の公開が遅くなった。(4月3日)</li>
</ul>
</li>
<li>Try

<ul>
<li>中継内容の事前確認をしておきたい。録画ありかどうかとか。</li>
<li>今度こそ rabbiter を使いたい。</li>
</ul>
</li>
</ul>


<h2>他の発表の感想とか</h2>

<p>RSpec 3 対応のライブコーディングは事前にかなりちゃんと準備をしてきた感じがして、
内容も参考になって非常に良かったです。</p>

<p>他はこういうことをやっています、というサービスの紹介っぽい感じが多くて、
プログラミングの話は少なかったので、内容は面白いけど
Ruby/Rails勉強会＠関西向きではないかも、と感じるものもありました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第59回 Ruby/Rails勉強会＠関西に参加しました]]></title>
    <link href="http://blog.n-z.jp/blog/2014-01-25-kansaiworkshop059.html"/>
    <updated>2014-01-25T13:36:50+09:00</updated>
    <id>http://blog.n-z.jp/blog/kansaiworkshop059</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/rubykansai/workshops/wiki/Kansaiworkshop059">第59回 Ruby/Rails勉強会＠関西</a> に参加しました。</p>

<p>一部メモを書いていたので公開しておきます。</p>

<!--more-->


<h2>IT関係の同人誌などの話</h2>

<h3>質疑応答</h3>

<ul>
<li>Q ReVIEW の本は?</li>
<li><p>A 存在を知ったのが後だったので、電子書籍で買っただけ。</p></li>
<li><p>Q いくらぐらい?</p></li>
<li>A コピー本などで無料のものもありますが、たとえば500円とか1200円とか。印刷代などの関係で決まります。</li>
</ul>


<h2>gitlab</h2>

<h3>メモ</h3>

<ul>
<li><a href="http://atnd.org/events/47159">C++テンプレート完全ガイド勉強会 vol.1大阪 : ATND</a></li>
<li><a href="http://qwik.jp/minamirb/">Minami.rb</a></li>
<li><a href="https://wiki.debian.org/KansaiDebianMeeting">関西Debian勉強会</a></li>
<li><a href="http://www.slideshare.net/takafumionaka/is-there-anynecessityofusinggithubenterprise">Gitlab は貧者の github enterprise</a></li>
<li><a href="https://gitorious.org/">Gitorious</a></li>
<li><a href="http://gitblit.com/">Gitblit</a></li>
<li>chef とか puppet とか ansible とかが何か知っている人は会場には少なかった。</li>
<li><a href="https://twitter.com/koichiroo/status/425454305944952832/photo/1">レガシー依存の悪循環こわい</a></li>
<li><a href="http://mrk1869.com/blog/gitlab_installation/">GitLab 6.0をインストールする - Markovnikov Laboratory</a></li>
<li>「6.2で転けて、6.1で転けて、ここまで設定するのに3日かかった…」と書いてあって大変そうなので、 ansible playbook を使ったという話</li>
<li><a href="http://d.hatena.ne.jp/akishin999/20130819/1376868748">20分(くらい)で GitLab をインストールする方法 - akishin999の日記</a></li>
<li>svn からの移行には GUI がある方が良い</li>
</ul>


<h2>LT1 ダジャレ</h2>

<ul>
<li>わたしを創ったもの R・C・フェラン 年刊ＳＦ傑作選１</li>
<li>mecab で分解して置き換えてダジャレ生成</li>
<li>変なのもたくさん出てくる</li>
<li>評価関数</li>
</ul>


<h2>Ruby 関西 10 周年</h2>

<ul>
<li><a href="https://k-of.jp/2004/">関西オープンソース 2004</a></li>
<li>2004年11月27日 第0回 Ruby勉強会</li>
<li>大前研一: 人間が変わる方法は3つしかない。 １番目は「時間配分を変える。」 ２番目は「住む場所 を変える。」 ３番目は「つきあう人を変える。」 この３つの要素でしか人間は変わらない。 最も無意味なのは「決意を新たにする」ことだ。</li>
<li>助け合いの力</li>
<li>グラミン銀行</li>
<li>Jim Rohn の名言 : あなたは、あなたのまわりの5人の平均です。</li>
<li><a href="http://thewriteway.com/2011/01/learning-by-doing-revisited/">http://thewriteway.com/2011/01/learning-by-doing-revisited/</a></li>
<li>多様性は善</li>
<li>ハブとしてのRuby関西</li>
</ul>


<h2>Ruby初級者向けレッスン</h2>

<ul>
<li><code>codepoints</code> とは Unicode のだったり、それぞれの encoding のだったり。</li>
<li><code>"Ruby関西".chars.each{|c| puts c}</code> の <code>.each</code> はなくても動くが <code>$VERBOSE=true</code> のときに <code>warning: passing a block to String#chars is deprecated</code> という警告がでる。</li>
<li><a href="https://gist.github.com/higaki/8147246">https://gist.github.com/higaki/8147246</a></li>
<li><a href="https://github.com/higaki/learn_ruby_kansai_59">https://github.com/higaki/learn_ruby_kansai_59</a></li>
</ul>


<h2>帰り際の話</h2>

<ul>
<li>Windows 版の Ruby で 2.0.0 からエスケープシーケンスに対応しているのが、
NEWS に書いていないなどソース以外に情報がない。</li>
</ul>

]]></content>
  </entry>
  
</feed>
