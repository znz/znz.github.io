<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: shell | @znz blog]]></title>
  <link href="http://blog.n-z.jp/blog/categories/shell/atom.xml" rel="self"/>
  <link href="http://blog.n-z.jp/"/>
  <updated>2014-06-22T21:17:06+09:00</updated>
  <id>http://blog.n-z.jp/</id>
  <author>
    <name><![CDATA[Kazuhiro NISHIYAMA]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[シェルで glob 結果を事前に確認する方法]]></title>
    <link href="http://blog.n-z.jp/blog/2014-06-21-confirm-glob.html"/>
    <updated>2014-06-21T13:16:56+09:00</updated>
    <id>http://blog.n-z.jp/blog/confirm-glob</id>
    <content type="html"><![CDATA[<p><code>rm *~</code> のつもりで <code>rm * ~</code> (半角スペースが混ざっている) のように実行してしまうような間違いをすると危険です。</p>

<p>その対策として <code>tcsh</code> には <code>rmstar</code> という設定があったり
<code>zsh</code> には <code>RM_STAR_SILENT</code> や <code>RM_STAR_WAIT</code> という設定があるのですが、
ちゃんと展開結果を確認してからコマンドを実行する方が安全です。</p>

<p>また <code>rm</code> 以外でも展開結果を事前に確認できると便利なことが多いです。</p>

<!--more-->


<h2>展開結果の確認方法</h2>

<p><code>bash</code> や <code>zsh</code> の一般的なキー割り当てだと <code>C-x g</code> (Control を押しながら x を押して Control を離して g) で展開結果を確認できます。</p>

<p>Tab キーだとコマンドライン中に展開されてしまいますが、
<code>C-x g</code> だと確認だけ出来ます。</p>

<h3>bash の場合</h3>

<p>たとえば <code>bash</code> なら以下のように展開結果が出て、
プロンプトの行が出てきます。</p>

<p>```console bash</p>

<pre><code>$ echo /etc/host*&lt;C-x&gt;g
host.conf    hostname     hosts        hosts.allow  hosts.deny
$ echo /etc/host*
</code></pre>

<p>```</p>

<h3>zsh の場合</h3>

<p><code>zsh</code> ならプロンプトの行の下に展開結果が出てきます。</p>

<p>```console zsh</p>

<pre><code>% echo /etc/host*
/etc/host.conf    /etc/hostname     /etc/hosts        /etc/hosts.allow  /etc/hosts.deny
</code></pre>

<p>```</p>

<h2>Tab キーの動作</h2>

<p>比較のため Tab キーでの動作例も載せておきます。</p>

<h3>bash の場合</h3>

<p>実際には同じ行でしたが、最初の展開結果に置き換わりました。</p>

<p>```console bash</p>

<pre><code>$ echo /etc/host*&lt;tab&gt;
$ echo /etc/host.conf
</code></pre>

<p>```</p>

<h3>zsh の場合</h3>

<p>こちらも実際には同じ行ですが、すべての展開結果に置き換わりました。</p>

<p>```console zsh</p>

<pre><code>% echo /etc/host*&lt;tab&gt;
% echo /etc/host.conf /etc/hostname /etc/hosts /etc/hosts.allow /etc/hosts.deny
</code></pre>

<p>```</p>

<p>glob で指定しにくい一部のファイルだけ除外するなど、展開された方が便利な時は
Tab キーで展開してからコマンドラインを編集して実行することもあります。</p>

<h2>まとめ</h2>

<p>一般的な bash 環境ならどこでも使えて、
複雑な glob の展開結果の確認にも便利なので、
<code>C-x g</code> は非常にオススメです。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LLまつりでLTしました]]></title>
    <link href="http://blog.n-z.jp/blog/2013-08-24-llmatsuri.html"/>
    <updated>2013-08-24T00:00:00+09:00</updated>
    <id>http://blog.n-z.jp/blog/llmatsuri</id>
    <content type="html"><![CDATA[<p><a href="http://ll.jus.or.jp/2013/">LLまつり</a> で「シェルスクリプトで簡易ping監視」というタイトルでライトニングトークをしてきました。</p>

<!--more-->


<p>スライドは <a href="http://slide.rabbit-shocker.org/authors/znz/simple-ping-summary/">http://slide.rabbit-shocker.org/authors/znz/simple-ping-summary/</a> や slideshare で公開しています。
スライドのソースも <a href="https://github.com/znz/simple-ping-summary-slide">https://github.com/znz/simple-ping-summary-slide</a> で公開しています。</p>

<p>監視プログラム自体は <a href="https://github.com/znz/simple-ping-summary">https://github.com/znz/simple-ping-summary</a> で公開しています。</p>

<h2>バージョンソート</h2>

<p><a href="http://linuxjm.sourceforge.jp/html/GNU_coreutils/man1/sort.1.html">GNU coreutils の sort</a>
や
<a href="http://linuxjm.sourceforge.jp/html/GNU_coreutils/man1/ls.1.html">ls</a>
にバージョンソートという機能があるのですが、
それが IPv4 アドレスのソートにも使えるということが
一番言いたかったことでした。</p>

<h2>画像生成</h2>

<p>画像を作成する時はテキストエディタで作成出来る XBM や XPM を使うことが多いのですが、
後で twitter の反応を確認してみると SVG という案もあったようなので、
機会があれば使ってみたいと思いました。</p>

<h2>会場での実行結果</h2>

<p>最後にデモとしてちょっと見せようとして、説明は間に合わなかったLLまつりの会場でのデータは <a href="https://github.com/znz/simple-ping-summary/tree/llmatsuri">llmatsuri ブランチ</a> にあるので <code>git clone https://github.com/znz/simple-ping-summary</code> して <code>git checkout llmatsuri</code> で <code>llmatsuri</code> ブランチに切り替えて <code>_img/summary.html</code> を開くと見えます。
発表後のデータもあるので、ちらっと見せたものよりちょっと増えています。</p>

<p>会場では一般の PC などが対象なので、監視対象になることが前提で PING 応答が許可されているルーターとは違って、 DHCP で IP アドレスが割り当てられていても応答がないことが多いので、結構歯抜けになっています。</p>

<p>DHCP の割り当て範囲がどうなっていたのかわからなかったので、対象は適当な範囲だったのですが、 <a href="https://github.com/znz/simple-ping-summary/blob/llmatsuri/_img/192.168.4/20130824.png">192.168.4.1から254の範囲の結果</a> をみると、徐々にこの範囲の割り当てが増えていっていると推測出来そうです。</p>

<h2>slideshare</h2>

<iframe src="http://www.slideshare.net/slideshow/embed_code/25545146" width="427" height="356" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC;border-width:1px 1px 0;margin-bottom:5px" allowfullscreen webkitallowfullscreen mozallowfullscreen> </iframe>


<p> <div style="margin-bottom:5px"> <strong> <a href="https://www.slideshare.net/znzjp/simple-ping-summary" title="シェルスクリプトで簡易ping監視" target="_blank">シェルスクリプトで簡易ping監視</a> </strong> from <strong><a href="http://www.slideshare.net/znzjp" target="_blank">Kazuhiro Nishiyama</a></strong> </div></p>

<h2>Rabbit SlideShow</h2>

<iframe src="http://slide.rabbit-shocker.org/authors/znz/simple-ping-summary/viewer.html"
        width="640" height="524"
        frameborder="0"
        marginwidth="0"
        marginheight="0"
        scrolling="no"
        style="border: 1px solid #ccc; border-width: 1px 1px 0; margin-bottom: 5px"
        allowfullscreen> </iframe>


<div style="margin-bottom: 5px">
  <a href="http://slide.rabbit-shocker.org/authors/znz/simple-ping-summary/" title="シェルスクリプトで簡易ping監視">シェルスクリプトで簡易ping監視</a>
</div>



]]></content>
  </entry>
  
</feed>
